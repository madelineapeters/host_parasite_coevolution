(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    423391,       8610]
NotebookOptionsPosition[    419196,       8475]
NotebookOutlinePosition[    419645,       8493]
CellTagsIndexPosition[    419602,       8490]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8146282641437674`*^9, 3.814628284248445*^9}, 
   3.814628315878787*^9, {3.858166127700123*^9, 3.8581661283117*^9}}],

Cell[CellGroupData[{

Cell["\<\
Island-mainland matching alleles coevolution with two-patch model\
\>", "Title",
 CellChangeTimes->{{3.857405818873501*^9, 3.857405821613557*^9}, {
  3.857819971255435*^9, 3.8578199900471992`*^9}, {3.858700200249837*^9, 
  3.858700202443131*^9}},
 ExpressionUUID -> "f739e324-17a7-49e7-b7ac-11ca208124b1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"WH", "[", 
   RowBox[{"1", ",", "t_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"pP", "[", "t", "]"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", "V"}], ")"}]}], " ", "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"pP", "[", "t", "]"}]}], ")"}], "S"}], " ", "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"pP", "[", "t", "]"}]}], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", "S"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", "V"}], ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"WH", "[", 
    RowBox[{"2", ",", "t_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"pP", "[", "t", "]"}]}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "V"}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"pP", "[", "t", "]"}], "S"}], " ", "+", 
    RowBox[{
     RowBox[{"pP", "[", "t", "]"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "S"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "V"}], ")"}]}]}]}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WP", "[", 
   RowBox[{"1", ",", "t_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"pH", "[", "t", "]"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"pH", "[", "t", "]"}]}], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", "S"}], ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WP", "[", 
   RowBox[{"2", ",", "t_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"pH", "[", "t", "]"}]}], ")"}], "+", 
   RowBox[{
    RowBox[{"pH", "[", "t", "]"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", "S"}], ")"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.857405828196187*^9, 3.857405989662332*^9}, {
  3.857406053943595*^9, 3.857406086712336*^9}, {3.857406295964834*^9, 
  3.85740631020522*^9}, {3.857406391851985*^9, 3.857406502099152*^9}, {
  3.8574065741138067`*^9, 3.8574065978156557`*^9}, {3.857406636306747*^9, 
  3.857406667927128*^9}, {3.8574067075906677`*^9, 3.8574067323623533`*^9}, {
  3.8574069808161097`*^9, 3.857406982762761*^9}},
 ExpressionUUID -> "d8ddd628-2d7d-4038-bc48-d29d1f62e1b9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pH1", "[", "t_", "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{"pH", "[", "t", "]"}], " ", 
    RowBox[{"WH", "[", 
     RowBox[{"1", ",", "t"}], "]"}]}], 
   RowBox[{
    RowBox[{
     RowBox[{"pH", "[", "t", "]"}], 
     RowBox[{"WH", "[", 
      RowBox[{"1", ",", "t"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"pH", "[", "t", "]"}]}], ")"}], 
     RowBox[{"WH", "[", 
      RowBox[{"2", ",", "t"}], "]"}]}]}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pP1", "[", "t_", "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{"pP", "[", "t", "]"}], " ", 
    RowBox[{"WP", "[", 
     RowBox[{"1", ",", "t"}], "]"}]}], 
   RowBox[{
    RowBox[{
     RowBox[{"pP", "[", "t", "]"}], 
     RowBox[{"WP", "[", 
      RowBox[{"1", ",", "t"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"pP", "[", "t", "]"}]}], ")"}], 
     RowBox[{"WP", "[", 
      RowBox[{"2", ",", "t"}], "]"}]}]}]]}]}], "Input",
 CellChangeTimes->{{3.857406100561563*^9, 3.8574062262945623`*^9}},
 ExpressionUUID -> "de46af48-a30c-4b5a-bfce-81380151cb42"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pH2", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"pH1", "[", "t", "]"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", "mH"}], " ", ")"}]}], "+", 
   FractionBox["mH", "2"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pP2", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"pP1", "[", "t", "]"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", "mP"}], ")"}]}], "+", 
   FractionBox["mP", "2"]}]}]}], "Input",
 CellChangeTimes->{{3.8574062419584627`*^9, 3.85740627878509*^9}, {
   3.8574063125609703`*^9, 3.857406313077402*^9}, 3.857406354127656*^9, {
   3.857408016973433*^9, 3.857408031559566*^9}},
 ExpressionUUID -> "1ebd11dc-d84f-4aa6-bb38-b39e9f08b4ee"],

Cell[CellGroupData[{

Cell["Numerical time series ", "Subsection",
 CellChangeTimes->{{3.8574096507298813`*^9, 3.857409665242929*^9}, {
  3.858161969998419*^9, 3.858161976493547*^9}},
 ExpressionUUID -> "d5e022f9-042d-42da-bf68-ab11b3c188c3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"inits1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"i1", "\[Rule]", " ", "0.495"}], ",", 
     RowBox[{"i2", "\[Rule]", " ", "0.5"}], ",", 
     RowBox[{"i3", "\[Rule]", " ", "0.5"}], ",", 
     RowBox[{"i4", "\[Rule]", " ", "0.5"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pars1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"p1", "\[Rule]", " ", "0.4117647058823529`"}], ",", 
     RowBox[{"p2", "\[Rule]", " ", "0.2200911052505395`"}], ",", 
     RowBox[{"p3", "\[Rule]", " ", "0.01"}], ",", 
     RowBox[{"p4", "\[Rule]", " ", "0.01"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"pars2", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"p1", "\[Rule]", " ", "0.3939393939393939`"}], ",", 
     RowBox[{"p2", "\[Rule]", " ", "0.4368677407268642`"}], ",", 
     RowBox[{"p3", "\[Rule]", "0.01"}], ",", 
     RowBox[{"p4", "\[Rule]", " ", "0.01"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"pars3", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"p1", "\[Rule]", " ", "0.37500000000000006`"}], ",", 
     RowBox[{"p2", "\[Rule]", " ", "0.9004329004329`"}], ",", 
     RowBox[{"p3", "\[Rule]", " ", "0.01"}], ",", 
     RowBox[{"p4", "\[Rule]", " ", "0.01"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8581621482504797`*^9, 3.8581621739614067`*^9}, {
   3.858162332023149*^9, 3.858162348037448*^9}, {3.8581623949372883`*^9, 
   3.8581624073737097`*^9}, {3.858162674595199*^9, 3.858162715572319*^9}, {
   3.858163487673395*^9, 3.858163498626274*^9}, {3.858163542354513*^9, 
   3.858163542466462*^9}, {3.85816396877068*^9, 3.8581639747059813`*^9}, {
   3.858164094036561*^9, 3.8581640941400747`*^9}, {3.8581641955899897`*^9, 
   3.858164229279207*^9}, {3.858164333728698*^9, 3.8581643524804697`*^9}, {
   3.85816539462722*^9, 3.858165404956283*^9}, {3.8581655584490147`*^9, 
   3.85816556004732*^9}, {3.8581656163367357`*^9, 3.858165626207377*^9}, {
   3.858165671290386*^9, 3.858165671631407*^9}, {3.858165743554099*^9, 
   3.858165745146161*^9}, {3.8581658205089293`*^9, 3.8581658334347143`*^9}, {
   3.858165948599053*^9, 3.858165950726095*^9}, {3.8581660485450287`*^9, 
   3.858166058127633*^9}, {3.858166703731504*^9, 3.858166703962277*^9}, {
   3.8581667568056507`*^9, 3.8581667603952513`*^9}, 3.858340729323941*^9, {
   3.858424447352168*^9, 3.858424456157233*^9}, {3.862081785200457*^9, 
   3.862081793955892*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "timeSeries", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"timeSeries", "[", 
   RowBox[{"pars_", ",", "inits_", ",", "tmax_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"timeSeries", "[", 
    RowBox[{"pars", ",", "inits", ",", "tmax"}], "]"}], "=", 
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "WH", ",", "WP", ",", "pH1", ",", "pP1", ",", "pH2", ",", "pP2", ",", 
       "S", ",", "V", ",", "mH", ",", "mP", ",", "pP", ",", "pH", ",", "i1", 
       ",", "i2", ",", "i3", ",", "i4", ",", "p1", ",", "p2", ",", "p3", ",", 
       "p4", ",", "out"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"S", "=", 
       RowBox[{"p1", "/.", "pars"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"V", "=", 
       RowBox[{"p2", "/.", "pars"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"mH", "=", 
       RowBox[{"p3", "/.", "pars"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"mP", "=", 
       RowBox[{"p4", "/.", "pars"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"WH", "[", 
        RowBox[{"1", ",", "t_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"pP", "[", "t", "]"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "V"}], ")"}]}], " ", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"pP", "[", "t", "]"}]}], ")"}], "S"}], " ", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"pP", "[", "t", "]"}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "S"}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "V"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"WH", "[", 
        RowBox[{"2", ",", "t_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"pP", "[", "t", "]"}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "V"}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"pP", "[", "t", "]"}], "S"}], " ", "+", 
        RowBox[{
         RowBox[{"pP", "[", "t", "]"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "S"}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "V"}], ")"}]}]}]}], " ", ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"WP", "[", 
        RowBox[{"1", ",", "t_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"pH", "[", "t", "]"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"pH", "[", "t", "]"}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "S"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"WP", "[", 
        RowBox[{"2", ",", "t_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"pH", "[", "t", "]"}]}], ")"}], "+", 
        RowBox[{
         RowBox[{"pH", "[", "t", "]"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "S"}], ")"}]}]}]}], ";", "\n", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pH1", "[", "t_", "]"}], ":=", 
       FractionBox[
        RowBox[{
         RowBox[{"pH", "[", "t", "]"}], " ", 
         RowBox[{"WH", "[", 
          RowBox[{"1", ",", "t"}], "]"}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"pH", "[", "t", "]"}], 
          RowBox[{"WH", "[", 
           RowBox[{"1", ",", "t"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"pH", "[", "t", "]"}]}], ")"}], 
          RowBox[{"WH", "[", 
           RowBox[{"2", ",", "t"}], "]"}]}]}]]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"pP1", "[", "t_", "]"}], ":=", 
       FractionBox[
        RowBox[{
         RowBox[{"pP", "[", "t", "]"}], " ", 
         RowBox[{"WP", "[", 
          RowBox[{"1", ",", "t"}], "]"}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"pP", "[", "t", "]"}], 
          RowBox[{"WP", "[", 
           RowBox[{"1", ",", "t"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"pP", "[", "t", "]"}]}], ")"}], 
          RowBox[{"WP", "[", 
           RowBox[{"2", ",", "t"}], "]"}]}]}]]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pH2", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"pH1", "[", "t", "]"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "mH"}], " ", ")"}]}], "+", 
        FractionBox["mH", "2"]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pP2", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"pP1", "[", "t", "]"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "mP"}], ")"}]}], "+", 
        FractionBox["mP", "2"]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pH", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"pH", "[", "t", "]"}], "=", 
        RowBox[{"pH2", "[", 
         RowBox[{"t", "-", "1"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pP", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"pP", "[", "t", "]"}], "=", 
        RowBox[{"pP2", "[", 
         RowBox[{"t", "-", "1"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pH", "[", "0", "]"}], "=", 
       RowBox[{"i1", "/.", "inits"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pP", "[", "0", "]"}], "=", 
       RowBox[{"i2", "/.", "inits"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"out", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{"j", ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "0", ",", "tmax"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"pH", "[", "j", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "0", ",", "tmax"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"pP", "[", "j", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], 
        "}"}]}]}]}], "\[IndentingNewLine]", "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.858161981150495*^9, 3.858162059417266*^9}, {
  3.8581620920414352`*^9, 3.858162132506092*^9}, {3.858162178242031*^9, 
  3.858162319822557*^9}, {3.85816235978388*^9, 3.85816237975879*^9}, {
  3.858162569187427*^9, 3.8581626704604263`*^9}, {3.8581627239832563`*^9, 
  3.8581628015820923`*^9}, {3.8581628643468227`*^9, 3.858162952538213*^9}, {
  3.858163181715629*^9, 3.858163221944693*^9}, {3.858163719839778*^9, 
  3.858163726059153*^9}, {3.858165680333869*^9, 3.858165685210919*^9}, {
  3.858423486946286*^9, 3.858423517796258*^9}, {3.858424387191065*^9, 
  3.858424436231676*^9}, {3.85842447322467*^9, 3.858424479696246*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"maxT", "=", "1000"}], ";"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQvTDifd+dfW8c1yw4MRFE7/Cx3A+iDzBlXQLRZgfb
boDoF4pS98Dil4qfgejNsWGvQPTFRZHvQPTX59lgOuel+x8QrTaH4z+I3rd0
F/NdID1nRSsXmN5Xrgeipzf6GYHoTz/P9IFoD+fn/SC646vWQhC9aqfYYhD9
5OPCbOP9bxxf8y4H05vj55SC6FVft4FpDbXUACsg7R7xPxhEl6061G0PpP2n
XOkH0auklh/QOvrGcZ6Y4SkQbfRK8DOIdliiDKbLZqn9AtFHLef9BtFtV05w
awPpZ/dvguk/s34KgehT5coiIDrwzuW/IcdA9t0A0zGPamxCgfStKx/ANACL
ZMhD
  "]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"Partition", "[", 
       RowBox[{
        RowBox[{"Riffle", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"timeSeries", "[", 
            RowBox[{"pars1", ",", "inits1", ",", "maxT"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"timeSeries", "[", 
            RowBox[{"pars1", ",", "inits1", ",", "maxT"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", "2"}], "]"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", " ", "Red"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"Partition", "[", 
       RowBox[{
        RowBox[{"Riffle", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"timeSeries", "[", 
            RowBox[{"pars2", ",", "inits1", ",", "maxT"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"timeSeries", "[", 
            RowBox[{"pars2", ",", "inits1", ",", "maxT"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", "2"}], "]"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", " ", "Blue"}]}], "]"}], ",", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"Partition", "[", 
       RowBox[{
        RowBox[{"Riffle", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"timeSeries", "[", 
            RowBox[{"pars3", ",", "inits1", ",", "maxT"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"timeSeries", "[", 
            RowBox[{"pars3", ",", "inits1", ",", "maxT"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", "2"}], "]"}], ",", 
      " ", 
      RowBox[{"PlotStyle", "\[Rule]", " ", "Orange"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}], ",", 
    RowBox[{"Frame", "\[Rule]", "  ", "True"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(p\), \(H\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(p\), \(P\)]\)\>\""}], "}"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8614689520545397`*^9, 3.861469129542404*^9}, {
  3.8614691646165037`*^9, 3.8614691928877497`*^9}, {3.8614692877272577`*^9, 
  3.861469308553939*^9}, {3.8620794352819757`*^9, 3.862079497678587*^9}, {
  3.862079586189502*^9, 3.862079586482669*^9}, {3.862079815928833*^9, 
  3.862079830021433*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[1, 0, 0], PointSize[0.008333333333333333], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1: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
       
       "]]}}, {}, {}, {{}, {}}}, {{}, {{}, {}, 
     {RGBColor[0, 0, 1], PointSize[0.006944444444444445], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1: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
TJNry1s7ykEMv/jV79kMfJ99VyTThAuH1eZdDUFdsJdqnKsZwcWF+7oRtiuY
eO73dJKTy8XFe4UipygW3G0Gn9q95GJ81H7Y2IpGpda51XKE52Mblp4Q12aj
9bFz74mzXLwai298Ls3B/kt5luvXcCGr7OZ1nseB/B2RnbrFHLwbX3P6820u
VFrfzz+ozwHru+h3d2Ue2sy0tn/PZ2MkovFCXAYP3EnWiJ0kG3FPV91M+c3D
X9GvOy870zikpTNreD0fPFXZwhveFPL65oXc2cKH/VkHu+syLLhUPnfTkubj
slFaz8bqbqx9K5LIauVhn/OgkFRsF75PBH1bdZqHO3EN5iP+hP+BP1f4c7jo
+iCzUzu6E3E/PlqeVOVCQ/a76TRyb5FNDC++CwffRyXX0MYdcE29ORIbzsa+
GSeusX+3I3mdbcNT0mM36Zw4fW+gHTLbUjh3iL/r10Ye3izTgfcPBAc99Eie
vJPCW3K5A9c82+Ydc+gCRtJpvfWdqL5k9ntPdicOuZWaFv33P72q13aV70Bf
/z2rrgVd0JLXPxnFbUNfwqsKMYtuHMjtvm/Jb4Vt0nP56SSv/T1hfOXh5lb4
HqrfsVqWgt+cibUudS3I+9541sqEhrTd9GqVNy1wYXteeCnKhk6pxfW3P1oQ
WP1dfh3JrzKqxRdELrdio/TFwmEH4hcau1fKHmvDvri5pzt/c/DkvvOuK5Ht
ULrVaHwigAtr63iGz2QHnP9GqDHJvc3x1Crqy2Mgy+AuLBV4WLBP1mVeUje+
Rmuk3yc8f1UUr2+QwcLyAHEh76M8PJKwGNxHcpe1+fVnSjt5WOyWbNBIcLwk
QD9v6jwe1rSvcWn0Ijo3dnrVtNdcVDIWNk87zgXvH/vBeuIbifQW809beNhR
1Fh1iuiTo8EhHyseD0Xs83VFMzjwWxht3uPGx+f3j/+Jkzx0/lNY7Kp6Pi5k
N/tKR9KoPnAioUG0B17xDblGgRQ+5zs37Jjfg9vb/quJFjDxYPrH5K3jfFzx
fXxX9kg3foUlh4Y/5aNg/w7D3SMMLI3gwUuH/N7FzZTF406UGL+26EnjQeZy
3fqyGx1406dl9oNFeHP6Q8XNp+0oU5V55zXBgcyXTeu+zmzHmRs3nA+OsaF4
pHK+XVYbsHNtA5dB40fKjekN0W0QWb1I/QbpyVVX76x68pLMoWiRR6UcE2IS
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
OX6gWCtmGb61CQgVoOoxS/SJYQdCImZRna0CBOv3ixhyu2Dc3f2c+V2ABs1j
F3hvKOybd+odnyfA5fklqss+s2Gz8vzxmHQBthfsCAoh/nE69nrMkJIAAd5D
B4/v5cPIoO3054ge7Gabm1cRH16uubRM5xUfhtsqysq/EVwuqhufeENy81T1
wnGqF8UTimnvbnPR9aPN+0dUH6RLlPfbH+RAe2jZjY5/fXBfVtLyUJSNbGHF
cWOdfuCh8ZH11hRqwjezbYz7oXj16oHAjG5kiw88+b6iH1ESz47EzmfgQDO3
qKCyDyYbYjnaZK5B7X+CFTWIn2ql2n4i/U0vK/vek9O9GORvlvR814wlyn+9
wxwEaJfO+NWo04Sb4XnfFUlOPfozLNlWthFfX1vuzYnk4daPvv2O+0lOKQ1O
WlTJQbK5lt8vdj0Ui/SWPWPR8J4i/nwusx5Rl0OLuXVMHD2TN/rbrAH3q1vk
0n51gnnr67pnEqSnLewxHPVoQyW9+O/HrU14s8t+7oqDzZA/azVF70Mztgvz
1zI+ElxrS95cn9KKgKJKyzy3zxCbKZhIr2mHtum17ycOVmN52DWFq1oM2Eip
rr6mVomHvJ3H0xndSHfc3aPztRzizUMnAuIoqC4q3PbOpxwO8y5P81lLeFFn
NyuttBz23ypDR/xJHove/OVHawUum+TOTXnNRcMtgwsf31bB6KJjfBiDh9tL
ZDdzQ2vRYPpp6fs2PjRaU9JtVzVAUvad3o7HpJc7P3g1PaIJFUpcWb4Z6VnC
cpw3Xq2o8hnrSywT4OAFEZv3HR3INFsxsmVWL4Z3LKtZm9QNq2vOzl9X9CLS
z3MszYjGG/H4Bm3RXqysJGF1Gwf6o/8pfHxFns/6+VtHhofdMtl0CvFfhoJp
5LxSPjiPXq5/f7UHc5riNC02CFBN/Wi3f8LH8mQ5g1bzXszwDN+XmM7Dg2sx
/I/KfVDgCWWHenPxZszrx7umPry09070ViB54fkD2wNa/TDOOWEX30ijRktH
2OZMP6oeVnxLolmYLzEe/tCD4G3u6W0f5buxenawbpleP2TlhkP/xnQi4ekt
aRbdh6SZJ851bGyHzOTRJlHjPvDnaa+ZJ9EKC4OhMBnPXvw9qcY2NCB9cN/3
CfnDhFdDadP31DWClfJnZ55ID/ijF52kXjRA0WDpwl3OPFziSA8P/qiHnueQ
rdxtDnbMSTrhZVQPY4GVFpVOI2H681t6tvUIiyhc1WHIRHnOs9CERQ3wWzsx
utGpE9uqFqq4DjVgnlTpiCarFdI/7nttWdmEVRJjs6jqJvz+ayTUWtgMze/h
tTfRgGArY4PpD1sRepu5/8WFWvTKqm+M4LRj7gfd53NCqrCM1xyTf5SBEr2y
xyXnKjA08HPl81lMjJvr+n4xLofYzvmV1xooHB90KK7jliH/yn9XrE3YuLLH
zOyaXjl0f2+v5t/jYPPAHFlVpwoMxBemHGaTHrcl7vb0Y1XoXrctoUeYj3q3
nWp622th3EzHvSR9z6pzhsnH2Q3QGGJHzm7ogbzNAfX3QU0Iy3dYzvAkubf/
vVJlQCv6f55ZadorgFhTwOqLox24YltpZabQC4nNuz1vlXVjydg+n43oxYls
2c2GDjT0l+Qtclzei76jaVNn2HOQEVx0JaFegAM+vh/7t/MwNpYzo3OXAE9L
dpw7OMCH7K8/bjKJPbi2xfaB5T4BUiOmbEgm+VHlSZb2bt9e/Ii5POT7mIep
h85//s+qD7LLXJT7fLlYt1PZK4X4Yb+0r8uR9Rw07RNs/27bj14ZK72NNTSa
WnfN+h3dj/rfn7taaliQfT710Z1r/fDI/Cv6dVY3vDrSjuy160fA7fsMDfdO
ONh/jFjzuw8NW22l9om1Q6RojeDX0T7oeBd6jgpaYBb6ZvOpiF5s1dqdFEd6
3bkH637pnhVgWKxXhZ/aiJG6WcteSvVAYw53X1JoA1zUs8I1fHlwG3Xq7Uio
x4Dcj4jfZE43q1IM/uupA/OjbeTXh6RvSgk/XPW7Dom+y6UktzNR/6ln78yO
enz3Tw46YN0J9bMFZ0o+NKBeIHpI+lMr7IWcbo6RfrHN+YxE1uMm5G2ztsmI
bIZ0W2OKh0wDjpRP2/+CzG3vBulPP9fX4vbL33qjpH+2F89myChUQcLKcsb7
7QwM6ewtzVlagRc+74u2jnZjefupqN6BMqSKLVTRf0fh4ZlsrnVIGVxqI5zC
9Nl4MZS+/R2zDGmOiZ5XUzh45xpXPfq3HBrpE1WeBG8xt82T7L5WwquUb7NP
lI+d7F1T8iprkFCgr7NnWg+UUkVzfFLqYX7sqPm9zh443KItbLc3oS+Q8t9y
SYDcXKFZTZqtWNJ/0kpvnPir3o9zyfkdqF6ruLVYpxdmHJOx/yKJTqjdPSC0
txfaQjzXHaY0hgLG4K/WC5VopdpkMw7ED1xkfhYI0JI40vtKhYej85vD/p0Q
oPPO8H5HHh9VrKNR7IIe7HUNWrZkL9FVKZ3whGY+3PYrbVtwvhezqH4R8Qoe
dp3cITvTrg/C2/cMnoznIv2k5RetKf1YHPHo1JgRByE9M75UuvSj9lLhNKEe
Grri5xK7UvtRZCB1becfFl6a+pcn3u/Hx9CgnxVq3Tgv8H6R69MPfpjoon2x
ndirJOS8bWE/Zh89fquf5FTH54eC1IP6IGr2akfCRAsco+MTFz3tRfjb7ZGL
lzWj7MDSCdc7AgjS2ddt7hK/E5h5c/V6MPfKCr1F5xuwOPBwsE4GOa//oxhN
93rEK2ljuJHoffSs2dNz6+CHxxsPt9LwsdVR/JNXB63I0z+fJjBhc7moWCiw
HsHv/j20TeuEjPgpicirDcjVvDLr02QrJkxtGkVeNcJ2zC5CuqUJj1aUZX7a
0YysHx9KtLY0QN4noFFcpRX1C1R2KhrU4kiaCkvRvR3HrymuNSZ4s/fyiOR/
7cQbv3Oa76dX4MLWRUufpHdjxbqBG5UlZWhvHnpz6QyF/WZaTnWGZUj/6z3+
cRkb77wy+k9ElWH+V9cp/hc4mDOpNt/1VjksbwYn/SzjYlzq+dbws5W4H6ou
LvmVB++p8t82b6rBf2tr+p+N8eGlk3oirL8O60fviHWQXsUbyzst09kIhqPO
2YOkD8glLI6Ur2hBl6ShhvWEAH8mwwQc1Q78H+EN+nA=
       
       "]]}}, {}, {}, {{}, {}}}, {{}, {{}, {}, 
     {RGBColor[1, 0.5, 0], PointSize[0.006944444444444445], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1: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
04//A7C97FY=
       "]]}}, {}, {}, {{}, {}}}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(H\\)]\\)\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(P\\)]\\)\"", TraditionalForm]},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{Automatic, 244.82302443371623`},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8614689746024*^9, 3.8614689945562773`*^9}, {
   3.861469026840167*^9, 3.861469050908134*^9}, {3.861469091867167*^9, 
   3.8614691302420063`*^9}, {3.861469167118155*^9, 3.861469193401307*^9}, {
   3.8614692820109453`*^9, 3.86146930899817*^9}, 3.861469348873521*^9, {
   3.8620794404361877`*^9, 3.862079498343792*^9}, 3.862079587621126*^9, 
   3.862081831896338*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<~/Desktop/Mideo.lab2/Coevolution/Data \
sets/FIgures/IslandMainland_Discrete_Phase.png\>\"", ",", "g", ",", 
   RowBox[{"ImageResolution", "\[Rule]", " ", "300"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.862079579961355*^9, 3.862079629399541*^9}, {
  3.8620818540306177`*^9, 3.862081856352104*^9}}],

Cell[BoxData["\<\"~/Desktop/Mideo.lab2/Coevolution/Data \
sets/FIgures/IslandMainland_Discrete_Phase.png\"\>"], "Output",
 CellChangeTimes->{3.862079630456098*^9, 3.862081858987831*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8581637494470882`*^9, 3.858163750205682*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Equilibria", "Subsection",
 CellChangeTimes->{{3.8574096507298813`*^9, 3.857409665242929*^9}, {
  3.8583333159890137`*^9, 3.858333318546309*^9}, {3.858346738570636*^9, 
  3.8583467404820147`*^9}},
 ExpressionUUID -> "d5e022f9-042d-42da-bf68-ab11b3c188c3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"equs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pH2", "[", "t", "]"}], ",", 
     RowBox[{"pP2", "[", "t", "]"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.85782922289158*^9, 3.857829277676098*^9}, {
   3.857829432520854*^9, 3.857829433795545*^9}, 3.8578307607332363`*^9, {
   3.857833353524515*^9, 3.857833414135724*^9}, {3.8583322983663692`*^9, 
   3.858332324716455*^9}, {3.8583326415226097`*^9, 3.858332651328141*^9}, {
   3.858423552715825*^9, 3.858423572282888*^9}, 3.858423643236651*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"equs3", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Simplify", "[", 
       RowBox[{
        RowBox[{"Series", "[", 
         RowBox[{
          RowBox[{"#", "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"mH", "\[Rule]", 
              RowBox[{"\[Epsilon]", " ", "\[Mu]H"}]}], ",", 
             RowBox[{"mP", "\[Rule]", 
              RowBox[{"\[Epsilon]", " ", "\[Mu]P"}]}]}], "}"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Epsilon]", ",", "0", ",", "2"}], "}"}]}], "]"}], ",", 
        RowBox[{"Assumptions", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"S", ">", "0"}], ",", 
           RowBox[{"V", ">", "0"}], ",", 
           RowBox[{"\[Mu]H", ">", "0"}], ",", 
           RowBox[{"\[Mu]P", ">", "0"}], ",", 
           RowBox[{"\[Epsilon]", ">", "0"}]}], "}"}]}]}], "]"}], "&"}], ",", 
     "equs"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.858332981250043*^9, 3.8583331548154573`*^9}, {
  3.858333196295615*^9, 3.858333223962055*^9}, {3.858334409430399*^9, 
  3.858334409507326*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"equi", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"equs3", "==", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"pH", "[", "t", "]"}], ",", 
       RowBox[{"pP", "[", "t", "]"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"pH", "[", "t", "]"}], ",", 
      RowBox[{"pP", "[", "t", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8583331619961042`*^9, 3.858333177669509*^9}, {
  3.858333635352109*^9, 3.858333637272093*^9}, {3.858423578412519*^9, 
  3.8584235953313503`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"pH", "[", "t", "]"}], "\[Rule]", 
     FractionBox["1", "2"]}], ",", 
    RowBox[{
     RowBox[{"pP", "[", "t", "]"}], "\[Rule]", 
     FractionBox["1", "2"]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.858333181930704*^9, 3.8583336444295187`*^9, 
  3.858334418290506*^9, 3.858424642243237*^9, 3.859384679200474*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Stability", "Subsection",
 CellChangeTimes->{{3.857409660119225*^9, 3.8574096617965508`*^9}, {
   3.858333804883809*^9, 3.858333806201715*^9}, 3.8583467435139236`*^9},
 ExpressionUUID -> "2cdad697-3923-47d5-b4e7-f3dc647dc1a3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"JMtrx", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"pH2", "[", "t", "]"}], ",", 
         RowBox[{"pH", "[", "t", "]"}]}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"pH2", "[", "t", "]"}], ",", 
         RowBox[{"pP", "[", "t", "]"}]}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"pP2", "[", "t", "]"}], ",", 
         RowBox[{"pH", "[", "t", "]"}]}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"pP2", "[", "t", "]"}], ",", 
         RowBox[{"pP", "[", "t", "]"}]}], "]"}]}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.85740967407294*^9, 3.857409728350925*^9}, {
  3.857409760883854*^9, 3.857409768335066*^9}, {3.858333483623685*^9, 
  3.858333615024991*^9}, {3.85842360216396*^9, 3.85842366871681*^9}},
 ExpressionUUID -> "66ef1d00-1540-4f70-be8a-2832c613b35e"],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"JMtrxEqui", ",", "\[Lambda]List"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"JMtrxEqui", "[", "e_", "]"}], ":=", 
   RowBox[{
    RowBox[{"JMtrx", "/.", 
     RowBox[{"equi", "[", 
      RowBox[{"[", "e", "]"}], "]"}]}], "//", "Simplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Lambda]List", "[", "e_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"JMtrxEqui", "[", "e", "]"}], "//", "Eigenvalues"}], "//", 
    "FullSimplify"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.857409729221571*^9, 3.857409745575058*^9}, {
  3.8583337091226*^9, 3.858333784417861*^9}},
 ExpressionUUID -> "6e24f8d3-a437-4198-8806-4aae995c8275"],

Cell[CellGroupData[{

Cell["Equilibrium 1 \[Dash] polymorphic", "Subsubsection",
 CellChangeTimes->{{3.857409660119225*^9, 3.8574096617965508`*^9}, {
  3.8583338190915403`*^9, 3.858333830170309*^9}, {3.858424754288145*^9, 
  3.858424755742897*^9}},
 ExpressionUUID -> "2cdad697-3923-47d5-b4e7-f3dc647dc1a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"JMtrxEqui", "[", "1", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.858333840411471*^9, 3.858333858082859*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"1", "-", "mH"}], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "mH"}], ")"}], " ", "S", " ", "V"}], 
       RowBox[{"2", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}]]},
     {
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "mP"}], ")"}], " ", "S"}], 
       RowBox[{
        RowBox[{"-", "2"}], "+", "S"}]], 
      RowBox[{"1", "-", "mP"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.858333850590744*^9, 3.858333858346916*^9}, 
   3.858424663341735*^9, 3.859384683130176*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Lambda]List", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.858333883411302*^9, 3.858333887644109*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}]}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "mH", "+", "mP"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "V"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "mH", "+", "mP"}], ")"}], " ", 
        SuperscriptBox["S", "2"], " ", "V"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "mH", "+", "mP"}], ")"}], " ", "S", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "V"}]}], ")"}]}], "+", 
       RowBox[{
        SqrtBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", "S"}]], " ", 
        SqrtBox[
         RowBox[{"2", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}]], " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"mH", "-", "mP"}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "S"}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"mH", "-", "mP"}], ")"}], "2"]}], "-", 
             RowBox[{"4", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"mH", "-", "mP"}], ")"}], "2"], " ", "S"}], "+", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "mH", "+", "mP"}], ")"}], "2"], " ", 
              SuperscriptBox["S", "2"]}]}], ")"}], " ", "V"}]}]]}]}], 
      ")"}]}]}], ",", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "mH", "+", "mP"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "V"}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "mH", "+", "mP"}], ")"}], " ", 
       SuperscriptBox["S", "2"], " ", "V"}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "mH", "+", "mP"}], ")"}], " ", "S", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "V"}]}], ")"}]}], "+", 
      RowBox[{
       SqrtBox[
        RowBox[{
         RowBox[{"-", "2"}], "+", "S"}]], " ", 
       SqrtBox[
        RowBox[{"2", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}]], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"mH", "-", "mP"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "S"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"mH", "-", "mP"}], ")"}], "2"]}], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"mH", "-", "mP"}], ")"}], "2"], " ", "S"}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "mH", "+", "mP"}], ")"}], "2"], " ", 
             
             SuperscriptBox["S", "2"]}]}], ")"}], " ", "V"}]}]]}]}], 
     ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.858333888228365*^9, 3.858424668977604*^9, 
  3.859384686313724*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    SqrtBox[
     RowBox[{
      RowBox[{"-", "2"}], "+", "S"}]], " ", 
    SqrtBox[
     RowBox[{"2", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}]], " ", 
    SqrtBox[
     RowBox[{
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"mH", "-", "mP"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "S"}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"mH", "-", "mP"}], ")"}], "2"]}], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"mH", "-", "mP"}], ")"}], "2"], " ", "S"}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "mH", "+", "mP"}], ")"}], "2"], " ", 
          SuperscriptBox["S", "2"]}]}], ")"}], " ", "V"}]}]]}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"mH", ">", "0"}], ",", 
      RowBox[{"mP", ">", "0"}], ",", 
      RowBox[{"1", ">", "S", ">", "0"}], ",", 
      RowBox[{"0", "<", "V", "<", "1"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.858425038364478*^9, 3.858425065718663*^9}}],

Cell[BoxData[
 RowBox[{
  SqrtBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}]}]], " ", 
  SqrtBox[
   RowBox[{
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"mH", "-", "mP"}], ")"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "S"}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"mH", "-", "mP"}], ")"}], "2"]}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"mH", "-", "mP"}], ")"}], "2"], " ", "S"}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "mH", "+", "mP"}], ")"}], "2"], " ", 
        SuperscriptBox["S", "2"]}]}], ")"}], " ", "V"}]}]]}]], "Output",
 CellChangeTimes->{{3.858425041609989*^9, 3.858425069283559*^9}, 
   3.8593846878676233`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"Assumptions", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"mH", ">", "0"}], ",", 
         RowBox[{"mP", ">", "0"}], ",", 
         RowBox[{"1", ">", "S", ">", "0"}], ",", 
         RowBox[{"0", "<", "V", "<", "1"}]}], "}"}]}]}], "]"}], "&"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]List", "[", "1", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.858333912412408*^9, 3.858333933267214*^9}, {
  3.8593847102135267`*^9, 3.8593847108124857`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}]}]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "mH", "+", "mP"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "V"}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "mH", "+", "mP"}], ")"}], " ", 
      SuperscriptBox["S", "2"], " ", "V"}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "mH", "+", "mP"}], ")"}], " ", "S", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "V"}]}], ")"}]}], "+", 
     RowBox[{
      SqrtBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}]}]], 
      " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"mH", "-", "mP"}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "S"}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"mH", "-", "mP"}], ")"}], "2"]}], "-", 
           RowBox[{"4", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"mH", "-", "mP"}], ")"}], "2"], " ", "S"}], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "mH", "+", "mP"}], ")"}], "2"], " ", 
            SuperscriptBox["S", "2"]}]}], ")"}], " ", "V"}]}]]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.85833393486454*^9, 3.858424677495002*^9, {3.859384691688479*^9, 
   3.859384711341276*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}]}]]}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "mH", "+", "mP"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "V"}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "mH", "+", "mP"}], ")"}], " ", 
      SuperscriptBox["S", "2"], " ", "V"}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "mH", "+", "mP"}], ")"}], " ", "S", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "V"}]}], ")"}]}]}], ")"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.859384729061817*^9, 3.859384733116798*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{"2", "-", "mH", "-", "mP"}], ")"}]}]], "Output",
 CellChangeTimes->{3.859384733396249*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"re", "=", 
  RowBox[{"Re", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Lambda]List", "[", "1", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"S", "\[Rule]", "0.1"}], ",", 
      RowBox[{"V", "\[Rule]", "0.3"}], ",", 
      RowBox[{"mH", "\[Rule]", "0"}], ",", 
      RowBox[{"mP", "\[Rule]", "0"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"im", "=", 
   RowBox[{"Im", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Lambda]List", "[", "1", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"S", "\[Rule]", "0.1"}], ",", 
       RowBox[{"V", "\[Rule]", "0.3"}], ",", 
       RowBox[{"mH", "\[Rule]", "0"}], ",", 
       RowBox[{"mP", "\[Rule]", "0"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Sqrt", "[", 
    RowBox[{
     SuperscriptBox["re", "2"], "+", 
     SuperscriptBox["im", "2"]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"re", "=", 
  RowBox[{"Re", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Lambda]List", "[", "1", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"S", "\[Rule]", "0.3"}], ",", 
      RowBox[{"V", "\[Rule]", "0.3"}], ",", 
      RowBox[{"mH", "\[Rule]", "0.001"}], ",", 
      RowBox[{"mP", "\[Rule]", "0.001"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"im", "=", 
  RowBox[{"Im", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Lambda]List", "[", "1", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"S", "\[Rule]", "0.3"}], ",", 
      RowBox[{"V", "\[Rule]", "0.3"}], ",", 
      RowBox[{"mH", "\[Rule]", "0.001"}], ",", 
      RowBox[{"mP", "\[Rule]", "0.001"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Sqrt", "[", 
  RowBox[{
   SuperscriptBox["re", "2"], "+", 
   SuperscriptBox["im", "2"]}], "]"}]}], "Input",
 CellChangeTimes->{{3.858339550489889*^9, 3.858339617995515*^9}, {
   3.858340239801277*^9, 3.858340264968012*^9}, {3.8583405996141367`*^9, 
   3.858340611910386*^9}, {3.858341214085578*^9, 3.85834124012422*^9}, {
   3.858341282495192*^9, 3.8583413547749643`*^9}, {3.858341390975429*^9, 
   3.858341409054668*^9}, {3.858341486618463*^9, 3.858341520936763*^9}, {
   3.858341762887858*^9, 3.858341802693343*^9}, {3.858341978806097*^9, 
   3.8583419853931513`*^9}, {3.858343188735395*^9, 3.858343209260828*^9}, {
   3.85834376157778*^9, 3.858343802078529*^9}, {3.858343837787691*^9, 
   3.858343841646394*^9}, {3.858343919395743*^9, 3.858343926089691*^9}, {
   3.85842471113608*^9, 3.8584247396553164`*^9}, {3.8584247873238583`*^9, 
   3.858424812992406*^9}, 3.858424982845087*^9, {3.859384764244997*^9, 
   3.859384778030183*^9}, {3.859384816161592*^9, 3.8593848475511827`*^9}}],

Cell[BoxData["0.9999999999999998`"], "Output",
 CellChangeTimes->{{3.85833957771327*^9, 3.858339619460144*^9}, {
   3.8583402450347233`*^9, 3.8583402653118258`*^9}, 3.85834061700628*^9, 
   3.8583412486879253`*^9, {3.8583412903271723`*^9, 3.858341355242086*^9}, {
   3.858341393683867*^9, 3.8583414095197153`*^9}, {3.858341494253793*^9, 
   3.858341521330503*^9}, {3.858341768581874*^9, 3.8583418031754723`*^9}, 
   3.8583419858642263`*^9, {3.858343199129064*^9, 3.858343210018182*^9}, {
   3.858343770397451*^9, 3.8583438024315577`*^9}, 3.858343842240366*^9, 
   3.858343926588976*^9, {3.858424715070004*^9, 3.8584247406005983`*^9}, {
   3.858424793916589*^9, 3.858424814076131*^9}, 3.858424983158162*^9, 
   3.859384695530962*^9, {3.859384767959944*^9, 3.8593847785647373`*^9}, {
   3.8593848298483343`*^9, 3.859384848198688*^9}}],

Cell[BoxData["0.9990000000000001`"], "Output",
 CellChangeTimes->{{3.85833957771327*^9, 3.858339619460144*^9}, {
   3.8583402450347233`*^9, 3.8583402653118258`*^9}, 3.85834061700628*^9, 
   3.8583412486879253`*^9, {3.8583412903271723`*^9, 3.858341355242086*^9}, {
   3.858341393683867*^9, 3.8583414095197153`*^9}, {3.858341494253793*^9, 
   3.858341521330503*^9}, {3.858341768581874*^9, 3.8583418031754723`*^9}, 
   3.8583419858642263`*^9, {3.858343199129064*^9, 3.858343210018182*^9}, {
   3.858343770397451*^9, 3.8583438024315577`*^9}, 3.858343842240366*^9, 
   3.858343926588976*^9, {3.858424715070004*^9, 3.8584247406005983`*^9}, {
   3.858424793916589*^9, 3.858424814076131*^9}, 3.858424983158162*^9, 
   3.859384695530962*^9, {3.859384767959944*^9, 3.8593847785647373`*^9}, {
   3.8593848298483343`*^9, 3.859384848210133*^9}}],

Cell[BoxData["0.10314062895242945`"], "Output",
 CellChangeTimes->{{3.85833957771327*^9, 3.858339619460144*^9}, {
   3.8583402450347233`*^9, 3.8583402653118258`*^9}, 3.85834061700628*^9, 
   3.8583412486879253`*^9, {3.8583412903271723`*^9, 3.858341355242086*^9}, {
   3.858341393683867*^9, 3.8583414095197153`*^9}, {3.858341494253793*^9, 
   3.858341521330503*^9}, {3.858341768581874*^9, 3.8583418031754723`*^9}, 
   3.8583419858642263`*^9, {3.858343199129064*^9, 3.858343210018182*^9}, {
   3.858343770397451*^9, 3.8583438024315577`*^9}, 3.858343842240366*^9, 
   3.858343926588976*^9, {3.858424715070004*^9, 3.8584247406005983`*^9}, {
   3.858424793916589*^9, 3.858424814076131*^9}, 3.858424983158162*^9, 
   3.859384695530962*^9, {3.859384767959944*^9, 3.8593847785647373`*^9}, {
   3.8593848298483343`*^9, 3.859384848219955*^9}}],

Cell[BoxData["1.0043102057336184`"], "Output",
 CellChangeTimes->{{3.85833957771327*^9, 3.858339619460144*^9}, {
   3.8583402450347233`*^9, 3.8583402653118258`*^9}, 3.85834061700628*^9, 
   3.8583412486879253`*^9, {3.8583412903271723`*^9, 3.858341355242086*^9}, {
   3.858341393683867*^9, 3.8583414095197153`*^9}, {3.858341494253793*^9, 
   3.858341521330503*^9}, {3.858341768581874*^9, 3.8583418031754723`*^9}, 
   3.8583419858642263`*^9, {3.858343199129064*^9, 3.858343210018182*^9}, {
   3.858343770397451*^9, 3.8583438024315577`*^9}, 3.858343842240366*^9, 
   3.858343926588976*^9, {3.858424715070004*^9, 3.8584247406005983`*^9}, {
   3.858424793916589*^9, 3.858424814076131*^9}, 3.858424983158162*^9, 
   3.859384695530962*^9, {3.859384767959944*^9, 3.8593847785647373`*^9}, {
   3.8593848298483343`*^9, 3.859384848231744*^9}}]
}, Open  ]],

Cell["Stable.", "Text",
 CellChangeTimes->{{3.8583343259827337`*^9, 3.858334335137814*^9}, {
  3.858341270500663*^9, 3.8583412717788877`*^9}, {3.8584247459104633`*^9, 
  3.858424746982592*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Individual-Based Simulations", "Subsection",
 CellChangeTimes->{{3.857557941023484*^9, 3.857557949892543*^9}},
 ExpressionUUID -> "864ecb67-c151-40d8-bead-a0e89b7d60cd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"parsN", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"S", "\[Rule]", " ", "0"}], ",", 
     RowBox[{"V", "\[Rule]", "0.2"}], ",", 
     RowBox[{"mH", "\[Rule]", "0.05"}], ",", 
     RowBox[{"mP", "\[Rule]", "0.05"}], ",", 
     RowBox[{"\[Kappa]H", "\[Rule]", "300"}], ",", 
     RowBox[{"\[Kappa]P", "\[Rule]", "300"}], ",", 
     RowBox[{"tMax", "\[Rule]", "200"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"parsN3", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"S", "\[Rule]", " ", "0"}], ",", 
     RowBox[{"V", "\[Rule]", "0.5"}], ",", 
     RowBox[{"mH", "\[Rule]", "0.05"}], ",", 
     RowBox[{"mP", "\[Rule]", "0.05"}], ",", 
     RowBox[{"\[Kappa]H", "\[Rule]", "300"}], ",", 
     RowBox[{"\[Kappa]P", "\[Rule]", "300"}], ",", 
     RowBox[{"tMax", "\[Rule]", "200"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"parsN4", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"S", "\[Rule]", " ", "0"}], ",", 
     RowBox[{"V", "\[Rule]", "0.2"}], ",", 
     RowBox[{"mH", "\[Rule]", "0.01"}], ",", 
     RowBox[{"mP", "\[Rule]", "0.01"}], ",", 
     RowBox[{"\[Kappa]H", "\[Rule]", "300"}], ",", 
     RowBox[{"\[Kappa]P", "\[Rule]", "300"}], ",", 
     RowBox[{"tMax", "\[Rule]", "200"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"parsN5", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"S", "\[Rule]", " ", "0"}], ",", 
     RowBox[{"V", "\[Rule]", "0.2"}], ",", 
     RowBox[{"mH", "\[Rule]", "0.001"}], ",", 
     RowBox[{"mP", "\[Rule]", "0.001"}], ",", 
     RowBox[{"\[Kappa]H", "\[Rule]", "300"}], ",", 
     RowBox[{"\[Kappa]P", "\[Rule]", "300"}], ",", 
     RowBox[{"tMax", "\[Rule]", "200"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pars1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"S", "\[Rule]", " ", "0.8"}], ",", 
     RowBox[{"V", "\[Rule]", "0.2"}], ",", 
     RowBox[{"a", "\[Rule]", "0.1"}], ",", 
     RowBox[{"mH", "\[Rule]", "0.05"}], ",", 
     RowBox[{"mP", "\[Rule]", "0.05"}], ",", 
     RowBox[{"\[Kappa]H", "\[Rule]", "300"}], ",", 
     RowBox[{"\[Kappa]P", "\[Rule]", "300"}], ",", 
     RowBox[{"tMax", "\[Rule]", "200"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pars2", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"S", "\[Rule]", "0.65"}], ",", 
     RowBox[{"V", "\[Rule]", "0.2"}], ",", 
     RowBox[{"a", "\[Rule]", "0.1"}], ",", 
     RowBox[{"mH", "\[Rule]", "0.05"}], ",", 
     RowBox[{"mP", "\[Rule]", "0.05"}], ",", 
     RowBox[{"\[Kappa]H", "\[Rule]", "300"}], ",", 
     RowBox[{"\[Kappa]P", "\[Rule]", "300"}], ",", 
     RowBox[{"tMax", "\[Rule]", "200"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pars3", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"S", "\[Rule]", "0.8"}], ",", 
     RowBox[{"V", "\[Rule]", "0.5"}], ",", 
     RowBox[{"a", "\[Rule]", "0.1"}], ",", 
     RowBox[{"mH", "\[Rule]", "0.05"}], ",", 
     RowBox[{"mP", "\[Rule]", "0.05"}], ",", 
     RowBox[{"\[Kappa]H", "\[Rule]", "300"}], ",", 
     RowBox[{"\[Kappa]P", "\[Rule]", "300"}], ",", 
     RowBox[{"tMax", "\[Rule]", "200"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pars4", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"S", "\[Rule]", "0.8"}], ",", 
     RowBox[{"V", "\[Rule]", "0.2"}], ",", 
     RowBox[{"a", "\[Rule]", "0.1"}], ",", 
     RowBox[{"mH", "\[Rule]", "0.01"}], ",", 
     RowBox[{"mP", "\[Rule]", "0.01"}], ",", 
     RowBox[{"\[Kappa]H", "\[Rule]", "300"}], ",", 
     RowBox[{"\[Kappa]P", "\[Rule]", "300"}], ",", 
     RowBox[{"tMax", "\[Rule]", "200"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pars5", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"S", "\[Rule]", "0.8"}], ",", 
     RowBox[{"V", "\[Rule]", "0.2"}], ",", 
     RowBox[{"a", "\[Rule]", "0.1"}], ",", 
     RowBox[{"mH", "\[Rule]", "0.001"}], ",", 
     RowBox[{"mP", "\[Rule]", "0.001"}], ",", 
     RowBox[{"\[Kappa]H", "\[Rule]", "300"}], ",", 
     RowBox[{"\[Kappa]P", "\[Rule]", "300"}], ",", 
     RowBox[{"tMax", "\[Rule]", "200"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdyE0og3EAx/GncfB68LJJsw3Ju4OLt7CelYRQ2sisyFp52Uw5yCPlrYwm
hZQn7EJpKdssRGgHyg5c5iJ5myl5YoeFaV7+v+fw7VPftE5jk05AUZSEBDMD
9k/HEUePL/SHYHlrr2yH+J57xbuXJZuC+7cWXqXB8w09biYE3QptnJNYNbcm
hM2U7RGK1KwXKpMd9ZEnHH3ZNt0AzR6XL4po3et6huX2HHM0sWxIz9tn8C/D
pddqFu5ev2iLiCJZmA4qDx0n0B8MuaD6fUtYTHStJopgJdOcDzM6Iwpgy3e6
Ck7oBRq4OVqnKiFKSxt439x5w6X41Wcj8Gk9YRseyH022JPI3sNYVvIAZ3wb
pjaiU83MwtCdXNhOpAJG3lzxfAfUqy28MY1JA17iZIqYN75CMgxLAlm8/sGg
WODi6BVtfCo0LVprConHzE0t7GbpwMcpRyvCf3+gxvgn/SI60msyoOX8IjtI
tI7l58B/6AH6Aw==
  "],
 ExpressionUUID -> "4f4f5a23-3616-476a-bf2e-d9de7d3a1e3d"],

Cell["Absolute fitness values", "Text",
 CellChangeTimes->{{3.8575539651645308`*^9, 3.857553967571971*^9}, {
  3.858254864820229*^9, 3.85825486667502*^9}},
 ExpressionUUID -> "f808cc4a-7e20-49b1-9224-5172eff507e4"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "WH", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"WH", "[", 
    RowBox[{"1", ",", "pVec_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"pVec", "[", 
      RowBox[{"[", "2", "]"}], "]"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "V"}], ")"}]}], " ", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"pVec", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "S"}], " ", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"pVec", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "S"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "V"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"WH", "[", 
    RowBox[{"2", ",", "pVec_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"pVec", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "V"}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"pVec", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "S"}], " ", "+", 
    RowBox[{
     RowBox[{"pVec", "[", 
      RowBox[{"[", "2", "]"}], "]"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "S"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "V"}], ")"}]}]}]}], " ", " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"WP", "[", 
    RowBox[{"1", ",", "pVec_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"pVec", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"pVec", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "S"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"WP", "[", 
    RowBox[{"2", ",", "pVec_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"pVec", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "+", 
    RowBox[{
     RowBox[{"pVec", "[", 
      RowBox[{"[", "1", "]"}], "]"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "S"}], ")"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.857553688648953*^9, 3.857553747488077*^9}, {
   3.8575537806278887`*^9, 3.857553881738371*^9}, {3.8575547294084673`*^9, 
   3.857554750958584*^9}, {3.8582545658470583`*^9, 3.858254575846238*^9}, {
   3.8582546064799232`*^9, 3.858254700073872*^9}, {3.85825491914996*^9, 
   3.858254922005704*^9}, {3.8582551344325933`*^9, 3.8582551487279387`*^9}, {
   3.8582553539811907`*^9, 3.858255373964965*^9}, {3.858255495911234*^9, 
   3.858255521117662*^9}, {3.858346810643413*^9, 3.858346810987135*^9}, {
   3.8583474717806177`*^9, 3.858347507323225*^9}, {3.8583475530853643`*^9, 
   3.858347584892568*^9}, 3.8583479556441*^9, {3.858354129671155*^9, 
   3.858354183591379*^9}, {3.858430615946416*^9, 3.8584306182205687`*^9}},
 ExpressionUUID -> "dc7c901b-01c2-4c34-a313-69f523e16dd3"],

Cell["Relative fitness values", "Text",
 CellChangeTimes->{{3.8575539337092667`*^9, 3.857553962216299*^9}, {
  3.858254707424376*^9, 3.858254709080665*^9}},
 ExpressionUUID -> "45f54a61-675e-472a-94a7-2eb4c4fac408"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "wH", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"wH", "[", "pVec_", "]"}], ":=", 
   FractionBox[
    RowBox[{"WH", "[", 
     RowBox[{"1", ",", "pVec"}], "]"}], 
    RowBox[{
     RowBox[{
      RowBox[{"pVec", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", 
      RowBox[{"WH", "[", 
       RowBox[{"1", ",", "pVec"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"pVec", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ")"}], 
      RowBox[{"WH", "[", 
       RowBox[{"2", ",", "pVec"}], "]"}]}]}]]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"wP", "[", "pVec_", "]"}], ":=", 
   FractionBox[
    RowBox[{"WP", "[", 
     RowBox[{"1", ",", "pVec"}], "]"}], 
    RowBox[{
     RowBox[{
      RowBox[{"pVec", "[", 
       RowBox[{"[", "2", "]"}], "]"}], " ", 
      RowBox[{"WP", "[", 
       RowBox[{"1", ",", "pVec"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"pVec", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ")"}], 
      RowBox[{"WP", "[", 
       RowBox[{"2", ",", "pVec"}], "]"}]}]}]]}], " ", ";"}]}], "Input",
 CellChangeTimes->{{3.85755389473662*^9, 3.857553955939641*^9}, {
   3.8575547319284887`*^9, 3.857554755837936*^9}, {3.8582547128023663`*^9, 
   3.8582547600208187`*^9}, {3.8582547988044453`*^9, 3.85825482049142*^9}, 
   3.858254935718587*^9, {3.858255297419609*^9, 3.858255299403585*^9}, {
   3.858255343341501*^9, 3.858255345668758*^9}, {3.858255442637382*^9, 
   3.858255457252624*^9}, {3.858354193072072*^9, 3.8583542339600277`*^9}, {
   3.858430620619254*^9, 3.8584306237234163`*^9}},
 ExpressionUUID -> "94cb3869-e995-47d3-a241-168f7b718825"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "Sim2", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Sim2", "[", 
   RowBox[{"pars_", ",", "intS_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Sim2", "[", 
    RowBox[{"pars", ",", "intS"}], "]"}], "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "out", ",", "g", ",", "nH1s", ",", "nP1s", ",", "nH2s", ",", "nP2s", 
       ",", "nMH1", ",", "nMH2", ",", "nMP1", ",", "nMP2", ",", "nMH11", ",", 
       "nMH12", ",", "nMH21", ",", "nMH22", ",", "nMP11", ",", "nMP12", ",", 
       "nMP21", ",", "nMP22", ",", "nH1sm", ",", "nH2sm", ",", "nP1sm", ",", 
       "nP2sm", ",", "nH11sm", ",", "nH21sm", ",", "nH12sm", ",", "nH22sm", 
       ",", "nP11sm", ",", "nP12sm", ",", "nP21sm", ",", "nP22sm", ",", 
       "nH1prime", ",", "nH2prime", ",", "nP1prime", ",", "nP2prime"}], "}"}],
      ",", 
     RowBox[{
      RowBox[{"out", "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", "2"], ",", 
           FractionBox["1", "2"]}], "}"}], "}"}], "//", "N"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"g", "=", "1"}], ",", 
        RowBox[{"g", "\[LessEqual]", 
         RowBox[{"(", 
          RowBox[{"tMax", "/.", "pars"}], ")"}]}], ",", 
        RowBox[{"g", "++"}], ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", "Selection", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"nH1s", "=", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{"BinomialDistribution", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Kappa]H", "/.", "pars"}], ")"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"wH", "[", 
                RowBox[{"out", "[", 
                 RowBox[{"[", 
                  RowBox[{"-", "1"}], "]"}], "]"}], "]"}], 
               RowBox[{"out", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], "/.", 
              "pars"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"nP1s", "=", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{"BinomialDistribution", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Kappa]P", "/.", "pars"}], ")"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"wP", "[", 
                RowBox[{"out", "[", 
                 RowBox[{"[", 
                  RowBox[{"-", "1"}], "]"}], "]"}], "]"}], 
               RowBox[{"out", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "/.", 
              "pars"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "Number", " ", "of", " ", "type", " ", "1", " ", "host", " ", 
           "migrants", " ", "out", " ", "of", " ", "population", " ", "1"}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"nMH11", "=", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{"BinomialDistribution", "[", 
            RowBox[{"nH1s", ",", 
             RowBox[{"mH", "/.", "pars"}]}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "Number", " ", "of", " ", "type", " ", "2", " ", "host", " ", 
           "migrants", " ", "out", " ", "of", " ", "population", " ", "1"}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"nMH12", "=", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{"BinomialDistribution", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"\[Kappa]H", "-", "nH1s"}], "/.", "pars"}], ",", 
             RowBox[{"mH", "/.", "pars"}]}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "Number", " ", "of", " ", "type", " ", "1", " ", "hosts", " ", 
           "after", " ", "migration"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"nH11sm", "=", 
          RowBox[{"nH1s", "-", "nMH11", "+", 
           RowBox[{"RandomVariate", "[", 
            RowBox[{"BinomialDistribution", "[", 
             RowBox[{"nMH11", ",", "0.5"}], "]"}], "]"}], "+", 
           RowBox[{"RandomVariate", "[", 
            RowBox[{"BinomialDistribution", "[", 
             RowBox[{"nMH12", ",", "0.5"}], "]"}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "Number", " ", "of", " ", "type", " ", "1", " ", "parasite", " ", 
           "migrants", " ", "out", " ", "of", " ", "populations", " ", "1", 
           " ", "and", " ", "2"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"nMP11", "=", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{"BinomialDistribution", "[", 
            RowBox[{"nP1s", ",", 
             RowBox[{"mP", "/.", "pars"}]}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "Number", " ", "of", " ", "type", " ", "2", " ", "parasite", " ", 
           "migrants", " ", "out", " ", "of", " ", "populations", " ", "1", 
           " ", "and", " ", "2"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"nMP12", "=", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{"BinomialDistribution", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"\[Kappa]P", "-", "nP1s"}], "/.", "pars"}], ",", 
             RowBox[{"mP", "/.", "pars"}]}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "Number", " ", "of", " ", "type", " ", "1", " ", "and", " ", "type",
            " ", "2", " ", "hosts", " ", "after", " ", "migration", " ", 
           "for", " ", "populations", " ", "1", " ", "and", " ", "2"}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"nP11sm", "=", 
          RowBox[{"nP1s", "-", "nMP11", "+", 
           RowBox[{"RandomVariate", "[", 
            RowBox[{"BinomialDistribution", "[", 
             RowBox[{"nMP11", ",", "0.5"}], "]"}], "]"}], "+", 
           RowBox[{"RandomVariate", "[", 
            RowBox[{"BinomialDistribution", "[", 
             RowBox[{"nMP12", ",", "0.5"}], "]"}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"out", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               FractionBox["nH11sm", "\[Kappa]H"], ",", 
               FractionBox["nP11sm", "\[Kappa]P"]}], "}"}], "/.", "pars"}], "//",
             "N"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "out"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.857553336931319*^9, 3.857553339760133*^9}, {
   3.8575533844199467`*^9, 3.857553386467256*^9}, {3.8575536077052927`*^9, 
   3.857553686736424*^9}, {3.8575540240938463`*^9, 3.85755415758674*^9}, {
   3.857554204959188*^9, 3.8575542565896387`*^9}, {3.857554324066854*^9, 
   3.8575546681866713`*^9}, {3.8575549229555387`*^9, 
   3.8575550330454893`*^9}, {3.8575554614764423`*^9, 3.857555477954821*^9}, {
   3.858255638832817*^9, 3.858255752532222*^9}, {3.85825578467452*^9, 
   3.858255925229875*^9}, {3.858255956598247*^9, 3.858255988389636*^9}, {
   3.858256069760268*^9, 3.858256072735312*^9}, {3.8582562740023947`*^9, 
   3.8582563294516163`*^9}, {3.8582564282367887`*^9, 3.858256430010532*^9}, {
   3.858256590199576*^9, 3.858256634461961*^9}, {3.85825667680853*^9, 
   3.858256692015005*^9}, {3.8582567641721067`*^9, 3.858256803987989*^9}, {
   3.8582568374306917`*^9, 3.858256840892125*^9}, {3.8582570289357758`*^9, 
   3.858257353494149*^9}, {3.858257562320201*^9, 3.858257668746155*^9}, {
   3.858258024641522*^9, 3.858258024816195*^9}, {3.858258287197348*^9, 
   3.858258346268889*^9}, {3.8582610911361427`*^9, 3.858261091338608*^9}, {
   3.8582623586932783`*^9, 3.858262385611355*^9}, {3.858347618208322*^9, 
   3.858347659530373*^9}, 3.858351976131401*^9, {3.858422917203207*^9, 
   3.8584229653087997`*^9}, {3.858426473026128*^9, 3.858426563441745*^9}, {
   3.8584280454173393`*^9, 3.858428047897088*^9}, {3.858428084577124*^9, 
   3.858428313380003*^9}, {3.858430660598712*^9, 3.858430662732905*^9}, {
   3.858700695928475*^9, 3.858700735968174*^9}, {3.858700771978318*^9, 
   3.858700788598731*^9}, {3.8587008407989264`*^9, 3.858701058821001*^9}},
 ExpressionUUID -> "3d8ced04-d6d8-493e-a0f8-537dd834b908"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "mean", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mean", "[", "pars_", "]"}], ":=", 
  RowBox[{
   RowBox[{"mean", "[", "pars", "]"}], "=", 
   RowBox[{"Mean", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{
        RowBox[{"Sim2", "[", 
         RowBox[{"pars", ",", "j"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "1"}], "]"}], "]"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          RowBox[{"Sim2", "[", 
           RowBox[{"pars", ",", "j"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "1"}], "]"}], "]"}]}], ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "2000"}], "}"}]}], "]"}], 
    "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.8612874513424187`*^9, 3.8612874574964647`*^9}, {
  3.861287700921672*^9, 3.861287707860168*^9}, {3.861287740507516*^9, 
  3.861287761006909*^9}, {3.861568543825859*^9, 3.8615685468744583`*^9}, {
  3.86173820655396*^9, 3.86173820759694*^9}, {3.8618870637276907`*^9, 
  3.861887065513097*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "SD", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SD", "[", "pars_", "]"}], ":=", 
   RowBox[{
    RowBox[{"SD", "[", "pars", "]"}], "=", 
    RowBox[{
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{
             RowBox[{"Sim2", "[", 
              RowBox[{"pars", ",", "j"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", "1"}], "]"}], "]"}], 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{
               RowBox[{"Sim2", "[", 
                RowBox[{"pars", ",", "j"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{";;", ",", "1"}], "]"}], "]"}]}], ")"}]}], "-", 
           RowBox[{"mean", "[", "pars", "]"}]}], ")"}], "2"], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "2000"}], "}"}]}], "]"}], "]"}], "//", 
     "Sqrt"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.861287696740488*^9, 3.861287697764039*^9}, {
  3.86128777398377*^9, 3.8612878846884327`*^9}, {3.861738209429719*^9, 
  3.861738209541135*^9}, {3.861887069641429*^9, 3.861887072232192*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"leg2", "=", 
  RowBox[{"LineLegend", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{"Blue", ",", 
        RowBox[{"Opacity", "[", "0.2", "]"}], ",", "Dashed"}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{"Blue", ",", 
        RowBox[{"Opacity", "[", "0.4", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", "Blue", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Neutral\>\"", ",", "\"\<Coevolutionary, S=0.65\>\"", ",", 
      "\"\<Coevolutionary, S=0.8\>\""}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.857557659235034*^9, 3.857557706354966*^9}, {
   3.8575578672099323`*^9, 3.857557870916712*^9}, {3.858348355414452*^9, 
   3.858348370636924*^9}, {3.858348402869893*^9, 3.858348410190549*^9}, {
   3.858422980802874*^9, 3.858423056476487*^9}, {3.8592883937080708`*^9, 
   3.859288560670891*^9}, {3.859378732631886*^9, 3.8593787574893227`*^9}, {
   3.859378811435246*^9, 3.859378845154427*^9}, {3.859379014695904*^9, 
   3.859379017948369*^9}, 3.859388852810038*^9, {3.8593890774673243`*^9, 
   3.859389079536745*^9}, {3.861873035965827*^9, 3.8618730550608788`*^9}, {
   3.8618787039821672`*^9, 3.861878737103382*^9}, {3.8618810746017*^9, 
   3.861881079841586*^9}},
 ExpressionUUID -> "86983290-4148-4dc9-b4a3-ca238cada277"],

Cell[BoxData[
 TemplateBox[{
  "\"Neutral\"","\"Coevolutionary, S=0.65\"","\"Coevolutionary, S=0.8\""},
  "LineLegend",
  DisplayFunction->(StyleBox[
    StyleBox[
     PaneBox[
      TagBox[
       GridBox[{{
          TagBox[
           GridBox[{{
              GraphicsBox[{{
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1], 
                  Opacity[0.2], 
                  Dashing[{Small, Small}]], {
                  LineBox[{{0, 10}, {40, 10}}]}}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1], 
                  Opacity[0.2], 
                  Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
               ImageSize -> {40, 10}, PlotRangePadding -> None, ImagePadding -> 
               Automatic, BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
              GraphicsBox[{{
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1], 
                  Opacity[0.4]], {
                  LineBox[{{0, 10}, {40, 10}}]}}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1], 
                  Opacity[0.4]], {}}}, AspectRatio -> Full, 
               ImageSize -> {40, 10}, PlotRangePadding -> None, ImagePadding -> 
               Automatic, 
               BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
              GraphicsBox[{{
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1]], {
                  LineBox[{{0, 10}, {40, 10}}]}}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
               ImageSize -> {40, 10}, PlotRangePadding -> None, ImagePadding -> 
               Automatic, 
               BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
            GridBoxAlignment -> {
             "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "Columns" -> {{False}}, "Rows" -> {{False}}}, 
            GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
           "Grid"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
      Alignment -> Left, AppearanceElements -> None, 
      ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
     LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
    Background -> Automatic, StripOnInput -> False]& ),
  Editable->True,
  InterpretationFunction:>(RowBox[{"LineLegend", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
           RowBox[{"Directive", "[", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
               ",", 
               RowBox[{"Opacity", "[", "0.2`", "]"}], ",", 
               RowBox[{"Dashing", "[", 
                 RowBox[{"{", 
                   RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
           ",", 
           RowBox[{"Directive", "[", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
               ",", 
               RowBox[{"Opacity", "[", "0.4`", "]"}]}], "]"}], ",", 
           RowBox[{"Directive", "[", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[0, 0, 1], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
               ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 0, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
             "]"}]}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{#, ",", #2, ",", #3}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.861878723041635*^9, 3.8618787375932693`*^9}, 
   3.8618810881603203`*^9, 3.861882045511898*^9, 3.861887077835*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g1", "=", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"mean", "[", "parsN", "]"}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "parsN", "]"}], "+", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "parsN", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "parsN", "]"}], "-", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "parsN", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Blue", ",", 
          RowBox[{"Opacity", "[", "0.2", "]"}], ",", "Dashed"}], "]"}]}], ",", 
       RowBox[{"Filling", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "3", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Directive", "[", 
              RowBox[{"Blue", ",", 
               RowBox[{"Opacity", "[", "0.1", "]"}]}], "]"}], "}"}]}], 
           "}"}]}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"mean", "[", "pars2", "]"}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "pars2", "]"}], "+", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "pars2", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "pars2", "]"}], "-", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "pars2", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Blue", ",", 
          RowBox[{"Opacity", "[", "0.4", "]"}]}], "]"}]}], ",", 
       RowBox[{"Filling", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "3", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Directive", "[", 
              RowBox[{"Blue", ",", 
               RowBox[{"Opacity", "[", "0.2", "]"}]}], "]"}], "}"}]}], 
           "}"}]}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"mean", "[", "pars1", "]"}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "pars1", "]"}], "+", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "pars1", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "pars1", "]"}], "-", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "pars1", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", "Blue", "]"}]}], ",", 
       RowBox[{"Filling", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "3", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Directive", "[", 
              RowBox[{"Blue", ",", 
               RowBox[{"Opacity", "[", "0.2", "]"}]}], "]"}], "}"}]}], 
           "}"}]}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.5"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Host generations\>\"", ",", "\"\<Host heterozygosity\>\""}], 
       "}"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "False"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"g1Legend", "=", 
  RowBox[{"Legended", "[", 
   RowBox[{"g1", ",", "leg2"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.861872943454239*^9, 3.861872988412517*^9}, {
   3.8618730190911407`*^9, 3.861873031765658*^9}, 3.861875135152529*^9, 
   3.861875246387599*^9, 3.861877480034683*^9, {3.8618777000767937`*^9, 
   3.861877712931704*^9}, {3.861878693688336*^9, 3.86187869410282*^9}, {
   3.8618810967634373`*^9, 3.8618811356587048`*^9}, 3.861881897026973*^9, {
   3.861881933662127*^9, 3.8618819386182404`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, 
      GraphicsComplexBox[CompressedData["
1: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
CYqMSP4/u1C7rQ==
       
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[0, 0, 1], 
           Opacity[0.1]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl1GWQFgQQBuD7ju6uIw84uo/uFEFBQhQF6Y6jURqlU0BCkFBBAQEDUFLy
6DrygKO7u/uZ4cezO7v/duadDW3VrUFEcFBQUIDBykAqWgwKvJ+HMJRv+Y5h
DGcEIxnFaMYwlnGMZwIT+Z5JTGYKPzCVaUxnBj8yk1n8xGzmMJd5/Mwv/Mp8
FvAbv7OQRSzmD5awlGX8yV/8zT8sZwUr+Zf/WMVq1rCWdaznfzawkU1sZgtb
iWQb29nBTnaxmz3sZR/7OUAUBznEYY5wlGNEc5wTnCSGU5zmDGc5x3kucJFL
XOYKV7nGdW5wk1vc5g53ucd9HvCQRzzmCU95xnNe8JJXvOYNbwmShwDBxCI2
cYhLPOKTgIQkIjFJSEoykpOClKQiNWlISzrSk4EQMpKJzGQhK9kIJTs5yEkY
uchNHvKSj/wUoCCFKEwRilKMcIpTgpKUojRlKEs5Bri5P/34hq/pSx9604ue
9KA73YigK13oTCc60oH2tKMtbWhNK1rSguY04yua0oQv+YLGfM5nNOJTGtKA
+tTjE+pSh4/5iNrU4kNq8gE1qE41qlKFylSiIhUoTznKUobSlKIkJShOOMUo
ShEKU4iCFCA/+chLHnKTizBykoPshJKNrGQhM5nISAgZSE860pKG1KQiJSlI
TjKSkoTEJCIhCYhPPOISh9jEIphA4P3je6u94TWveMkLnvOMpzzhMY94yAPu
c4+73OE2t7jJDa5zjatc4TKXuMgFznOOs5zhNKeI4SQnOE40xzjKEQ5ziINE
cYD97GMve9jNLnayg+1sI5KtbGEzFeR9k/4OPlzCdg==
             
             "]]}]}, {}, {}}, {{}, {}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwl0gdXjgEAhuHXKpkRQtZnlpkVWSllFyoyEn0ZIYVkz8hu2DIjMkrZe/w1
V8c5z/UDnnPuULgsu7RDEAR/mdcxCCzoRGe6EEEkXYmiG93pQU960Zto+tCX
GPrRnwHEMpBBDCaOIQxlGMMZQYiRjGI0YxjLOOJJYDwTmMgkJjOFRKYyjenM
YCZJzGI2ycxhbvtX5rOAFBaSShqLSCeDxSxhKctYzgpWkkkWq1jNGrLJIZe1
rCOP9WxgI5vIZzMFbGErhYQpYhvb2cFOitnFbvZQwl5KKWMf+zlAOQep4BCH
OcJRjnGcE5zkFKc5w1kqOcd5qrjARS5xmStc5RrV1FBLHde5wU1ucZs73OUe
9dznAQ95xGOe0MBTntHIc17QxEte8Zo3NNPCW1pp4x3v+cBHPvGZL3zlG9/5
wU9+8Zs/wf/2/wEem0pQ
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwV0ldbiAEAhuGvkogoRMOoZGWPUKREZachI4qsCGWvv+bEjGSPyCghFRHJ
XreD+3rO3+tNrqotPhQSBME5skKD4Lxe4CKXuMwV6rnKNRq4TiM3uMktbnOH
u9zjPg94SBOPeEwzT3jKM57TQisvaOMlr3hNO2/ooJMu3vKObt7zgR4+8ole
PtPHF77yje/84Ce/+M0f/hIYIoRQwuhHOP2JYAADiWQQg4liCEOJJoZhDGcE
sYxkFHHEk0AioxnDWMaRRDIpjCeVCUxkEpOZQhpTmcZ0ZjCTWcxmDnOZRzrz
WcBCMshkEYvJYgnZ5LCUXJaxnDzyKWAFK1nFatawlnUUsp4iiimhlA2UsZFN
bGYL5WxlGxVUsp0dVLGTXexmD3upZh/7qeEAB/l/4FrqOMwRjnKM45zgJKc4
zRnO8g/2g1gV
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwN0tdaiAEAgOG/JNGgjGRHoaxk8zwuwiW4AK7AHhWKsoUiQkZWRlb2aCCF
ZES2zJAZ78F78J1/iTNnz5gVEgRBBdNDg2COmMs85rOAhSxiMUtYSgaZZLGM
5awgmxxWsopc8ljNGtayjvVsYCObyGczW9hKAYVsYztF7GAnxexiN3soYS/7
2M8BSjnIIQ5zhKOUcYzjnOAk5ZziNGc4yzkqOM8FLnKJy1zhKte4zg0qqaKa
Gm5yi9vUcoc66rnLPe7TwAMaecgjHvOEJp7yjGae84KXvOI1b3jLO1p4zwc+
8onPfKGVr3zjO2384Ce/+M0f/tLOPwI/hBBKB8LoSDidiKAzXYgkimhi6Eo3
YomjOz3oSS/i6U0CfehLP/ozgIEMIpHBDCGJZIYyjOGkkMoIRjKK0YwhjbGk
M47xTGAik5jMFKYyjf+j/WvT
           "]]}}}], {}, {}, {{}, {}}}, {{}, 
      GraphicsComplexBox[CompressedData["
1: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
8Hz8huzVPF6C58foX8xsJLvg+Qfhz5Ol1B/B87kWK1494PjF4pMy0VuLyhc8
P/HA67lXqL2C59u1Ohke5vvXWDR7rP17B49PLHw7hmwr4Pv/WGjE7VUcpfEV
PG+fM7Ylj8oXPG81IMkriLTg+RkRk9xKuH4pJlquPmJI/RE8b3PTOduI4iN4
/qSpkZkdj48Uj652/3yd/AXPZxaWahVR/wTP+56fptSn/giej/iySKOA65eh
OXmAE8dX8PySlT+2tfP9swwmly4eN6P5I3j+Y/O8pBTuvwyn795pP0bfC563
nP2ibyfONxnKFZu3DKT+CJ4Pqvzwz1tqv+D5BZUqz5vUPsHzd7utty3m9UgO
m+Ut59/QfBY87zXbustBnt9yTIr6dCSA4y9Hztgpmb6UP4Lnx4SNcNxC7RM8
/7a969eHPP6C37vET3AkLXge77RctnE+KxBfWXn5Gc0XwfOJ42ZfVHL8FVCo
e5TuoXwTPG89IKXPO17vFVi1zuTaKu6/Ahd2t1SO5Pgr0bVHS/d4mt+C52+U
zk0v5f4rxX4j/X02vz8p0X+TcZQPv08q0eP+Iassfn9RYrGV58Yh/F6sxJ13
u3Qf0foieP6CQmfhU16/Vfip427OJ35/UKGT/+4+jfz+o8Jvo6T+LeQveL62
cZdvI69vKiz9xvIbfg8VPN99+ncJTsRDguffNa85d5HfH1ToXN6cd5nX7zjE
G9u4p1I+CZ7P8pJcjOL1OA5XPG53CqTxEzy/beX2irf8/hGHSvmk9npqj+D5
gsDptda8Xwn7VtW9n/n9LQ6xjTti1bz/x8PMsbEukN//4rF13nPDDpGP5rue
v+2/ejyI56tnfu/eZDWJdep487zo3LGs/wt9IJBo
       
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[0, 0, 1], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl1GWQFgQQBuD7jm44ujnq6BZQaURCQbpLBCUUBASlO0WlEUSRULobJe+O
OroPju7uzmeGH8/u7P7bmXc2tE2Xup2Dg4KCAvRWfqKURa/A+7kPfelHfwYw
kEEMZghDGcZwRjCSUYzmZ8bwC7/yG2MZx3gmMJFJTGYKvzOVafzBdP7kL2bw
NzOZxWzm8A//Mpd5zGcBC1nEYpawlGUsZwUrWcVq1rCWdaxnA//xPxvZxGa2
sJVthBNBJNvZwU52sZso9rCXfeznAAc5xGGOcJRjHOcE0ZzkFDGc5gxnOcd5
LnCRS1zmCle5xnVucJNb3OYOd7nHfR7wkEc85glPecZzXvCSV7zmDW8Jko8A
wcQiNnGISzzik4CEJCIxSUhKMpKTghBSkorUpCEt6UhPBjKSicxkISvZCCU7
OchJLnITRh7yko/8FKAghShMEYpSjOKU4Ed39aQHP9CdbnTle7rQme/4lk50
pAPt+YavaUdbvqINX9KaVrSkBc1pRlOa0JhGNKQB9alHXepQmy+oRU0+5zNq
UJ1qVOVTqvAJlalERSpQnnKUpQwf8xEfUppSlOQDSlCcYhSlCIUpREEKkJ98
5CUPYeQmFznJQXZCyUZWspCZTGQkA+lJR1rSkJpUpCSEFCQnGUlJQmISkZAE
xCcecYlDbGIRTCDw/rm91d7wmle85AXPecZTnvCYRzzkAfe5x13ucJtb3OQG
17nGVa5wmUtc5ALnOcdZznCaGE5xkmhOcJxjHOUIhznEQQ6wn33sZQ9R7GYX
O9nBdiKJIJxtbGULm9lESVnfqL8DuYvDCA==
             
             "]]}]}, {}, {}}, {{}, {}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.4]], 
          LineBox[CompressedData["
1:eJwl0gdTyAEAxuE/mUnKFlIpm4iQomSPRPaolBCpjKyyisgKISul7LJTMj6c
x7l7nw/w3v1iC8tzynoFQfCH5N5BYEEIfehLP/ozgIGEMogwBhPOECKIZCjD
GM4IRjKK0YwhirGMYzzRTCCGWOKYSDwJTGIyU5jKNKYzg5nMIpHZzCGJucz7
94f5LGAhKSwilTQWs4R0MlhKJstYzgpWsorVrGEt61hPFhvIZiObyGEzW9jK
Nrazg53sYjd7yCWPfPZSQCH7KGI/BzhIMYc4TAlHKKWMco5yjOOcoIKTnOI0
ZzhLJVWc4zwXuMglqqnhMleo5SrXqOM6N7jJLW5Tzx3uco8G7vOAhzTyiMc8
4SnPaOI5zbTwglbaeMkrXvOGt7zjPe108IGPfOIzX/jKNzr5Thfd/KCHn/zi
d/C/97+OI0gM
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.4]], 
          LineBox[CompressedData["
1:eJwV0mdXiAEAhuG3jCijMrKpyCxCZURKU2ZmGRGRmVV+XOeUEZIQhWRnZpaR
yrx8uM79/TlPbFll0YmQIAhqSA0Nglqt4zwXuMgl6rnMFa7SwDUauU4TN7jJ
LZq5zR1aaOUu97hPGw9o5yGPeMwTnvKM53Twgpe84jVveEsn73jPBz7yic90
0c0XvvKN7/Twg1766Ocnv/jNH/4SGCWEUAYwkEEMJowhDCWcCIYxnBGMJJIo
ohnFaMYwlhjGMZ4JTGQSk5nCVKYRSxzxTGcGCcxkFrOZw1zmkUgS81lAMgtZ
xGJSSCWNJSxlGctJZwUryWAVmWSxmmxyyCWPfApYQyFrWcd6NrCRTRSxmS1s
ZRvb2UExJexkF7vZQyl72UcZ+zlAOQc5RAWHOcJRjnGc/2eu5CSnOM0ZzlJF
Nef4BwIBWGA=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.4]], 
          LineBox[CompressedData["
1:eJwN0ldbjgEAgOH3+xIhInuUImVlX5f/4Sf4ARyHQmVkhrKLELKL7IiMkpmd
TRkRyhbqPrgPnvMnccas6TNDQRBUMC0cBGliNnOYSzoZzGM+C8gki2wWsojF
LCGHpSxjOStYySpyWc0a1pJHPutYzwY2sonNbKGAQrayjSK2s4OdFLOL3eyh
hL3sYz8HOMghDlNKGUc4SjnHOM4JTnKK05yhgrOco5LzXKCKi1ziMleopoar
1HKN69zgJre4TR13uMs97vOAhzyinsc84SnPeM4LXvKK1zTQyBve8o73NPGB
jzTzic98oYVWvvKN7/zgJ7/4zR/a+Ms//tNO4I8QYSLoRCSd6UIUXelGd6Lp
QU9i6EVvYulDX/rRnwEMZBCDGcJQ4ohnGAkkMpwRJDGSZFIYxWjGMJZxpDKe
CUxkEpOZwlQ6AJk1bCE=
           "]]}}}], {}, {}, {{}, {}}}, {{}, 
      GraphicsComplexBox[CompressedData["
1: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
       
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[0, 0, 1], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl1GV7EAQUBeBt5KjRjBqM0TVGx+gaDaNLBVtJJSQUlTBo7BZMUsGWsAB1
Yyzo7hgjx9ioDV8fPrzn/oDznBs+enzsuKCAgIBAlok3eJO3eJt3eJf3eJ8P
+JCP+JhP+JTlrOAzPucLvuQrvmYlq1jNGtayjm/4lvVs4Du+5wd+5Cd+5hd+
ZSOb2MwWfuN3/uBP/mIr29jO3/zDv8QRzw4S2EkiSSSTwi52s4e97GM/BzjI
IQ5zhKMc4zgnOMkpTnOGs5zjPKlcII2LXOIyV7jKNdK5TgY3yCSLm9ziNne4
SzY53Pu/OAUGEkQucpOHvOQjP8EUoCCFKEwRQihKMYpTgpKUojRlCKUs5ShP
BSoSRiUqE04VIqhKNapTg5rUojZ1qEs96hNJA6JoSCMa04SmNKM5LWhJK6Jp
TRva0o72dKAjnehMF7oSQze604Oe9KI3fehLP2LpzwAGMojBDGEowxgedH8n
S1nCYhaxkAXM53Ve41VeYR5zmcNsXuYlXmQWL/A8M5nBdKbxHFOZwmQm8SzP
MJEJjGccYxnD0zzFkzzB4zzGozzCw4xmFA/xIA8wkhEMZxhDGcJgBjGQAfQn
ln70pQ+96UVPetCdbsTQlS50phMd6UB72tGWNrQmmla0pAXNaUZTmtCYRjQk
igZEUp961KUOtalFTWpQnWpUJYIqhFOZSoRRkQqUpxxlCaUMpSlFSUpQnGIU
JYQiFKYQBSlAMPnJR17ykJtcBBEYeP/p3nNyyOYud7jNLW6SRSY3yOA66Vzj
Kle4zCUuksYFUjnPOc5yhtOc4iQnOM4xjnKEwxziIAfYzz72sofd7CKFZJJI
ZCcJ7CCeOP4DZDzEDg==
             "]]}]}, {}, {}}, {{}, {}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          
          LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
           18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
            35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
            68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 
           84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 
           100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 
           113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 
           126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 
           139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 
           152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 
           165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 
           178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 
           191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201}]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1:eJwV0mdbDQAAgNF7yS47ISsjI2STbBmFkD3jZo8iI0V2KLt/lVD2XpGRyKyM
cHw4P+B9njcmlJWWGQwEAiVcoZSrXOM6ZZRzg5vc4jZ3uMs97vOAhzziMU94
yjOe84IKXvKKSl7zhre8o4r3VPOBj9Twic984Svf+E4tddTzg5/84jcN/OEv
AYFBGtGYMJrQlGY0pwUtaUU4EbSmDW1pR3s60JFIOhFFZ7rQlWi60Z0e9KQX
MfSmD33pRyz9GcBABhHHYIYwlHiGMZwRjGQUoxnDWMaRwHgSmcBEJjGZKUxl
GtNJYgYzmcVskklhDnOZRyrzWcBC0ljEYpawlGUsZwUrWcVq1rCWdNaxnhAZ
bGAjm9jMFrayje3sYCf/x8xiF7vJZg972cd+cjhALnkc5BD5HOYIRznGcU5w
kgJOcZozFFLEWc5xngtc5BKXKeYfhztdLg==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1:eJwV0VdbiAEAgNGvIVs2ySgje4SQrWWXQhl3fgA/xt4jOzJDRjZlZ0tkZkVG
yHa6OM/z3r+xCxZlLQwJgqCExWIJS1nGclawklWsZg1rWcd6NrCRTeSymS1s
ZRvb2cFO8tjFbvLZw172sZ8DHKSAQxzmCIUc5RjHOUERJznFac5wlnOc5wIX
KaaES1zmCle5xnVuUMpNbnGbO9zlHvd5QBkPKecRj6ngCU95xnNe8JJKXvGa
N7zlHVW85wPVfOQTn/lCDV/5xndq+cFPfvGbP/zlX9240CAIIZQwwqlHBPVp
QEMa0ZgmNKUZkTSnBS1pRWva0JZ2tCeKDkTTkU50pgsxxNKVbnSnB3H0pBe9
6UNf+tGfAQxkEPEMZghDSWAYwxlBIiMZxWjGMJZxjGcCSSSTQippTGQSk5nC
VKYxnXQymEEmWcxkFrPJJoc5zGUe8/kPWK1pkQ==
           
           "]]}}}], {}, {}, {{}, {}}}}, {
    PlotRange -> {0, 0.5}, Frame -> True, FrameLabel -> {
       FormBox["\"Host generations\"", TraditionalForm], 
       FormBox["\"Host heterozygosity\"", TraditionalForm]}, Axes -> False, 
     DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0., 0.4807875749281727}, 
     PlotRange -> {{0., 201.}, {0.4811540233378749, 0.48848299153191754`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0., 0.4807875749281727}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 201.}, {0.4811540233378749, 0.48848299153191754`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Neutral\"", "\"Coevolutionary, S=0.65\"", 
       "\"Coevolutionary, S=0.8\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Opacity[0.2], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Opacity[0.2], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Opacity[0.4]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Opacity[0.4]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.2`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.4`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.861881897494021*^9, 3.861881939550918*^9, 
  3.861882046406357*^9, 3.861887722027791*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"leg3", "=", 
  RowBox[{"LineLegend", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{"Blue", ",", 
        RowBox[{"Opacity", "[", "0.2", "]"}], ",", "Dashed"}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{"Red", ",", 
        RowBox[{"Opacity", "[", "0.2", "]"}], ",", "Dashed"}], "]"}], ",", 
      RowBox[{"Directive", "[", "Blue", "]"}], ",", 
      RowBox[{"Directive", "[", "Red", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Neutral, V=0.2\>\"", ",", "\"\<Neutral, V=0.5\>\"", ",", 
      "\"\<Coevolutionary, V=0.2\>\"", ",", "\"\<Coevolutionary, V=0.5\>\""}],
      "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"g2", "=", 
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"mean", "[", "parsN", "]"}], ",", 
        RowBox[{
         RowBox[{"mean", "[", "parsN", "]"}], "+", 
         FractionBox[
          RowBox[{"2", 
           RowBox[{"SD", "[", "parsN", "]"}]}], 
          RowBox[{"Sqrt", "[", "2000", "]"}]]}], ",", 
        RowBox[{
         RowBox[{"mean", "[", "parsN", "]"}], "-", 
         FractionBox[
          RowBox[{"2", 
           RowBox[{"SD", "[", "parsN", "]"}]}], 
          RowBox[{"Sqrt", "[", "2000", "]"}]]}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Blue", ",", 
         RowBox[{"Opacity", "[", "0.2", "]"}], ",", "Dashed"}], "]"}]}], ",", 
      
      RowBox[{"Filling", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"2", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "3", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Directive", "[", 
             RowBox[{"Blue", ",", 
              RowBox[{"Opacity", "[", "0.1", "]"}]}], "]"}], "}"}]}], "}"}]}],
         "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"mean", "[", "parsN3", "]"}], ",", 
        RowBox[{
         RowBox[{"mean", "[", "parsN3", "]"}], "+", 
         FractionBox[
          RowBox[{"2", 
           RowBox[{"SD", "[", "parsN3", "]"}]}], 
          RowBox[{"Sqrt", "[", "2000", "]"}]]}], ",", 
        RowBox[{
         RowBox[{"mean", "[", "parsN3", "]"}], "-", 
         FractionBox[
          RowBox[{"2", 
           RowBox[{"SD", "[", "parsN3", "]"}]}], 
          RowBox[{"Sqrt", "[", "2000", "]"}]]}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Red", ",", 
         RowBox[{"Opacity", "[", "0.2", "]"}], ",", "Dashed"}], "]"}]}], ",", 
      
      RowBox[{"Filling", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"2", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "3", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Directive", "[", 
             RowBox[{"Red", ",", 
              RowBox[{"Opacity", "[", "0.1", "]"}]}], "]"}], "}"}]}], "}"}]}],
         "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"mean", "[", "pars1", "]"}], ",", 
        RowBox[{
         RowBox[{"mean", "[", "pars1", "]"}], "+", 
         FractionBox[
          RowBox[{"2", 
           RowBox[{"SD", "[", "pars1", "]"}]}], 
          RowBox[{"Sqrt", "[", "2000", "]"}]]}], ",", 
        RowBox[{
         RowBox[{"mean", "[", "pars1", "]"}], "-", 
         FractionBox[
          RowBox[{"2", 
           RowBox[{"SD", "[", "pars1", "]"}]}], 
          RowBox[{"Sqrt", "[", "2000", "]"}]]}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Blue", ",", 
         RowBox[{"Opacity", "[", "0.4", "]"}]}], "]"}]}], ",", 
      RowBox[{"Filling", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"2", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "3", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Directive", "[", 
             RowBox[{"Blue", ",", 
              RowBox[{"Opacity", "[", "0.2", "]"}]}], "]"}], "}"}]}], "}"}]}],
         "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"mean", "[", "pars3", "]"}], ",", 
        RowBox[{
         RowBox[{"mean", "[", "pars3", "]"}], "+", 
         FractionBox[
          RowBox[{"2", 
           RowBox[{"SD", "[", "pars3", "]"}]}], 
          RowBox[{"Sqrt", "[", "2000", "]"}]]}], ",", 
        RowBox[{
         RowBox[{"mean", "[", "pars3", "]"}], "-", 
         FractionBox[
          RowBox[{"2", 
           RowBox[{"SD", "[", "pars3", "]"}]}], 
          RowBox[{"Sqrt", "[", "2000", "]"}]]}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", "Red", "]"}]}], ",", 
      RowBox[{"Filling", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"2", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "3", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Directive", "[", 
             RowBox[{"Red", ",", 
              RowBox[{"Opacity", "[", "0.2", "]"}]}], "]"}], "}"}]}], "}"}]}],
         "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", " ", "All"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Host generations\>\"", ",", "\"\<Host heterozygosity\>\""}], 
      "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", " ", "False"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.861872943454239*^9, 3.861872988412517*^9}, {
   3.8618730190911407`*^9, 3.861873031765658*^9}, 3.861875135152529*^9, 
   3.861875246387599*^9, {3.861877485849504*^9, 3.861877621516144*^9}, {
   3.8618786068557673`*^9, 3.861878607624323*^9}, {3.861878746786591*^9, 
   3.8618788605557737`*^9}, 3.861880148666931*^9, {3.861880204661125*^9, 
   3.8618802237643557`*^9}, {3.8618802543724213`*^9, 3.861880257364853*^9}, {
   3.8618802933268957`*^9, 3.8618802934447117`*^9}, {3.861881477301523*^9, 
   3.861881515711733*^9}}],

Cell[BoxData[
 TemplateBox[{
  "\"Neutral, V=0.2\"","\"Neutral, V=0.5\"","\"Coevolutionary, V=0.2\"",
   "\"Coevolutionary, V=0.5\""},
  "LineLegend",
  DisplayFunction->(StyleBox[
    StyleBox[
     PaneBox[
      TagBox[
       GridBox[{{
          TagBox[
           GridBox[{{
              GraphicsBox[{{
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1], 
                  Opacity[0.2], 
                  Dashing[{Small, Small}]], {
                  LineBox[{{0, 10}, {40, 10}}]}}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1], 
                  Opacity[0.2], 
                  Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
               ImageSize -> {40, 10}, PlotRangePadding -> None, ImagePadding -> 
               Automatic, BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
              GraphicsBox[{{
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0, 0], 
                  Opacity[0.2], 
                  Dashing[{Small, Small}]], {
                  LineBox[{{0, 10}, {40, 10}}]}}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0, 0], 
                  Opacity[0.2], 
                  Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
               ImageSize -> {40, 10}, PlotRangePadding -> None, ImagePadding -> 
               Automatic, 
               BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
              GraphicsBox[{{
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1]], {
                  LineBox[{{0, 10}, {40, 10}}]}}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
               ImageSize -> {40, 10}, PlotRangePadding -> None, ImagePadding -> 
               Automatic, 
               BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
              GraphicsBox[{{
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0, 0]], {
                  LineBox[{{0, 10}, {40, 10}}]}}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
               ImageSize -> {40, 10}, PlotRangePadding -> None, ImagePadding -> 
               Automatic, 
               BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
            GridBoxAlignment -> {
             "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "Columns" -> {{False}}, "Rows" -> {{False}}}, 
            GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
           "Grid"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
      Alignment -> Left, AppearanceElements -> None, 
      ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
     LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
    Background -> Automatic, StripOnInput -> False]& ),
  Editable->True,
  InterpretationFunction:>(RowBox[{"LineLegend", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
           RowBox[{"Directive", "[", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
               ",", 
               RowBox[{"Opacity", "[", "0.2`", "]"}], ",", 
               RowBox[{"Dashing", "[", 
                 RowBox[{"{", 
                   RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
           ",", 
           RowBox[{"Directive", "[", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
               ",", 
               RowBox[{"Opacity", "[", "0.2`", "]"}], ",", 
               RowBox[{"Dashing", "[", 
                 RowBox[{"{", 
                   RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
           ",", 
           RowBox[{"Directive", "[", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[0, 0, 1], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
               ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 0, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
             "]"}], ",", 
           RowBox[{"Directive", "[", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[1, 0, 0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
               ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], "]"}
            ]}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]], "Output",\

 CellChangeTimes->{
  3.86187840657825*^9, 3.861878861157926*^9, 3.861880149245852*^9, {
   3.86188020517761*^9, 3.861880224072468*^9}, 3.8618802576949463`*^9, 
   3.861880293983554*^9, 3.861881520873999*^9, 3.8618820544239807`*^9, 
   3.861888038875646*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, GraphicsComplexBox[CompressedData["
1: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
CYqMSP4/u1C7rQ==
     
     "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
       {RGBColor[0, 0, 1], Opacity[0.1], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1GWQFgQQBuD7ju6uIw84uo/uFEFBQhQF6Y6jURqlU0BCkFBBAQEDUFLy
6DrygKO7u/uZ4cezO7v/duadDW3VrUFEcFBQUIDBykAqWgwKvJ+HMJRv+Y5h
DGcEIxnFaMYwlnGMZwIT+Z5JTGYKPzCVaUxnBj8yk1n8xGzmMJd5/Mwv/Mp8
FvAbv7OQRSzmD5awlGX8yV/8zT8sZwUr+Zf/WMVq1rCWdaznfzawkU1sZgtb
iWQb29nBTnaxmz3sZR/7OUAUBznEYY5wlGNEc5wTnCSGU5zmDGc5x3kucJFL
XOYKV7nGdW5wk1vc5g53ucd9HvCQRzzmCU95xnNe8JJXvOYNbwmShwDBxCI2
cYhLPOKTgIQkIjFJSEoykpOClKQiNWlISzrSk4EQMpKJzGQhK9kIJTs5yEkY
uchNHvKSj/wUoCCFKEwRilKMcIpTgpKUojRlKEs5Bri5P/34hq/pSx9604ue
9KA73YigK13oTCc60oH2tKMtbWhNK1rSguY04yua0oQv+YLGfM5nNOJTGtKA
+tTjE+pSh4/5iNrU4kNq8gE1qE41qlKFylSiIhUoTznKUobSlKIkJShOOMUo
ShEKU4iCFCA/+chLHnKTizBykoPshJKNrGQhM5nISAgZSE860pKG1KQiJSlI
TjKSkoTEJCIhCYhPPOISh9jEIphA4P3je6u94TWveMkLnvOMpzzhMY94yAPu
c4+73OE2t7jJDa5zjatc4TKXuMgFznOOs5zhNKeI4SQnOE40xzjKEQ5ziINE
cYD97GMve9jNLnayg+1sI5KtbGEzFeR9k/4OPlzCdg==
          
          "]]]}, {}, {}}, {{}, {}, {}, 
       {RGBColor[0, 0, 1], PointSize[0.011111111111111112`], 
        AbsoluteThickness[1.6], Opacity[0.2], Dashing[{Small, Small}], 
        LineBox[CompressedData["
1:eJwl0gdXjgEAhuHXKpkRQtZnlpkVWSllFyoyEn0ZIYVkz8hu2DIjMkrZe/w1
V8c5z/UDnnPuULgsu7RDEAR/mdcxCCzoRGe6EEEkXYmiG93pQU960Zto+tCX
GPrRnwHEMpBBDCaOIQxlGMMZQYiRjGI0YxjLOOJJYDwTmMgkJjOFRKYyjenM
YCZJzGI2ycxhbvtX5rOAFBaSShqLSCeDxSxhKctYzgpWkkkWq1jNGrLJIZe1
rCOP9WxgI5vIZzMFbGErhYQpYhvb2cFOitnFbvZQwl5KKWMf+zlAOQep4BCH
OcJRjnGcE5zkFKc5w1kqOcd5qrjARS5xmStc5RrV1FBLHde5wU1ucZs73OUe
9dznAQ95xGOe0MBTntHIc17QxEte8Zo3NNPCW1pp4x3v+cBHPvGZL3zlG9/5
wU9+8Zs/wf/2/wEem0pQ
         "]]}, 
       {RGBColor[0, 0, 1], PointSize[0.011111111111111112`], 
        AbsoluteThickness[1.6], Opacity[0.2], Dashing[{Small, Small}], 
        LineBox[CompressedData["
1:eJwV0ldbiAEAhuGvkogoRMOoZGWPUKREZachI4qsCGWvv+bEjGSPyCghFRHJ
XreD+3rO3+tNrqotPhQSBME5skKD4Lxe4CKXuMwV6rnKNRq4TiM3uMktbnOH
u9zjPg94SBOPeEwzT3jKM57TQisvaOMlr3hNO2/ooJMu3vKObt7zgR4+8ole
PtPHF77yje/84Ce/+M0f/hIYIoRQwuhHOP2JYAADiWQQg4liCEOJJoZhDGcE
sYxkFHHEk0AioxnDWMaRRDIpjCeVCUxkEpOZQhpTmcZ0ZjCTWcxmDnOZRzrz
WcBCMshkEYvJYgnZ5LCUXJaxnDzyKWAFK1nFatawlnUUsp4iiimhlA2UsZFN
bGYL5WxlGxVUsp0dVLGTXexmD3upZh/7qeEAB/l/4FrqOMwRjnKM45zgJKc4
zRnO8g/2g1gV
         "]]}, 
       {RGBColor[0, 0, 1], PointSize[0.011111111111111112`], 
        AbsoluteThickness[1.6], Opacity[0.2], Dashing[{Small, Small}], 
        LineBox[CompressedData["
1:eJwN0tdaiAEAgOG/JNGgjGRHoaxk8zwuwiW4AK7AHhWKsoUiQkZWRlb2aCCF
ZES2zJAZ78F78J1/iTNnz5gVEgRBBdNDg2COmMs85rOAhSxiMUtYSgaZZLGM
5awgmxxWsopc8ljNGtayjvVsYCObyGczW9hKAYVsYztF7GAnxexiN3soYS/7
2M8BSjnIIQ5zhKOUcYzjnOAk5ZziNGc4yzkqOM8FLnKJy1zhKte4zg0qqaKa
Gm5yi9vUcoc66rnLPe7TwAMaecgjHvOEJp7yjGae84KXvOI1b3jLO1p4zwc+
8onPfKGVr3zjO2384Ce/+M0f/tLOPwI/hBBKB8LoSDidiKAzXYgkimhi6Eo3
YomjOz3oSS/i6U0CfehLP/ozgIEMIpHBDCGJZIYyjOGkkMoIRjKK0YwhjbGk
M47xTGAik5jMFKYyjf+j/WvT
         "]]}}}], {}, {}, {{}, {}}}, {{}, 
    GraphicsComplexBox[CompressedData["
1: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
fu2X6XJ/CMv/B6e4q74=
     
     "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
       {RGBColor[1, 0, 0], Opacity[0.1], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1FWQFgQUBtD9l+5dumGX7u6WklBKQAVplO5SQkGRLmkMQklpi5BuFlhq
6Yall+4+Mzyc+818b3fmzg1r071ht+CgoKAAg41vKKcYKAcF3ndD+JbvGMow
vucHhvMjIxjJKEYzhrGMYzwTmMgkfmIyU5jKNKYzg5nM4md+4Vd+YzZzmMs8
fucP5rOAhSxiMUv4k6UsYzkrWMkqVvMXf/MP//Ifa1jLOtbzPxvYyCY2s4Wt
bGM7O9jJLnazh71EsI/9HCCSgxziMEc4ShTHOM4JTnKK05zhLOc4zwUuconL
XCGaq1zjOje4yS1uE8Md7nKP+zzgIY94zBOe8oznvOAlr3jNG94S5C4CBBOL
2MQhLvGITwISkojEJCEpyQghlOSkICWpSE0a0pKO9GQgI5nITBayEkY42chO
DnKSi9zkIS/5yE8BClKIwhShKMUoTglKUorSfG3PAfSnH33pQ2960ZMedKcb
XelCZzrRkQ58xZe0px1taUNrWtGSFnxBc5rxOZ/xKU1pQmM+oRENaUB96vEx
H1GXOtSmFh9SkxpUpxpV+YAqVKYSFalAecpRljKUphQlKUFxilGUIhSmEAUp
QH7ykZc85CYXOclBdrIRThhZyUJmMpGRDKQnHWlJQ2pSkZIUJCeUEJKRlCQk
JhEJSUB84hGXOMQmFsEEAu+f3Vvxhte84iUveM4znvKExzziIQ+4zz3ucocY
bnOLm9zgOte4SjRXuMwlLnKB85zjLGc4zSlOcoLjHCOKoxzhMIc4SCQH2M8+
ItjLHnazi53sYDvb2MoWNrOJsu59o3wHsgTDOA==
          
          "]]]}, {}, {}}, {{}, {}, {}, 
       {RGBColor[1, 0, 0], PointSize[0.011111111111111112`], 
        AbsoluteThickness[1.6], Opacity[0.2], Dashing[{Small, Small}], 
        LineBox[CompressedData["
1:eJwl0gdTyAEAxuF/ITMhm1SyMyuyi6xQKCObMlIpkZK9JWSEUsqeEUVkfTdP
1937fID37hebW5JVHBIEwT8WhAaBBT3oSS/C6E0f+tKP/gwgnIFEMIjBDCGS
oQxjOCMYyShGM4axRDGOaGKIZTxxTGAik5jMFKYyjXimM4OZzGI2c0ggkSTm
Mo9k5nf9YyGLWMwSlpJCKstYThorWMkqVrOGdNayjvVkkMkGNrKJLLLZzBa2
so0ctrODnexiN3vYyz72k0seBzjIIQ6TzxEKKKSIoxRTwjFKOc4JyjhJORWc
opLTnOEs5zjPBS5yictc4SrXuM4NqrhJNbe4zR1quMs97vOAWh7yiMfUUc8T
GmjkKU0084znvOAlr3jNG97yjvd84CMtfOIzrXzhK220843vdPCDn3Tyi9/8
4W/Q3fx/wB5Izg==
         "]]}, 
       {RGBColor[1, 0, 0], PointSize[0.011111111111111112`], 
        AbsoluteThickness[1.6], Opacity[0.2], Dashing[{Small, Small}], 
        LineBox[CompressedData["
1:eJwV0mdXiAEAhuG3MssoI6RoGQlZoTKjRBERsssoopDVf3OOHWXvykqSnQhF
1tWH69zfn/MklFUXVYUEQXCWzNAgOKfnucBFLnGZK9RxlWvU08B1bnCTW9zm
Dne5x30e8JBHPKaRJpp5wlOe8ZwXtPCSVl7RxmvaecNb3vGeD3zkEx18ppMv
fKWLb3znB9308JNf9PKbP/zlH4FBQggljH70ZwADGcRgwolgCEMZxnAiiWIE
IxnFaKIZw1jGEcN4YoljAhOJJ4FEkkhmEpOZwlRSmEYq05nBTNKYxWzmMJd5
pDOfBSwkg0yyWMRilrCUZSwnmxWsJIdcVpHHataQTwFrWUch69lAERvZRDGb
2cJWStjGdnawk13sZg+llLGXfeznAOVUcJBDVHKYI/QduZqjHOM4NZzgJKc4
zRlq+Q+gp1ia
         "]]}, 
       {RGBColor[1, 0, 0], PointSize[0.011111111111111112`], 
        AbsoluteThickness[1.6], Opacity[0.2], Dashing[{Small, Small}], 
        LineBox[CompressedData["
1:eJwN0tdaiAEAgOG/EBlZEcrIbBjJfB534RJcgC5AStmFRMPOLCSSLWSPysoq
MyujiGwS78F78J1/sXNSZs8NCYKgilmhQTBPpDKfNNJZQAaZLGQRi1nCUpax
nCyyWcFKVpHDanJZw1ryyKeAQtaxng1sZBOb2UIRW9nGdnawk10UU8Ju9rCX
UvZRxn4OUM5BKjjEYY5wlGMc5wQnqeQUpzlDFWc5x3kucJFLXOYKV7lGNTXU
cp0b3OQWt6njDne5x30eUE8DD3nEY57wlGc08pwXvOQVr2niDW95x3uaaeED
H2nlE59p4wtf+cZ3fvCTX/zmD+38pYN/BL4IIZROdKYLYXSlG+F0pwc96UUE
velDX/rRn0gGMJAoBjGYIUQTw1CGMZwRxDKSUYxmDGMZRxzxJJDIeCYwkUkk
MZlkpjCVaUxnBjP5D4PHbBQ=
         "]]}}}], {}, {}, {{}, {}}}, {{}, 
    GraphicsComplexBox[CompressedData["
1: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
     
     "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
       {RGBColor[0, 0, 1], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1GV7EAQUBeBt5KjRjBqM0TVGx+gaDaNLBVtJJSQUlTBo7BZMUsGWsAB1
Yyzo7hgjx9ioDV8fPrzn/oDznBs+enzsuKCAgIBAlok3eJO3eJt3eJf3eJ8P
+JCP+JhP+JTlrOAzPucLvuQrvmYlq1jNGtayjm/4lvVs4Du+5wd+5Cd+5hd+
ZSOb2MwWfuN3/uBP/mIr29jO3/zDv8QRzw4S2EkiSSSTwi52s4e97GM/BzjI
IQ5zhKMc4zgnOMkpTnOGs5zjPKlcII2LXOIyV7jKNdK5TgY3yCSLm9ziNne4
SzY53Pu/OAUGEkQucpOHvOQjP8EUoCCFKEwRQihKMYpTgpKUojRlCKUs5ShP
BSoSRiUqE04VIqhKNapTg5rUojZ1qEs96hNJA6JoSCMa04SmNKM5LWhJK6Jp
TRva0o72dKAjnehMF7oSQze604Oe9KI3fehLP2LpzwAGMojBDGEowxgedH8n
S1nCYhaxkAXM53Ve41VeYR5zmcNsXuYlXmQWL/A8M5nBdKbxHFOZwmQm8SzP
MJEJjGccYxnD0zzFkzzB4zzGozzCw4xmFA/xIA8wkhEMZxhDGcJgBjGQAfQn
ln70pQ+96UVPetCdbsTQlS50phMd6UB72tGWNrQmmla0pAXNaUZTmtCYRjQk
igZEUp961KUOtalFTWpQnWpUJYIqhFOZSoRRkQqUpxxlCaUMpSlFSUpQnGIU
JYQiFKYQBSlAMPnJR17ykJtcBBEYeP/p3nNyyOYud7jNLW6SRSY3yOA66Vzj
Kle4zCUuksYFUjnPOc5yhtOc4iQnOM4xjnKEwxziIAfYzz72sofd7CKFZJJI
ZCcJ7CCeOP4DZDzEDg==
          "]]]}, {}, {}}, {{}, {}, {}, 
       {RGBColor[0, 0, 1], PointSize[0.008333333333333333], AbsoluteThickness[
        1.6], Opacity[0.4], 
        LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
         18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
         35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
         52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
         69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
         86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 
         102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
          116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 
         129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
          143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 
         156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
          170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 
         183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
          197, 198, 199, 200, 201}]}, 
       {RGBColor[0, 0, 1], PointSize[0.008333333333333333], AbsoluteThickness[
        1.6], Opacity[0.4], LineBox[CompressedData["
1:eJwV0mdbDQAAgNF7yS47ISsjI2STbBmFkD3jZo8iI0V2KLt/lVD2XpGRyKyM
cHw4P+B9njcmlJWWGQwEAiVcoZSrXOM6ZZRzg5vc4jZ3uMs97vOAhzziMU94
yjOe84IKXvKKSl7zhre8o4r3VPOBj9Twic984Svf+E4tddTzg5/84jcN/OEv
AYFBGtGYMJrQlGY0pwUtaUU4EbSmDW1pR3s60JFIOhFFZ7rQlWi60Z0e9KQX
MfSmD33pRyz9GcBABhHHYIYwlHiGMZwRjGQUoxnDWMaRwHgSmcBEJjGZKUxl
GtNJYgYzmcVskklhDnOZRyrzWcBC0ljEYpawlGUsZwUrWcVq1rCWdNaxnhAZ
bGAjm9jMFrayje3sYCf/x8xiF7vJZg972cd+cjhALnkc5BD5HOYIRznGcU5w
kgJOcZozFFLEWc5xngtc5BKXKeYfhztdLg==
         "]]}, 
       {RGBColor[0, 0, 1], PointSize[0.008333333333333333], AbsoluteThickness[
        1.6], Opacity[0.4], LineBox[CompressedData["
1:eJwV0VdbiAEAgNGvIVs2ySgje4SQrWWXQhl3fgA/xt4jOzJDRjZlZ0tkZkVG
yHa6OM/z3r+xCxZlLQwJgqCExWIJS1nGclawklWsZg1rWcd6NrCRTeSymS1s
ZRvb2cFO8tjFbvLZw172sZ8DHKSAQxzmCIUc5RjHOUERJznFac5wlnOc5wIX
KaaES1zmCle5xnVuUMpNbnGbO9zlHvd5QBkPKecRj6ngCU95xnNe8JJKXvGa
N7zlHVW85wPVfOQTn/lCDV/5xndq+cFPfvGbP/zlX9240CAIIZQwwqlHBPVp
QEMa0ZgmNKUZkTSnBS1pRWva0JZ2tCeKDkTTkU50pgsxxNKVbnSnB3H0pBe9
6UNf+tGfAQxkEPEMZghDSWAYwxlBIiMZxWjGMJZxjGcCSSSTQippTGQSk5nC
VKYxnXQymEEmWcxkFrPJJoc5zGUe8/kPWK1pkQ==
         
         "]]}}}], {}, {}, {{}, {}}}, {{}, GraphicsComplexBox[CompressedData["
1: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
5zfebcT9RXjkntDaHZokP/8BLLGJOQ==
     
     "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
       {RGBColor[1, 0, 0], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1GV7EAQUBeBt5KjRjBqM0TVGx+gaDaNLBVtJJSQUlTBo7BZMUsGWsAB1
Yyzo7hgjx9ioDV8fPrzn/oDznBs+enzsuKCAgIBAlok3eJO3eJt3eJf3eJ8P
+JCP+JhP+JTlrOAzPucLvuQrvmYlq1jNGtayjm/4lvVs4Du+5wd+5Cd+5hd+
ZSOb2MwWfuN3/uBP/mIr29jO3/zDv8QRzw4S2EkiSSSTwi52s4e97GM/BzjI
IQ5zhKMc4zgnOMkpTnOGs5zjPKlcII2LXOIyV7jKNdK5TgY3yCSLm9ziNne4
SzY53Pu/OAUGEkQucpOHvOQjP8EUoCCFKEwRQihKMYpTgpKUojRlCKUs5ShP
BSoSRiUqE04VIqhKNapTg5rUojZ1qEs96hNJA6JoSCMa04SmNKM5LWhJK6Jp
TRva0o72dKAjnehMF7oSQze604Oe9KI3fehLP2LpzwAGMojBDGEowxgedH8n
S1nCYhaxkAXM53Ve41VeYR5zmcNsXuYlXmQWL/A8M5nBdKbxHFOZwmQm8SzP
MJEJjGccYxnD0zzFkzzB4zzGozzCw4xmFA/xIA8wkhEMZxhDGcJgBjGQAfQn
ln70pQ+96UVPetCdbsTQlS50phMd6UB72tGWNrQmmla0pAXNaUZTmtCYRjQk
igZEUp961KUOtalFTWpQnWpUJYIqhFOZSoRRkQqUpxxlCaUMpSlFSUpQnGIU
JYQiFKYQBSlAMPnJR17ykJtcBBEYeP/p3nNyyOYud7jNLW6SRSY3yOA66Vzj
Kle4zCUuksYFUjnPOc5yhtOc4iQnOM4xjnKEwxziIAfYzz72sofd7CKFZJJI
ZCcJ7CCeOP4DZDzEDg==
          "]]]}, {}, {}}, {{}, {}, {}, 
       {RGBColor[1, 0, 0], PointSize[0.011111111111111112`], 
        AbsoluteThickness[1.6], 
        LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
         18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
         35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
         52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
         69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
         86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 
         102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
          116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 
         129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
          143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 
         156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
          170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 
         183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
          197, 198, 199, 200, 201}]}, 
       {RGBColor[1, 0, 0], PointSize[0.011111111111111112`], 
        AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwV0mdbDQAAgNF7yS47ISsjI2STbBmFkD3jZo8iI0V2KLt/lVD2XpGRyKyM
cHw4P+B9njcmlJWWGQwEAiVcoZSrXOM6ZZRzg5vc4jZ3uMs97vOAhzziMU94
yjOe84IKXvKKSl7zhre8o4r3VPOBj9Twic984Svf+E4tddTzg5/84jcN/OEv
AYFBGtGYMJrQlGY0pwUtaUU4EbSmDW1pR3s60JFIOhFFZ7rQlWi60Z0e9KQX
MfSmD33pRyz9GcBABhHHYIYwlHiGMZwRjGQUoxnDWMaRwHgSmcBEJjGZKUxl
GtNJYgYzmcVskklhDnOZRyrzWcBC0ljEYpawlGUsZwUrWcVq1rCWdNaxnhAZ
bGAjm9jMFrayje3sYCf/x8xiF7vJZg972cd+cjhALnkc5BD5HOYIRznGcU5w
kgJOcZozFFLEWc5xngtc5BKXKeYfhztdLg==
         "]]}, 
       {RGBColor[1, 0, 0], PointSize[0.011111111111111112`], 
        AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwV0VdbiAEAgNGvIVs2ySgje4SQrWWXQhl3fgA/xt4jOzJDRjZlZ0tkZkVG
yHa6OM/z3r+xCxZlLQwJgqCExWIJS1nGclawklWsZg1rWcd6NrCRTeSymS1s
ZRvb2cFO8tjFbvLZw172sZ8DHKSAQxzmCIUc5RjHOUERJznFac5wlnOc5wIX
KaaES1zmCle5xnVuUMpNbnGbO9zlHvd5QBkPKecRj6ngCU95xnNe8JJKXvGa
N7zlHVW85wPVfOQTn/lCDV/5xndq+cFPfvGbP/zlX9240CAIIZQwwqlHBPVp
QEMa0ZgmNKUZkTSnBS1pRWva0JZ2tCeKDkTTkU50pgsxxNKVbnSnB3H0pBe9
6UNf+tGfAQxkEPEMZghDSWAYwxlBIiMZxWjGMJZxjGcCSSSTQippTGQSk5nC
VKYxnXQymEEmWcxkFrPJJoc5zGUe8/kPWK1pkQ==
         "]]}}}], {}, {}, {{}, {}}}},
  
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->False,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.4807875749281727},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{
    FormBox["\"Host generations\"", TraditionalForm], 
    FormBox["\"Host heterozygosity\"", TraditionalForm]},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.86187840657825*^9, 3.861878861157926*^9, 3.861880149245852*^9, {
   3.86188020517761*^9, 3.861880224072468*^9}, 3.8618802576949463`*^9, 
   3.861880293983554*^9, 3.861881520873999*^9, 3.8618820544239807`*^9, 
   3.8618884846675386`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g2Legend", "=", 
  RowBox[{"Legended", "[", 
   RowBox[{"g2", ",", "leg3"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.86188212178153*^9, 3.861882125987206*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, 
      GraphicsComplexBox[CompressedData["
1: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
CYqMSP4/u1C7rQ==
       
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[0, 0, 1], 
           Opacity[0.1]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl1GWQFgQQBuD7ju6uIw84uo/uFEFBQhQF6Y6jURqlU0BCkFBBAQEDUFLy
6DrygKO7u/uZ4cezO7v/duadDW3VrUFEcFBQUIDBykAqWgwKvJ+HMJRv+Y5h
DGcEIxnFaMYwlnGMZwIT+Z5JTGYKPzCVaUxnBj8yk1n8xGzmMJd5/Mwv/Mp8
FvAbv7OQRSzmD5awlGX8yV/8zT8sZwUr+Zf/WMVq1rCWdaznfzawkU1sZgtb
iWQb29nBTnaxmz3sZR/7OUAUBznEYY5wlGNEc5wTnCSGU5zmDGc5x3kucJFL
XOYKV7nGdW5wk1vc5g53ucd9HvCQRzzmCU95xnNe8JJXvOYNbwmShwDBxCI2
cYhLPOKTgIQkIjFJSEoykpOClKQiNWlISzrSk4EQMpKJzGQhK9kIJTs5yEkY
uchNHvKSj/wUoCCFKEwRilKMcIpTgpKUojRlKEs5Bri5P/34hq/pSx9604ue
9KA73YigK13oTCc60oH2tKMtbWhNK1rSguY04yua0oQv+YLGfM5nNOJTGtKA
+tTjE+pSh4/5iNrU4kNq8gE1qE41qlKFylSiIhUoTznKUobSlKIkJShOOMUo
ShEKU4iCFCA/+chLHnKTizBykoPshJKNrGQhM5nISAgZSE860pKG1KQiJSlI
TjKSkoTEJCIhCYhPPOISh9jEIphA4P3je6u94TWveMkLnvOMpzzhMY94yAPu
c4+73OE2t7jJDa5zjatc4TKXuMgFznOOs5zhNKeI4SQnOE40xzjKEQ5ziINE
cYD97GMve9jNLnayg+1sI5KtbGEzFeR9k/4OPlzCdg==
             
             "]]}]}, {}, {}}, {{}, {}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwl0gdXjgEAhuHXKpkRQtZnlpkVWSllFyoyEn0ZIYVkz8hu2DIjMkrZe/w1
V8c5z/UDnnPuULgsu7RDEAR/mdcxCCzoRGe6EEEkXYmiG93pQU960Zto+tCX
GPrRnwHEMpBBDCaOIQxlGMMZQYiRjGI0YxjLOOJJYDwTmMgkJjOFRKYyjenM
YCZJzGI2ycxhbvtX5rOAFBaSShqLSCeDxSxhKctYzgpWkkkWq1jNGrLJIZe1
rCOP9WxgI5vIZzMFbGErhYQpYhvb2cFOitnFbvZQwl5KKWMf+zlAOQep4BCH
OcJRjnGcE5zkFKc5w1kqOcd5qrjARS5xmStc5RrV1FBLHde5wU1ucZs73OUe
9dznAQ95xGOe0MBTntHIc17QxEte8Zo3NNPCW1pp4x3v+cBHPvGZL3zlG9/5
wU9+8Zs/wf/2/wEem0pQ
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwV0ldbiAEAhuGvkogoRMOoZGWPUKREZachI4qsCGWvv+bEjGSPyCghFRHJ
XreD+3rO3+tNrqotPhQSBME5skKD4Lxe4CKXuMwV6rnKNRq4TiM3uMktbnOH
u9zjPg94SBOPeEwzT3jKM57TQisvaOMlr3hNO2/ooJMu3vKObt7zgR4+8ole
PtPHF77yje/84Ce/+M0f/hIYIoRQwuhHOP2JYAADiWQQg4liCEOJJoZhDGcE
sYxkFHHEk0AioxnDWMaRRDIpjCeVCUxkEpOZQhpTmcZ0ZjCTWcxmDnOZRzrz
WcBCMshkEYvJYgnZ5LCUXJaxnDzyKWAFK1nFatawlnUUsp4iiimhlA2UsZFN
bGYL5WxlGxVUsp0dVLGTXexmD3upZh/7qeEAB/l/4FrqOMwRjnKM45zgJKc4
zRnO8g/2g1gV
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwN0tdaiAEAgOG/JNGgjGRHoaxk8zwuwiW4AK7AHhWKsoUiQkZWRlb2aCCF
ZES2zJAZ78F78J1/iTNnz5gVEgRBBdNDg2COmMs85rOAhSxiMUtYSgaZZLGM
5awgmxxWsopc8ljNGtayjvVsYCObyGczW9hKAYVsYztF7GAnxexiN3soYS/7
2M8BSjnIIQ5zhKOUcYzjnOAk5ZziNGc4yzkqOM8FLnKJy1zhKte4zg0qqaKa
Gm5yi9vUcoc66rnLPe7TwAMaecgjHvOEJp7yjGae84KXvOI1b3jLO1p4zwc+
8onPfKGVr3zjO2384Ce/+M0f/tLOPwI/hBBKB8LoSDidiKAzXYgkimhi6Eo3
YomjOz3oSS/i6U0CfehLP/ozgIEMIpHBDCGJZIYyjOGkkMoIRjKK0YwhjbGk
M47xTGAik5jMFKYyjf+j/WvT
           "]]}}}], {}, {}, {{}, {}}}, {{}, 
      GraphicsComplexBox[CompressedData["
1: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
fu2X6XJ/CMv/B6e4q74=
       
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[1, 0, 0], 
           Opacity[0.1]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl1FWQFgQUBtD9l+5dumGX7u6WklBKQAVplO5SQkGRLmkMQklpi5BuFlhq
6Yall+4+Mzyc+818b3fmzg1r071ht+CgoKAAg41vKKcYKAcF3ndD+JbvGMow
vucHhvMjIxjJKEYzhrGMYzwTmMgkfmIyU5jKNKYzg5nM4md+4Vd+YzZzmMs8
fucP5rOAhSxiMUv4k6UsYzkrWMkqVvMXf/MP//Ifa1jLOtbzPxvYyCY2s4Wt
bGM7O9jJLnazh71EsI/9HCCSgxziMEc4ShTHOM4JTnKK05zhLOc4zwUuconL
XCGaq1zjOje4yS1uE8Md7nKP+zzgIY94zBOe8oznvOAlr3jNG94S5C4CBBOL
2MQhLvGITwISkojEJCEpyQghlOSkICWpSE0a0pKO9GQgI5nITBayEkY42chO
DnKSi9zkIS/5yE8BClKIwhShKMUoTglKUorSfG3PAfSnH33pQ2960ZMedKcb
XelCZzrRkQ58xZe0px1taUNrWtGSFnxBc5rxOZ/xKU1pQmM+oRENaUB96vEx
H1GXOtSmFh9SkxpUpxpV+YAqVKYSFalAecpRljKUphQlKUFxilGUIhSmEAUp
QH7ykZc85CYXOclBdrIRThhZyUJmMpGRDKQnHWlJQ2pSkZIUJCeUEJKRlCQk
JhEJSUB84hGXOMQmFsEEAu+f3Vvxhte84iUveM4znvKExzziIQ+4zz3ucocY
bnOLm9zgOte4SjRXuMwlLnKB85zjLGc4zSlOcoLjHCOKoxzhMIc4SCQH2M8+
ItjLHnazi53sYDvb2MoWNrOJsu59o3wHsgTDOA==
             
             "]]}]}, {}, {}}, {{}, {}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwl0gdTyAEAxuF/ITMhm1SyMyuyi6xQKCObMlIpkZK9JWSEUsqeEUVkfTdP
1937fID37hebW5JVHBIEwT8WhAaBBT3oSS/C6E0f+tKP/gwgnIFEMIjBDCGS
oQxjOCMYyShGM4axRDGOaGKIZTxxTGAik5jMFKYyjXimM4OZzGI2c0ggkSTm
Mo9k5nf9YyGLWMwSlpJCKstYThorWMkqVrOGdNayjvVkkMkGNrKJLLLZzBa2
so0ctrODnexiN3vYyz72k0seBzjIIQ6TzxEKKKSIoxRTwjFKOc4JyjhJORWc
opLTnOEs5zjPBS5yictc4SrXuM4NqrhJNbe4zR1quMs97vOAWh7yiMfUUc8T
GmjkKU0084znvOAlr3jNG97yjvd84CMtfOIzrXzhK220843vdPCDn3Tyi9/8
4W/Q3fx/wB5Izg==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwV0mdXiAEAhuG3MssoI6RoGQlZoTKjRBERsssoopDVf3OOHWXvykqSnQhF
1tWH69zfn/MklFUXVYUEQXCWzNAgOKfnucBFLnGZK9RxlWvU08B1bnCTW9zm
Dne5x30e8JBHPKaRJpp5wlOe8ZwXtPCSVl7RxmvaecNb3vGeD3zkEx18ppMv
fKWLb3znB9308JNf9PKbP/zlH4FBQggljH70ZwADGcRgwolgCEMZxnAiiWIE
IxnFaKIZw1jGEcN4YoljAhOJJ4FEkkhmEpOZwlRSmEYq05nBTNKYxWzmMJd5
pDOfBSwkg0yyWMRilrCUZSwnmxWsJIdcVpHHataQTwFrWUch69lAERvZRDGb
2cJWStjGdnawk13sZg+llLGXfeznAOVUcJBDVHKYI/QduZqjHOM4NZzgJKc4
zRlq+Q+gp1ia
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwN0tdaiAEAgOG/EBlZEcrIbBjJfB534RJcgC5AStmFRMPOLCSSLWSPysoq
MyujiGwS78F78J1/sXNSZs8NCYKgilmhQTBPpDKfNNJZQAaZLGQRi1nCUpax
nCyyWcFKVpHDanJZw1ryyKeAQtaxng1sZBOb2UIRW9nGdnawk10UU8Ju9rCX
UvZRxn4OUM5BKjjEYY5wlGMc5wQnqeQUpzlDFWc5x3kucJFLXOYKV7lGNTXU
cp0b3OQWt6njDne5x30eUE8DD3nEY57wlGc08pwXvOQVr2niDW95x3uaaeED
H2nlE59p4wtf+cZ3fvCTX/zmD+38pYN/BL4IIZROdKYLYXSlG+F0pwc96UUE
velDX/rRn0gGMJAoBjGYIUQTw1CGMZwRxDKSUYxmDGMZRxzxJJDIeCYwkUkk
MZlkpjCVaUxnBjP5D4PHbBQ=
           "]]}}}], {}, {}, {{}, {}}}, {{}, 
      GraphicsComplexBox[CompressedData["
1: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
       
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[0, 0, 1], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl1GV7EAQUBeBt5KjRjBqM0TVGx+gaDaNLBVtJJSQUlTBo7BZMUsGWsAB1
Yyzo7hgjx9ioDV8fPrzn/oDznBs+enzsuKCAgIBAlok3eJO3eJt3eJf3eJ8P
+JCP+JhP+JTlrOAzPucLvuQrvmYlq1jNGtayjm/4lvVs4Du+5wd+5Cd+5hd+
ZSOb2MwWfuN3/uBP/mIr29jO3/zDv8QRzw4S2EkiSSSTwi52s4e97GM/BzjI
IQ5zhKMc4zgnOMkpTnOGs5zjPKlcII2LXOIyV7jKNdK5TgY3yCSLm9ziNne4
SzY53Pu/OAUGEkQucpOHvOQjP8EUoCCFKEwRQihKMYpTgpKUojRlCKUs5ShP
BSoSRiUqE04VIqhKNapTg5rUojZ1qEs96hNJA6JoSCMa04SmNKM5LWhJK6Jp
TRva0o72dKAjnehMF7oSQze604Oe9KI3fehLP2LpzwAGMojBDGEowxgedH8n
S1nCYhaxkAXM53Ve41VeYR5zmcNsXuYlXmQWL/A8M5nBdKbxHFOZwmQm8SzP
MJEJjGccYxnD0zzFkzzB4zzGozzCw4xmFA/xIA8wkhEMZxhDGcJgBjGQAfQn
ln70pQ+96UVPetCdbsTQlS50phMd6UB72tGWNrQmmla0pAXNaUZTmtCYRjQk
igZEUp961KUOtalFTWpQnWpUJYIqhFOZSoRRkQqUpxxlCaUMpSlFSUpQnGIU
JYQiFKYQBSlAMPnJR17ykJtcBBEYeP/p3nNyyOYud7jNLW6SRSY3yOA66Vzj
Kle4zCUuksYFUjnPOc5yhtOc4iQnOM4xjnKEwxziIAfYzz72sofd7CKFZJJI
ZCcJ7CCeOP4DZDzEDg==
             "]]}]}, {}, {}}, {{}, {}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.4]], 
          
          LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
           18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
            35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
            68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 
           84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 
           100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 
           113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 
           126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 
           139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 
           152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 
           165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 
           178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 
           191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201}]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.4]], 
          LineBox[CompressedData["
1:eJwV0mdbDQAAgNF7yS47ISsjI2STbBmFkD3jZo8iI0V2KLt/lVD2XpGRyKyM
cHw4P+B9njcmlJWWGQwEAiVcoZSrXOM6ZZRzg5vc4jZ3uMs97vOAhzziMU94
yjOe84IKXvKKSl7zhre8o4r3VPOBj9Twic984Svf+E4tddTzg5/84jcN/OEv
AYFBGtGYMJrQlGY0pwUtaUU4EbSmDW1pR3s60JFIOhFFZ7rQlWi60Z0e9KQX
MfSmD33pRyz9GcBABhHHYIYwlHiGMZwRjGQUoxnDWMaRwHgSmcBEJjGZKUxl
GtNJYgYzmcVskklhDnOZRyrzWcBC0ljEYpawlGUsZwUrWcVq1rCWdNaxnhAZ
bGAjm9jMFrayje3sYCf/x8xiF7vJZg972cd+cjhALnkc5BD5HOYIRznGcU5w
kgJOcZozFFLEWc5xngtc5BKXKeYfhztdLg==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.4]], 
          LineBox[CompressedData["
1:eJwV0VdbiAEAgNGvIVs2ySgje4SQrWWXQhl3fgA/xt4jOzJDRjZlZ0tkZkVG
yHa6OM/z3r+xCxZlLQwJgqCExWIJS1nGclawklWsZg1rWcd6NrCRTeSymS1s
ZRvb2cFO8tjFbvLZw172sZ8DHKSAQxzmCIUc5RjHOUERJznFac5wlnOc5wIX
KaaES1zmCle5xnVuUMpNbnGbO9zlHvd5QBkPKecRj6ngCU95xnNe8JJKXvGa
N7zlHVW85wPVfOQTn/lCDV/5xndq+cFPfvGbP/zlX9240CAIIZQwwqlHBPVp
QEMa0ZgmNKUZkTSnBS1pRWva0JZ2tCeKDkTTkU50pgsxxNKVbnSnB3H0pBe9
6UNf+tGfAQxkEPEMZghDSWAYwxlBIiMZxWjGMJZxjGcCSSSTQippTGQSk5nC
VKYxnXQymEEmWcxkFrPJJoc5zGUe8/kPWK1pkQ==
           
           "]]}}}], {}, {}, {{}, {}}}, {{}, 
      GraphicsComplexBox[CompressedData["
1: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
5zfebcT9RXjkntDaHZokP/8BLLGJOQ==
       
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[1, 0, 0], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl1GV7EAQUBeBt5KjRjBqM0TVGx+gaDaNLBVtJJSQUlTBo7BZMUsGWsAB1
Yyzo7hgjx9ioDV8fPrzn/oDznBs+enzsuKCAgIBAlok3eJO3eJt3eJf3eJ8P
+JCP+JhP+JTlrOAzPucLvuQrvmYlq1jNGtayjm/4lvVs4Du+5wd+5Cd+5hd+
ZSOb2MwWfuN3/uBP/mIr29jO3/zDv8QRzw4S2EkiSSSTwi52s4e97GM/BzjI
IQ5zhKMc4zgnOMkpTnOGs5zjPKlcII2LXOIyV7jKNdK5TgY3yCSLm9ziNne4
SzY53Pu/OAUGEkQucpOHvOQjP8EUoCCFKEwRQihKMYpTgpKUojRlCKUs5ShP
BSoSRiUqE04VIqhKNapTg5rUojZ1qEs96hNJA6JoSCMa04SmNKM5LWhJK6Jp
TRva0o72dKAjnehMF7oSQze604Oe9KI3fehLP2LpzwAGMojBDGEowxgedH8n
S1nCYhaxkAXM53Ve41VeYR5zmcNsXuYlXmQWL/A8M5nBdKbxHFOZwmQm8SzP
MJEJjGccYxnD0zzFkzzB4zzGozzCw4xmFA/xIA8wkhEMZxhDGcJgBjGQAfQn
ln70pQ+96UVPetCdbsTQlS50phMd6UB72tGWNrQmmla0pAXNaUZTmtCYRjQk
igZEUp961KUOtalFTWpQnWpUJYIqhFOZSoRRkQqUpxxlCaUMpSlFSUpQnGIU
JYQiFKYQBSlAMPnJR17ykJtcBBEYeP/p3nNyyOYud7jNLW6SRSY3yOA66Vzj
Kle4zCUuksYFUjnPOc5yhtOc4iQnOM4xjnKEwxziIAfYzz72sofd7CKFZJJI
ZCcJ7CCeOP4DZDzEDg==
             "]]}]}, {}, {}}, {{}, {}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          
          LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
           18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
            35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
            68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 
           84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 
           100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 
           113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 
           126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 
           139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 
           152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 
           165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 
           178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 
           191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201}]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJwV0mdbDQAAgNF7yS47ISsjI2STbBmFkD3jZo8iI0V2KLt/lVD2XpGRyKyM
cHw4P+B9njcmlJWWGQwEAiVcoZSrXOM6ZZRzg5vc4jZ3uMs97vOAhzziMU94
yjOe84IKXvKKSl7zhre8o4r3VPOBj9Twic984Svf+E4tddTzg5/84jcN/OEv
AYFBGtGYMJrQlGY0pwUtaUU4EbSmDW1pR3s60JFIOhFFZ7rQlWi60Z0e9KQX
MfSmD33pRyz9GcBABhHHYIYwlHiGMZwRjGQUoxnDWMaRwHgSmcBEJjGZKUxl
GtNJYgYzmcVskklhDnOZRyrzWcBC0ljEYpawlGUsZwUrWcVq1rCWdNaxnhAZ
bGAjm9jMFrayje3sYCf/x8xiF7vJZg972cd+cjhALnkc5BD5HOYIRznGcU5w
kgJOcZozFFLEWc5xngtc5BKXKeYfhztdLg==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJwV0VdbiAEAgNGvIVs2ySgje4SQrWWXQhl3fgA/xt4jOzJDRjZlZ0tkZkVG
yHa6OM/z3r+xCxZlLQwJgqCExWIJS1nGclawklWsZg1rWcd6NrCRTeSymS1s
ZRvb2cFO8tjFbvLZw172sZ8DHKSAQxzmCIUc5RjHOUERJznFac5wlnOc5wIX
KaaES1zmCle5xnVuUMpNbnGbO9zlHvd5QBkPKecRj6ngCU95xnNe8JJKXvGa
N7zlHVW85wPVfOQTn/lCDV/5xndq+cFPfvGbP/zlX9240CAIIZQwwqlHBPVp
QEMa0ZgmNKUZkTSnBS1pRWva0JZ2tCeKDkTTkU50pgsxxNKVbnSnB3H0pBe9
6UNf+tGfAQxkEPEMZghDSWAYwxlBIiMZxWjGMJZxjGcCSSSTQippTGQSk5nC
VKYxnXQymEEmWcxkFrPJJoc5zGUe8/kPWK1pkQ==
           
           "]]}}}], {}, {}, {{}, {}}}}, {
    PlotRange -> All, Frame -> True, FrameLabel -> {
       FormBox["\"Host generations\"", TraditionalForm], 
       FormBox["\"Host heterozygosity\"", TraditionalForm]}, Axes -> False, 
     DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0., 0.4807875749281727}, 
     PlotRange -> {{0., 201.}, {0.4811540233378749, 0.48848299153191754`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0., 0.4807875749281727}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 201.}, {0.4811540233378749, 0.48848299153191754`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Neutral, V=0.2\"", "\"Neutral, V=0.5\"", "\"Coevolutionary, V=0.2\"",
        "\"Coevolutionary, V=0.5\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Opacity[0.2], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Opacity[0.2], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Opacity[0.2], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Opacity[0.2], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.2`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.2`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
                 "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.861882126607058*^9, 3.861888767953909*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/madeline/Desktop/Mideo.lab2/Coevolution/Data \
sets/FIgures/IslandMainland_Discrete_Specificity.png\>\"", ",", "g1Legend", 
   ",", "\"\<PNG\>\"", ",", 
   RowBox[{"ImageResolution", "\[Rule]", " ", "300"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/madeline/Desktop/Mideo.lab2/Coevolution/Data \
sets/FIgures/IslandMainland_Discrete_Virulence.png\>\"", ",", "g2Legend", 
   ",", "\"\<PNG\>\"", ",", 
   RowBox[{"ImageResolution", "\[Rule]", " ", "300"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.861564192043035*^9, 3.861564236338619*^9}, {
  3.8615685211214848`*^9, 3.8615685282858753`*^9}, {3.861568952374758*^9, 
  3.8615689532789307`*^9}, {3.861569049649403*^9, 3.861569050265788*^9}, {
  3.861789774781876*^9, 3.861789775920046*^9}, {3.861882073932786*^9, 
  3.861882108707745*^9}, {3.8618887745573673`*^9, 3.86188878606497*^9}}],

Cell[BoxData["\<\"/Users/madeline/Desktop/Mideo.lab2/Coevolution/Data \
sets/FIgures/IslandMainland_Discrete_Specificity.png\"\>"], "Output",
 CellChangeTimes->{
  3.861789784946966*^9, {3.861789898378087*^9, 3.8617899182767572`*^9}, 
   3.8618821349986753`*^9, {3.861888771321377*^9, 3.861888787651744*^9}}],

Cell[BoxData["\<\"/Users/madeline/Desktop/Mideo.lab2/Coevolution/Data \
sets/FIgures/IslandMainland_Discrete_Virulence.png\"\>"], "Output",
 CellChangeTimes->{
  3.861789784946966*^9, {3.861789898378087*^9, 3.8617899182767572`*^9}, 
   3.8618821349986753`*^9, {3.861888771321377*^9, 3.8618887880455914`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"leg", "=", 
   RowBox[{"LineLegend", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Directive", "[", 
        RowBox[{"Orange", ",", 
         RowBox[{"Opacity", "[", "0.3", "]"}]}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{"Red", ",", 
         RowBox[{"Opacity", "[", "0.3", "]"}]}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{"Blue", ",", 
         RowBox[{"Opacity", "[", "0.3", "]"}]}], "]"}], ",", 
       RowBox[{"Directive", "[", "Orange", "]"}], ",", 
       RowBox[{"Directive", "[", "Red", "]"}], ",", 
       RowBox[{"Directive", "[", "Blue", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Neutral, \!\(\*SubscriptBox[\(m\), \(i\)]\)=0.001\>\"", ",", 
       "\"\<Neutral, \!\(\*SubscriptBox[\(m\), \(i\)]\)=0.01\>\"", ",", 
       "\"\<Neutral, \!\(\*SubscriptBox[\(m\), \(i\)]\)=0.05\>\"", ",", 
       "\"\<Coevolutionary, \!\(\*SubscriptBox[\(m\), \(i\)]\)=0.001\>\"", 
       ",", "\"\<Coevolutionary, \!\(\*SubscriptBox[\(m\), \(i\)]\)=0.01\>\"",
        ",", "\"\<Coevolutionary, \!\(\*SubscriptBox[\(m\), \
\(i\)]\)=0.05\>\""}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.857557659235034*^9, 3.857557706354966*^9}, {
  3.8575578672099323`*^9, 3.857557870916712*^9}, {3.858348355414452*^9, 
  3.858348370636924*^9}, {3.858348402869893*^9, 3.858348410190549*^9}, {
  3.858422980802874*^9, 3.858423056476487*^9}, {3.8592883937080708`*^9, 
  3.859288560670891*^9}, {3.859378315105134*^9, 3.8593783319926357`*^9}, {
  3.861872126606793*^9, 3.8618721286610317`*^9}, {3.86187597574012*^9, 
  3.861876039318095*^9}},
 ExpressionUUID -> "86983290-4148-4dc9-b4a3-ca238cada277"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"mean", "[", "parsN", "]"}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "parsN", "]"}], "+", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "parsN", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "parsN", "]"}], "-", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "parsN", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Blue", ",", 
          RowBox[{"Opacity", "[", "0.2", "]"}], ",", "Dashed"}], "]"}]}], ",", 
       RowBox[{"Filling", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "3", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Directive", "[", 
              RowBox[{"Blue", ",", 
               RowBox[{"Opacity", "[", "0.1", "]"}]}], "]"}], "}"}]}], 
           "}"}]}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"mean", "[", "parsN4", "]"}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "parsN4", "]"}], "+", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "parsN4", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "parsN4", "]"}], "-", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "parsN4", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Red", ",", 
          RowBox[{"Opacity", "[", "0.2", "]"}], ",", "Dashed"}], "]"}]}], ",", 
       RowBox[{"Filling", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "3", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Directive", "[", 
              RowBox[{"Red", ",", 
               RowBox[{"Opacity", "[", "0.1", "]"}]}], "]"}], "}"}]}], 
           "}"}]}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"mean", "[", "parsN5", "]"}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "parsN5", "]"}], "+", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "parsN5", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "parsN5", "]"}], "-", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "parsN5", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Orange", ",", 
          RowBox[{"Opacity", "[", "0.2", "]"}], ",", "Dashed"}], "]"}]}], ",", 
       RowBox[{"Filling", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "3", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Directive", "[", 
              RowBox[{"Orange", ",", 
               RowBox[{"Opacity", "[", "0.1", "]"}]}], "]"}], "}"}]}], 
           "}"}]}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"mean", "[", "pars1", "]"}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "pars1", "]"}], "+", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "pars1", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "pars1", "]"}], "-", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "pars1", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", "Blue", "]"}]}], ",", 
       RowBox[{"Filling", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "3", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Directive", "[", 
              RowBox[{"Blue", ",", 
               RowBox[{"Opacity", "[", "0.2", "]"}]}], "]"}], "}"}]}], 
           "}"}]}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"mean", "[", "pars4", "]"}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "pars4", "]"}], "+", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "pars4", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "pars4", "]"}], "-", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "pars4", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", "Red", "]"}]}], ",", 
       RowBox[{"Filling", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "3", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Directive", "[", 
              RowBox[{"Red", ",", 
               RowBox[{"Opacity", "[", "0.2", "]"}]}], "]"}], "}"}]}], 
           "}"}]}], "}"}]}]}], "]"}], ",", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"mean", "[", "pars5", "]"}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "pars5", "]"}], "+", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "pars5", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "pars5", "]"}], "-", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "pars5", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", "Orange", "]"}]}], ",", 
       RowBox[{"Filling", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "3", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Directive", "[", 
              RowBox[{"Orange", ",", 
               RowBox[{"Opacity", "[", "0.2", "]"}]}], "]"}], "}"}]}], 
           "}"}]}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.5"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Host generations\>\"", ",", "\"\<Host heterozygosity\>\""}], 
       "}"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "False"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.86145683329067*^9, 3.861456861210498*^9}, {
   3.861456909188425*^9, 3.8614569189049883`*^9}, {3.861562315117729*^9, 
   3.861562315589868*^9}, {3.861563881500381*^9, 3.861563907389617*^9}, {
   3.86156409485008*^9, 3.861564121435046*^9}, {3.861564196978087*^9, 
   3.861564197148779*^9}, {3.861568694846723*^9, 3.861568714983533*^9}, {
   3.861568860917595*^9, 3.861568861042571*^9}, {3.8617349845956287`*^9, 
   3.8617349847909527`*^9}, {3.861788946981429*^9, 3.861789023660462*^9}, {
   3.8617890543059883`*^9, 3.861789054868122*^9}, {3.861789486410318*^9, 
   3.8617894967863483`*^9}, {3.861789603096192*^9, 3.8617896432989264`*^9}, {
   3.861789779624332*^9, 3.8617897799313107`*^9}, {3.861871986751754*^9, 
   3.861872082714913*^9}, {3.861874587368305*^9, 3.861874607311573*^9}, {
   3.86187494010723*^9, 3.861874946410017*^9}, {3.86187530466019*^9, 
   3.861875307724032*^9}, {3.8618760469671373`*^9, 3.861876098527257*^9}, {
   3.8618770165559196`*^9, 3.861877031891321*^9}, 3.8618770907740507`*^9, 
   3.861877329954924*^9, {3.861889342022512*^9, 3.861889378483307*^9}, {
   3.8618918668173733`*^9, 3.861891919596445*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gLegend", "=", 
  RowBox[{"Legended", "[", 
   RowBox[{"g", ",", "leg"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8618770949414186`*^9, 3.8618771248494587`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, 
      GraphicsComplexBox[CompressedData["
1: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
       
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[0, 0, 1], 
           Opacity[0.1]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl1FWwFgQQBtD7X7q789Ld3dItINLS3V3SSHc3qKSANCgh3d3d3d3pmeHh
7M7u2858syGNO1RrHxwUFBSgn9KHwhZ9A9/n/gxgIIMYzG8MYSjDGM4IRjKK
0YxhLOMYzwQmMonJTGEq05jODGYyi9nMYS7z+J0/+JP5LGAhi1jMEv5iKctY
zt+sYCWrWM0a1rKO9WzgH/5lI5vYzBb+Yyvb2M4OdrKL3exhL/vYzwEOcojD
HOEoxzjOCU5yitOc4SznOM8FLnKJy1zhKte4zg1ucovb3OEu97jPAx7yiMc8
4SnPeM4LXvKK17zhLe94zwc+8onPfOEr3wiShwDBhCI0YQhLOMITgYhEIjJR
iEo0ohODmMQiNnGISzzik4CEJCIxSUhKMpITQgpSkorUpCEt6UhPBjKSicxk
ISvZyE4OcpKL3OQhL/nITwF+dW9vetGTHnSnG13pQmc60ZEOtKcdbWlDa1rR
khY0pxlNaUJjGtGQBtTnF+pRlzrUphY1qcHPVOcnqlGVKvxIZSpRkQqUpxxl
KUNpSlGSEhTnB4pRlCIUphAFKUB+8pGXPOQmFznJQXaykZUsZCYTGclAetKR
ljSkJhUpSUEIyUlGUpKQmEQkJAHxiUdc4hCbWMQkBtGJRlSiEJlIRCQC4QlH
WMIQmlAEEwh8f3rftK984TOf+MgH3vOOt7zhNa94yQue84ynPOExj3jIA+5z
j7vc4Ta3uMkNrnONq1zhMpe4yAXOc46znOE0pzjJCY5zjKMc4TCHOMgB9rOP
vexhN7vYyQ62U0jmt+n/A+HewvY=
             "]]}]}, {}, {}}, {{}, {}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwl0gdXzQEAxuG/RPZe2VdIpITMsht2IiMyroyUrq1sEpFRtmjYeychPpvH
6Zz3+QDvOb9QOJJb2iEIgr/MjQoCCzoSTSc6E0MXutKN7vSgJ73oTR/60o/+
DGAggxjMEGIZyjCGM4KRjGI0IcYQx1jGMZ54JpDARCaRyGSSSGYKKUxlGtNJ
ZQYzmcVs5vz/SRrpzGM+C1jIIhazhAwyySKbpSxjOStYySpWk8MaclnLOvJY
zwY2sol8NrOFArayje3sIMxOCtnFbvawlyL2UUwJ+yklwgEOcojDHOEoxzhO
GeWc4CSnOM0ZznKO81yggotUconLVHGFq1Rzjevc4CY11HKL29zhLve4zwMe
UscjHlNPA4008YSnPOM5L3jJK17zhre84z0f+MgnPvOFr3yjme+08INWfvKL
37TxJ2jv/h/vSUmP
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwV0mdXzgEAxuF/IURCZKtH9taQkYqsUCi7rKwonqwyPptzVFaRLRSp7E2U
Pa5eXOf3/j53qCRccCQiCIJzZEQGwXmtpoZaLnCRS1zmCnXUc5VrNHCdG9zk
Fre5w13u0ch9HvCQJpp5xGNaeEIrbbTzlGc85wUvecVr3vCWd7znAx/5xGc6
+MJXOuniG9/5wU9+8Zs//OUfgTEiiKQHPelFFL3pQ1+i6Ud/YhhALAMZxGDi
GMJQ4hnGcEYwklGMZgxjSSCREONIYjwTmMgkJjOFqUxjOjOYySxmM4dkUkgl
jbmkM4/5LGAhGSwikyyyWcwScljKMpazgpXksorVrCGPfNayjvUUUMgGNrKJ
zWxhK9soopjt7GAnu9hNCXvYyz72c4BSDnKIMso5TPeJw1RwlGMc5wQnqaSK
U5zmDGf5DzVwWNU=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwN0tdaiAEAgOG/EBlZEcrIbBjJ9jxuwiV0AboCpexComFnFhLJFrJHZWWV
mZVRRDaJ9+A9+M6/2JTUufNCgiCoYk5oEMwXaaSzgAwyWcgiFrOEpSxjOVlk
s4KVrCKH1eSyhrXkkU8BhaxjPRvYyCY2s4UitrKN7exgJ7sopoTd7GEvpeyj
jP0coJyDVHCIwxzhKMc4zglOUskpTnOGKs5yjvNc4CKXuMwVrnKNamqo5To3
uMktblPHHe5yj/s8oJ4GHvKIxzzhKc9o5DkveMkrXtPEG97yjvc008IHPtLK
Jz7Txhe+8o3v/OAnv/jNH9r5Swf/CPwQQiid6EwXwuhKN8LpTg960osIetOH
vvSjP5EMYCBRDGIwQ4gmhqEMYzgjiGUkoxjNGMYyjjjiSSCR8UxgIpNIYjLJ
TGEq05jODGYyi9n8B+6Za5Q=
           "]]}}}], {}, {}, {{}, {}}}, {{}, 
      GraphicsComplexBox[CompressedData["
1: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
Yb9Ud3ap/w9yBOLE
       
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[1, 0, 0], 
           Opacity[0.1]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl1GV7EAQUBeBt5KjRjBqM0TVGx+gaDaNLBVtJJSQUlTBo7BZMUsGWsAB1
Yyzo7hgjx9ioDV8fPrzn/oDznBs+enzsuKCAgIBAlok3eJO3eJt3eJf3eJ8P
+JCP+JhP+JTlrOAzPucLvuQrvmYlq1jNGtayjm/4lvVs4Du+5wd+5Cd+5hd+
ZSOb2MwWfuN3/uBP/mIr29jO3/zDv8QRzw4S2EkiSSSTwi52s4e97GM/BzjI
IQ5zhKMc4zgnOMkpTnOGs5zjPKlcII2LXOIyV7jKNdK5TgY3yCSLm9ziNne4
SzY53Pu/OAUGEkQucpOHvOQjP8EUoCCFKEwRQihKMYpTgpKUojRlCKUs5ShP
BSoSRiUqE04VIqhKNapTg5rUojZ1qEs96hNJA6JoSCMa04SmNKM5LWhJK6Jp
TRva0o72dKAjnehMF7oSQze604Oe9KI3fehLP2LpzwAGMojBDGEowxgedH8n
S1nCYhaxkAXM53Ve41VeYR5zmcNsXuYlXmQWL/A8M5nBdKbxHFOZwmQm8SzP
MJEJjGccYxnD0zzFkzzB4zzGozzCw4xmFA/xIA8wkhEMZxhDGcJgBjGQAfQn
ln70pQ+96UVPetCdbsTQlS50phMd6UB72tGWNrQmmla0pAXNaUZTmtCYRjQk
igZEUp961KUOtalFTWpQnWpUJYIqhFOZSoRRkQqUpxxlCaUMpSlFSUpQnGIU
JYQiFKYQBSlAMPnJR17ykJtcBBEYeP/p3nNyyOYud7jNLW6SRSY3yOA66Vzj
Kle4zCUuksYFUjnPOc5yhtOc4iQnOM4xjnKEwxziIAfYzz72sofd7CKFZJJI
ZCcJ7CCeOP4DZDzEDg==
             "]]}]}, {}, {}}, {{}, {}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          
          LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
           18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
            35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
            68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 
           84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 
           100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 
           113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 
           126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 
           139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 
           152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 
           165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 
           178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 
           191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201}]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwV0mdbDQAAgNF7yS47ISsjI2STbBmFkD3jZo8iI0V2KLt/lVD2XpGRyKyM
cHw4P+B9njcmlJWWGQwEAiVcoZSrXOM6ZZRzg5vc4jZ3uMs97vOAhzziMU94
yjOe84IKXvKKSl7zhre8o4r3VPOBj9Twic984Svf+E4tddTzg5/84jcN/OEv
AYFBGtGYMJrQlGY0pwUtaUU4EbSmDW1pR3s60JFIOhFFZ7rQlWi60Z0e9KQX
MfSmD33pRyz9GcBABhHHYIYwlHiGMZwRjGQUoxnDWMaRwHgSmcBEJjGZKUxl
GtNJYgYzmcVskklhDnOZRyrzWcBC0ljEYpawlGUsZwUrWcVq1rCWdNaxnhAZ
bGAjm9jMFrayje3sYCf/x8xiF7vJZg972cd+cjhALnkc5BD5HOYIRznGcU5w
kgJOcZozFFLEWc5xngtc5BKXKeYfhztdLg==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwV0VdbiAEAgNGvIVs2ySgje4SQrWWXQhl3fgA/xt4jOzJDRjZlZ0tkZkVG
yHa6OM/z3r+xCxZlLQwJgqCExWIJS1nGclawklWsZg1rWcd6NrCRTeSymS1s
ZRvb2cFO8tjFbvLZw172sZ8DHKSAQxzmCIUc5RjHOUERJznFac5wlnOc5wIX
KaaES1zmCle5xnVuUMpNbnGbO9zlHvd5QBkPKecRj6ngCU95xnNe8JJKXvGa
N7zlHVW85wPVfOQTn/lCDV/5xndq+cFPfvGbP/zlX9240CAIIZQwwqlHBPVp
QEMa0ZgmNKUZkTSnBS1pRWva0JZ2tCeKDkTTkU50pgsxxNKVbnSnB3H0pBe9
6UNf+tGfAQxkEPEMZghDSWAYwxlBIiMZxWjGMJZxjGcCSSSTQippTGQSk5nC
VKYxnXQymEEmWcxkFrPJJoc5zGUe8/kPWK1pkQ==
           
           "]]}}}], {}, {}, {{}, {}}}, {{}, 
      GraphicsComplexBox[CompressedData["
1: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

       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[1, 0.5, 0], 
           Opacity[0.1]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl1GV7EAQUBeBt5KjRjBqM0TVGx+gaDaNLBVtJJSQUlTBo7BZMUsGWsAB1
Yyzo7hgjx9ioDV8fPrzn/oDznBs+enzsuKCAgIBAlok3eJO3eJt3eJf3eJ8P
+JCP+JhP+JTlrOAzPucLvuQrvmYlq1jNGtayjm/4lvVs4Du+5wd+5Cd+5hd+
ZSOb2MwWfuN3/uBP/mIr29jO3/zDv8QRzw4S2EkiSSSTwi52s4e97GM/BzjI
IQ5zhKMc4zgnOMkpTnOGs5zjPKlcII2LXOIyV7jKNdK5TgY3yCSLm9ziNne4
SzY53Pu/OAUGEkQucpOHvOQjP8EUoCCFKEwRQihKMYpTgpKUojRlCKUs5ShP
BSoSRiUqE04VIqhKNapTg5rUojZ1qEs96hNJA6JoSCMa04SmNKM5LWhJK6Jp
TRva0o72dKAjnehMF7oSQze604Oe9KI3fehLP2LpzwAGMojBDGEowxgedH8n
S1nCYhaxkAXM53Ve41VeYR5zmcNsXuYlXmQWL/A8M5nBdKbxHFOZwmQm8SzP
MJEJjGccYxnD0zzFkzzB4zzGozzCw4xmFA/xIA8wkhEMZxhDGcJgBjGQAfQn
ln70pQ+96UVPetCdbsTQlS50phMd6UB72tGWNrQmmla0pAXNaUZTmtCYRjQk
igZEUp961KUOtalFTWpQnWpUJYIqhFOZSoRRkQqUpxxlCaUMpSlFSUpQnGIU
JYQiFKYQBSlAMPnJR17ykJtcBBEYeP/p3nNyyOYud7jNLW6SRSY3yOA66Vzj
Kle4zCUuksYFUjnPOc5yhtOc4iQnOM4xjnKEwxziIAfYzz72sofd7CKFZJJI
ZCcJ7CCeOP4DZDzEDg==
             "]]}]}, {}, {}}, {{}, {}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0.5, 0], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          
          LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
           18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
            35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
            68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 
           84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 
           100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 
           113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 
           126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 
           139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 
           152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 
           165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 
           178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 
           191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201}]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0.5, 0], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwV0mdbDQAAgNF7yS47ISsjI2STbBmFkD3jZo8iI0V2KLt/lVD2XpGRyKyM
cHw4P+B9njcmlJWWGQwEAiVcoZSrXOM6ZZRzg5vc4jZ3uMs97vOAhzziMU94
yjOe84IKXvKKSl7zhre8o4r3VPOBj9Twic984Svf+E4tddTzg5/84jcN/OEv
AYFBGtGYMJrQlGY0pwUtaUU4EbSmDW1pR3s60JFIOhFFZ7rQlWi60Z0e9KQX
MfSmD33pRyz9GcBABhHHYIYwlHiGMZwRjGQUoxnDWMaRwHgSmcBEJjGZKUxl
GtNJYgYzmcVskklhDnOZRyrzWcBC0ljEYpawlGUsZwUrWcVq1rCWdNaxnhAZ
bGAjm9jMFrayje3sYCf/x8xiF7vJZg972cd+cjhALnkc5BD5HOYIRznGcU5w
kgJOcZozFFLEWc5xngtc5BKXKeYfhztdLg==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0.5, 0], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwV0VdbiAEAgNGvIVs2ySgje4SQrWWXQhl3fgA/xt4jOzJDRjZlZ0tkZkVG
yHa6OM/z3r+xCxZlLQwJgqCExWIJS1nGclawklWsZg1rWcd6NrCRTeSymS1s
ZRvb2cFO8tjFbvLZw172sZ8DHKSAQxzmCIUc5RjHOUERJznFac5wlnOc5wIX
KaaES1zmCle5xnVuUMpNbnGbO9zlHvd5QBkPKecRj6ngCU95xnNe8JJKXvGa
N7zlHVW85wPVfOQTn/lCDV/5xndq+cFPfvGbP/zlX9240CAIIZQwwqlHBPVp
QEMa0ZgmNKUZkTSnBS1pRWva0JZ2tCeKDkTTkU50pgsxxNKVbnSnB3H0pBe9
6UNf+tGfAQxkEPEMZghDSWAYwxlBIiMZxWjGMJZxjGcCSSSTQippTGQSk5nC
VKYxnXQymEEmWcxkFrPJJoc5zGUe8/kPWK1pkQ==
           
           "]]}}}], {}, {}, {{}, {}}}, {{}, 
      GraphicsComplexBox[CompressedData["
1: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

       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[0, 0, 1], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl1GPUFwYUB+D3/2bbfLNtLSzXaq1l2zaXsbZsLKy2Vcu2bdu2reecPjz3
nnu/3XN+54Y0al+lXXBQUFCAHko3cll0D3yfe9KL3vShL/3oz28MYCCDGMwQ
hjKM4YxgJL8zij/4k9GMYSzjGM8EJjKJyUxhKtOYzgxmMou/mM0c5jKPv5nP
Av7hX/5jIYtYzP8sYSnLWM4KVrKK1axhLetYzwY2sonNbGEr29jODnayi93s
YS/72M8BDnKIwxzhKMc4zglOcorTnOEs5zjPBS5yictc4SrXuM4NbnKL29zh
Lve4zwMe8ojHPOEpz3jOC17yite84S3veM8HPvKJz3zhK0FyEiCYUIQmDGEJ
R3giEJFIRCYKUYlGdGIQk1jEJg5xiUd8EpCQRCQmCUlJRnJCSEFKUpGaNKQl
HenJQEYykZksZCUb2enqli50phMd6UB72tGWNrSmFS1pQXOa0ZQmNKYRDWlA
fepRlzrUphY1qUF1qvErVfmFKvxMZSrxExWpQHnKUZYylKYUJfmREhSnGEX5
gSIUphAFKUB+8pGXPOQmFznJQXaykZUsZCYTGclAetKRljSkJhUpSUEIyUlG
UpKQmEQkJAHxiUdc4hCbWMQkBtGJRlSiEJlIRCQC4QlHWMIQmlAEEwh8f2hf
tS985hMf+cB73vGWN7zmFS95wXOe8ZQnPOYRD3nAfe5xlzvc5hY3ucF1rnGV
K1zmEhe5wHnOcZYznOYUJznBcY5xlCMc5hAHOcB+9rGXPexmFzvZwXa2sZUt
bCannG/SvwExycMd
             "]]}]}, {}, {}}, {{}, {}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1:eJwl0gdTyAEAxuE/EiorW0ghIyORRDS0bLKyKySrgcheRXZJdkglygqZX87T
uXufD/De/WKKy/PL+gRB8JfEvkFgQT9C6E8oAxjIIMIIJ4LBDGEowxhOJCMY
yShGM4axjGM8UUxgIpOIZjIxxDKFqUwjjunMYCaziGc2c5jLPBKY3/uBBSwk
iUUks5gUlrCUVJaxnDTSySCTFWSRTQ655LGSVaxmDWtZx3o2sJF8NrGZLWxl
GwVsZwc72cVu9rCXQoooZh/7OUAJBynlEIc5wlGOUUY5FVRynBOcpIpTnKaa
M5zlHOe5wEUucZkrXOUaNdRynRvUcZNb3OYOd7nHfepp4AGNPKSJRzzmCU95
xnNe0MxLXvGaFt7QShvtvKWDd7ynky4+8JFPfOYL3XzlG9/p4Qc/+cVv/gT/
W/8HYjBHTA==
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1:eJwV0mdXiAEAhuG3ZGRkJbuEJCtEyKhQFJGGrcioRIn8uc4xS1KyR4VQVoiy
Z7l8uM79/TlPbElVXmVIEAS1JIUGwTk9zwUuconL1FHPFRq4SiPXaKKZ67Rw
g5vc4jZ3uMs97vOAh7TSRjuPeMwTOnjKM57TSRcveMkrXvOGbt7yjvf08IGP
9NLHJz7zha984zs/+MkvfvOHv/QzQGCYEEIZRBiDGcJQhhHOcEYwklFEMJox
jGUc44lkAlFMZBKTmcJUpjGdaGKYQSwzmcVs4phDPHNJYB7zWcBCFpHIYpaw
lCSWsZxkVrCSVaSwmjWsZR2ppJHOejawkQwy2cRmsshmC1vJYRvbyWUHeeRT
QCE72cVu9rCXfeznAEUUc5BDlHCYIxzlGKWUUc5xKjjBSf4fuopTVHOaM9Rw
ln9iIFgq
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1:eJwN0tdaiAEAgOG/ssoqskIq2ULP40pcggvIoUoZUUaRvWdESTYZISEjo6yE
FNkhIiNK78F78J1/8bPnzEoJCYKgnJmhQTBXpJJGOvPIIJP5LGAhi8hiMUvI
JoelLGM5K8glj5WsIp/VrGEt61jPBjayic1sYSvb2M4OdrKL3eyhgL3so5D9
HKCIYg5SwiFKOcwRjnKM45zgJKc4TRlnOMs5zlPOBS5yiQouU8kVrnKNKq5z
g5vcoprb3OEu96ihlvs84CGPeEwdT6jnKc94TgMvaKSJl7yimde84S3veM8H
PtLCJz7zhVa+8o02vvODdn7yi9/8oYO//KOTLv4T+CSEUMLoQU960Zs+hBNB
X/rRnwEMJJIoBjGYaIYwlGEMZwQxjGQUo4llDHHEk8BYEhnHeCYwkUlMZgpT
SWIa05lBMt1R52xv
           "]]}}}], {}, {}, {{}, {}}}, {{}, 
      GraphicsComplexBox[CompressedData["
1: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
BDe/NP8Pe5KEIw==
       
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[1, 0, 0], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl1GV7EAQUBeBt5KjRjBqM0TVGx+gaDaNLBVtJJSQUlTBo7BZMUsGWsAB1
Yyzo7hgjx9ioDV8fPrzn/oDznBs+enzsuKCAgIBAlok3eJO3eJt3eJf3eJ8P
+JCP+JhP+JTlrOAzPucLvuQrvmYlq1jNGtayjm/4lvVs4Du+5wd+5Cd+5hd+
ZSOb2MwWfuN3/uBP/mIr29jO3/zDv8QRzw4S2EkiSSSTwi52s4e97GM/BzjI
IQ5zhKMc4zgnOMkpTnOGs5zjPKlcII2LXOIyV7jKNdK5TgY3yCSLm9ziNne4
SzY53Pu/OAUGEkQucpOHvOQjP8EUoCCFKEwRQihKMYpTgpKUojRlCKUs5ShP
BSoSRiUqE04VIqhKNapTg5rUojZ1qEs96hNJA6JoSCMa04SmNKM5LWhJK6Jp
TRva0o72dKAjnehMF7oSQze604Oe9KI3fehLP2LpzwAGMojBDGEowxgedH8n
S1nCYhaxkAXM53Ve41VeYR5zmcNsXuYlXmQWL/A8M5nBdKbxHFOZwmQm8SzP
MJEJjGccYxnD0zzFkzzB4zzGozzCw4xmFA/xIA8wkhEMZxhDGcJgBjGQAfQn
ln70pQ+96UVPetCdbsTQlS50phMd6UB72tGWNrQmmla0pAXNaUZTmtCYRjQk
igZEUp961KUOtalFTWpQnWpUJYIqhFOZSoRRkQqUpxxlCaUMpSlFSUpQnGIU
JYQiFKYQBSlAMPnJR17ykJtcBBEYeP/p3nNyyOYud7jNLW6SRSY3yOA66Vzj
Kle4zCUuksYFUjnPOc5yhtOc4iQnOM4xjnKEwxziIAfYzz72sofd7CKFZJJI
ZCcJ7CCeOP4DZDzEDg==
             "]]}]}, {}, {}}, {{}, {}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          
          LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
           18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
            35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
            68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 
           84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 
           100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 
           113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 
           126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 
           139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 
           152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 
           165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 
           178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 
           191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201}]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJwV0mdbDQAAgNF7yS47ISsjI2STbBmFkD3jZo8iI0V2KLt/lVD2XpGRyKyM
cHw4P+B9njcmlJWWGQwEAiVcoZSrXOM6ZZRzg5vc4jZ3uMs97vOAhzziMU94
yjOe84IKXvKKSl7zhre8o4r3VPOBj9Twic984Svf+E4tddTzg5/84jcN/OEv
AYFBGtGYMJrQlGY0pwUtaUU4EbSmDW1pR3s60JFIOhFFZ7rQlWi60Z0e9KQX
MfSmD33pRyz9GcBABhHHYIYwlHiGMZwRjGQUoxnDWMaRwHgSmcBEJjGZKUxl
GtNJYgYzmcVskklhDnOZRyrzWcBC0ljEYpawlGUsZwUrWcVq1rCWdNaxnhAZ
bGAjm9jMFrayje3sYCf/x8xiF7vJZg972cd+cjhALnkc5BD5HOYIRznGcU5w
kgJOcZozFFLEWc5xngtc5BKXKeYfhztdLg==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJwV0VdbiAEAgNGvIVs2ySgje4SQrWWXQhl3fgA/xt4jOzJDRjZlZ0tkZkVG
yHa6OM/z3r+xCxZlLQwJgqCExWIJS1nGclawklWsZg1rWcd6NrCRTeSymS1s
ZRvb2cFO8tjFbvLZw172sZ8DHKSAQxzmCIUc5RjHOUERJznFac5wlnOc5wIX
KaaES1zmCle5xnVuUMpNbnGbO9zlHvd5QBkPKecRj6ngCU95xnNe8JJKXvGa
N7zlHVW85wPVfOQTn/lCDV/5xndq+cFPfvGbP/zlX9240CAIIZQwwqlHBPVp
QEMa0ZgmNKUZkTSnBS1pRWva0JZ2tCeKDkTTkU50pgsxxNKVbnSnB3H0pBe9
6UNf+tGfAQxkEPEMZghDSWAYwxlBIiMZxWjGMJZxjGcCSSSTQippTGQSk5nC
VKYxnXQymEEmWcxkFrPJJoc5zGUe8/kPWK1pkQ==
           
           "]]}}}], {}, {}, {{}, {}}}, {{}, 
      GraphicsComplexBox[CompressedData["
1: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
ZtQM
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[1, 0.5, 0], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl1GV7EAQUBeBt5KjRjBqM0TVGx+gaDaNLBVtJJSQUlTBo7BZMUsGWsAB1
Yyzo7hgjx9ioDV8fPrzn/oDznBs+enzsuKCAgIBAlok3eJO3eJt3eJf3eJ8P
+JCP+JhP+JTlrOAzPucLvuQrvmYlq1jNGtayjm/4lvVs4Du+5wd+5Cd+5hd+
ZSOb2MwWfuN3/uBP/mIr29jO3/zDv8QRzw4S2EkiSSSTwi52s4e97GM/BzjI
IQ5zhKMc4zgnOMkpTnOGs5zjPKlcII2LXOIyV7jKNdK5TgY3yCSLm9ziNne4
SzY53Pu/OAUGEkQucpOHvOQjP8EUoCCFKEwRQihKMYpTgpKUojRlCKUs5ShP
BSoSRiUqE04VIqhKNapTg5rUojZ1qEs96hNJA6JoSCMa04SmNKM5LWhJK6Jp
TRva0o72dKAjnehMF7oSQze604Oe9KI3fehLP2LpzwAGMojBDGEowxgedH8n
S1nCYhaxkAXM53Ve41VeYR5zmcNsXuYlXmQWL/A8M5nBdKbxHFOZwmQm8SzP
MJEJjGccYxnD0zzFkzzB4zzGozzCw4xmFA/xIA8wkhEMZxhDGcJgBjGQAfQn
ln70pQ+96UVPetCdbsTQlS50phMd6UB72tGWNrQmmla0pAXNaUZTmtCYRjQk
igZEUp961KUOtalFTWpQnWpUJYIqhFOZSoRRkQqUpxxlCaUMpSlFSUpQnGIU
JYQiFKYQBSlAMPnJR17ykJtcBBEYeP/p3nNyyOYud7jNLW6SRSY3yOA66Vzj
Kle4zCUuksYFUjnPOc5yhtOc4iQnOM4xjnKEwxziIAfYzz72sofd7CKFZJJI
ZCcJ7CCeOP4DZDzEDg==
             "]]}]}, {}, {}}, {{}, {}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0.5, 0]], 
          
          LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
           18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
            35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
            68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 
           84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 
           100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 
           113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 
           126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 
           139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 
           152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 
           165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 
           178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 
           191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201}]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0.5, 0]], 
          LineBox[CompressedData["
1:eJwV0mdbDQAAgNF7yS47ISsjI2STbBmFkD3jZo8iI0V2KLt/lVD2XpGRyKyM
cHw4P+B9njcmlJWWGQwEAiVcoZSrXOM6ZZRzg5vc4jZ3uMs97vOAhzziMU94
yjOe84IKXvKKSl7zhre8o4r3VPOBj9Twic984Svf+E4tddTzg5/84jcN/OEv
AYFBGtGYMJrQlGY0pwUtaUU4EbSmDW1pR3s60JFIOhFFZ7rQlWi60Z0e9KQX
MfSmD33pRyz9GcBABhHHYIYwlHiGMZwRjGQUoxnDWMaRwHgSmcBEJjGZKUxl
GtNJYgYzmcVskklhDnOZRyrzWcBC0ljEYpawlGUsZwUrWcVq1rCWdNaxnhAZ
bGAjm9jMFrayje3sYCf/x8xiF7vJZg972cd+cjhALnkc5BD5HOYIRznGcU5w
kgJOcZozFFLEWc5xngtc5BKXKeYfhztdLg==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0.5, 0]], 
          LineBox[CompressedData["
1:eJwV0VdbiAEAgNGvIVs2ySgje4SQrWWXQhl3fgA/xt4jOzJDRjZlZ0tkZkVG
yHa6OM/z3r+xCxZlLQwJgqCExWIJS1nGclawklWsZg1rWcd6NrCRTeSymS1s
ZRvb2cFO8tjFbvLZw172sZ8DHKSAQxzmCIUc5RjHOUERJznFac5wlnOc5wIX
KaaES1zmCle5xnVuUMpNbnGbO9zlHvd5QBkPKecRj6ngCU95xnNe8JJKXvGa
N7zlHVW85wPVfOQTn/lCDV/5xndq+cFPfvGbP/zlX9240CAIIZQwwqlHBPVp
QEMa0ZgmNKUZkTSnBS1pRWva0JZ2tCeKDkTTkU50pgsxxNKVbnSnB3H0pBe9
6UNf+tGfAQxkEPEMZghDSWAYwxlBIiMZxWjGMJZxjGcCSSSTQippTGQSk5nC
VKYxnXQymEEmWcxkFrPJJoc5zGUe8/kPWK1pkQ==
           
           "]]}}}], {}, {}, {{}, {}}}}, {
    PlotRange -> {0, 0.5}, Frame -> True, FrameLabel -> {
       FormBox["\"Host generations\"", TraditionalForm], 
       FormBox["\"Host heterozygosity\"", TraditionalForm]}, Axes -> False, 
     DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0., 0.48070873591422675`}, 
     PlotRange -> {{0., 201.}, {0.48107562130479914`, 0.48841332911624685`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0., 0.48070873591422675`}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 201.}, {0.48107562130479914`, 0.48841332911624685`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Neutral, \\!\\(\\*SubscriptBox[\\(m\\), \\(i\\)]\\)=0.001\"", 
       "\"Neutral, \\!\\(\\*SubscriptBox[\\(m\\), \\(i\\)]\\)=0.01\"", 
       "\"Neutral, \\!\\(\\*SubscriptBox[\\(m\\), \\(i\\)]\\)=0.05\"", 
       "\"Coevolutionary, \\!\\(\\*SubscriptBox[\\(m\\), \\(i\\)]\\)=0.001\"",
        "\"Coevolutionary, \\!\\(\\*SubscriptBox[\\(m\\), \\(i\\)]\\)=0.01\"",
        "\"Coevolutionary, \\!\\(\\*SubscriptBox[\\(m\\), \
\\(i\\)]\\)=0.05\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Opacity[0.3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Opacity[0.3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Opacity[0.3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Opacity[0.3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Opacity[0.3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Opacity[0.3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                  False], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
             "}"}]}], "]"}]& ), Editable -> True], TraditionalForm], 
    TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.861877117719838*^9, 3.86187712585849*^9}, 
   3.861890183649617*^9, 3.8618913489424*^9, 3.8618918137720127`*^9, 
   3.861891891669593*^9, 3.861891934333535*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\</Users/madeline/Desktop/Mideo.lab2/Coevolution/Data \
sets/FIgures/IslandMainland_Discrete_Migration.png\>\"", ",", "gLegend", ",", 
    "\"\<PNG\>\"", ",", 
    RowBox[{"ImageResolution", "\[Rule]", " ", "300"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.861564192043035*^9, 3.861564236338619*^9}, {
  3.8615685211214848`*^9, 3.8615685282858753`*^9}, {3.861568952374758*^9, 
  3.8615689532789307`*^9}, {3.861569049649403*^9, 3.861569050265788*^9}, {
  3.861789774781876*^9, 3.861789775920046*^9}, {3.861882073932786*^9, 
  3.861882108707745*^9}, {3.8618887745573673`*^9, 3.86188878606497*^9}, {
  3.861891956337861*^9, 3.861891964741444*^9}}],

Cell[BoxData["\<\"/Users/madeline/Desktop/Mideo.lab2/Coevolution/Data \
sets/FIgures/IslandMainland_Discrete_Migration.png\"\>"], "Output",
 CellChangeTimes->{3.861891965433977*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"parsN", "\[IndentingNewLine]", "parsN4", \
"\[IndentingNewLine]", "parsN5"}], "Input",
 CellChangeTimes->{{3.861890258477344*^9, 3.861890258968965*^9}, {
  3.861891369309523*^9, 3.861891376827277*^9}, {3.861891923076826*^9, 
  3.861891928234119*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"S", "\[Rule]", "0"}], ",", 
   RowBox[{"V", "\[Rule]", "0.2`"}], ",", 
   RowBox[{"mH", "\[Rule]", "0.05`"}], ",", 
   RowBox[{"mP", "\[Rule]", "0.05`"}], ",", 
   RowBox[{"\[Kappa]H", "\[Rule]", "300"}], ",", 
   RowBox[{"\[Kappa]P", "\[Rule]", "300"}], ",", 
   RowBox[{"tMax", "\[Rule]", "200"}]}], "}"}]], "Output",
 CellChangeTimes->{3.861890259383091*^9, 3.8618913779723883`*^9, 
  3.8618918344142447`*^9, 3.8618919287262793`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"S", "\[Rule]", "0"}], ",", 
   RowBox[{"V", "\[Rule]", "0.2`"}], ",", 
   RowBox[{"mH", "\[Rule]", "0.01`"}], ",", 
   RowBox[{"mP", "\[Rule]", "0.01`"}], ",", 
   RowBox[{"\[Kappa]H", "\[Rule]", "300"}], ",", 
   RowBox[{"\[Kappa]P", "\[Rule]", "300"}], ",", 
   RowBox[{"tMax", "\[Rule]", "200"}]}], "}"}]], "Output",
 CellChangeTimes->{3.861890259383091*^9, 3.8618913779723883`*^9, 
  3.8618918344142447`*^9, 3.861891928734734*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"S", "\[Rule]", "0"}], ",", 
   RowBox[{"V", "\[Rule]", "0.2`"}], ",", 
   RowBox[{"mH", "\[Rule]", "0.001`"}], ",", 
   RowBox[{"mP", "\[Rule]", "0.001`"}], ",", 
   RowBox[{"\[Kappa]H", "\[Rule]", "300"}], ",", 
   RowBox[{"\[Kappa]P", "\[Rule]", "300"}], ",", 
   RowBox[{"tMax", "\[Rule]", "200"}]}], "}"}]], "Output",
 CellChangeTimes->{3.861890259383091*^9, 3.8618913779723883`*^9, 
  3.8618918344142447`*^9, 3.861891928741392*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["pars5"], "Input",
 CellChangeTimes->{{3.861890260119458*^9, 3.8618902611048527`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"S", "\[Rule]", "0.8`"}], ",", 
   RowBox[{"V", "\[Rule]", "0.2`"}], ",", 
   RowBox[{"a", "\[Rule]", "0.1`"}], ",", 
   RowBox[{"mH", "\[Rule]", "0.001`"}], ",", 
   RowBox[{"mP", "\[Rule]", "0.001`"}], ",", 
   RowBox[{"\[Kappa]H", "\[Rule]", "300"}], ",", 
   RowBox[{"\[Kappa]P", "\[Rule]", "300"}], ",", 
   RowBox[{"tMax", "\[Rule]", "200"}]}], "}"}]], "Output",
 CellChangeTimes->{3.861890261499593*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{Automatic, 23}, {Automatic, 13}},
Magnification:>1.5 Inherited,
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->"Default.nb",
ExpressionUUID -> "1084b0d4-2c3a-41f8-9074-48017db1e9b3"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 211, 3, 48, "Input"],
Cell[CellGroupData[{
Cell[794, 27, 315, 6, 220, "Title"],
Cell[1112, 35, 2195, 68, 142, "Input"],
Cell[3310, 105, 1160, 38, 138, "Input"],
Cell[4473, 145, 718, 20, 126, "Input"],
Cell[CellGroupData[{
Cell[5216, 169, 220, 3, 65, "Subsection"],
Cell[5439, 174, 2413, 49, 142, "Input"],
Cell[7855, 225, 7169, 192, 1083, "Input"],
Cell[15027, 419, 487, 11, 48, "Input"],
Cell[CellGroupData[{
Cell[15539, 434, 3266, 83, 297, "Input"],
Cell[18808, 519, 61492, 1023, 389, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80337, 1547, 356, 7, 80, "Input"],
Cell[80696, 1556, 185, 2, 106, "Output"]
}, Open  ]],
Cell[80896, 1561, 94, 1, 48, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81027, 1567, 261, 4, 65, "Subsection"],
Cell[81291, 1573, 546, 11, 72, "Input"],
Cell[81840, 1586, 1128, 30, 166, "Input"],
Cell[CellGroupData[{
Cell[82993, 1620, 544, 15, 72, "Input"],
Cell[83540, 1637, 406, 11, 93, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[83995, 1654, 232, 3, 51, "Subsection"],
Cell[84230, 1659, 1087, 30, 166, "Input"],
Cell[85320, 1691, 735, 20, 166, "Input"],
Cell[CellGroupData[{
Cell[86080, 1715, 285, 4, 78, "Subsubsection"],
Cell[CellGroupData[{
Cell[86390, 1723, 161, 3, 72, "Input"],
Cell[86554, 1728, 1240, 38, 139, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87831, 1771, 132, 2, 72, "Input"],
Cell[87966, 1775, 4681, 149, 312, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92684, 1929, 1451, 46, 213, "Input"],
Cell[94138, 1977, 1172, 40, 85, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95347, 2022, 638, 17, 72, "Input"],
Cell[95988, 2041, 2367, 78, 166, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98392, 2124, 1142, 38, 243, "Input"],
Cell[99537, 2164, 172, 5, 139, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99746, 2174, 2920, 76, 540, "Input"],
Cell[102669, 2252, 832, 11, 108, "Output"],
Cell[103504, 2265, 832, 11, 108, "Output"],
Cell[104339, 2278, 833, 11, 108, "Output"],
Cell[105175, 2291, 832, 11, 108, "Output"]
}, Open  ]],
Cell[106022, 2305, 193, 3, 103, "Text"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[106264, 2314, 175, 2, 51, "Subsection"],
Cell[106442, 2318, 4765, 124, 297, "Input"],
Cell[111210, 2444, 214, 3, 46, "Text"],
Cell[111427, 2449, 2998, 87, 173, "Input"],
Cell[114428, 2538, 215, 3, 46, "Text"],
Cell[114646, 2543, 1763, 48, 171, "Input"],
Cell[116412, 2593, 8769, 184, 1842, "Input"],
Cell[125184, 2779, 1111, 29, 120, "Input"],
Cell[126298, 2810, 1262, 33, 217, "Input"],
Cell[CellGroupData[{
Cell[127585, 2847, 1348, 27, 120, "Input"],
Cell[128936, 2876, 10405, 222, 199, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139378, 3103, 4574, 118, 661, "Input"],
Cell[143955, 3223, 45769, 857, 562, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[189761, 4085, 6389, 168, 954, "Input"],
Cell[196153, 4255, 13560, 291, 252, "Output"],
Cell[209716, 4548, 43843, 750, 552, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[253596, 5303, 184, 4, 72, "Input"],
Cell[253783, 5309, 60650, 1129, 555, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[314470, 6443, 945, 18, 306, "Input"],
Cell[315418, 6463, 308, 4, 72, "Output"],
Cell[315729, 6469, 308, 4, 72, "Output"]
}, Open  ]],
Cell[316052, 6476, 1720, 35, 213, "Input"],
Cell[317775, 6513, 8615, 216, 1060, "Input"],
Cell[CellGroupData[{
Cell[326415, 6733, 186, 4, 72, "Input"],
Cell[326604, 6739, 89218, 1641, 562, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[415859, 8385, 740, 14, 213, "Input"],
Cell[416602, 8401, 181, 2, 159, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[416820, 8408, 265, 4, 166, "Input"],
Cell[417088, 8414, 488, 11, 72, "Output"],
Cell[417579, 8427, 486, 11, 72, "Output"],
Cell[418068, 8440, 488, 11, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[418593, 8456, 99, 1, 72, "Input"],
Cell[418695, 8459, 461, 11, 72, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

