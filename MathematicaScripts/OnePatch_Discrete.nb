(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    336433,       7129]
NotebookOptionsPosition[    330586,       6936]
NotebookOutlinePosition[    330979,       6953]
CellTagsIndexPosition[    330936,       6950]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Discrete-time matching alleles coevolution with one-patch model\
\>", "Title",
 CellChangeTimes->{{3.857405818873501*^9, 3.857405821613557*^9}, {
  3.857819971255435*^9, 3.8578199900471992`*^9}, {3.858353256405615*^9, 
  3.858353256563902*^9}},
 ExpressionUUID -> "f739e324-17a7-49e7-b7ac-11ca208124b1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"WH1", "[", 
   RowBox[{"1", ",", "t_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"pP", "[", "t", "]"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", "V"}], ")"}]}], " ", "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"pP", "[", "t", "]"}]}], ")"}], "S"}], " ", "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"pP", "[", "t", "]"}]}], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", "S"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", "V"}], ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"WH1", "[", 
    RowBox[{"2", ",", "t_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"pP", "[", "t", "]"}]}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "V"}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"pP", "[", "t", "]"}], "S"}], " ", "+", 
    RowBox[{
     RowBox[{"pP", "[", "t", "]"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "S"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "V"}], ")"}]}]}]}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WP1", "[", 
   RowBox[{"1", ",", "t_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"pH", "[", "t", "]"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"pH", "[", "t", "]"}]}], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", "S"}], ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WP1", "[", 
   RowBox[{"2", ",", "t_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"pH", "[", "t", "]"}]}], ")"}], "+", 
   RowBox[{
    RowBox[{"pH", "[", "t", "]"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", "S"}], ")"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.857405828196187*^9, 3.857405989662332*^9}, {
  3.857406053943595*^9, 3.857406086712336*^9}, {3.857406295964834*^9, 
  3.85740631020522*^9}, {3.857406391851985*^9, 3.857406502099152*^9}, {
  3.8574065741138067`*^9, 3.8574065978156557`*^9}, {3.857406636306747*^9, 
  3.857406667927128*^9}, {3.8574067075906677`*^9, 3.8574067323623533`*^9}, {
  3.8574069808161097`*^9, 3.857406982762761*^9}, {3.857819784474679*^9, 
  3.857819790356007*^9}, {3.857819937215465*^9, 3.857819957937851*^9}, {
  3.857819997677753*^9, 3.857820021776445*^9}, {3.857825420255735*^9, 
  3.857825473379045*^9}, {3.857826353649768*^9, 3.857826358709796*^9}, {
  3.858353270646595*^9, 3.858353313901844*^9}},
 ExpressionUUID -> "d8ddd628-2d7d-4038-bc48-d29d1f62e1b9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pH2", "[", "t_", "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{"pH", "[", "t", "]"}], " ", 
    RowBox[{"WH1", "[", 
     RowBox[{"1", ",", "t"}], "]"}]}], 
   RowBox[{
    RowBox[{
     RowBox[{"pH", "[", "t", "]"}], 
     RowBox[{"WH1", "[", 
      RowBox[{"1", ",", "t"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"pH", "[", "t", "]"}]}], ")"}], 
     RowBox[{"WH1", "[", 
      RowBox[{"2", ",", "t"}], "]"}]}]}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pP2", "[", "t_", "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{"pP", "[", "t", "]"}], " ", 
    RowBox[{"WP1", "[", 
     RowBox[{"1", ",", "t"}], "]"}]}], 
   RowBox[{
    RowBox[{
     RowBox[{"pP", "[", "t", "]"}], 
     RowBox[{"WP1", "[", 
      RowBox[{"1", ",", "t"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"pP", "[", "t", "]"}]}], ")"}], 
     RowBox[{"WP1", "[", 
      RowBox[{"2", ",", "t"}], "]"}]}]}]]}]}], "Input",
 CellChangeTimes->{{3.857406100561563*^9, 3.8574062262945623`*^9}, 
   3.857819833039071*^9, {3.8578200513091097`*^9, 3.857820096292759*^9}, {
   3.857820141847295*^9, 3.857820209078825*^9}, {3.8578254818050947`*^9, 
   3.8578255524135*^9}, {3.857825590386343*^9, 3.857825593796907*^9}, {
   3.8583533206634483`*^9, 3.858353388823504*^9}, {3.85835487590195*^9, 
   3.858354881317089*^9}},
 ExpressionUUID -> "de46af48-a30c-4b5a-bfce-81380151cb42"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pH2", "[", "t", "]"}], "/.", 
    RowBox[{
     RowBox[{"pH", "[", "t", "]"}], "\[Rule]", " ", 
     SubscriptBox["p", "H"]}]}], "/.", 
   RowBox[{
    RowBox[{"pP", "[", "t", "]"}], "\[Rule]", " ", 
    SubscriptBox["p", "P"]}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.860849351850665*^9, 3.8608493888353567`*^9}, {
  3.860849549521646*^9, 3.8608495521107407`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SubscriptBox["p", "H"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "V", "-", 
     RowBox[{"S", " ", "V"}], "+", 
     RowBox[{"S", " ", "V", " ", 
      SubscriptBox["p", "P"]}]}], ")"}]}], 
  RowBox[{
   RowBox[{"-", "1"}], "+", "V", "-", 
   RowBox[{"S", " ", "V", " ", 
    SubscriptBox["p", "P"]}], "+", 
   RowBox[{"S", " ", "V", " ", 
    SubscriptBox["p", "H"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", 
       SubscriptBox["p", "P"]}]}], ")"}]}]}]]], "Output",
 CellChangeTimes->{3.860849354296706*^9, 3.860849390481124*^9, 
  3.860849552397156*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pP2", "[", "t", "]"}], "/.", 
    RowBox[{
     RowBox[{"pH", "[", "t", "]"}], "\[Rule]", " ", 
     SubscriptBox["p", "H"]}]}], "/.", 
   RowBox[{
    RowBox[{"pP", "[", "t", "]"}], "\[Rule]", " ", 
    SubscriptBox["p", "P"]}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.8608495116296253`*^9, 3.860849511902668*^9}, {
  3.8608495657937613`*^9, 3.8608495677019157`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", "S", "+", 
     RowBox[{"S", " ", 
      SubscriptBox["p", "H"]}]}], ")"}], " ", 
   SubscriptBox["p", "P"]}], 
  RowBox[{"1", "-", 
   RowBox[{"S", " ", 
    SubscriptBox["p", "P"]}], "+", 
   RowBox[{"S", " ", 
    SubscriptBox["p", "H"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", 
       SubscriptBox["p", "P"]}]}], ")"}]}]}]]], "Output",
 CellChangeTimes->{3.860849512822864*^9, 3.8608495679876833`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numerical time series ", "Subsection",
 CellChangeTimes->{{3.8574096507298813`*^9, 3.857409665242929*^9}, {
  3.858161969998419*^9, 3.858161976493547*^9}},
 ExpressionUUID -> "d5e022f9-042d-42da-bf68-ab11b3c188c3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"inits1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"i1", "\[Rule]", " ", "0.495"}], ",", 
     RowBox[{"i2", "\[Rule]", " ", "0.5"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pars1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"p1", "\[Rule]", " ", "0.4117647058823529`"}], ",", 
     RowBox[{"p2", "\[Rule]", " ", "0.2200911052505395`"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"pars2", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"p1", "\[Rule]", " ", "0.3939393939393939`"}], ",", 
     RowBox[{"p2", "\[Rule]", " ", "0.4368677407268642`"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"pars3", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"p1", "\[Rule]", " ", "0.37500000000000006`"}], ",", 
     RowBox[{"p2", "\[Rule]", " ", "0.9004329004329`"}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8581621482504797`*^9, 3.8581621739614067`*^9}, {
   3.858162332023149*^9, 3.858162348037448*^9}, {3.8581623949372883`*^9, 
   3.8581624073737097`*^9}, {3.858162674595199*^9, 3.858162715572319*^9}, {
   3.858163487673395*^9, 3.858163498626274*^9}, {3.858163542354513*^9, 
   3.858163542466462*^9}, {3.85816396877068*^9, 3.8581639747059813`*^9}, {
   3.858164094036561*^9, 3.8581640941400747`*^9}, {3.8581641955899897`*^9, 
   3.858164229279207*^9}, {3.858164333728698*^9, 3.8581643524804697`*^9}, {
   3.85816539462722*^9, 3.858165404956283*^9}, {3.8581655584490147`*^9, 
   3.85816556004732*^9}, {3.8581656163367357`*^9, 3.858165626207377*^9}, {
   3.858165671290386*^9, 3.858165671631407*^9}, {3.858165743554099*^9, 
   3.858165745146161*^9}, {3.8581658205089293`*^9, 3.8581658334347143`*^9}, {
   3.858165948599053*^9, 3.858165950726095*^9}, {3.8581660485450287`*^9, 
   3.858166058127633*^9}, {3.858166703731504*^9, 3.858166703962277*^9}, {
   3.8581667568056507`*^9, 3.8581667603952513`*^9}, 3.858340729323941*^9, {
   3.858353671143086*^9, 3.858353721382161*^9}, {3.858365503042618*^9, 
   3.8583655186406927`*^9}, {3.8614684610329437`*^9, 
   3.8614684622325563`*^9}, {3.861468635381432*^9, 3.861468660704339*^9}, {
   3.862079173863165*^9, 3.862079174548046*^9}, {3.862079355416937*^9, 
   3.8620793969973793`*^9}, {3.8620799868524103`*^9, 3.8620799882922983`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"p1", "\[Rule]", "0.4117647058823529`"}], ",", 
   RowBox[{"p2", "\[Rule]", "0.2200911052505395`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.862079404018881*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"p1", "\[Rule]", "0.3939393939393939`"}], ",", 
   RowBox[{"p2", "\[Rule]", "0.4368677407268642`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.86207940402452*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"p1", "\[Rule]", "0.37500000000000006`"}], ",", 
   RowBox[{"p2", "\[Rule]", "0.9004329004329`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.862079404030067*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "[", "timeSeries", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"timeSeries", "[", 
   RowBox[{"pars_", ",", "inits_", ",", "tmax_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"timeSeries", "[", 
    RowBox[{"pars", ",", "inits", ",", "tmax"}], "]"}], "=", 
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "WH1", ",", "WP1", ",", "pH1", ",", "pP1", ",", "pH2", ",", "pP2", ",", 
       "S", ",", "V", ",", "mH", ",", "mP", ",", "pP", ",", "pH", ",", "i1", 
       ",", "i2", ",", "i3", ",", "i4", ",", "p1", ",", "p2", ",", "p3", ",", 
       "p4", ",", "out"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"S", "=", 
       RowBox[{"p1", "/.", "pars"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"V", "=", 
       RowBox[{"p2", "/.", "pars"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"WH1", "[", 
        RowBox[{"1", ",", "t_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"pP", "[", "t", "]"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "V"}], ")"}]}], " ", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"pP", "[", "t", "]"}]}], ")"}], "S"}], " ", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"pP", "[", "t", "]"}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "S"}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "V"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"WH1", "[", 
        RowBox[{"2", ",", "t_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"pP", "[", "t", "]"}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "V"}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"pP", "[", "t", "]"}], "S"}], " ", "+", 
        RowBox[{
         RowBox[{"pP", "[", "t", "]"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "S"}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "V"}], ")"}]}]}]}], " ", ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"WP1", "[", 
        RowBox[{"1", ",", "t_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"pH", "[", "t", "]"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"pH", "[", "t", "]"}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "S"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"WP1", "[", 
        RowBox[{"2", ",", "t_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"pH", "[", "t", "]"}]}], ")"}], "+", 
        RowBox[{
         RowBox[{"pH", "[", "t", "]"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "S"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pH2", "[", "t_", "]"}], ":=", 
       FractionBox[
        RowBox[{
         RowBox[{"pH", "[", "t", "]"}], " ", 
         RowBox[{"WH1", "[", 
          RowBox[{"1", ",", "t"}], "]"}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"pH", "[", "t", "]"}], 
          RowBox[{"WH1", "[", 
           RowBox[{"1", ",", "t"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"pH", "[", "t", "]"}]}], ")"}], 
          RowBox[{"WH1", "[", 
           RowBox[{"2", ",", "t"}], "]"}]}]}]]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{
       RowBox[{"pP2", "[", "t_", "]"}], ":=", 
       FractionBox[
        RowBox[{
         RowBox[{"pP", "[", "t", "]"}], " ", 
         RowBox[{"WP1", "[", 
          RowBox[{"1", ",", "t"}], "]"}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"pP", "[", "t", "]"}], 
          RowBox[{"WP1", "[", 
           RowBox[{"1", ",", "t"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"pP", "[", "t", "]"}]}], ")"}], 
          RowBox[{"WP1", "[", 
           RowBox[{"2", ",", "t"}], "]"}]}]}]]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pH", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"pH", "[", "t", "]"}], "=", 
        RowBox[{"pH2", "[", 
         RowBox[{"t", "-", "1"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pP", "[", "t_", "]"}], ":=", 
       RowBox[{
        RowBox[{"pP", "[", "t", "]"}], "=", 
        RowBox[{"pP2", "[", 
         RowBox[{"t", "-", "1"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pH", "[", "0", "]"}], "=", 
       RowBox[{"i1", "/.", "inits"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pP", "[", "0", "]"}], "=", 
       RowBox[{"i2", "/.", "inits"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"out", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{"j", ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "0", ",", "tmax"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"pH", "[", "j", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "0", ",", "tmax"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"pP", "[", "j", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], 
        "}"}]}]}]}], "\[IndentingNewLine]", "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.858161981150495*^9, 3.858162059417266*^9}, {
  3.8581620920414352`*^9, 3.858162132506092*^9}, {3.858162178242031*^9, 
  3.858162319822557*^9}, {3.85816235978388*^9, 3.85816237975879*^9}, {
  3.858162569187427*^9, 3.8581626704604263`*^9}, {3.8581627239832563`*^9, 
  3.8581628015820923`*^9}, {3.8581628643468227`*^9, 3.858162952538213*^9}, {
  3.858163181715629*^9, 3.858163221944693*^9}, {3.858163719839778*^9, 
  3.858163726059153*^9}, {3.858165680333869*^9, 3.858165685210919*^9}, {
  3.858353725553452*^9, 3.858353753631197*^9}, {3.85835395037337*^9, 
  3.858354013668841*^9}, {3.8583547850144463`*^9, 3.85835478857899*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"maxT", "=", "1000"}], ";"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQvTDifd+dfW8c1yw4MRFE7/Cx3A+iDzBlXQLRZgfb
boDoF4pS98Dil4qfgejNsWGvQPTFRZHvQPTX59lgOuel+x8QrTaH4z+I3rd0
F/NdID1nRSsXmN5Xrgeipzf6GYHoTz/P9IFoD+fn/SC646vWQhC9aqfYYhD9
5OPCbOP9bxxf8y4H05vj55SC6FVft4FpDbXUACsg7R7xPxhEl6061G0PpP2n
XOkH0auklh/QOvrGcZ6Y4SkQbfRK8DOIdliiDKbLZqn9AtFHLef9BtFtV05w
awPpZ/dvguk/s34KgehT5coiIDrwzuW/IcdA9t0A0zGPamxCgfStKx/ANACL
ZMhD
  "]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"Partition", "[", 
       RowBox[{
        RowBox[{"Riffle", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"timeSeries", "[", 
            RowBox[{"pars1", ",", "inits1", ",", "maxT"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"timeSeries", "[", 
            RowBox[{"pars1", ",", "inits1", ",", "maxT"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", "2"}], "]"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", " ", "Red"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"Partition", "[", 
       RowBox[{
        RowBox[{"Riffle", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"timeSeries", "[", 
            RowBox[{"pars2", ",", "inits1", ",", "maxT"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"timeSeries", "[", 
            RowBox[{"pars2", ",", "inits1", ",", "maxT"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", "2"}], "]"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", " ", "Blue"}]}], "]"}], ",", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"Partition", "[", 
       RowBox[{
        RowBox[{"Riffle", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"timeSeries", "[", 
            RowBox[{"pars3", ",", "inits1", ",", "maxT"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"timeSeries", "[", 
            RowBox[{"pars3", ",", "inits1", ",", "maxT"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", "2"}], "]"}], ",", 
      " ", 
      RowBox[{"PlotStyle", "\[Rule]", " ", "Orange"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}], ",", 
    RowBox[{"Frame", "\[Rule]", "  ", "True"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(p\), \(H\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(p\), \(P\)]\)\>\""}], "}"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8614689520545397`*^9, 3.861469129542404*^9}, {
  3.8614691646165037`*^9, 3.8614691928877497`*^9}, {3.8614692877272577`*^9, 
  3.861469308553939*^9}, {3.8620794352819757`*^9, 3.862079497678587*^9}, {
  3.862079586189502*^9, 3.862079586482669*^9}, {3.862079815928833*^9, 
  3.862079830021433*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[1, 0, 0], PointSize[0.008333333333333333], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1:eJw1eXc8le//v7xTNCghpEgaiJJRJE8zZTQ0iJAtqcyUMkpmSsoolAYZiaJo
mtl7zzPteaQyIn2vz+/x+PXPebzOfZ97XNdzZrP1ZSM7djY2tuH/2Nj+95mp
y/Dmy6SB7f/9o+P/z9f03SeLR2hIsav9p5ZFQ++LhJ+BrTScPqvFFfWOhvC5
ab+YQhpUuN+c5vlAwxsOcGpm0CCkfNQh9RMN8V/4aS2PaLjXxQw1KqDB7JPB
hsdBNIh45c4vlJLPLLGbrZ40LDcSXv+wloZV4WEeNfY00Nme318g97Exezb7
+QwNPxICizfSaFg0yi9oP0KDKvcJjo4hGhw1+44aHaRB0OgD34qfNDBWnVMz
UqehmSbrd/8vDexmwYHTqjRkzz3j2bKUDl73semTZG76t//ILS469FZuq7mm
RoNGzKFrTdx0BB6aNHbQoiHOKXDx3zo6XtaIdPLr0/DC5M6tGUE6/A2uuLif
ooHffdmOVxvpsD9hr2JrTcOvnzvb5jbT8X5lXXixKw1XONx9GFvp2N0tdMYy
gAb3jTfOGErSIcy/OZs9loaBrqO7du2kw2gP1cOZrJexACPIW5aOG6u8eU+V
0LBbhZ0msZuOsi8h1y510zC3fKprqxwdb8VyN9j9okH3RYGjF5klm9SDJpfR
ITbQTeMn8+l1YXEl5Lltow6tZyO/51Y/a+AjRsdxyZ9ue8n1LVhhTRPkvnzc
w4MF0nT8aPT/PryPjou+CjOJO+go5TQoU9emY9LhZCJdgo7spKQ9FUfo4PzP
TvsuuU7+s5OFp03oiMeeiJwNdCzGhIiVnaPj95sILRsBOmrufn3404GOzg9u
3Jlr6LjyZqd74UXy3tIXDFJW0AHrkQxeNzqsFOQrbch++Meydrd60LHJ7sTU
1DwNYocLDWc96VhtomW2OEFDw5uz865kZvKsDBNk0vBEyH2dmjsd+uu/ZrkQ
fHxTGPa0uExH7vyHcsVKGpi6fwS7z9PRyLZqLPobDcK7ji4ttqZjKUdi+rds
Gm4GJiptN6VjaukJ8/ZUGvadfOopcYwO1n8VwSue0VD2Q46zk7z/1U/TqtcJ
bq1fqZudJ+uTXb4k4vADgu8L2ZGLUmQf5t1XRt6lIUg/na1MhI5HDewHHcNo
8FWxfTy5mrz3ryJ3eggNZ3u3BNoSHG5i+QtyhNJw2Gb24C0qwXNKfXk3Of9H
5qbyNMILWQHmH5t7NJSGxhbrPye4n8dCzEMaIu2flHcQ/HgE9Qw7xNFgvz86
qsCBBpemntqSFzRw7Yq/dsGQhmnFv7WRBEfV6uolmoo0tMjKuubk0dCon6uQ
LErDZ9WMP0u/01ARIRk7sorwdzCg07yR8Il6ycbqLxXbhrdKRxJ+eXwIDTP8
QcXoDsejl8j6t7uMnhscokIrjie8iLyH0/6PWaZ9VFygMy3SCe4uraNNlPZS
IWPAv+Iq4c/tQ87pyoNUvAzSviBD8CBzfRf/xwkqdF0Prc8kfJkMjaxS+EPF
E0vZeQrBV0SzRlEUFw3n+a+XPCd45BPc4ZIpQsPfpgOaNILnafsv2/TkaUh+
FNDks5cORX23x+LkfXs5v+TZq9JhsPbCi/7zNKwVS/QKVKdD2S9FUZGss2jZ
YZkKLTo+Wx8MTk2nIeCqaIvoQTp6BbitaonOqB80C/XXpSOqw+ml5BTRC51N
JQwyN9rZX3m6ko49QctvqJF5c1nUbo1NdBya9jeK1iH415DT+UR4ZXpQOH5I
k47nh74nFZNP4VvX7dRAcBW1f0joJMHrbIb7MxU6PknfMfSxpeNNbsoWEUU6
2PupWW8IfqNnjfWLCR+36pz2unyTjtjjLstTtpPz9J/fuHOX8NU60YchSof2
B11KfSzRrZUjD+6sp+PVFsa3Nc/oGOIWjC0i6/0q8t/MjleEL+8PDTznoKMu
Yv7dnzQ6kp7U//d4lux3mRTt8ms6lF7laJf2E3zHHErxTqfj3OWngauaafBc
uZjDn0KHbl/o8Ryi49H5gTbaz+m4V/eg8S/R/7c+52m8j4ku7TjdIvuU6LPx
KYGYe3QULvq3BRG8VjiwPxolzy/H+49Hy5+GqgxjI2Xyfpv3KocmuNPwpVx4
1xvCP6fq+v3ljjSYO41H3iB8U1wuq/nDkvAznp7bS/ZR5ruSkCbRebuQuCkJ
okMyqzfPdJ4kPlJLaQ3mpUN2q5VKoxENseOHLr0l73VrrdzPvSdo6FSr1K+q
Jt/LT4Xyn6aBs74y9h95TgNp5duOZmSf620CfrnRkMRDP7/Nhob3VZ55Bodo
sGXOV+2/SAOePx9NJfygB6xyCL9GeNpuG5g0R8UXAyXPn8E0HGQuHG5uo+I3
tXaVNtEDf/kPOwvyyBzwN+MwwZVAa4fGQAIVxpVNjAqiN/x6v3s+BlER4Ra9
1L+JzDYPaLGeVBwoGuTbQfzKYckW1ebzVAhz96R4LpL5AyUr1Ybcb8fUr3Ci
j/lvrnzQJPMKNfEOBj/RIdhl5zlSYe0C/TXEX6I4Lp3j8qAi5vxSXhbhy/N7
/p4SgVTwNitfP6VE9t/JLZweT4X7gdXTGwgfqlbGHmf7SMXX7pRkkcN0GDp5
Tct1UiG7YX5S/jgdGc3NLJ5/hJ8zH1ZpEF030bjNJi5J9nWric82C8KniKQH
VLKuToesIqrIPuo2FVhkkHU5+vV1yXp7OtY9drPo+0zDltKNsn+J7vNTbTha
WDQYfl5SesmRju2upj00sn/tS4IT7cjxfO3d36Zk6LCslBSnE17cr+miFByi
o+0OhyCT+Mia6N0SfeQ+u77ZfvQwI8eldZ/8vU6H92/5R68Ir37l6P7KeEh0
J/9U8B0DOnjm06gxBO8NcVKmqoTv279petl9o2Ng7mdiG9Ht6JWptyrr6BAZ
5tC9Qe575FnWo+sUsq7X2HafIOvJ/n3t7gPDxLe+Br67zUfed8YmrPMH4XHM
Ou4Dy+kYSwv12zZDrvP45ZdTJF8c+npsB8ccOS/pTs9CO9Hhlzscrcnxbd8m
5Zu+0lAnXHhq7xQdWvNnFZSJPqfu6r8ZSq4vcqklLYr4weW95zZcIPcffzlh
pONCg/jeuvE/tXQEO2VdTyX419Rn7LP9QodmE/2pgA7xi4xV5tRkOgaflPEy
99AQIv3MNIPow71ta8tObaEhQ6ZWTITw7XPS9Nr3AgRvtpyvA0+T97E+9Epx
NeFTTPbYYbIO28V3R3EupyGXqzG8keQYLaWF60eX0nDK5NqowA8aLHTnGWIc
NMiXffBpIzlvch/zTRDR5e6h3sm6S8QH2u+3+6wl34eElrFkia/9PqQ1TXQ6
7K7Bge3EL7JlY+qapEke6+R6a5FLhUSA1r3hAzQ8sFxc5eVHxbfqDtWlhK9L
OJleOoZUDP9R66A70aA36LbtvhgVcgmWznsCabCy6ri18g8FRUcZy18QHxw3
m44z7qKQPBDeXk98smyhiPa3iIIrmudtTxK/mjA8p3D5HQV3B45MFv2j4bZ2
sh57GgVnj+yYNiL5o/XGy8NTqRTUcGzTLCX5xWrywhdzcv5aC5ONC0THl2fn
F+oUU7BMPL/8C+HLyrWzd+52U+Bg9vJ05VGi8+/vbv+zQEGkUvidUXM6dk56
ROzZRgXO1aaOOtHxkPvg9sLTVLwx4NCIuULHk3vmj3juUVHNGb34xZ/g2Elu
i1s1FcE+287tCaVj7tmhi6LcNKgN6zi0RJCc8OhN416SJ3s/CSkFRNERfua6
Qnki0dHXZo+3Ed0fjM8+UTFGdJOj7/obMueNKGtHER+dMbLQ4I6hY8W441Q/
yStqLpuW6T6gI73xQFXFBTp0GLeKzcOJ310QkcuIJD6zruvYudsEN3JCz5fk
0tHx5uQpW2+C4+YSOtkJtM1v5wy+RMfaO2aidIJn/guPmGOEj/zG34fP8zHw
/bXM7iKiF8fjB1hOMgwcfl8ZqKhBR1hHZbSPJgPHqr6J3dxFB4VH5+jhEwxs
6dfcTSe5SPitWEWAJQNNQhMrH3L9Ly+n9PywZ0ArJTvn8yjR4dl0B8fzDKia
PziyguSTzI3UkRpyvPiy+vjLBJLbzYT5BcjvmVeHwtZfIXnrzJ/tBkYM7A7R
3PDrGA0+Iqb7Q9UZiLAMDimVoeF5iJbpnCQDcaYKObwE/57CM65d3AzIjDGu
mbGomN4Yw3WDRXKwf0G9QCsVdSqUPLUaogfCCUNv86nwjH1j8JDw7SEyb4Zm
ULHLc+mrOaI/myp9j0w9JTrJ6yr9j+Dima5lpEwMFSbiPSxVcZIHTzwZcH5A
RdhKxcX0ARr45CQONzykopPfurSP6KWx2+XTdnFULFaepNwi+hqeH9227RUV
Q5xO7b01VDygttxZILzpU3jlbONOxfsV3vpfyPc1czltJzdRcVDN7NxWkqve
H7zo8reO4FHHXXGU8PWhomZJRBAFT/97o5Oxg/QfBWmR7QcpyJp5bDBLetJ7
E7/cEm4K7JO/Zx+7SvzKKcZXl9EDTcnIXVJJhC+P1tu45/dgB//OuAmSBwf/
u72l/1UPtA2dXf1IDyz70B7IH9+DXdlzMaZEN34+9ew5TebMN2sD5Ql/DDum
KppTehARlUXJIXlp6yXsulfYAzabQ3qBxD8sozVOW/T3IJWtOcOI5Pz9v7nV
pvgpKM/pOV4ZQnpDpjhqj1Mg43RaLC6eDjf2bzyHHlHQ9DikxDuDjoWHgSci
hyiIvmlQvY3o4pfVmj2ZGlRwepzMP1dOdDN5SaHfC6I3U4tCPxtI/9kuaFVA
dOuS7JzKu3ai4+1TV7gIbpyb+ySvdtOxQcuAn0ZyUI2eie6uHvL7h28N24iP
Fj360VTRScf13qu7h4gvRW1pPazZQseW991Tx56Q/MKse5xUTa7ftfhElXy/
5OCZ7UsLCZ6/rZbr5mRgu8xMsv874k9/P4nZqjCQVeJbok1y2tzH9WFCjgzQ
P/GmBhI+YkX5Ev1IBmpj/Q1vEb04bp4+ZfyBAfYZn3e3yHqdCjwc9q6ZgUHx
4oE2wmu6Ls/+nlEGMttVudpIfyxQjOpz+cuAU22OEIX0jLh07byNnEyUBbeH
xpN+NKBtN/JqJRMCWb4Kwmk0xFh+ODO4nInP61ydlhK/We45L9y4wMBW/tnP
kvto+Plche/SCAPnfhxRN2Gn4YPwv0h6AwPmC57VZ+qpsIrY2GzzlgGbqmie
H4mkJ3yL8TQIJXwS4m1pIzmkc9uhVM6zDNT/tlfMO0IFx7H+f6KEfydbxBZl
Zang/uRRs4f46YjjHfHKdVSIrv5TP/ue9FVxhtPCPwr0yo4BpN/VzD8xkfxJ
QYMVz38De4hPj/SdeDROgR1vw42PFBpurPOWucqiwPDJL/t9JBeqlz5go8xS
UHdsvakh0dds52SfAi4qGuVO6yxoU9Ej+zBpYTMVrjLhKVolFNy+tPvHKYKb
BLscGd5DFHx5+nLO1YEKofDxbWqtPdh66ok3hfC1+aaRuK9zDzYtnKtaVUau
O5w+ZM3Tg7NP96SZk57UutqbalTQDd6v0rZCyjSsoZzJDfLphm1IsZoX4de7
7eoHlut3IyfPdn0iyUWuHbK/X+/oxnkBLdUMkvdEiud2CK/vRvNvffkOkj86
3NO3fhfohps0l5MZ2W9pVZrR0PZu6PPkfLEh+erWz7S5CL1u3Bbh3OgZTIfK
tVev7vp2o0JsUeJ/uV2r1Efxekk3QrdQcmu+kx7gm5ibJ9gDk5TkDEk66fMV
XP52Pj3gKxb2LZyl4z+XW82Okz24uKWZJkN0MXFJzEMHFwqYv+6cFBRj4HTL
yZtV8xQsZhalycky0GYa7Fx4n4qM0OvG+/YR3HmZPdUiOju34PJ59gADtDSf
6M31NLAsLokeAfGJxtde7KT3hJ7Wit2iSn6vZHSvkOC+e3fyHQ8FBlr5w5Ii
qHTkLFPnMdzBwF++gm5Fcp/+T/f7K9czYK0aYn3Tm/hHXIuG4H8MLE7cdzxS
zID+cSF4jtBRveKZYvhSJiSWTfPLkFzHOv93l4Y6E6n3PQXiMunoCVpScNeD
CZe61Ze2kPt2nTFdn/mMiZNrBIv3k/zZGLpmw3wJE/F24imWxO/PshuEj1CY
UE/LX1hH9I2l5kThnmCirynDsYLgrs0zf0TgFxN5iufXFJG+fufpL2Yti4nD
exUN9xH+dK2hPdzAYGLtZq6U00Sf1/ivV+WoYMLw13cOrcekN/sLDGUmkVlY
o3PTUSpm/9uqY+7FRKPFr73sK0huH+L66EWeP6c6dnamigLhooMXwtiYUJWv
q517QHTvuvkv3Y8MDNx3vzRmTXTR+ZFEGNETqzs3O+P3U1AlnBZ/nJesj/9A
Rd5GCoSkXpeUEH+/rRHn1MBFQY6C/L9txnTkdo9eO8FG9jXdcsnnYRqixCua
Q5dQsL94+EeuOA3u7PyJ0aspSN4sxq57lopxd65NrhIUsDI3P3N5TEH8igGl
CR0KNOVt66UpPRj5c/BzrisFMfsLq45J9WBlg7OtYQoFHAIrNoUGdKPXwvYe
zwAFPFyJa7RHu6D4ZPTGXhnCt7Pc1Zk2XfhvmluJdp2Ka3lLdr6d6ITAErHv
/zVSsU6L1jp4txNWQjU1ISRPbk5lZWRpdkKcYm2nStb/u4tnzSbuTjjLKK3t
JvlhmYvN8KofHUjLp4yHkv68M5t3B/9YB9bcDNE8eIaOiHtrHsT+60BmHj/V
LYz04ErhqI/Sneh8Sc22/EzHvFe2ooVLJ9L2fb1qMUTHyW2neaRrO5FyTYL+
fR3RQc8oCy+NLoT9Ta2b2E9yyPc3U4dquqCbezxJ/RwDt8PfLdF37sa9XYNB
kv4MSArUK5eL9mBBfTZjazzBuw8r6HlfD1gyoU8LiY6eUVgyb/yR7PN1M/PY
Qgb2abkt5XxEhdjEfhvTKgZcjjsmXiM9OrL7snV9LdHd8udqgnvpkNJoy2ki
x9NCbkkWEZxvs1l+zqSIgRe29RYmWxng2VXw3vkdyT2TPw3YHxOe8tebK5D7
p8T7Kv0i+p81M/Vv1JeBz0/cavxcmMh+uMdskOj21TSjwyKNTHwpGme7r8hA
uWHkbecdvThQciXThouBWaEeuoZnL5rsP1hOkZwoy113NiG3F2nLXsr0JNFx
1+GLeepoL1xcKlfUX6TDY5/Iv8/r+rBTodH5tgLJA21GpYayfahvtu7xIf2p
2HVr+B+VPrToJFAibpC+U1V26apyH2bcrzh3kTyjrroLcZJ9kLh5X+Yv0R19
56s/jqzsg80f6w2xolREWSvvSKL2oi+GO1cjh4I/q5Y3Vr3sxav7YQLhhhSk
hJnc2GjWC83s8q7frB5IJOU3b+foRbzcnv5hklucfr09nPmCid+P90x9NOqB
1sth+nsFwucf6Wuj+HsQXZ34PeAr8cNwfrHg/m7EFmtcTiX7fjFJ/bw70dkj
74+aTOWQPGhw4vWKt8QHND0eORHcTTtLfKp63Q0e8btKd3fT4OHktTCX2w3T
1i3Ob9ZScVyNuja5sRuZ39KM+6Z7IKVcm/pkvhsWmdJqpX3dpN+/+uqt0IOb
VunbXtC6wPT0F4+73gPu8suFzqOdGCw+eHRLQw8eGz6re7ayExtdzm1bKUdB
deLq/cpaHfhzfSpK8AkFftbqTllR7VB0X/V5mJcKZ/erEv+xt+PwuUHLObKe
u1YyIyrC29BWMvswiZ+GHyr1Z5SV2rBb+fG+3aR3VMxyKB3810r0+6HqID8d
geeUd74aasVVoZiVTWdJP0rLesmYasWKyOhK+5d0ZEhXvDTe1IYJtvpN2f/j
j1iinuqFNjzNV3lRJE1y+gGsvN/ZhqTzshdeXWAgoUu0n+d8Oypyb33xSmFg
StcvQFSoA0XyjLpTVAZEDBx5s4Y64Pj7coczDxMJsboRom2duHCjRG5WmYnu
Fxb6kmR9/iR+fK9jzsTL9SkclWw9aIoSlv10lZxfbr51314K3E8KVtXfYULO
PpX104fkZumco1timFi/5NN4K/GrNbJys86xTCwPK3ny9CEdn6oa3gRHMDH7
Z7pcnPgYx/TmAFdfJnjblfgDBhko+X5F08CWCclmnaihUCbODpRzmmswUd07
W/lhSy+ML0b+XiHAxBtW2Uh8di9MT5xZTWEy0HFQxTJFoQ86D6Sue6Uy8M/I
WkortQ/be4xsHzkwYPhHZrvCqn7sj+K6ybeZAfn7X1bcs+zHtts9yc2txL+m
Cx4mPe/HiihFy9og4qvbTU7PN/YjR8z1Pcf//j9RqUhfabIfKq4nlPlKSP6v
UqevWuiHi/l+fYowDTuOl1So/+4Hu5p5WAzpFSsajEMed/cjcm9AhFs9BTsz
JtX6M/vhG1QR+Xw3BcrcTXz/LvXDRLYJBo970CFy9WD3hn4EXeg8em9lD+Rz
dO0ffejDrKVetEtoNzxpu6qjVPtwZtDQlcnXjbzlIkZB73qxevFaQHZWF1bt
bEqJ5O9FRc1cXJBZF+rU73qYOxG9Wf2Yu1moC65NenobsxnYNP6xvpHgPHnv
aZ/7pJ+dW1r36VpTJ2R/rjg9tZX03T99xVfqOrFmxdXE3HdUxG91zN9C74T+
WeawtCDxvb89x4OWd2Fp3JsDnUHd6H7+MMxQuwsN3RTJiaVdWMmht785ugvL
7OxOUx91gGbQPSs634X01gbWlkOELyMLB3+4EX5HjIttXt8Gy7wVJkWEnzu6
BULEuFox8elyTv3DHuzZvD/lslgL1uWt2iKlTHpYHbf5HYtm9Gz0dvwwTIHP
KqP0U9+bUHpUxVbxJRVFP9QYBkZNOBpjffOkDQ1loiWC+ZxN4Ir4t7N1HR1C
Ng8SJwYb0XOmpIFO+sAF0bE85clGZBxe9/ke6SPdF6IHxcSbkP1o/YZE0iuS
XsqkGvo2QarhlUjzIwael6Z4BnA0g9GVJc+aYmCt3lKnmx+b0XjH5Ok3XSZk
nydKNMe2oNr6idxagv8ToXnLH7xsRUJ937OKHiYWYijbhLvbwGVxzqZJuBfV
3kcff1LtQMJfMQO5o70ItvnVYFvaCfU4h/ol13qhHXCAy9elG8nrk6r8Yntx
JTtKtYDwzbPrybVV6b2YKd7w6sQ60rt5OjcovO1Fgd5u23U+dGSrFH3ITuvF
9lrGyj2uDFj4RJ31iumFoPfzIyutmBBeVE9MvtIL5q3M+EHdXkzFbu6J0utF
Sp7QXNzmPkhuZntSy9uLXu/Tmz6O9GHBqu4kRwMTuckrDqQ+64eFHxeHUAAT
FhuF6lM0BpCS7Hd2uQwT1rofEt/UDEChd1/jSB0D7tddm7Q0BjFgmcv/6zwD
ly2P0UwTB2F15oO43T86Fvd84t44OAjnw52j4ffpmGjvHiwTHIJV5IGvJZvo
GKi8vzxYYQgV5xyPN5ymIcc62N5eZQiO53QWPl6mop27+6Sy1BAy7zRt4rpD
wWUxIf3H/w3hq/tEcPDrHkw9FZseLB3EMrXB4OnmboQl3DM+6zIIJY0G2TXL
u6Gy9sruDeyD0OKXWn5Ltwsn7UK7zbwHwOFHqR2M7URk8yL1cUc/3HNj4r//
6SC688ynUaQfaXbl89fcOqA52HSoWLcPAr07H6su6YBtqluYLPHD7aX7by5L
a8d2tmG3FaZM2BRHBgVfaMfqOc194YcYELBmjvDptUPt0d/WNTvpCFMO4YrT
acd1r3/dz/mJfyV2Lwu3aIeUrtn+rrZuzH9gWTKJz/yVt+OsSu3E70KeCP6h
djRrerhui23HvFT/7BbjDtRq5jjfe90K/6XvDyXQO7CL3TdCeLwZe032PH59
qxMXQ08EHD3XBAWBCk+Z/V0401qyxGZ5I17cPzr4haxHTLVbgnNpPY4vV1TO
J37M9HQLrmPW4mUz12fPph7ki9jtzLepQZVgKTirKVhiJmTyVLsa+3bYPgyp
oWKz9L+jUreqsEI8lP9v8//+zru+cIVwFQysRq/vuUzHDXHvk6orq/DKbpes
xS863qzy2nLkdBX0YtTq/nkxUDMa0nb9bxV6MsxmYmYJfmzzN71cWoOusQ/N
yaRn/A1dncjtWosn+TN7skeYaPo0rLvycD1uzexvPnimFw9EhAYSKhvgwOcv
9zuf5BAfq0vlUk3oqvx8xES4D1cLZwoWK5vx0i2kV9CpD95M860XU1ph7lhx
+WcGyT0HVCMeFLaj/FafRSGjD1semf4O5OnC+5EYPt/l/Zj8b6E6LKwHQfK7
Jc9u7EeRxu8uOQkawsLTQsrE+6GteyiBd4AOf06F75fW98PKLf39oX1MDCUv
jhyf74PZ4Yinv/x6oRpSXvqprg+HOwZqjhJ9//MlR0X5QR+CQw6fVWnqxyHu
tPikg32w37zT9G7TAHL+LTNePt6Lj7q67fzvB6HxiP/ro6Be6HIOBRpcGUKf
8PjBd3y96D7/S2RIaBi4+N6m6BETzGNTIg7PhrFcessKPT4mGKFufUkrR7D8
c7N4ewjJmyd5KQHmIxiz/O44P0PHoTdjIZmxIwg1srM3tCG9sXcywPnLCHzm
xF2rHtFQMuZQGFQ5guPPzuR+OE+Fw961rkrFI9h0IOBrqCoFqg8jTDckj4Bf
P3v8Eh/Rb1G/TftcR3CZUlcX/KsL5Zb8qr8lRtDjcO/CJK0TKn47emXyh5Gz
9+Om/M4OWK1+JGWgMoyrotK7/vURXDtmnroRMwRTDxHTT0vbMfu2LeFf/SA8
buov9O9vw7nKiNykvgGiU0ZqTndb0eLy8p9tcz+y/mi+4lpoQdLBVNH1T/ow
sfhw9nhYC5rTmur4dHohvSYwyl+lBXYzq1sSGxnwm3jhaMPdAn4DlYI6fTqK
Zy+XKC9vQevJs3sLfSgYl1LNj9vagkh9m0mOS124bczdYX++Bce/mIp98GvH
vshEyYrGFrw477Neu6wFAZLD3BrmrTjVPawZebQJRsz69FKuNnReFU803dKA
fYNbMrta2sDyrH39MrgG93m02nK+tMPFMbbvu3kl1Ep8ZI986YD+SXMO+4Iy
BChf1L7d0Ilu46MLPM++Q/MM/ymR2S7M702q+jBVDHWLG1GNsj0QG/3zdt/r
Ijj7YZ0p6Ys/N0+cNS0oxNvsniSnr1R8WqF2TGd7IeJSd/aeXUbH699tYa++
FGBd+nvOm1l02B628bIuKkDBNOTYTRgoWqp378ruQphPx5RrL5J8deWJweeG
QuTtHXv3jvT8Uv1TfDsqiiA8IXE090Avjo74/QoTK8Gq6K+0kuZerJhQ4P84
8B3O9ZKXjlj1YYXTfiN5qXJsCYkIqu7rw1PDR6uMFyoxsYPf/N3Zfnxl7xv+
cqkWC0qi5l7l/VgubNp6rKIBmyS7LjzeMgAeJc3S54rNuKYjpJ14eQCrAnXk
sxdbceZm8/yO9AF4+bhOXt9AdJuiXMJGePOdfUmjAsn1c12zarsHBnBF38TZ
gJ0O0SHLH/xkFtx684l0DQNPt+zp9WwcwNpEP7fUsF4MJS5uupk6gP1Fcwe/
yfZjyYQRtfHCAHrCra+NZwxAT2nukbnIAHT2i2w8uDiIJR9XMs596cetjjUz
umLD8NT6M3hYr58854o9nHwj+P5lw8vkqj6sy3ExXOghfPmalbpWrQ8y7y57
NvmNImzLw1Xyr3ohtinwd9iSMbwov3rq3dJeGH62O06zH4OmwIKMghkT3Pf5
hkdzxtAeHHHb+jUDEYYbEjnHxpAgtSDKnKaD2rAz+dvacYQc1eE1Bh3lEfW0
0m3jKBanxZeuoqG8+MAy/p3j+K9SsE4nngIr5zee3ZvHYWtn7mIp04OJkhC3
28vHUWr82FuprAvqPm5P33SP4WeZ/zzdsRN8OTX6ggljOC9kluog2IHYS5T3
sTpjEL4fGl7R3ga2F3jN3jIK6nG9jvm0Vhw7nPhZQXMUOo/3Kv6JbEHhK+7t
e8KI3hR67S550IyJMh2HsORhdG5XV7HKasLN5b+vCN0bws6alY8GRxox4+SQ
qY5ByAbeodkdIjntXqpIRF4/zrx2Gq2pakBypFlnxJ9erCle+67EowFZP7Ov
bOYl/dtw1+XLhxpw4lCqVxg3HU6hrbrKug0YrH25ypurB6lSXIeeuTbgtV19
+xx/B/izX0lsK2+AibcP+zThdZrQhu3mBxsxVV2l+XxzIyIlBM15xxtxJfzG
VdHYGog3LfMI+tiEzXy7nfObyyF06fF4cnIzjDo65CRGS/BEZme94rsWvG5f
y9X7vRB3rsSmTLa3QnRR3Fwv9CtWth7ZFy3QjrgH3L/Vn3xEklVb08j5DoTc
F58Qj/oAizsPfhWQ/L3ON/FGuHYOtiakdA9okLxMuT308O47jFzLjdpT2APK
ua5FjdNvEZhzoN3zIBUZQ1wfbghl4flnc5HbjTSk8TKNOfUzcS3P2UyY8HuB
4x89VjETtd6nknI8GPBeCPT368jERGic6VLiU1KvHByWir7FnVypqjszTMw8
KKRtUHsHnksfoptJz1CwleTb3J0N5uJhDhe7PiQlzQqd5PmAc8F36xfX9OND
0ve2roU8lN323yWR04+uaP43P+u/IIAz8kyQ3gDMM3b+qbQsxI5VtaXlrQMI
uh85qBFUgveUitM3TwxCIjFsuMS3HBNKlpJqxYNYqvl2ld2FGiztP5Z3XWwI
HqF8r4r2NOJv5K+od85DUNdVu5P3qQUmJl3fbJKHkH9rPUdGfgeeZgYqq1cO
gfpw1951Wyjwvc4eoN0+hLu+xrT//V2C79LGLkbdELaOPbsrLNaLS3wbqvne
DiGLl2f7Vi3y3D/8VjtcH8ILVXnH57KDkPH4xt4tNwRuV6Px5W1D+Jf36ntF
yyD23os8vFdpBEZhLsEf7QahclCncueJUSQmm9C1iL6EKPJ2syuOwdHKWpXd
ZAAtm2xUTfrHoMQuxe//tR/rb9ZdiLo4DvnuhxMH+Pvh8O7Ztn+t47Dninud
Y9OH18JB+y5uncDmzZH2p0iePz47PqdpNQFXzv+GYweZKGsTZX96dwJVrM95
P0WZMNqmui7szQS0vjocGjjBQPz38I49JRMQl5Cw/nGbDlZTLVY1TGCf8UCP
3HkaejK5XVktE2j/m2RUUEFBWqvmnp1NE6g0PXkhSLoH9ip3f94rn8Bq4V+H
XaK6sEdoe6DZ+wkobK9cYrisE26GxrP7YydQHK38uS6gHV9/JnwUvzQBwUBa
UzBPG/IvStI2KU0g8pd0zdjrFmxlrCoUHx3HStEv103NmiHFHG4qCB7Hxm7X
PDGxJogci9/HXDqOKb/n3JELDTD1p1S+PDOG4czjTmID9XCXGuWyuz4KxR0V
t4+sqgOb0rI6L4sRqP/8eE3UtQZ9p1pl8meGMDnf12wnXI0jF3M3hBP9WPIk
3n4bdxUEJss3v1DsR+8ubb3dRpWwGNp8X7Sfibgbf5ZeH62AZZVyl6o9Ha7X
9vU5UiogUDh/UTOvG1+rxIJ3SFbi1Fxy+um2Nuim9lA9aitxxFv57WanJrjv
nTjSUFaF+NT2KTGlWmQNhYaKramBt+lBeefxMpjRZVY7v6xFaCAzzWukCILn
/7654V0PpSvSQyWcX9EU+bPtJdGfmp/HNs6szUVrW9a61RONoNvlpcbce4dt
apNfamSakSZ9dxlOZGCN29erp263QOv3Vpqvagr6Fn9oS7JaESMv8uLIpZcY
vhPhVEn6hvbZYcNrj57B7MS++bSZDjCmWI6N/xIgb/zrr+T9Luw7PjT/5edj
XC7gDL+/pwdnf7SGSDfE4uTtRF/uHgpq1t8/WnIhBim5Pb9KQmkoGGHzVcmI
xgvTKSvbBDoEHY+IfAmIhqeVs9UGdwYE56ro/qxo+IjzXogjfbgvvPXj45kY
uE4k1PkLkr6aHv/ke9YjlFfIn/Ht68Vdtby0YOV4dCjmFZ1O70N0rfCGnPKn
CJhb5tHr2A82V2ePhsbn0HzrZblOdABRNC8PXeFkXD9s5T9UPYCulEmtrNtp
8Ho/+8vt0iBUr590Pe6WhR/vDR5UcgzhaYfNE6/sHBRQH+9iixwieaDt0Tb2
Tzg/s9tEhGcYv3+fWVewvBCWG9vHuPyG4aBl6zue8h0H8049fEAbxqU7oRyX
46uQ6nYk+OyuEUT9Er0yztGIkfGDWdPOI+DkOsQh5tuKXm7PP9MxI3iaIDN0
6nEXAhN3Z0lljCBQTfth10o6Htpq7ap7PYIDmQ+0W+uZcMt8xvsxegSO6wL9
ps/3w3fVhjYbpxHQtm1hG/8wCOGy2aQ2qRHQLyf/zif5/copU+8LHcOY7Cs4
aL1jFBknmeEJHsPQ86iWcDs9hmCTueIutmE8VD9g8Ed5HGyjt/Ou+g7h8Qm6
UzNzHE9PBhx7NTEI7vKA5A2WE3C561FwxWgQNdSTp/Q/E/666mqOkvwktv3i
Q/m/E/Ce31q8ONuPRanKxXOyLMjeTNzw9kA/FDTDGTFGLNx4vpJjhXcfrvfw
7Va/yMKeOe69O7J6waGWP1Xlz8IK9vudylTCqzx72/F7LJz88vD8TU4m0tMz
l3U8YuFR643zRrsYKAzPyjVJZEHVolV99UnSD69/Oj71goV962z95CepUFL4
lDD6koWdxutDi5QpuMYYVjUmx/vWufLeCe7GISGtAv6nLKjfHVVS6+kEY6/c
aGMMC73On//aqnTgxJJS6vQd8ryGHc1mSW2wmnNOfnqDhYwylX96Iq1weW3I
4+XAgtvegfQtSc04+2T1rcd6LGhdUV3x/EATll33sD++hYUpqaLfhiMNiNdv
E6kZn8DeyFOxm4zrsfeB6erMpAlEmFfcsueoxbJNB6rC1Sdw/fHrXSuZVbgy
VsQwzRtH0MuYPQ2sCkilSvhPzI+h5j2vfLdcOS4IrDi8ZHEUT1oGaAOvS8Fk
rhw9RXAyZnssxMb6O1nXSz9/TA3B0X733oumJdD4/nSVCMF992SOpffjYtga
UW2MlfuwctcJoXcSxXjU+W3mO8ntk2yNU9P/irBsAy39XnYPnms+iV8uU4yA
2s98VUNtMI2yX/43vRiuGwT4ej42YpvYbkrolRLE6m494p1fBeHA7ImysO94
IDtl96u1BK4Ju0xkmaUQ4fNKu7/1G0q4b/+z9SqHVJeh9pqzH6Cg5BieplOJ
notMLX/HLPhuerPlx6FqRAl2nx85mIKgdaf76nxq0cyxxc7b4zl6jc9JajLq
EbS+sik1Mg7febmPY18jeqP2aw89iILM22MWZ6OakOi8l6ajdh/1+sse+vzX
gib16+MH9oSB77Tjrf9ut2LROmgmPD4Q1R4P7ojytaOv32/dJo1byNuW/LTu
XQcoHepDU4l+KL8229Zh2oWN76TtTTfewMGPeS6tq3rg/J7l9fX1Nax1sg7a
U0rBvpkTrpECV2Gp+bQfN2nwnHVfOqvqBapnt8CmRDoupdNkclZ7Ycu8eNq7
Gwz890h9QDDQC4FKFuWLxkycSf6TlJRxFZvlX43m7upFVcJ6900J3rA4utQ1
kb0Pz93mNgbc8MGb46r/Yur7oL1S0flemT8E3HTuPI7uh0lo6Kny6ACsvSCR
WXxiAIOitw8scQnG4e9D245wDaL5lI/gk7xwnLgcfiGG6MTJj9tL1P5GInuz
vuJakyFcC7BIu80eCw/TkzOHJ4fwfuPdvS6LT5DjrC7T5TOMdrN2MWXGS3gY
T7taso0gd36fUPzndJwPfu102WsEKUsDUCaVDenIhKFQ5giCvjr5TVI+Qq7O
z22FxijmfKnnn68qQpVN9e8ND0aRI1sjcUenHIoPjlXmkNzPLqcRPn2uHj+8
NbLil4/B6NX20tqPLZivjrv/QHIMhvEep9xjugD9xwu3lcewKba4z/YKHfcE
3jrVK41h7MAnFc+EXiil+Xle3Ex4svFXx+iNAXDeLm2fnxvFnaN+XxZGh7Cn
syzvTtEoTi/JuLi/awR71H6KnLs2ilxJ3bhjR0lfOW16M0d8FDv4pZ/KWY7D
9Z+kUXT+CK7E3FTqFJuAncKLXTTDETQ4iAz8S50Ax9ofa1Qah7HcP8FZlpMF
frEGCenDxA8MD7PlED0I4dRgiucSP2laX258jQUOmt6pO4JDUFEx4lOLY+Gx
r5Rdi8sgzon+0336joW7mw3e+RQMQCbnzFezYhZG/HjZNnEMgD3q6dvLdSys
szc0dtTsR43E1g75dhakEv92yl7tg29ejkE0hYUlS+cCbVJ6Ye9jP6PEZGEm
b2ZCoJEJX/Y/L0P6WZjM/2+T5zQDVbn7rdoGWei5e6q6UJCBrMAlyUbDLHCv
blUxVKaD0s/eIjLCgobrKumJbCr01i3u1SHzkciS48q/e9DA3L+0npx/oP3Z
vLRqN+oNdn96O8RCm/Ciu2lYJ5a/cZpuGmAhrkLy0i5mO+wj/4St7mNhuOXh
GbpOG+ReUw3E6SxU6tZftM1rQdzA8973XUTvdfc1X9rXjCS5G3JqzSy0F6WJ
OVc1or9vreFcBQv3q9Q1Ai41IH276c+yzyzoNDd7yevX4XPdvl72FBZOlHHG
5dKrUVYX9Uqb6Pf1Yt2o0KeV2H5Pct1/tixUCez+ZhtYjiGjfIE1O1n4YMGK
ZUaXwpN/173e7gm80BetTW8owaPJgtwPjiQPV356laRUjE/rlu4KKRmHmzfv
7V2Vhbitmm4V0EH6bHxyVB5fAarCbgtHRoxiqFzAXPbPV9zTufXje/0wOHm1
/Bz0vmC2k2+3XvAgMk3OvTLk/gzrgIPub/P6oLqomFB65BPeHpKvtr3JAN8n
z9R3vJ/Q7yaQrnKoB2sFXXx/nv2EFVKr7hp0t8J0RIJ+RfozXm24Vy2s1oB8
Nkk7qtcXLHX2unzWsRx1kgYmjsrf4Mju0W5yqxC82uWN7A4FuL0mtjL0Xy58
Z++anlsohHLWQ5UTjCy8UmL4HPAoBmPburn6Ta+wTkIlfEjwO+ymSz8X0J6C
eWJQa3ioFJz9zdSnBdE4vmljlHZvObYdoZrpLY3AVd3IAI3lVYhNPqDX4RKE
i/bJ5xRO1mD4h5aEx01/NH7LlDCqrINNxPS1pk9X4f5NaWlZdgMSxP6Ju/S6
wUjkovWndU2oyrk1I3ftIm4FKwbfD2pGF2OUbSTAAZLy1FCBFa3Ia/8UYK1o
g8QpiRsNCW0opX8538l3DtfGdKT+qnagrjvpbn6iGSQV+kweDXWiftO6EPmz
JlgcsLe2etINUV3H5w68pyGZtXSyz4SCjLGrl6UiTmLNKVXLUEEa5K2nRH+/
O4Fc96yEOmc6TE3S3uU6noDUDk2/HAMGrikqX7nz5gQsLrzIjZNiYi75Lu+S
oJPIu3j8/V6OXpQUznZU/HcazwQjTxzv7oWlTeqF3wdN8FRs2b6K1304nXZT
fPMtM+w39R6O9+xHxG358zFs52DJfdJ7Yu8AVv9gG+kRssHdb0NPl00NIHRG
VyzGwgGT4Zf2HHs5CNfztmY3D16ELrvJPjP9IRxbp7j9d6EbfB+f9OgcJr2l
1YKrN+wqPiTm5sb5DiMkwJf/kZU/7nUtnw7mGkHOxnbWb50g/PS01HgSNoJb
n4+Jvay+h1HmigDmklHsXj5Wcy8+GoXrNX9ZXx4FD1tmsdCHpzghbsq7pXkU
+39f1PPiegXxGfkffDJjeFzs5eDZmoWN/HsFV/qMQejdA4lwrjwkfT/+J714
DBKbm3yocYVQNGn9YfV3DDcm48IN0srx8PfreOud40gP6ojuvdWAP5mNZ3OO
jGOsdkZ7q0kbBl+9Zp2yGYfC+y9tPqspGJ3cfyrw/Dg6pg9s+8bFRNiYIuvn
uXHwuwpR6Ob9SG8O8h48PA7ps6odt1SHYNl+47zY1nHsi7r/lv/2CNJZlWEJ
P8fwsV1hdQ3xierb+32Mc8cQsPGFyY8L45izFxXefGkMeUr/tEQ1JhB3633F
3Q1joG4tSXFunECCgPfsbP4oGlfK5cruIXpZrhh632QU09GW/1HdWNie5EC1
HhpBSzjrrQzJkxnfzvo6XxoB27sc3eNfWDh2u1ooaWQYKcvTrXjqWZjTTqtd
aj6M68uz9e72sKBftLYipnQId9cWRfQQfR7OS7p9RWIIO7S7OU3HWNiQKFXS
dW0QA1y97mOTZF6rqyVUNgBJs0R9mV8sCLa770/nGsCOxJRjAdMsMG67ekjp
9CNSmLtUfpYF9gPCE2bX+nA+NvrFxTkWotLWzkgQf7j4zmD02B8W4j2N3twl
vaJ+8KrbTzKn2PpPfvnJwNeM7Ys28yzI1Q73j/MxsGE6/1gGmQX3uR90V6DD
xsjPs4nMS3vMwvRTqOhpvhPSSWZpeRVq0WAPdn+v3lBM5n8vfKk/d3Zjx7T8
4TAyl/ul6l6+1omzOZc9ZchsRDnfGlPfjp9rez6+JPf3fPJmOlquDSc5m1rp
5Hk36J4QNX7eghNZjhFN5H1WVchz+ogRf7i4b73FDAuNDzbOW7xthHvj5Y1n
f5PnpawT5jRqQPfcRPWDKRbmV31odyN9Pz3mxd2MCRaC2ka+9cRVY0okjClJ
/GtflmBz2dFKnPZ8FqLPYGG3nDFDVbocGzc/rZhsZaF1LNjhx85SuBrXhdiU
snDRUX3PyZMlWHymUcD5hgVq8kzZ62dFeO6ntn4ohIX/uM4L7llbiNXNu+T+
kL4z+83nm5PeN4Qycv1k2Fn41R+ncePjZ5SV1W4XC52A9js5ySvOH+G+tWMu
v2Uc4m58R2wccuEqZPvdvXoMtdVpMV2v32PdoauLrkdGETDfsOOAWg5sBj/+
zMcwGrlCNBIksiH63ybBIxEDiMxk/v5r9w5s2/X65g168Ughv7+L8x1cMxXG
SxxoeNmocVN67Tv80RY26VLrQNXjJUd/+77DmaFm1rfmRhSszys6eCQbP3xb
m2NlKpEbXfHw1dUc/LbbumSNZhHEJ8z1Vs68R/Lxqy82KOThRvcde9uSXFSX
rS3loWZimke01KTzIwY39vLIeiTh4or6S5ZKX/BN1Un3iUQ8+lSyC3w6v2Gf
lNspFeEHkOUpc3GzKoQHT63VzOkQJPDkVJTNFUE6YpMFZ4g/rvpL8F7OLYGV
iuZk1ucrKHRUDZR9VIoLzPPBLzIvI0BxUTIvsRznpPhXiV2wxzW2y/PhtZWY
rraKaRA7B8VE/uCxzTXYO2wSUplojAfHJ+69T6jDDgcjxZ8vjoPzu9HRtKcN
EH3wp3A1XQ8X5eMvnVnShDbj/V3WY9ponznR+NizGTY3lH8spKnj4FzRtyN/
WsAT3b27RnY/OKTfbFlzrw13JnIz9n9WQlH9Q3bpXR2gvr9dY+Qnjyjhlpbk
7k6E1zfrs8nIwfjitWWHIrvx85fzvLfgLlyv+XgkyZACvmfd6W8md+LGrl33
t3LTcC2pLm0iRxqc0nmd3I50dOsX1ysdksbunQm9TocYmLAUv1GXJI3pPXf1
67cxIe9nIKzQuBPibHmXJ5f0YiJWXot7QBYO2Qe2x3T0wl+PO3kHpxyKXu49
8iKtD//UInrv6cuD4yqNX8CjH9WhiR3pbkpYZ3FghJ/4kWOhC9uhGhWElcZ0
jP4YgKH7ubyl9ur4crfKmzNpEKsc3DnZ72kjp23an91wCBQ91Y29Znq4VZXE
Hj02hInNifdv6hyHfr1+VcKtYeQdtpY5ImyMyQ2rG/l4RhB9SuYbx01LVBWe
28j7YAQm2gvnWqh2uK6QJluwkuRxhtqyG/RL0DzJWmt8YxT8nEuzxcWvIDbn
r6RY3yjUvp3KvCfgjz38+xPttcYQ/4O2WPAmGKoCc0ZX4ojOLyz6aSdE4r+9
ckJRw2OQ2X621NcpDlcs34z83j2Og58r8vvGXoJXYaT6k8s4bgmaH5QQzYSt
SJJnd+o4kn1e717/Phfs/W+zJTvH4bsk1dvsJ/GzdxlH1JZMYI/8ZqGsrgpM
n6/z8CW9QEPKm2b7vhFPDpou3ak0gRVl9fvNSC7hFtL9d5f4ivTpgdHmKBqs
7P9sk9ScwA+uoCEDv17sl6y4PbF3Avr59/g2dA7ASNzvrcaWCezTnCv6EjOM
qOxh4aalE9C9JjfhmULW5bW5sxWFPC/fhfvYNI5Qo69i0W/GsaV9z+oZkQkc
tct9QPMcR3UUu+vN0gn0yb69ckNpHK/0LYuPybOgtPHUgBdrDAvTkc9PeLPw
2dBZ9NOzMaTO353fnsoCFyvffLXeGHTUVCwqid59LJr2kRsdhfmZDVbLO1ko
9Hqh0hUwireJJl/jiF/9HygMxY8=
       "]]}}, {}, {}, {{}, {}}}, {{}, {{}, {}, 
     {RGBColor[0, 0, 1], PointSize[0.006944444444444445], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1: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
scMOj8ZwBOynE8h65QpCWFc5kj40b47/Qt5HKkbk3/hyokcHDqoEk/c9M/7E
25jokeLevXuLST3eV58r+kr0Kqn25c1qUi8hN7bT0WXE5/iVa3i/EX+cSqIG
EX979yLYp4rkgaw20aJpooc3w04k9ZK8oFz3d0jkFxOHDUQEl5E8YVHy7rwA
Wbd/dMX3u7Yk14er/hYn5xXd8r5MARUmcsZb2FmJPgs/ogVIrSB+nfH021ai
36tfFGmrfGHg8KCochPhnN0H6DqWDLw/9E9Mleh9qte/duefY0gafb3RizCj
M1CNx2QMNhPieumELYP6/SbiRvF1hXFxNeHI1w/ZM76MQCDt4JVOwrrT1ypM
3g9Dv/fa7ADha3fKYWo+BPdt7gUMwuJWJ/Tf9gxghYoI3y/CV0/sOssm2w+Z
eHfqJGGZDQbSM6q9WOuVEj5N+EEIu+feg93gnxOJnyHMW7aT+xs/DUZ79bf+
IfztnX1n3Uw7VqyTk15kmSsvKdmdzeA+EP5x8fqqqBvVwksbsG/yV9Hi/RKs
FSiXfWsQHOq3YYow3l/iM/hbCbPSvbaL62nMGzj941MJ0grvHGMSvhL58Zyh
QRHEJOt/DBK2aS9U+G6fhzN9JVldhM+1Gjv99cuEj8lg3XfCbFFzR+RbUnFN
OyR80X85Zlqwds9bPIw3M/Yl/DT3nTm/dgxecUZEaxAWSnmmbmIdjkfXhDl6
ST9uvFOdaD38Aj4/RuUOEv6pn1hxKykQRyYveogv9nM2xVsu9wkyCueiLpJ+
d8asnGRd74nsjZF8d8k87F2adbxzyh3PrmziLybzUu8jL9m9yhWxK+9ZL5Bc
B4ctwnnkfEOZMzBSJjmyZm5fdXKxLWykU35cIjmtTYqzi/WtJSw2vz6sTHTg
vUPyzJSiGf6cOSAbb0/O9bcktm87YITPv6R2veVjQuGRpGrupC6ObZ2KjvFk
QPZq3+1T0IZA3OlUSswYeg0c3zTcPYnnBeW5qidGETd8bH2j9TGc3HUc37WG
8SV1tQRHrzKazE54HwsZQKFGRvKqBCX4rLzQek6yF3MyadpzG4FOk+PRhaDh
t2rq+X0zFPBEWXC3R7TAbH5GLN1JCVR1iXz3l7W45DJtPeOjDP2SlxU6zDIU
vbKaSOw/ijdlU411up+xlbtVbPbrCST7NnWems5A6PDO9R2Fp6GofenXhr8J
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
       
       "]]}}, {}, {}, {{}, {}}}, {{}, {{}, {}, 
     {RGBColor[1, 0.5, 0], PointSize[0.008333333333333333], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1: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
HntSULnNf9sUdeLk/ucnTlNo+hhL/89PdF5QTB3Q+5+fMCs1pz8y17fNVpa6
NwwP/s9P/B03d1Tz/J+fSHefvvVL+39+YurM55PJYf/zE2eJl89LOf7PT9zr
s/dLpibDzBa/jVESv30HrSe3+G+f26M/IWh+32LL4MdLaQWor9jyEwyWx7Sn
W8iQMbnJs/osQ96DZFgt2GQF8lxSOuqrKya3vn+dwgVYo35C0HDTT1T8OWNP
hfoJk+rN35vt95R4IYPqdsWTrxvMXGLmGIfqDV2F88b5Ezag7HmN6tGwx80N
P2EVHM7LjPnWXRXEjfucY/XNVti8m0pdMOY8o/AlGm1T9fdWYed/5nHSYAna
GldcuInpakl5mkoH2paR3wc3om1pm34a9nuAW0JJLdh3eh0Zk32Yn8DH5NdU
o/NSP2D1H+Yn+Pnk5SlQP/GOQtcH8xOlKrjQnkL0/WT6AzA9x2fHkiSXSPD6
tHobNu5IxC+3flRnzmiGh2J+4Eqw0dvfPr0QMlOza8MXxTMosnT+g2D788cw
duKQfbvvv3RYOU8YwJ6vzXgQQ/ryHrSe1OhhrDpq6/Nc0g4aa75YY/2vlztc
YXBRhpR5ryHsfqQRP9DAlMkPuk9jHmB+4q6l9cANXjpQcg95jdUpIP9KhaJh
EBlPrpTBvpPGfqh+F5/xB2n+XS7WjzLRiXKm8k8UkiLCz42tyxOLE1lcO92Q
EkNX21yUX09Sa9aZGSCvzvJee4/yqpHnsS8DeOSWqcNTzIepUTkLLiNsiHGQ
luggul98sjt9VxsW8LvOmRQhKF9xpFlLiWrCG/H8p3IO3d8JPx986ZcMvOif
95puaJ7rPLYyldD2Ht/LqHOqdoEMYWZN56Nwdni2NIvbz2fIcD43e6bFXxkf
7lE0F4nmyXf+aQxCdGfxipMzdrFEMrT18+RQtNLhX0gf/I+nlgynmN9VK9AN
42xnKOSufidDjvKimmpSKY6vzuIo52s0r5DfnXbr/YLjVX5tev8SGUh2MmEs
RHfcrElNpU0TCaYLbo0ZMZvhtDzu5O0VIEHM4S618wZXcAkTYeHMguNwoSv5
ZPStczhSiBu9UfYoBLh87IqIYcF5XArFI3HDYOAkL7OTYTdOpDZ50IQ8AK8q
UjoQ7SVJgkz2c9vgXiiiFj+/99+05Idd5gKjNd2g+ibJNHp2WnJRmVaRybYF
/oyz0+4gLUmWjHt6uNTXQu3FE7cTOnfj7Dwo9qf0lIFhSLuAaDMrTlT7ybsD
JflgmHylkKQhjNO/Iti3Rp8JLlwtD5MPXcXFJdL4lTgnwLmyQALuuzmuXapw
+YFAJHRrfkmIdHmFW1FR4vlIEwis7O/e0b2JxSW6fBC/R+sDenpe+oq25bja
Zbs7eYgbRJbPHJ0ZHcGdWxn8vtbjAI9K+R3se+jx4gHRlZ1xd+FQOT9NBwji
ca9unjo3cRt876kkPV5XwScMcbDO2mpCKU3XGMMbe3zLXvUTvYxKsNAvuUNY
6QP+A8dO5XUvaahQOlRWJ5mJZ6SqbD4+cR6OdD9pJ+m34P3Maaxprc5A78dv
v41/LuF12ynpn3KdAF33MJkujaPIW/7dtkSrQ+B8cfFrxxEpRJftfee7cjo4
oTSwc3f8baT/ou77fb8oQKiwRKzJ6DnCuWeAFDU+gxQ54fQPKMYg9FlWqyyn
R5Bk7p8KQ7dKkZ/cV0a/axGQO1I54SNfh5HvT/fO8Nk2ID8kug6snKYHQc1/
2Ure5ciPjx9Ni4cFgIbv5nAN+Tcyzni/zGFGBchyVpn75tORnG5tCkNve6B5
xC+psByL2NSs1dMxfIA7WbiY+3rhSDm9vR0+JgNOr110mlryQwwE2/n5K2vh
XH2QHQuFF6LM5PXCgr0PZM79qv69/BLpz1y4s0t0DHTDL70QKniFsNfnh6qj
daEHw/V2/DdfxMDkYYVoKRmK65zC7z74hNhb+l1aR/OVYGZ/X1JtDDKpSqSl
RePOoulQVaRVKvLrPXJMDcsrgy1whJCLJAj9/YzVVy6uEpfNlUoQprkEGizv
EfsjdaOaahHXIMVZLO84Ln4xe+/ZgbAXzL3ayGPXY4wlGgeQB5J9G/Xdcrd7
FLfsFFLhWb+Rr/1XdikXia8i/wcJYGEc
       "]]}}, {}, {}, {{}, {}}}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(H\\)]\\)\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(P\\)]\\)\"", TraditionalForm]},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{Automatic, 244.82302443371623`},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8614689746024*^9, 3.8614689945562773`*^9}, {
   3.861469026840167*^9, 3.861469050908134*^9}, {3.861469091867167*^9, 
   3.8614691302420063`*^9}, {3.861469167118155*^9, 3.861469193401307*^9}, {
   3.8614692820109453`*^9, 3.86146930899817*^9}, 3.861469348873521*^9, {
   3.8620794404361877`*^9, 3.862079498343792*^9}, 3.862079587621126*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<~/Desktop/Mideo.lab2/Coevolution/Data \
sets/FIgures/OnePatch_Discrete_Phase.png\>\"", ",", "g", ",", 
   RowBox[{"ImageResolution", "\[Rule]", " ", "300"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.862079579961355*^9, 3.862079629399541*^9}}],

Cell[BoxData["\<\"~/Desktop/Mideo.lab2/Coevolution/Data \
sets/FIgures/OnePatch_Discrete_Phase.png\"\>"], "Output",
 CellChangeTimes->{3.862079630456098*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Equilibria", "Subsection",
 CellChangeTimes->{{3.8574096507298813`*^9, 3.857409665242929*^9}, {
  3.8583333159890137`*^9, 3.858333318546309*^9}, {3.858346738570636*^9, 
  3.8583467404820147`*^9}},
 ExpressionUUID -> "d5e022f9-042d-42da-bf68-ab11b3c188c3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"equs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pH2", "[", "t", "]"}], ",", 
     RowBox[{"pP2", "[", "t", "]"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.85782922289158*^9, 3.857829277676098*^9}, {
   3.857829432520854*^9, 3.857829433795545*^9}, 3.8578307607332363`*^9, {
   3.857833353524515*^9, 3.857833414135724*^9}, {3.8583322983663692`*^9, 
   3.858332324716455*^9}, {3.8583326415226097`*^9, 3.858332651328141*^9}, {
   3.8583534014566517`*^9, 3.858353409039599*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"equi", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"equs", "==", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"pH", "[", "t", "]"}], ",", 
       RowBox[{"pP", "[", "t", "]"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"pH", "[", "t", "]"}], ",", 
      RowBox[{"pP", "[", "t", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8583331619961042`*^9, 3.858333177669509*^9}, {
  3.858333635352109*^9, 3.858333637272093*^9}, {3.8583534218644533`*^9, 
  3.8583534455204268`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pH", "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"pP", "[", "t", "]"}], "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pH", "[", "t", "]"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"pP", "[", "t", "]"}], "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pH", "[", "t", "]"}], "\[Rule]", 
      FractionBox["1", "2"]}], ",", 
     RowBox[{
      RowBox[{"pP", "[", "t", "]"}], "\[Rule]", 
      FractionBox["1", "2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pH", "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"pP", "[", "t", "]"}], "\[Rule]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pH", "[", "t", "]"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"pP", "[", "t", "]"}], "\[Rule]", "1"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.858333181930704*^9, 3.8583336444295187`*^9, 3.858334418290506*^9, {
   3.858354866703994*^9, 3.858354888024979*^9}, 3.8583658453999443`*^9, 
   3.860062640370886*^9, 3.860516290125128*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Stability", "Subsection",
 CellChangeTimes->{{3.857409660119225*^9, 3.8574096617965508`*^9}, {
   3.858333804883809*^9, 3.858333806201715*^9}, 3.8583467435139236`*^9},
 ExpressionUUID -> "2cdad697-3923-47d5-b4e7-f3dc647dc1a3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"JMtrx", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"pH2", "[", "t", "]"}], ",", 
         RowBox[{"pH", "[", "t", "]"}]}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"pH2", "[", "t", "]"}], ",", 
         RowBox[{"pP", "[", "t", "]"}]}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"pP2", "[", "t", "]"}], ",", 
         RowBox[{"pH", "[", "t", "]"}]}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"pP2", "[", "t", "]"}], ",", 
         RowBox[{"pP", "[", "t", "]"}]}], "]"}]}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.85740967407294*^9, 3.857409728350925*^9}, {
  3.857409760883854*^9, 3.857409768335066*^9}, {3.858333483623685*^9, 
  3.858333615024991*^9}, {3.858353579947474*^9, 3.8583536148918056`*^9}, {
  3.858365869798324*^9, 3.858365870093287*^9}},
 ExpressionUUID -> "66ef1d00-1540-4f70-be8a-2832c613b35e"],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"JMtrxEqui", ",", "\[Lambda]List"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"JMtrxEqui", "[", "e_", "]"}], ":=", 
   RowBox[{
    RowBox[{"JMtrx", "/.", 
     RowBox[{"equi", "[", 
      RowBox[{"[", "e", "]"}], "]"}]}], "//", "Simplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Lambda]List", "[", "e_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"JMtrxEqui", "[", "e", "]"}], "//", "Eigenvalues"}], "//", 
    "FullSimplify"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.857409729221571*^9, 3.857409745575058*^9}, {
  3.8583337091226*^9, 3.858333784417861*^9}},
 ExpressionUUID -> "6e24f8d3-a437-4198-8806-4aae995c8275"],

Cell[CellGroupData[{

Cell["Equilibrium 1 \[Dash] both fixed for WT allele", "Subsubsection",
 CellChangeTimes->{{3.857409660119225*^9, 3.8574096617965508`*^9}, {
  3.8583338190915403`*^9, 3.858333830170309*^9}, {3.858354469156609*^9, 
  3.858354470246105*^9}},
 ExpressionUUID -> "2cdad697-3923-47d5-b4e7-f3dc647dc1a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"JMtrxEqui", "[", "1", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.858333840411471*^9, 3.858333858082859*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "V", "-", 
        RowBox[{"S", " ", "V"}]}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", "V"}]], "0"},
     {"0", 
      RowBox[{"1", "-", "S"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.858333850590744*^9, 3.858333858346916*^9}, 
   3.858354899464065*^9, 3.858365881095663*^9, 3.860516241644606*^9, 
   3.860516294139166*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Lambda]List", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.858333883411302*^9, 3.858333887644109*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "-", "S"}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", "V", "-", 
     RowBox[{"S", " ", "V"}]}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", "V"}]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.858333888228365*^9, 3.858354900967705*^9, 3.858365882697816*^9, {
   3.8605162664904003`*^9, 3.860516295545456*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"Assumptions", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", ">", "S", ">", "0"}], ",", 
         RowBox[{"0", "<", "V", "<", "1"}]}], "}"}]}]}], "]"}], "&"}], ",", 
   RowBox[{"\[Lambda]List", "[", "1", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.858333912412408*^9, 3.858333933267214*^9}, {
  3.85835490926226*^9, 3.858354910654107*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "-", "S"}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", "V", "-", 
     RowBox[{"S", " ", "V"}]}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", "V"}]]}], "}"}]], "Output",
 CellChangeTimes->{3.85833393486454*^9, 3.85835490293218*^9, 
  3.858365883825407*^9, 3.86051629719518*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Reduce", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"#", ">", "1"}], ",", 
        RowBox[{"1", ">", "S", ">", "0"}], ",", 
        RowBox[{"0", "<", "V", "<", "1"}]}], "}"}], "]"}], "&"}], ",", 
    RowBox[{"\[Lambda]List", "[", "1", "]"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8583339919141607`*^9, 3.8583340937747602`*^9}, {
   3.858334238595757*^9, 3.85833427520109*^9}, {3.858334960576268*^9, 
   3.858334965836275*^9}, 3.8583549162616987`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"False"},
      {
       RowBox[{
        RowBox[{"0", "<", "V", "<", "1"}], "&&", 
        RowBox[{"0", "<", "S", "<", "1"}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8583340178110323`*^9, 3.858334094053042*^9}, 
   3.858334239071583*^9, 3.85833427727184*^9, 3.858334966577116*^9, 
   3.8583549175862617`*^9, 3.858365887082261*^9, 3.860516298409234*^9}]
}, Open  ]],

Cell["\<\
With some degree of virulence and specificity, always unstable.\
\>", "Text",
 CellChangeTimes->{{3.8583343259827337`*^9, 3.858334335137814*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DensityPlot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", "V", "-", 
     RowBox[{"S", " ", "V"}]}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", "V"}]], ",", 
   RowBox[{"{", 
    RowBox[{"S", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"V", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<S\>\"", ",", "\"\<V\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", " ", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.860062951143251*^9, 3.860063009633779*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1:eJx1mA1UlFUaxweRxbNlePyg9Bh+ZJFuq+4uxKbpg1YonJJN2Uz7gGDddcVs
T2qSJo4pkFrATpu55gqh0iL5EWt8quG7OCuEiqMhNCIiDAPMzDujqacMZYcZ
//c99xmYwzmXH/fr/b/Pc//PHcYlvjV/yQCdTtfop9P1tvxjmBDt/ikimRXB
5uI33T/fsn6TYE+3uV7w994/CL7b0/tpFvx3z/yrgh/pRUOb4K8909sFz/Fs
2Cm40bO+TXCy5wEdgr0fF2NNZ9+tIhh65X6TYOgFQy8YesHQC4ZeMPSCoRcM
vWDolePmYqzFsW+dWivrVZhehelVmF6F6VWYXoXpVZhehelVmF6F6VWYXt88
7TuOmk7eQi8YesHQC4ZeMPSCoRcMvWDoBUMvGHrlc+dirJ3DvvNU8dEl92ut
HF8Ti6+JxdfE4mti8TWx+JpYfE0sviYWXxOLr6/P9H0OFZ+4cV1g3kIvGHrB
0AuGXjD0gqEXDL1g6JV908VY89G+fUbxyUseN64LzFvoBUMvGHrB0AuGXjD0
gqFXrgsu6q9O9O2jis+543nJ48Z1gXkLvWDoBUMvGHrB0AuGXrnuuai/Ogi9
3De5r/Bzx/OSx43rAvMWesHQC4ZeMPSCoVeu6y7qr85DL68L3De5r/Bzx/OS
x43rAvMWesHQC4ZeMPTK9xYX9XePgV5e93hd4L7JfYWfO56XPG5cF5i30AuG
XjD0yvcyF/V3T4NeXtd53eN1gfsm9xV+7nhe8rhxXWDeQi8YeuV7p4v6u4dC
L7+38LrO6x6vC9w3ua/wc8fzkseN6wLzFnr4vZLfu/i9hNdtXtf4vbykl3qc
98bn0VzPLy331qsQ7J1vFIzx3vfSKsaDMR7s3a1OMOYv90y0iPlgzAdjPhjz
vXGwivlgzAdjPhjzsz1tl5gPxnww5oM9jeGCYKw33vN3u1gPjPXAWA+M9cBY
zztPFeuBsR4Y49HK99E8n3HyfS6Pvf8m9j6bWTya2PttZvFpEszzRa6fFaxe
Gll9qhOM94P1wDyf5HpVweqTkdWDOsFYD/nl3adRrA/m+SfXiwpWH4zMj+sE
Yz/kI9bn+Sn7cwXzYyPzvzrBWB+M9ZGviBP2A/N8lv2ygvmjkflVnWDsD8b+
yG/sJ+d7kU/+c7+S+xWf88b9kJ8/eb06wXheMJ5X5haxHvKCPz/OGZ5XPndK
P+dQG6eTPnXifOH5+HlA/uJ5eT4j39DPGfmBePB8QfzQz+unnC8m5p/1glE/
+Xg5PvXs/ZoF4z2A8R7k+BdSlGdhxLdSMPq9Leqd4d66NsEY792+WPR75533
YYzHfK8+VTD2w3roB6PfO7xK9Hu26bko9gNjP2+cL4l+b1wvC0Y/fz5+n+DP
x/MT/chIrg/j8fzyfIPPe5C5UOhFvMDe/KsWzw+Wx+P/S05W77T15XgVsnwr
9om3XJ8rxXywXK+rxHwwxmM92V+qmD8VMr+oFLzCM+C00OuZPuGc4P50y/7h
8nnfsv9VMn+r9nle6IX/4fyCZb+/IvR7/aJFMPxS9oNWVk+uivHetpWtZ2H1
y8Lqi0WM945rZ+tZxXywfL+3svldPi3G473IfqcKxnt8b0zmycDRNnHfUmKU
/yYVd1FEzqGaNFejz/fWEXPT3w7eaNd8OvuZuBdH2YUvP7vi8qHpRu17wvb3
mvMn6jU/nhCUsWtQgSr8dUnBf540PK4Kf/0wxy8h1eygUcHjc5evddAH1xoG
z/2NjTovFoRErXGSkvng7e62LurRJ+w4NNZMqZFTaxdmOyhs2ivl4eplSk9p
i7n1awd9XjbqaMKKQgrMSHn3hDsPu6whUyJ3GmliVs1DZTaV7CsPTLhQeoYO
1/yiMm+LSu/PStEfra+jG8/nvBP0N1XU3+i/LEzMjVdFvVqboQyvvKPV3+aZ
4RPXfOMQ9efg++ci58c6qCjxiUV7/3GFSlO2Do8Yr9Xnpbqznatcdlr91YE6
/QutlDFv/pQNRVq9vliYdLLzCzslTzucNFhvoXH/3jZq3St2yk++vm96j4U6
Sl+yd0TbqSHZsuAtvZW6j6xJKR2q3UdW10cN/U74mELXBk3dExTkFPVq1PDf
fbprq/Z/pvk7bKQfrf0fZt3Pq+92Vdtp8ZSjmZ9NbxN59FNwzdVHP2ih86cj
jl+6aafBT5hfn3uzhfJn6V5+tN1O/9o0/Q2/tFayjEjY/3GBnaqfs3yfuNxd
z54+81Ct+3mML2/c5//4cbrR8vAfSn7rpC+rlj7854gTdDhtWFzTGCc1J1v/
Ghb4P4p8c3dSfLtKW4/dH3zfPAM1x+775WX3/AdnH9yR4ParASk1qaVuzgq8
sPIdN4fVd14vcfOqsOSMm6pCh649cqNloJOCB+eN/KLKTC8c3jUvaZuDjiya
1qEf00RZO3+cNDnZQRunnbySmX2F9mxaGNDgjk/rpWWvbt18lVb6HVEPnrZT
zJbQD3vrT/a3z3Yfda//Q0G4OTJ4EMnfRw1UHnBgZsAKrT52r4kw5P+k1c+v
FtRP6n1e3P/OVYysj4l10rrtF67Hppey+makgIEXS9I6VFp8V1c51lZDn5Bu
6qlyVfjjoNFr/U8KX62kVqtf2fZJTvIPKaj9+PYpcc7hl7k5n1n3N6g0yf+B
9U+Oq6W8xSvPfHRQpaiGt3UzFp2jrDkux7tJmn87Ry+7P3OpShsapo/1f+08
JYYfPlITqVK+uVZ/a/N5+pXhn99snqFS7pAh68wL6unWll3b9t520PNGS4/f
7O9ItzPBXPKA+34QveTFhoiLlF39c/kQi/s8vxbSkxDQSANulQ1dZXRQZ/yk
pp3TGulppayk+YSDnvlT7ojQtDaa7Wntwj+bGwdu64lx17NPdv/euqeNxt1J
G1Kot9Pu8UmleantdN/dkY+lhtuFX8b/+Njd51Qb7XXLmh1npTDjhjdWjbRT
46n9TqWgg+borWHpHTbaNKtsfJa+Q4yHL0ZEzyv+8nMbrZx8/KnC9Z0UsCCw
9qzbz4aNjYjd69dFL1VsCIn42kbbtlwL3xxno9C2Tn1nuo0uh549fmJ9F4WW
/xAYl2ejylkzo9p792V+PDk2PmfYIhvNsP0xbYNeazNiyoOMA1U6NmfZU7Vj
bCKORW2vHiu70yXq7bDXbSXdn6r0fwZ5nOI=
     "], {{{
        EdgeForm[], 
        GrayLevel[0.8], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
+mPy4rGUc3Gy9/R/canAlw==
           "]], 
          PolygonBox[CompressedData["
1:eJwt0tsrRFEUx/F95H08jkvJq0eUN3nSpOaFvwDv1IQI41LkTpEwEULkbpDc
x/2ea/4A/hDf1f49fFpnn73PXmuvs/Oq6ypq05xz+UjHVeBcJu54viT2oQ17
jNuJWyhCDiYwj2y9W8C1vs0i3mAUYdRgBB2BnwuhH19Isb6V+I171KMRU5hB
AcqwjhWUoBwJXODW+ZpTGEAGCjGLQ1RaLazpJiYRxR/jIdUQUg7LdaZabc8e
4oZy255jOEApfpnfJx6hCrlYxiQadAY7y5x6FbO+oNNyOL/mAWv6NqraEjpb
MRZxrFrtDCf4RIt69kF8VK/OGXcpR0w5LNcrmqxPjF+IS6q9SrVvI6IzrWJQ
uSOam0az9ngKfA+tl9XEU/QG/t8leRcnvimX1fge+JqsNtvjGZv6N3ZnxrFj
fXL+n+5iOPB7h3V34trb7uAP/gF1Hlzk
           "]]}]}, {}, {}, {}, {}}}, 
     VertexColors -> CompressedData["
1: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
1v+t/1v/X6v/Fx7sY1w=
      "]], {
    DisplayFunction -> Identity, AspectRatio -> 1, AxesLabel -> {None, None}, 
     DisplayFunction :> Identity, Frame -> True, FrameLabel -> {{
        FormBox["\"V\"", TraditionalForm], None}, {
        FormBox["\"S\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic, 
       "ScalingFunctions" -> None}, PlotRange -> {{0, 1}, {0, 1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             RasterBox[CompressedData["
1:eJxFlwmcjvUWxyV3YmZsZbtJ9i1q7q2spR9ZrrJUuLYUQiEx1iRRdmNwiySk
kEtlS8qSUYYwxjIz774/27svM7JV0r3P/zznmff9fHx4/6/3Of/fOd/zO+dt
/tqMIZPurVKlSpH+5x79j/j3mmnhO19dK0TT5fGXjj1sQ395Qb0D/5LxUFzp
/ODPZ/Br2aDX6oy0YeIr3n73zpexf4p/Zt66s/il2aFZkz+04X1Xj3dG7pXx
TMS1748xv2Dz9PuX/nzRhm3//vyb/U4ZV1+3had2OIc3T87Z0KiaHUdLq/ir
1lAwLljSwvP7OTyT6diV28MOiwjTTcG1CZdeGXDhPOqO7Hbkwjw7yovOPLt/
ioIlyvnNP266AG331rPNDtmR1a/13KpbFDww/oylw6QiHL1+1zo/akfbwhV7
RlxU8GXgVK1tT1xEXi8RyYHedEEFnV898Vx21WKMWV94s90YB+htBxXnvN8v
W1hSjH/4WmV88LEDCzp/88yIl1WMfPnbnxLbL6Fqh5UNXFcc2HQ4e+a+NSpI
7luXYZsfbfPP6k4cfmz6rntOqlgwcm+ny09dwd5zA7qs7uXEla+v2oYnVJDM
zKt4V2R3gRMx/Vv7HtI4T1cxWMg/4kTGro+63zNIQ4Opg66vG1qC5iLNSSda
NL0xbfh7Gsa2L65z/kQJbgi5bVzosVU8QMPeSP/H/te8FOdF2HEujGooMq2h
Yo+4SCm2fCpeLszVqzC8VhDtFuUff7NGGR49/Fn5nnMu2LaEmuyJaBg/bEjb
L1aX4fTFHX1/uO7CkzuPdPmtUMOWRxp9bK1hwTBVFMCNDV8teem5zzSUiXLm
WRDRKSob5Mb1Qy++ueVtjfVaWa8bQ449rBOmoTcBZEVtCuzGYT27T3fUsHBp
zsD/ZtqwU4961+pG3fMnjq3N0HBk1M3j7jwb182D3CuryvySikTOj21rZ9lR
NO/U5w/meFCiZznnRxWt9er1XmPn+nqQQ/VU8arAN8vB+fBgvfZr07IZKtfT
AR1aXbAHqfjP3Vo+r+KqCJPlREPXldtDVQ8G69WY00pF9bGbB9bPd+Lra6Ix
vNivU/DLXwp6dhIXdDHPXmQTMArmZ7XSU+1CqU77oqleTKvx+xdvfKfgkBz9
+HC2G5OeCryw9hMvLtURghXEjh68N5zvxm9DRaK96CDSPllBi3VzZzau6UE+
9asXeU0npEY/q2D0RPEAD/evj7lSsEGnaFlNL6i8A3x4Tqfj7i0ZxRTHi34i
zfN9+EqndXCpjGrh/HbJmj6Q3N0+VCewZDxdMGRT83U+vCXClvkwuc+UGRXL
ZebIjyr08jN3Mg6QP/ixUXz8qB9thv5NJ1pGiDoygLbieqP9WDHaclKtJ+Nh
Aj0AasOVfgTH77A/WS6h461PfBvuk7gv/OgrwhZJ7E8SFLIpP77UKXPskjBR
2MZKie8VQDVKvIT3j/bUrUOCiKqnChMWC8OSsG1ny+N/3idj21lhZAGQbTwu
4fjajIoG/WX2gQDnXYJd9PkqGWd0qtYXBtgPAviV/EqGLlZPdQCndXreXRpA
rRcObpxUXeH76Pfo/9N7TboG8Ej3j4oX91cgqPW1ktBzhDAYP8jOVil8Twl/
Tbqtjd/hB8m/oHD/SCgQNjrcj0V3uudeqa7y/SXuHz+2ijbur4LsVddP4X7y
Gb67WuV+kPCHTmFstg9WvQpNilS8I2xsn4RjAr92PqNPamisV8LbdGGda2p8
jfmW0Fng86HX8JPVGudBwg2P44PZ/bwgXIo0fCHkZsg4Epv9ff07HsNnagSZ
Vxmzfq8dPXrQg/cgGimIJ+gl43FKiMfwn9VB/lyGXqQX/2zkwQ/17xSnioKV
/B1srS3dftlt+FJmCJS+eTKmPylIcHN/h7hvZHTsLSad2/CrvBDzJEN00/K4
i+dJCKmFIrCMr8eJi7vQR/hYZhhdV4sBI4NkDnNhnLCH58MQLjQtLLPPuoz6
5IVRLGz1rgxqt1NOnpdh1Bc2WU8BjbdZTsP3MiM8nxRMpMBOlPZxVtx4PsLz
RYFO8Uo910gKP1wT4XmtgMblfxyo3nj7q+2LIyCbma5gp95dXfs6ICjonRUF
2cZyBeMJGDt60QCO4qqwga0Kmomxc8AOGv9roqC2PqwgoLt+0wl2vHO+vY5Y
tJLT7XV3F5xuaDd8NSsGo+0UjGkmnmxjP4rhlsDqpoLGBKQNZOtrYuyjKtxi
rehkQ1zgUhwDpbmFik9FemNW3Cd8ODvOe4M5p60Q3ZczMI4mVGCV56jVeG5+
HK/TS+W5beV7xUFjdqGKjSuX685kMXw7O4E/Fk3VNxcVQ3UXnDvTgo23MvTI
CfShxUnF/UJuGwu+FX6en4CeZL2gKkq+EwUsw+VL4pUAjUOHChpL68v4fQIz
BW4VKvtJGYz1K8HzUwO1ey0LEsRjwuCzpQay40EWzmOC547GXFvYl5NGnBEa
38PCz00acXM1UDtlW5m/JPeBxnWy8lxJcl9oPF+taE8DNmnELdCYYyv3Lcd1
mHuAje/HcSs07mNz3+S4mUGezzb2O47bMogJxJeN5zrH7RHkOtrxBtXV1Bvk
59pZZxJ0/dwgjtOcsfNeYuoNoiMJtnM/mHqDIJvOcHDdkqDHFARxPy0MDt6r
TL1BLKPvO/j7HLciCGqnsw5Qmg+YekOYSnuxEyT3mKk3BC81qJP9l+P2COEF
AszJ9TT1hkDXK3TyPcz6hozyVnUxV8lKnzP8w8VcmXpDILkfuJgrs74h5trF
XKU4Tojfs39mpri+IVA7wc1cpfjzMM8lN3OVYr1hkE2fcjNXKa5vGLSG3nUz
Vxx3RJg/9/DfHDc3zH3s4fpzXN13W4r166SHueK4u8LYJGxan0cGVxy3IMxz
2MtcpeAkvWHmxsvxUlzfMBI0H7z8uak3grEk2MtcmXojIJvu5mOuUlzfCPrw
XmZwZeqNMB8+vjfHzY3gEWEbt33Mlak3AmrfLn7+nqk3wvPQz1yZeiNYQvuv
n7ky6xsB/bebfn5v6o2AytspwFyZeqNwizTPCTBXpt4oSO6RAHNl1jcKCns9
wByVs94oSP7fJX5uOec7yn4vMVflrDdq7COjJOaqnPVGec+VmKty1hvFYtF4
myXmiuM6opwvie/HcSuixlx1mvsnx82MgWz7tsRccdyWMZANN5SZK47bI4bt
VBeZuSo3uBoRY90y6zT1xir3F4MrU28MZGObZObK1BvjOsrMVTn7VQzGz2+Z
uTL1xri+Mn+/nOsbw2PCBuorzJWpN851VzhPpt648bttmMJcmXrjzIPCXJn1
jYPkbFT4Hhw3N877vsJcmXrjWCHSbFGYK1NvnPlRmCuzvnFjbj+gMlcVHCfO
9U6fG/WLc77T58RHowTrT58b/CX4Hulz43dNgjnTKs+NuiW43ulzY79KVM5V
89zwqQT/vkmfG/t3gvkOVp4b+2QCr1DB0+fm3DbqnT6fTQVMsp+lz2kcjEsa
dakXqjw35kESJPel9DmN+x1J5ix9Xsjzisp9KX3egH5YJivngHluzL8U91X6
3Ph9lGK+0+fG3E1xnPT56+zTxvsI/g9eITvj
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {}}, {Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{
                    7.5, -69.80550284629982}, 
                    Offset[{4., 0}, {7.5, -69.80550284629982}]}, {{
                    7.5, -27.111005692599623`}, 
                    Offset[{4., 0}, {7.5, -27.111005692599623`}]}, {{7.5, 
                    15.58349146110057}, 
                    Offset[{4., 0}, {7.5, 15.58349146110057}]}, {{7.5, 
                    58.27798861480076}, 
                    Offset[{4., 0}, {7.5, 58.27798861480076}]}, {{7.5, 
                    100.97248576850095`}, 
                    Offset[{4., 0}, {7.5, 100.97248576850095`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False], 
                  StyleBox[
                   LineBox[{{{7.5, -103.96110056925997`}, 
                    Offset[{2.5, 0.}, {7.5, -103.96110056925997`}]}, {{
                    7.5, -95.42220113851992}, 
                    Offset[{2.5, 0.}, {7.5, -95.42220113851992}]}, {{
                    7.5, -86.88330170777989}, 
                    Offset[{2.5, 0.}, {7.5, -86.88330170777989}]}, {{
                    7.5, -78.34440227703985}, 
                    Offset[{2.5, 0.}, {7.5, -78.34440227703985}]}, {{
                    7.5, -61.266603415559764`}, 
                    Offset[{2.5, 0.}, {7.5, -61.266603415559764`}]}, {{
                    7.5, -52.72770398481973}, 
                    Offset[{2.5, 0.}, {7.5, -52.72770398481973}]}, {{
                    7.5, -44.188804554079695`}, 
                    Offset[{2.5, 0.}, {7.5, -44.188804554079695`}]}, {{
                    7.5, -35.64990512333966}, 
                    Offset[{2.5, 0.}, {7.5, -35.64990512333966}]}, {{
                    7.5, -18.572106261859584`}, 
                    Offset[{2.5, 0.}, {7.5, -18.572106261859584`}]}, {{
                    7.5, -10.033206831119545`}, 
                    Offset[{2.5, 0.}, {7.5, -10.033206831119545`}]}, {{
                    7.5, -1.4943074003795067`}, 
                    Offset[{2.5, 0.}, {7.5, -1.4943074003795067`}]}, {{7.5, 
                    7.044592030360532}, 
                    Offset[{2.5, 0.}, {7.5, 7.044592030360532}]}, {{7.5, 
                    24.122390891840606`}, 
                    Offset[{2.5, 0.}, {7.5, 24.122390891840606`}]}, {{7.5, 
                    32.66129032258067}, 
                    Offset[{2.5, 0.}, {7.5, 32.66129032258067}]}, {{7.5, 
                    41.200189753320686`}, 
                    Offset[{2.5, 0.}, {7.5, 41.200189753320686`}]}, {{7.5, 
                    49.739089184060724`}, 
                    Offset[{2.5, 0.}, {7.5, 49.739089184060724`}]}, {{7.5, 
                    66.8168880455408}, 
                    Offset[{2.5, 0.}, {7.5, 66.8168880455408}]}, {{7.5, 
                    75.35578747628084}, 
                    Offset[{2.5, 0.}, {7.5, 75.35578747628084}]}, {{7.5, 
                    83.89468690702087}, 
                    Offset[{2.5, 0.}, {7.5, 83.89468690702087}]}, {{7.5, 
                    92.43358633776091}, 
                    Offset[{2.5, 0.}, {7.5, 92.43358633776091}]}, {{7.5, 
                    109.51138519924099`}, 
                    Offset[{2.5, 0.}, {7.5, 109.51138519924099`}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -69.80550284629982}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -27.111005692599623`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 15.58349146110057}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 58.27798861480076}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 100.97248576850095`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"M10DefaultDensityGradient\"", ",", "#1"}], 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"1.`", ",", "6.268969367182139`"}], "}"}]}], "}"}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8600629747516336`*^9, 3.860063010007687*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Equilibrium 2 \[Dash] host fixed for mutant allele, parasite fixed for WT \
allele\
\>", "Subsubsection",
 CellChangeTimes->{{3.857409660119225*^9, 3.8574096617965508`*^9}, {
  3.8583338190915403`*^9, 3.858333830170309*^9}, {3.858334733231748*^9, 
  3.858334764864205*^9}, {3.858354464278182*^9, 3.8583544735574627`*^9}, {
  3.8583651230229588`*^9, 3.858365127165951*^9}},
 ExpressionUUID -> "2cdad697-3923-47d5-b4e7-f3dc647dc1a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"equi", "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.858334745303958*^9, 3.858334747072978*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"pH", "[", "t", "]"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"pP", "[", "t", "]"}], "\[Rule]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{3.858334747407024*^9, 3.858339026358914*^9, 
  3.858354939345622*^9, 3.8583658922554493`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"JMtrxEqui", "[", "2", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.858333840411471*^9, 3.858333858082859*^9}, {
  3.85833474027319*^9, 3.8583347403764153`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"1", "-", "V"}], 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "S"}], ")"}], " ", "V"}]}]], "0"},
     {"0", 
      FractionBox["1", 
       RowBox[{"1", "-", "S"}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.858333850590744*^9, 3.858333858346916*^9}, 
   3.858334741073605*^9, 3.8583390277497587`*^9, 3.858354941356497*^9, 
   3.858365893267686*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Lambda]List", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.858333883411302*^9, 3.858333887644109*^9}, {
  3.858334768937125*^9, 3.8583347690084457`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"1", "-", "V"}], 
    RowBox[{"1", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "S"}], ")"}], " ", "V"}]}]], ",", 
   FractionBox["1", 
    RowBox[{"1", "-", "S"}]]}], "}"}]], "Output",
 CellChangeTimes->{3.858333888228365*^9, 3.858334769371352*^9, 
  3.8583390290457487`*^9, 3.858354942781452*^9, 3.858365894443866*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"Assumptions", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", ">", "S", ">", "0"}], ",", 
         RowBox[{"0", "<", "V", "<", "1"}]}], "}"}]}]}], "]"}], "&"}], ",", 
   RowBox[{"\[Lambda]List", "[", "2", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.858333912412408*^9, 3.858333933267214*^9}, {
  3.858334774824692*^9, 3.858334774887639*^9}, {3.858354947158228*^9, 
  3.858354949638135*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"1", "-", "V"}], 
    RowBox[{"1", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "S"}], ")"}], " ", "V"}]}]], ",", 
   FractionBox["1", 
    RowBox[{"1", "-", "S"}]]}], "}"}]], "Output",
 CellChangeTimes->{3.8583549500557013`*^9, 3.858365895485278*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Reduce", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"#", ">", "1"}], ",", 
        RowBox[{"1", ">", "S", ">", "0"}], ",", 
        RowBox[{"0", "<", "V", "<", "1"}]}], "}"}], "]"}], "&"}], ",", 
    RowBox[{"\[Lambda]List", "[", "2", "]"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8583339919141607`*^9, 3.8583340937747602`*^9}, {
  3.858334238595757*^9, 3.85833427520109*^9}, {3.8583348013873587`*^9, 
  3.858334801465836*^9}, {3.858354957006888*^9, 3.858354983935464*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"False"},
      {
       RowBox[{
        RowBox[{"0", "<", "V", "<", "1"}], "&&", 
        RowBox[{"0", "<", "S", "<", "1"}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8583340178110323`*^9, 3.858334094053042*^9}, 
   3.858334239071583*^9, 3.85833427727184*^9, 3.858334802066555*^9, 
   3.858339039780511*^9, {3.8583549578954277`*^9, 3.858354984294924*^9}, 
   3.8583658964056807`*^9}]
}, Open  ]],

Cell["With some degree of specificity, always unstable.", "Text",
 CellChangeTimes->{{3.8583343259827337`*^9, 3.858334335137814*^9}, 
   3.858354967581934*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Equilibrium 3 \[Dash] both polymorphic", "Subsubsection",
 CellChangeTimes->{{3.857409660119225*^9, 3.8574096617965508`*^9}, {
  3.8583338190915403`*^9, 3.858333830170309*^9}, {3.858334733231748*^9, 
  3.858334764864205*^9}, {3.8583392713094387`*^9, 3.858339281716786*^9}, {
  3.858354475725466*^9, 3.858354476716983*^9}},
 ExpressionUUID -> "2cdad697-3923-47d5-b4e7-f3dc647dc1a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"equi", "[", 
  RowBox[{"[", "3", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.858334745303958*^9, 3.858334747072978*^9}, {
  3.858339276038495*^9, 3.858339276149049*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"pH", "[", "t", "]"}], "\[Rule]", 
    FractionBox["1", "2"]}], ",", 
   RowBox[{
    RowBox[{"pP", "[", "t", "]"}], "\[Rule]", 
    FractionBox["1", "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.858334747407024*^9, 3.858339026358914*^9, 3.858339276952648*^9, 
   3.858355028197854*^9, {3.858365838294425*^9, 3.8583658739879913`*^9}, 
   3.8600626535411797`*^9, 3.860516319561911*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"JMtrxEqui", "[", "3", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.858333840411471*^9, 3.858333858082859*^9}, {
  3.85833474027319*^9, 3.8583347403764153`*^9}, {3.858339285893197*^9, 
  3.858339285945738*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"S", " ", "V"}], 
        RowBox[{"2", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}]]}]},
     {
      FractionBox["S", 
       RowBox[{"2", "-", "S"}]], "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.858333850590744*^9, 3.858333858346916*^9}, 
   3.858334741073605*^9, 3.8583390277497587`*^9, 3.858339286352162*^9, 
   3.8583550293962727`*^9, {3.858365850906205*^9, 3.8583658749621773`*^9}, 
   3.860062654603517*^9, 3.860516320529935*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Lambda]List", "[", "3", "]"}]], "Input",
 CellChangeTimes->{{3.858365854373786*^9, 3.85836585728642*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", "4"}], "+", 
     RowBox[{"4", " ", "V"}], "+", 
     RowBox[{"S", " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}]}], "-", 
     
     SqrtBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", 
       SuperscriptBox["S", "2"], " ", "V", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}]}]]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}]}]], ",", 
   
   FractionBox[
    RowBox[{
     RowBox[{"-", "4"}], "+", 
     RowBox[{"4", " ", "V"}], "+", 
     RowBox[{"S", " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}]}], "+", 
     
     SqrtBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", 
       SuperscriptBox["S", "2"], " ", "V", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}]}]]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}]}]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8583658577016153`*^9, 3.858365876498184*^9}, 
   3.860062656069062*^9, 3.860516326295273*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"Assumptions", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", ">", "S", ">", "0"}], ",", 
         RowBox[{"0", "<", "V", "<", "1"}]}], "}"}]}]}], "]"}], "&"}], ",", 
   RowBox[{"\[Lambda]List", "[", "3", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.858333912412408*^9, 3.858333933267214*^9}, {
   3.858334774824692*^9, 3.858334774887639*^9}, {3.8583393022712517`*^9, 
   3.858339302333405*^9}, 3.858355036192761*^9, {3.85835509537621*^9, 
   3.858355120051351*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", "4"}], "+", 
     RowBox[{"4", " ", "V"}], "+", 
     RowBox[{"S", " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}]}], "-", 
     
     RowBox[{"S", " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V", " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}], 
         ")"}]}]]}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}]}]], ",", 
   
   FractionBox[
    RowBox[{
     RowBox[{"-", "4"}], "+", 
     RowBox[{"4", " ", "V"}], "+", 
     RowBox[{"S", " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}]}], "+", 
     
     RowBox[{"S", " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V", " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}], 
         ")"}]}]]}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}]}]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.85833393486454*^9, 3.858334775285913*^9, 3.858339035350203*^9, 
   3.85833930342206*^9, 3.858343242865226*^9, {3.8583550310558043`*^9, 
   3.8583550385334806`*^9}, 3.8583551003177347`*^9, 3.858355135761775*^9, 
   3.858365939310611*^9, 3.860062659140635*^9, 3.860516328147932*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"re", "=", 
  RowBox[{"Re", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Lambda]List", "[", "3", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"S", "\[Rule]", " ", "0.8"}], ",", 
      RowBox[{"V", "\[Rule]", " ", "0.5"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"im", "=", 
  RowBox[{"Im", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Lambda]List", "[", "3", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"S", "\[Rule]", " ", "0.8"}], ",", 
      RowBox[{"V", "\[Rule]", " ", "0.5"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Sqrt", "[", 
  RowBox[{
   SuperscriptBox["re", "2"], "+", 
   SuperscriptBox["im", "2"]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"re", "=", 
  RowBox[{"Re", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Lambda]List", "[", "3", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"S", "\[Rule]", " ", "0.6"}], ",", 
      RowBox[{"V", "\[Rule]", " ", "0.5"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"im", "=", 
  RowBox[{"Im", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Lambda]List", "[", "3", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"S", "\[Rule]", " ", "0.6"}], ",", 
      RowBox[{"V", "\[Rule]", " ", "0.5"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Sqrt", "[", 
  RowBox[{
   SuperscriptBox["re", "2"], "+", 
   SuperscriptBox["im", "2"]}], "]"}]}], "Input",
 CellChangeTimes->{{3.858365947617364*^9, 3.858366075384272*^9}, {
  3.860062666272032*^9, 3.860062669110929*^9}, {3.860062715888105*^9, 
  3.8600627302621326`*^9}, {3.860516337568878*^9, 3.860516368175506*^9}}],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{
  3.8583659667070217`*^9, {3.8583660001079617`*^9, 3.858366075814581*^9}, 
   3.860062669712236*^9, 3.860062731929474*^9, {3.860516333131218*^9, 
   3.8605163685323143`*^9}}],

Cell[BoxData["0.43643578047198484`"], "Output",
 CellChangeTimes->{
  3.8583659667070217`*^9, {3.8583660001079617`*^9, 3.858366075814581*^9}, 
   3.860062669712236*^9, 3.860062731929474*^9, {3.860516333131218*^9, 
   3.860516368541114*^9}}],

Cell[BoxData["1.0910894511799618`"], "Output",
 CellChangeTimes->{
  3.8583659667070217`*^9, {3.8583660001079617`*^9, 3.858366075814581*^9}, 
   3.860062669712236*^9, 3.860062731929474*^9, {3.860516333131218*^9, 
   3.860516368547618*^9}}],

Cell[BoxData["0.9999999999999999`"], "Output",
 CellChangeTimes->{
  3.8583659667070217`*^9, {3.8583660001079617`*^9, 3.858366075814581*^9}, 
   3.860062669712236*^9, 3.860062731929474*^9, {3.860516333131218*^9, 
   3.860516368553966*^9}}],

Cell[BoxData["0.31448545101657543`"], "Output",
 CellChangeTimes->{
  3.8583659667070217`*^9, {3.8583660001079617`*^9, 3.858366075814581*^9}, 
   3.860062669712236*^9, 3.860062731929474*^9, {3.860516333131218*^9, 
   3.8605163685620737`*^9}}],

Cell[BoxData["1.0482848367219182`"], "Output",
 CellChangeTimes->{
  3.8583659667070217`*^9, {3.8583660001079617`*^9, 3.858366075814581*^9}, 
   3.860062669712236*^9, 3.860062731929474*^9, {3.860516333131218*^9, 
   3.860516368568471*^9}}]
}, Open  ]],

Cell["Inconclusive?", "Text",
 CellChangeTimes->{{3.8583343259827337`*^9, 3.858334335137814*^9}, {
  3.858341270500663*^9, 3.8583412717788877`*^9}, {3.8583551297854633`*^9, 
  3.8583551339374638`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"-", "4"}], "+", 
    RowBox[{"4", " ", "V"}], "+", 
    RowBox[{"S", " ", 
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}]}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}]}]], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.860497294199275*^9, 3.860497297742931*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.860497298132187*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Equilibrium 4 \[Dash] host fixed for WT allele, parasite fixed for mutant \
allele\
\>", "Subsubsection",
 CellChangeTimes->{{3.857409660119225*^9, 3.8574096617965508`*^9}, {
  3.8583338190915403`*^9, 3.858333830170309*^9}, {3.858343269646824*^9, 
  3.8583432917012577`*^9}, {3.858354481676697*^9, 3.858354487124456*^9}, {
  3.85836497665449*^9, 3.858364981551014*^9}},
 ExpressionUUID -> "2cdad697-3923-47d5-b4e7-f3dc647dc1a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"equi", "[", 
  RowBox[{"[", "4", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.858343277550049*^9, 3.85834327938198*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"pH", "[", "t", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP", "[", "t", "]"}], "\[Rule]", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8583432809390697`*^9, 3.8583551407429743`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"JMtrxEqui", "[", "4", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.858333840411471*^9, 3.858333858082859*^9}, {
  3.8583432738460712`*^9, 3.85834327398925*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"1", "-", "V"}], 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "S"}], ")"}], " ", "V"}]}]], "0"},
     {"0", 
      FractionBox["1", 
       RowBox[{"1", "-", "S"}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.858333850590744*^9, 3.858333858346916*^9}, 
   3.858343274518512*^9, 3.8583551419646797`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"Assumptions", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", ">", "S", ">", "0"}], ",", 
         RowBox[{"0", "<", "V", "<", "1"}]}], "}"}]}]}], "]"}], "&"}], ",", 
   RowBox[{"\[Lambda]List", "[", "4", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.858333912412408*^9, 3.858333933267214*^9}, {
   3.858355152986807*^9, 3.8583551530904408`*^9}, 3.858355193806138*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"1", "-", "V"}], 
    RowBox[{"1", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "S"}], ")"}], " ", "V"}]}]], ",", 
   FractionBox["1", 
    RowBox[{"1", "-", "S"}]]}], "}"}]], "Output",
 CellChangeTimes->{3.85833393486454*^9, 3.858355159871739*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Reduce", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"#", ">", "1"}], ",", 
        RowBox[{"1", ">", "S", ">", "0"}], ",", 
        RowBox[{"0", "<", "V", "<", "1"}]}], "}"}], "]"}], "&"}], ",", 
    RowBox[{"\[Lambda]List", "[", "4", "]"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8583339919141607`*^9, 3.8583340937747602`*^9}, {
  3.858334238595757*^9, 3.85833427520109*^9}, {3.858334960576268*^9, 
  3.858334965836275*^9}, {3.8583551666980867`*^9, 3.858355166762011*^9}, {
  3.8583551975161667`*^9, 3.858355198035501*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"False"},
      {
       RowBox[{
        RowBox[{"0", "<", "V", "<", "1"}], "&&", 
        RowBox[{"0", "<", "S", "<", "1"}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8583340178110323`*^9, 3.858334094053042*^9}, 
   3.858334239071583*^9, 3.85833427727184*^9, 3.858334966577116*^9, {
   3.858355167239326*^9, 3.858355198626849*^9}}]
}, Open  ]],

Cell["\<\
With some degree of virulence and specificity, always unstable.\
\>", "Text",
 CellChangeTimes->{{3.8583343259827337`*^9, 3.858334335137814*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Individual-Based Simulations", "Subsection",
 CellChangeTimes->{{3.857557941023484*^9, 3.857557949892543*^9}},
 ExpressionUUID -> "864ecb67-c151-40d8-bead-a0e89b7d60cd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"parsN", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"S", "\[Rule]", " ", "0"}], ",", 
     RowBox[{"V", "\[Rule]", "0.2"}], ",", 
     RowBox[{"\[Kappa]H", "\[Rule]", "300"}], ",", 
     RowBox[{"\[Kappa]P", "\[Rule]", "300"}], ",", 
     RowBox[{"tMax", "\[Rule]", "150"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"parsN3", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"S", "\[Rule]", " ", "0"}], ",", 
     RowBox[{"V", "\[Rule]", "0.5"}], ",", 
     RowBox[{"\[Kappa]H", "\[Rule]", "300"}], ",", 
     RowBox[{"\[Kappa]P", "\[Rule]", "300"}], ",", 
     RowBox[{"tMax", "\[Rule]", "150"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pars1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"S", "\[Rule]", " ", "0.8"}], ",", 
     RowBox[{"V", "\[Rule]", "0.2"}], ",", 
     RowBox[{"a", "\[Rule]", "0.1"}], ",", 
     RowBox[{"\[Kappa]H", "\[Rule]", "300"}], ",", 
     RowBox[{"\[Kappa]P", "\[Rule]", "300"}], ",", 
     RowBox[{"tMax", "\[Rule]", "150"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pars2", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"S", "\[Rule]", "0.65"}], ",", 
     RowBox[{"V", "\[Rule]", "0.2"}], ",", 
     RowBox[{"a", "\[Rule]", "0.1"}], ",", 
     RowBox[{"\[Kappa]H", "\[Rule]", "300"}], ",", 
     RowBox[{"\[Kappa]P", "\[Rule]", "300"}], ",", 
     RowBox[{"tMax", "\[Rule]", "150"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pars3", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"S", "\[Rule]", "0.8"}], ",", 
     RowBox[{"V", "\[Rule]", "0.5"}], ",", 
     RowBox[{"a", "\[Rule]", "0.1"}], ",", 
     RowBox[{"\[Kappa]H", "\[Rule]", "300"}], ",", 
     RowBox[{"\[Kappa]P", "\[Rule]", "300"}], ",", 
     RowBox[{"tMax", "\[Rule]", "150"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8575533415610533`*^9, 3.8575533795180063`*^9}, {
   3.857553659354643*^9, 3.857553662661491*^9}, {3.857554488973598*^9, 
   3.8575544929959373`*^9}, {3.8575554146383457`*^9, 
   3.8575554278372593`*^9}, {3.857555595101903*^9, 3.857555628954989*^9}, {
   3.857557269500041*^9, 3.857557276823497*^9}, {3.858254445565592*^9, 
   3.858254452292457*^9}, {3.8582577100571957`*^9, 3.85825771527242*^9}, {
   3.858259041302885*^9, 3.858259043389798*^9}, {3.858259151513358*^9, 
   3.858259154247508*^9}, {3.858346783307948*^9, 3.8583467920975447`*^9}, {
   3.858347517585367*^9, 3.85834753590551*^9}, {3.8583482054042177`*^9, 
   3.858348208644257*^9}, {3.858348386702422*^9, 3.85834839226198*^9}, {
   3.858348713093059*^9, 3.858348768075746*^9}, {3.858350762359455*^9, 
   3.8583507624444723`*^9}, {3.8583531133685217`*^9, 3.858353134196247*^9}, 
   3.858353571997121*^9, {3.858354121694816*^9, 3.858354124366394*^9}, {
   3.8583553013912067`*^9, 3.8583553041733627`*^9}, {3.858355419944022*^9, 
   3.8583554245439*^9}, {3.858364521392664*^9, 3.858364524823093*^9}, {
   3.858364598018365*^9, 3.85836460100707*^9}, {3.858364851681396*^9, 
   3.858364855783539*^9}, {3.860509997078586*^9, 3.860510017917292*^9}, {
   3.860516941827022*^9, 3.8605169472106943`*^9}, {3.860517329033184*^9, 
   3.860517343297114*^9}, {3.861466344725636*^9, 3.86146634487842*^9}, {
   3.8614698745920897`*^9, 3.8614699827018013`*^9}, {3.861470247454399*^9, 
   3.861470255669735*^9}, {3.861880845912387*^9, 3.861880931078511*^9}, {
   3.861880965447647*^9, 3.861880992599765*^9}},
 ExpressionUUID -> "4f4f5a23-3616-476a-bf2e-d9de7d3a1e3d"],

Cell["Absolute fitness values", "Text",
 CellChangeTimes->{{3.8575539651645308`*^9, 3.857553967571971*^9}, {
  3.858254864820229*^9, 3.85825486667502*^9}},
 ExpressionUUID -> "f808cc4a-7e20-49b1-9224-5172eff507e4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"WH", "[", 
    RowBox[{"1", ",", "pVec_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"pVec", "[", 
      RowBox[{"[", "2", "]"}], "]"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "V"}], ")"}]}], " ", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"pVec", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "S"}], " ", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"pVec", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "S"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "V"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"WH", "[", 
    RowBox[{"2", ",", "pVec_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"pVec", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "V"}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"pVec", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "S"}], " ", "+", 
    RowBox[{
     RowBox[{"pVec", "[", 
      RowBox[{"[", "2", "]"}], "]"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "S"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "V"}], ")"}]}]}]}], " ", " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"WP", "[", 
    RowBox[{"1", ",", "pVec_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"pVec", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"pVec", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "S"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"WP", "[", 
    RowBox[{"2", ",", "pVec_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"pVec", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "+", 
    RowBox[{
     RowBox[{"pVec", "[", 
      RowBox[{"[", "1", "]"}], "]"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "S"}], ")"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.857553688648953*^9, 3.857553747488077*^9}, {
   3.8575537806278887`*^9, 3.857553881738371*^9}, {3.8575547294084673`*^9, 
   3.857554750958584*^9}, {3.8582545658470583`*^9, 3.858254575846238*^9}, {
   3.8582546064799232`*^9, 3.858254700073872*^9}, {3.85825491914996*^9, 
   3.858254922005704*^9}, {3.8582551344325933`*^9, 3.8582551487279387`*^9}, {
   3.8582553539811907`*^9, 3.858255373964965*^9}, {3.858255495911234*^9, 
   3.858255521117662*^9}, {3.858346810643413*^9, 3.858346810987135*^9}, {
   3.8583474717806177`*^9, 3.858347507323225*^9}, {3.8583475530853643`*^9, 
   3.858347584892568*^9}, 3.8583479556441*^9, {3.858354129671155*^9, 
   3.858354183591379*^9}},
 ExpressionUUID -> "dc7c901b-01c2-4c34-a313-69f523e16dd3"],

Cell["Relative fitness values", "Text",
 CellChangeTimes->{{3.8575539337092667`*^9, 3.857553962216299*^9}, {
  3.858254707424376*^9, 3.858254709080665*^9}},
 ExpressionUUID -> "45f54a61-675e-472a-94a7-2eb4c4fac408"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"wH", "[", "pVec_", "]"}], ":=", 
   FractionBox[
    RowBox[{"WH", "[", 
     RowBox[{"1", ",", "pVec"}], "]"}], 
    RowBox[{
     RowBox[{
      RowBox[{"pVec", "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", 
      RowBox[{"WH", "[", 
       RowBox[{"1", ",", "pVec"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"pVec", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ")"}], 
      RowBox[{"WH", "[", 
       RowBox[{"2", ",", "pVec"}], "]"}]}]}]]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"wP", "[", "pVec_", "]"}], ":=", 
   FractionBox[
    RowBox[{"WP", "[", 
     RowBox[{"1", ",", "pVec"}], "]"}], 
    RowBox[{
     RowBox[{
      RowBox[{"pVec", "[", 
       RowBox[{"[", "2", "]"}], "]"}], " ", 
      RowBox[{"WP", "[", 
       RowBox[{"1", ",", "pVec"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"pVec", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ")"}], 
      RowBox[{"WP", "[", 
       RowBox[{"2", ",", "pVec"}], "]"}]}]}]]}], " ", ";"}]}], "Input",
 CellChangeTimes->{{3.85755389473662*^9, 3.857553955939641*^9}, {
   3.8575547319284887`*^9, 3.857554755837936*^9}, {3.8582547128023663`*^9, 
   3.8582547600208187`*^9}, {3.8582547988044453`*^9, 3.85825482049142*^9}, 
   3.858254935718587*^9, {3.858255297419609*^9, 3.858255299403585*^9}, {
   3.858255343341501*^9, 3.858255345668758*^9}, {3.858255442637382*^9, 
   3.858255457252624*^9}, {3.858354193072072*^9, 3.8583542339600277`*^9}},
 ExpressionUUID -> "94cb3869-e995-47d3-a241-168f7b718825"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "Sim", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Sim", "[", 
   RowBox[{"pars_", ",", "intS_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Sim", "[", 
    RowBox[{"pars", ",", "intS"}], "]"}], "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "out", ",", "g", ",", "nHs", ",", "nPs", ",", "nHprime", ",", 
       "nPprime"}], "}"}], ",", 
     RowBox[{
      RowBox[{"out", "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", "2"], ",", 
           FractionBox["1", "2"]}], "}"}], "}"}], "//", "N"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"g", "=", "1"}], ",", 
        RowBox[{"g", "\[LessEqual]", 
         RowBox[{"(", 
          RowBox[{"tMax", "/.", "pars"}], ")"}]}], ",", 
        RowBox[{"g", "++"}], ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", "Selection", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"nHs", "=", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{"BinomialDistribution", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Kappa]H", "/.", "pars"}], ")"}], ",", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{"Max", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"wH", "[", 
                    RowBox[{"out", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "]"}], 
                   RowBox[{"out", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], "/.", 
                  "pars"}], ",", "0"}], "]"}], ",", "1"}], "]"}]}], "]"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"nPs", "=", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{"BinomialDistribution", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Kappa]P", "/.", "pars"}], ")"}], ",", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{"Max", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"wP", "[", 
                    RowBox[{"out", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "]"}], 
                   RowBox[{"out", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "/.", 
                  "pars"}], ",", "0"}], "]"}], ",", "1"}], "]"}]}], "]"}], 
           "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "Number", " ", "of", " ", "type", " ", "1", " ", "hosts", " ", 
           "and", " ", "parasites", " ", "in", " ", "next", " ", 
           "generation"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"nHprime", "=", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{"BinomialDistribution", "[", 
            RowBox[{
             RowBox[{"\[Kappa]H", "/.", "pars"}], ",", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{"Max", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox["nHs", 
                   RowBox[{"\[Kappa]H", "/.", "pars"}]], "//", "N"}], ",", 
                 "0"}], "]"}], ",", "1"}], "]"}]}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"nPprime", "=", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{"BinomialDistribution", "[", 
            RowBox[{
             RowBox[{"\[Kappa]P", "/.", "pars"}], ",", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{"Max", "[", 
                RowBox[{
                 RowBox[{
                  FractionBox["nPs", 
                   RowBox[{"\[Kappa]P", "/.", "pars"}]], "//", "N"}], ",", 
                 "0"}], "]"}], ",", "1"}], "]"}]}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"out", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               FractionBox["nHprime", "\[Kappa]H"], ",", 
               FractionBox["nPprime", "\[Kappa]P"]}], "}"}], "/.", "pars"}], "//",
             "N"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "out"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.857553336931319*^9, 3.857553339760133*^9}, {
   3.8575533844199467`*^9, 3.857553386467256*^9}, {3.8575536077052927`*^9, 
   3.857553686736424*^9}, {3.8575540240938463`*^9, 3.85755415758674*^9}, {
   3.857554204959188*^9, 3.8575542565896387`*^9}, {3.857554324066854*^9, 
   3.8575546681866713`*^9}, {3.8575549229555387`*^9, 
   3.8575550330454893`*^9}, {3.8575554614764423`*^9, 3.857555477954821*^9}, {
   3.858255638832817*^9, 3.858255752532222*^9}, {3.85825578467452*^9, 
   3.858255925229875*^9}, {3.858255956598247*^9, 3.858255988389636*^9}, {
   3.858256069760268*^9, 3.858256072735312*^9}, {3.8582562740023947`*^9, 
   3.8582563294516163`*^9}, {3.8582564282367887`*^9, 3.858256430010532*^9}, {
   3.858256590199576*^9, 3.858256634461961*^9}, {3.85825667680853*^9, 
   3.858256692015005*^9}, {3.8582567641721067`*^9, 3.858256803987989*^9}, {
   3.8582568374306917`*^9, 3.858256840892125*^9}, {3.8582570289357758`*^9, 
   3.858257353494149*^9}, {3.858257562320201*^9, 3.858257668746155*^9}, {
   3.858258024641522*^9, 3.858258024816195*^9}, {3.858258287197348*^9, 
   3.858258346268889*^9}, {3.8582610911361427`*^9, 3.858261091338608*^9}, {
   3.8582623586932783`*^9, 3.858262385611355*^9}, {3.858347618208322*^9, 
   3.858347659530373*^9}, 3.858351976131401*^9, {3.858354243988202*^9, 
   3.85835437760318*^9}, {3.85835527195765*^9, 3.85835527999872*^9}, {
   3.858355388930955*^9, 3.8583553961049967`*^9}, {3.858364346598419*^9, 
   3.858364354039894*^9}, {3.8583647566823683`*^9, 3.858364761344233*^9}},
 ExpressionUUID -> "3d8ced04-d6d8-493e-a0f8-537dd834b908"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "mean", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mean", "[", "pars_", "]"}], ":=", 
  RowBox[{
   RowBox[{"mean", "[", "pars", "]"}], "=", 
   RowBox[{"Mean", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{
        RowBox[{"Sim", "[", 
         RowBox[{"pars", ",", "j"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", "1"}], "]"}], "]"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{
          RowBox[{"Sim", "[", 
           RowBox[{"pars", ",", "j"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "1"}], "]"}], "]"}]}], ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "2000"}], "}"}]}], "]"}], 
    "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.8612874513424187`*^9, 3.8612874574964647`*^9}, {
  3.861287700921672*^9, 3.861287707860168*^9}, {3.861287740507516*^9, 
  3.861287761006909*^9}, {3.861568543825859*^9, 3.8615685468744583`*^9}, {
  3.86173820655396*^9, 3.86173820759694*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "SD", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SD", "[", "pars_", "]"}], ":=", 
   RowBox[{
    RowBox[{"SD", "[", "pars", "]"}], "=", 
    RowBox[{
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{
             RowBox[{"Sim", "[", 
              RowBox[{"pars", ",", "j"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", "1"}], "]"}], "]"}], 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{
               RowBox[{"Sim", "[", 
                RowBox[{"pars", ",", "j"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{";;", ",", "1"}], "]"}], "]"}]}], ")"}]}], "-", 
           RowBox[{"mean", "[", "pars", "]"}]}], ")"}], "2"], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "2000"}], "}"}]}], "]"}], "]"}], "//", 
     "Sqrt"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.861287696740488*^9, 3.861287697764039*^9}, {
  3.86128777398377*^9, 3.8612878846884327`*^9}, {3.861738209429719*^9, 
  3.861738209541135*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"leg2", "=", 
  RowBox[{"LineLegend", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{"Blue", ",", 
        RowBox[{"Opacity", "[", "0.2", "]"}], ",", "Dashed"}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{"Blue", ",", 
        RowBox[{"Opacity", "[", "0.4", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", "Blue", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Neutral\>\"", ",", "\"\<Coevolutionary, S=0.65\>\"", ",", 
      "\"\<Coevolutionary, S=0.8\>\""}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.857557659235034*^9, 3.857557706354966*^9}, {
   3.8575578672099323`*^9, 3.857557870916712*^9}, {3.858348355414452*^9, 
   3.858348370636924*^9}, {3.858348402869893*^9, 3.858348410190549*^9}, {
   3.858422980802874*^9, 3.858423056476487*^9}, {3.8592883937080708`*^9, 
   3.859288560670891*^9}, {3.859378732631886*^9, 3.8593787574893227`*^9}, {
   3.859378811435246*^9, 3.859378845154427*^9}, {3.859379014695904*^9, 
   3.859379017948369*^9}, 3.859388852810038*^9, {3.8593890774673243`*^9, 
   3.859389079536745*^9}, {3.861873035965827*^9, 3.8618730550608788`*^9}, {
   3.8618787039821672`*^9, 3.861878737103382*^9}, {3.8618810746017*^9, 
   3.861881079841586*^9}},
 ExpressionUUID -> "86983290-4148-4dc9-b4a3-ca238cada277"],

Cell[BoxData[
 TemplateBox[{
  "\"Neutral\"","\"Coevolutionary, S=0.65\"","\"Coevolutionary, S=0.8\""},
  "LineLegend",
  DisplayFunction->(StyleBox[
    StyleBox[
     PaneBox[
      TagBox[
       GridBox[{{
          TagBox[
           GridBox[{{
              GraphicsBox[{{
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1], 
                  Opacity[0.2], 
                  Dashing[{Small, Small}]], {
                  LineBox[{{0, 10}, {40, 10}}]}}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1], 
                  Opacity[0.2], 
                  Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
               ImageSize -> {40, 10}, PlotRangePadding -> None, ImagePadding -> 
               Automatic, BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
              GraphicsBox[{{
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1], 
                  Opacity[0.4]], {
                  LineBox[{{0, 10}, {40, 10}}]}}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1], 
                  Opacity[0.4]], {}}}, AspectRatio -> Full, 
               ImageSize -> {40, 10}, PlotRangePadding -> None, ImagePadding -> 
               Automatic, 
               BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
              GraphicsBox[{{
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1]], {
                  LineBox[{{0, 10}, {40, 10}}]}}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
               ImageSize -> {40, 10}, PlotRangePadding -> None, ImagePadding -> 
               Automatic, 
               BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
            GridBoxAlignment -> {
             "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "Columns" -> {{False}}, "Rows" -> {{False}}}, 
            GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
           "Grid"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
      Alignment -> Left, AppearanceElements -> None, 
      ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
     LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
    Background -> Automatic, StripOnInput -> False]& ),
  Editable->True,
  InterpretationFunction:>(RowBox[{"LineLegend", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
           RowBox[{"Directive", "[", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
               ",", 
               RowBox[{"Opacity", "[", "0.2`", "]"}], ",", 
               RowBox[{"Dashing", "[", 
                 RowBox[{"{", 
                   RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
           ",", 
           RowBox[{"Directive", "[", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
               ",", 
               RowBox[{"Opacity", "[", "0.4`", "]"}]}], "]"}], ",", 
           RowBox[{"Directive", "[", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[0, 0, 1], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
               ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 0, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
             "]"}]}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{#, ",", #2, ",", #3}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.861878723041635*^9, 3.8618787375932693`*^9}, 
   3.8618810881603203`*^9, 3.861882045511898*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g1", "=", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"mean", "[", "parsN", "]"}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "parsN", "]"}], "+", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "parsN", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "parsN", "]"}], "-", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "parsN", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Blue", ",", 
          RowBox[{"Opacity", "[", "0.2", "]"}], ",", "Dashed"}], "]"}]}], ",", 
       RowBox[{"Filling", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "3", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Directive", "[", 
              RowBox[{"Blue", ",", 
               RowBox[{"Opacity", "[", "0.1", "]"}]}], "]"}], "}"}]}], 
           "}"}]}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"mean", "[", "pars2", "]"}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "pars2", "]"}], "+", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "pars2", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "pars2", "]"}], "-", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "pars2", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Blue", ",", 
          RowBox[{"Opacity", "[", "0.4", "]"}]}], "]"}]}], ",", 
       RowBox[{"Filling", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "3", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Directive", "[", 
              RowBox[{"Blue", ",", 
               RowBox[{"Opacity", "[", "0.2", "]"}]}], "]"}], "}"}]}], 
           "}"}]}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"mean", "[", "pars1", "]"}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "pars1", "]"}], "+", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "pars1", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "pars1", "]"}], "-", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "pars1", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", "Blue", "]"}]}], ",", 
       RowBox[{"Filling", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "3", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Directive", "[", 
              RowBox[{"Blue", ",", 
               RowBox[{"Opacity", "[", "0.2", "]"}]}], "]"}], "}"}]}], 
           "}"}]}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.5"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Host generations\>\"", ",", "\"\<Host heterozygosity\>\""}], 
       "}"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "False"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"g1Legend", "=", 
  RowBox[{"Legended", "[", 
   RowBox[{"g1", ",", "leg2"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.861872943454239*^9, 3.861872988412517*^9}, {
   3.8618730190911407`*^9, 3.861873031765658*^9}, 3.861875135152529*^9, 
   3.861875246387599*^9, 3.861877480034683*^9, {3.8618777000767937`*^9, 
   3.861877712931704*^9}, {3.861878693688336*^9, 3.86187869410282*^9}, {
   3.8618810967634373`*^9, 3.8618811356587048`*^9}, 3.861881897026973*^9, {
   3.861881933662127*^9, 3.8618819386182404`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, 
      GraphicsComplexBox[CompressedData["
1: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
Cug9Ibz3Orr13nP0nhBsGZd2dpWj94SQE3SRbZGM3hNCwcGpI4We6D0hVAf8
2n1aE70nhF7fXRpbB4jHpN5K7G67ovoHaam3jlj88fXmIfSeCKxvzrkWFIze
E8FSI1m1YVP0ngjiD/WcUVVD74kgecaGjbmy6D0RaCYbbWhqQ++JIHUnU8+k
DL0n9dq31PFfM9F7ItA/7rvRJxK999/eip8gL/uhhnrLuM9r3vpU6q3di35i
aPhQbw1Uj3Zx5lBvNaSayB16Rr21WTga3ZJLvTW+zjKhWUy9Vde1QPDViXrr
UZTKndPK1Fs5YRvbBx7R+9ZCt0vMaSeot163K+tWBFFv5bc6liasoN4a6x7j
6DaZessv1fXW8x70kAnwU6su2pTQ+9aX4IJx/hHUW+Gqh4IKLai3XLdLDHny
1Ft5e+ffPPYM/bMEDKoqO2bn0vuW5WYbyYUA6q39HxZ4hphRb8H6tMPHhtA7
FjDz4wnt4HrsZfDcYNhInE7vW4U7bbiRkfS+5XY/Mv6tB/VW9di6bLsZ1Fup
TBn72o/oHQBVgwH53TXoHYC1/X7v56fQ+9aE3Nyji72ot4qfVjq/16TeWhc3
OfjBf+5XK2DpAfnoQ43oGVuwBJ5D92l639qyc1drdRS9bz06EvekjknvW5yq
SCdXLeqth8Ot8n8OoGdWgoW23kr2XfSMPdTFbF7jV4Tv9vBhtDZy/U563/Is
GlpZIKL3LftjZ3cmWdL7lsWyV09/KFFvxUm0DZ69QM84gvkBj5ns/3jIEVIz
Z955s5vet9ra9sU2etP7Fu9k2NzLZvS+JSqqK1ulQL2V98DJiPUSveIC3xbV
/330NvrGBY4Os8vKs/HdFSpbAho6xfS+5RyyWfeCB71vWckPOefPo/ctS6Wk
UUdl6q0I8bG3Pe3ol9XQ0cdbdUmC3nGH7CCV4iMx9L6Vd1/4NtmZ3re+uJ02
z7Wm962kL7KP01Xpfeubfuo6iw70ChM2yvIj8/FeJfXWvu/Nzs6/oVeYkHTg
bsf1dfS+VXGglG9kS+9b166ZTCzWpPct8eXeA3LD6A0W7GfNHZ/agd7wgG1B
DWmSevSKB8R8qGxgV6BXPEC7livUTMW9B4RwXX4fjMa9J5T6yjZ1r6f3LeWe
SJHYit63DrcNpvcb0PvWw20fDqjK0vsWX1FREvYAvSH1V9+dL4fRM1JvuYf2
lP6ahV7xgjoD1d6aGPSKN6g3PO3SFtD7liHXjvOzK71vDfYOcZuM6H1Lr7Al
+KIKvW95bfrs+WsPeoMNYxz2Z+beQ2+woWyWkWV3NXqFDbNS88/3p6NXODD5
ZPQK73jcc0C+Z13GBha9b4n3tLU72dD7ll+n3iTjBfS+deT0+bwWNXrfKpb9
3G7/Cb3CBYVEszFyVegVLsQm5a0YjETv+EAg5x/FMaboHR8wzM9XzBpCr/jA
5qWlKVOvoFd84Pom/7yqLegdHhxU21j902L0Dg9GW7aYTn+OXuFBtqmX0uwU
9AoPNsxp6TPloXd8QY6z6+B9c/SOL3j2GLLKpuLeF9KjLDvSK9ErvqCps+1d
Wyh6xQ+KHr3zqrNC7/hBcqIaPP4HPeIHo8b+fVXt6A8/UJz2XjLjHHqDD5ZR
AYqxwegbPrDSLxktWYh7PjwHQdFfrXgv4oN6MKvoXAFpqbeGuvMelR1Bn/gD
fw3nalAoesQfJGGf2ryYuPeH1eIVZufVcC/1Uug8bX4DekMA5q6VWi7Z6A0B
XILMILv96A2pl+w27wpkojcEEDbYZ2mmQVrqrfDB0h8JX9EbAuhNC29M60Fv
CCDu5dFFB66jN4Rw2NQ0MSkN70tCuLT9rcn9ELwvCcGwuexb9krSUm8ZiPX4
ZYqkpd5S72Rf9GnB+5IQBvuDrRQL8b4khBnLrty0DMH7khC2rm99Nc0B70si
eJPzOVNFl7TUW6Z56zrn9tWQ3xfB44wbPTEPSUu9dagvQN/kOmmpt+66JcZ9
SCMt9RbXdIHlQChpqbd0nQr6rZmkpd462B7+SbywZvn/AdWhoxU=
       
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[0, 0, 1], 
           Opacity[0.1]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl02O7EAYABeB7s20tL9ey22q5rZatbdm2F5bdvRn3ZtuuhWXbtl3v8/Th
PecPnJOqcdvKbcIEBAQEkk1kJwc/kZNc5CYPeclHfgpQkEIUpghFKcbP/EJx
SvArJSlFacpQlnKUpwK/8TsVqcQfVKYKValGdWpQk1rUpg51qUd9GtCQRjTm
T/7ib5rQlGY0pwUtaUVr2tCWdrSnAx3pRGe60JVudKcHPelFb/rQl370ZwAD
GcQ/DGYIQxnGvwxnBCMZxWjGMJZxjGcCE5nEZKYQRDBTmcZ0ZjCTWcxmDnOZ
RwihzGcBC1nEYpawlGUsZwUrWcVq1rCWdaxnAxvZxGa2sJVtbGcHO9nFbvaw
N/D7vrKShcxkIiMZ+JH0pCMtaUhNKlLyAylITjKSkoTEJCIhCYhPPOISh9jE
IiYxiE40ohKFyEQiIhEITzjCEobAwO/n+Kq+8JlPfOQD73nHW97wmle85AXP
ecZTnvCYRzzkAfe5x13ucJtb3OQG17nGVa5wmUtc5ALnOcdZznCaU5zkBMc5
xlGO8D+HOcRBDvAf+9nHXvawm13sZAfb2cZWtrCZTWxkA+tZx1rWsJpVrGQF
y1nGUpawmEUsZAHzCSWEecxlDrOZxUxmMJ1pTCWYIKbwDc8ToYY=
             
             "]]}]}, {}, {}}, {{}, {}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          
          LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
           18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
            35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
            68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 
           84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 
           100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 
           113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 
           126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 
           139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 
           151}]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwN0WciFQAAAOD3KKNCSUYqXkPJOIwjOADHMUIadlRkVYQyU2YKlRKFQjSk
Ur4f3wm+UH5hXkEwEAgUUUwJpVyhjHIquEol17jODW5SRTU11FJHPQ3copEm
bnOHuzTTwj1aaaOdDjq5zwMe0kU3j+ihlz4e84R+BhhkiGFGeMooz3jOGONM
MMkU07xghpe8YpY55nnNG96ywDves8gHlljmI59YYZU1PvOFdTbY5CtbbPON
7/zgJzv8Ypff/OEve/zjPwFRQcII5wAHiSCSKKI5xGGOEEMscRzlGPEcJ4ET
JJJEMimcJJVTnOYMaaQT4iznOM8FMrjIJTK5TBbZ5JDLPnOhWV8=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwV0Oc6FQAAgOHjUlxBpIyQygyJE5VSOEU2IaspKqNdHLNCpZBSZkMS9+X1
432e7/cXGWoMNkQEAoEwB0QU0RwkhkMcJpY44kngCIkkkcxRUjjGcU6QShrp
ZJBJFifJJodcTpHHafIpIMgZCiniLOc4TzEXuEgJl7hMKWWUE+IKV6mgkmtU
UU0NtdRRz/6ERpq4TjMttHKDNtrpoJMubnKL29zhLvfo5j499PKAhzyij34G
GOQxT3jKM57zgpe84jVDDBNmhFHGGGeCSd7wlndMMc0M7/nAR2b5xGfmmGeB
LyzylW8s8Z0fLLPCKmuss8FPfvGbP2zyly3+sc1/dthlDyXgStg=
           
           "]]}}}], {}, {}, {{}, {}}}, {{}, 
      GraphicsComplexBox[CompressedData["
1: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
vnTinH2o2v8BPOahFQ==
       
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[0, 0, 1], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl02O7EAYABeB7s20tL9ey22q5rZatbdm2F5bdvRn3ZtuuhWXbtl3v8/Th
PecPnJOqcdvKbcIEBAQEkk1kJwc/kZNc5CYPeclHfgpQkEIUpghFKcbP/EJx
SvArJSlFacpQlnKUpwK/8TsVqcQfVKYKValGdWpQk1rUpg51qUd9GtCQRjTm
T/7ib5rQlGY0pwUtaUVr2tCWdrSnAx3pRGe60JVudKcHPelFb/rQl370ZwAD
GcQ/DGYIQxnGvwxnBCMZxWjGMJZxjGcCE5nEZKYQRDBTmcZ0ZjCTWcxmDnOZ
RwihzGcBC1nEYpawlGUsZwUrWcVq1rCWdaxnAxvZxGa2sJVtbGcHO9nFbvaw
N/D7vrKShcxkIiMZ+JH0pCMtaUhNKlLyAylITjKSkoTEJCIhCYhPPOISh9jE
IiYxiE40ohKFyEQiIhEITzjCEobAwO/n+Kq+8JlPfOQD73nHW97wmle85AXP
ecZTnvCYRzzkAfe5x13ucJtb3OQG17nGVa5wmUtc5ALnOcdZznCaU5zkBMc5
xlGO8D+HOcRBDvAf+9nHXvawm13sZAfb2cZWtrCZTWxkA+tZx1rWsJpVrGQF
y1nGUpawmEUsZAHzCSWEecxlDrOZxUxmMJ1pTCWYIKbwDc8ToYY=
             
             "]]}]}, {}, {}}, {{}, {}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.4]], 
          
          LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
           18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
            35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
            68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 
           84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 
           100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 
           113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 
           126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 
           139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 
           151}]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.4]], 
          LineBox[CompressedData["
1:eJwN0WciFQAAAOD3KKNCSUYqXkPJOIwjOADHMUIadlRkVYQyU2YKlRKFQjSk
Ur4f3wm+UH5hXkEwEAgUUUwJpVyhjHIquEol17jODW5SRTU11FJHPQ3copEm
bnOHuzTTwj1aaaOdDjq5zwMe0kU3j+ihlz4e84R+BhhkiGFGeMooz3jOGONM
MMkU07xghpe8YpY55nnNG96ywDves8gHlljmI59YYZU1PvOFdTbY5CtbbPON
7/zgJzv8Ypff/OEve/zjPwFRQcII5wAHiSCSKKI5xGGOEEMscRzlGPEcJ4ET
JJJEMimcJJVTnOYMaaQT4iznOM8FMrjIJTK5TBbZ5JDLPnOhWV8=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.4]], 
          LineBox[CompressedData["
1:eJwV0Oc6FQAAgOHjUlxBpIyQygyJE5VSOEU2IaspKqNdHLNCpZBSZkMS9+X1
432e7/cXGWoMNkQEAoEwB0QU0RwkhkMcJpY44kngCIkkkcxRUjjGcU6QShrp
ZJBJFifJJodcTpHHafIpIMgZCiniLOc4TzEXuEgJl7hMKWWUE+IKV6mgkmtU
UU0NtdRRz/6ERpq4TjMttHKDNtrpoJMubnKL29zhLvfo5j499PKAhzyij34G
GOQxT3jKM57zgpe84jVDDBNmhFHGGGeCSd7wlndMMc0M7/nAR2b5xGfmmGeB
LyzylW8s8Z0fLLPCKmuss8FPfvGbP2zyly3+sc1/dthlDyXgStg=
           
           "]]}}}], {}, {}, {{}, {}}}, {{}, 
      GraphicsComplexBox[CompressedData["
1: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
IWu8z4Otnk06KdaWOv8DriBs8A==
       
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[0, 0, 1], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl02O7EAYABeB7s20tL9ey22q5rZatbdm2F5bdvRn3ZtuuhWXbtl3v8/Th
PecPnJOqcdvKbcIEBAQEkk1kJwc/kZNc5CYPeclHfgpQkEIUpghFKcbP/EJx
SvArJSlFacpQlnKUpwK/8TsVqcQfVKYKValGdWpQk1rUpg51qUd9GtCQRjTm
T/7ib5rQlGY0pwUtaUVr2tCWdrSnAx3pRGe60JVudKcHPelFb/rQl370ZwAD
GcQ/DGYIQxnGvwxnBCMZxWjGMJZxjGcCE5nEZKYQRDBTmcZ0ZjCTWcxmDnOZ
RwihzGcBC1nEYpawlGUsZwUrWcVq1rCWdaxnAxvZxGa2sJVtbGcHO9nFbvaw
N/D7vrKShcxkIiMZ+JH0pCMtaUhNKlLyAylITjKSkoTEJCIhCYhPPOISh9jE
IiYxiE40ohKFyEQiIhEITzjCEobAwO/n+Kq+8JlPfOQD73nHW97wmle85AXP
ecZTnvCYRzzkAfe5x13ucJtb3OQG17nGVa5wmUtc5ALnOcdZznCaU5zkBMc5
xlGO8D+HOcRBDvAf+9nHXvawm13sZAfb2cZWtrCZTWxkA+tZx1rWsJpVrGQF
y1nGUpawmEUsZAHzCSWEecxlDrOZxUxmMJ1pTCWYIKbwDc8ToYY=
             
             "]]}]}, {}, {}}, {{}, {}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          
          LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
           18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
            35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
            68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 
           84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 
           100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 
           113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 
           126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 
           139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 
           151}]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1:eJwN0WciFQAAAOD3KKNCSUYqXkPJOIwjOADHMUIadlRkVYQyU2YKlRKFQjSk
Ur4f3wm+UH5hXkEwEAgUUUwJpVyhjHIquEol17jODW5SRTU11FJHPQ3copEm
bnOHuzTTwj1aaaOdDjq5zwMe0kU3j+ihlz4e84R+BhhkiGFGeMooz3jOGONM
MMkU07xghpe8YpY55nnNG96ywDves8gHlljmI59YYZU1PvOFdTbY5CtbbPON
7/zgJzv8Ypff/OEve/zjPwFRQcII5wAHiSCSKKI5xGGOEEMscRzlGPEcJ4ET
JJJEMimcJJVTnOYMaaQT4iznOM8FMrjIJTK5TBbZ5JDLPnOhWV8=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1:eJwV0Oc6FQAAgOHjUlxBpIyQygyJE5VSOEU2IaspKqNdHLNCpZBSZkMS9+X1
432e7/cXGWoMNkQEAoEwB0QU0RwkhkMcJpY44kngCIkkkcxRUjjGcU6QShrp
ZJBJFifJJodcTpHHafIpIMgZCiniLOc4TzEXuEgJl7hMKWWUE+IKV6mgkmtU
UU0NtdRRz/6ERpq4TjMttHKDNtrpoJMubnKL29zhLvfo5j499PKAhzyij34G
GOQxT3jKM57zgpe84jVDDBNmhFHGGGeCSd7wlndMMc0M7/nAR2b5xGfmmGeB
LyzylW8s8Z0fLLPCKmuss8FPfvGbP2zyly3+sc1/dthlDyXgStg=
           
           "]]}}}], {}, {}, {{}, {}}}}, {
    PlotRange -> {0, 0.5}, Frame -> True, FrameLabel -> {
       FormBox["\"Host generations\"", TraditionalForm], 
       FormBox["\"Host heterozygosity\"", TraditionalForm]}, Axes -> False, 
     DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
     PlotRange -> {{0., 151.}, {0, 0.5}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0., 151.}, {0, 0.5}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Neutral\"", "\"Coevolutionary, S=0.65\"", 
       "\"Coevolutionary, S=0.8\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Opacity[0.2], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Opacity[0.2], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Opacity[0.4]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Opacity[0.4]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.2`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.4`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.861881897494021*^9, 3.861881939550918*^9, 
  3.861882046406357*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"leg3", "=", 
  RowBox[{"LineLegend", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{"Blue", ",", 
        RowBox[{"Opacity", "[", "0.2", "]"}], ",", "Dashed"}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{"Red", ",", 
        RowBox[{"Opacity", "[", "0.2", "]"}], ",", "Dashed"}], "]"}], ",", 
      RowBox[{"Directive", "[", "Blue", "]"}], ",", 
      RowBox[{"Directive", "[", "Red", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Neutral, V=0.2\>\"", ",", "\"\<Neutral, V=0.5\>\"", ",", 
      "\"\<Coevolutionary, V=0.2\>\"", ",", "\"\<Coevolutionary, V=0.5\>\""}],
      "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"g2", "=", 
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"mean", "[", "parsN", "]"}], ",", 
        RowBox[{
         RowBox[{"mean", "[", "parsN", "]"}], "+", 
         FractionBox[
          RowBox[{"2", 
           RowBox[{"SD", "[", "parsN", "]"}]}], 
          RowBox[{"Sqrt", "[", "2000", "]"}]]}], ",", 
        RowBox[{
         RowBox[{"mean", "[", "parsN", "]"}], "-", 
         FractionBox[
          RowBox[{"2", 
           RowBox[{"SD", "[", "parsN", "]"}]}], 
          RowBox[{"Sqrt", "[", "2000", "]"}]]}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Blue", ",", 
         RowBox[{"Opacity", "[", "0.2", "]"}], ",", "Dashed"}], "]"}]}], ",", 
      
      RowBox[{"Filling", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"2", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "3", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Directive", "[", 
             RowBox[{"Blue", ",", 
              RowBox[{"Opacity", "[", "0.1", "]"}]}], "]"}], "}"}]}], "}"}]}],
         "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"mean", "[", "parsN3", "]"}], ",", 
        RowBox[{
         RowBox[{"mean", "[", "parsN3", "]"}], "+", 
         FractionBox[
          RowBox[{"2", 
           RowBox[{"SD", "[", "parsN3", "]"}]}], 
          RowBox[{"Sqrt", "[", "2000", "]"}]]}], ",", 
        RowBox[{
         RowBox[{"mean", "[", "parsN3", "]"}], "-", 
         FractionBox[
          RowBox[{"2", 
           RowBox[{"SD", "[", "parsN3", "]"}]}], 
          RowBox[{"Sqrt", "[", "2000", "]"}]]}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Red", ",", 
         RowBox[{"Opacity", "[", "0.2", "]"}], ",", "Dashed"}], "]"}]}], ",", 
      
      RowBox[{"Filling", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"2", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "3", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Directive", "[", 
             RowBox[{"Red", ",", 
              RowBox[{"Opacity", "[", "0.1", "]"}]}], "]"}], "}"}]}], "}"}]}],
         "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"mean", "[", "pars1", "]"}], ",", 
        RowBox[{
         RowBox[{"mean", "[", "pars1", "]"}], "+", 
         FractionBox[
          RowBox[{"2", 
           RowBox[{"SD", "[", "pars1", "]"}]}], 
          RowBox[{"Sqrt", "[", "2000", "]"}]]}], ",", 
        RowBox[{
         RowBox[{"mean", "[", "pars1", "]"}], "-", 
         FractionBox[
          RowBox[{"2", 
           RowBox[{"SD", "[", "pars1", "]"}]}], 
          RowBox[{"Sqrt", "[", "2000", "]"}]]}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Blue", ",", 
         RowBox[{"Opacity", "[", "0.4", "]"}]}], "]"}]}], ",", 
      RowBox[{"Filling", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"2", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "3", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Directive", "[", 
             RowBox[{"Blue", ",", 
              RowBox[{"Opacity", "[", "0.2", "]"}]}], "]"}], "}"}]}], "}"}]}],
         "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"mean", "[", "pars3", "]"}], ",", 
        RowBox[{
         RowBox[{"mean", "[", "pars3", "]"}], "+", 
         FractionBox[
          RowBox[{"2", 
           RowBox[{"SD", "[", "pars3", "]"}]}], 
          RowBox[{"Sqrt", "[", "2000", "]"}]]}], ",", 
        RowBox[{
         RowBox[{"mean", "[", "pars3", "]"}], "-", 
         FractionBox[
          RowBox[{"2", 
           RowBox[{"SD", "[", "pars3", "]"}]}], 
          RowBox[{"Sqrt", "[", "2000", "]"}]]}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", "Red", "]"}]}], ",", 
      RowBox[{"Filling", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"2", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "3", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Directive", "[", 
             RowBox[{"Red", ",", 
              RowBox[{"Opacity", "[", "0.2", "]"}]}], "]"}], "}"}]}], "}"}]}],
         "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", " ", "All"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Host generations\>\"", ",", "\"\<Host heterozygosity\>\""}], 
      "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", " ", "False"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.861872943454239*^9, 3.861872988412517*^9}, {
   3.8618730190911407`*^9, 3.861873031765658*^9}, 3.861875135152529*^9, 
   3.861875246387599*^9, {3.861877485849504*^9, 3.861877621516144*^9}, {
   3.8618786068557673`*^9, 3.861878607624323*^9}, {3.861878746786591*^9, 
   3.8618788605557737`*^9}, 3.861880148666931*^9, {3.861880204661125*^9, 
   3.8618802237643557`*^9}, {3.8618802543724213`*^9, 3.861880257364853*^9}, {
   3.8618802933268957`*^9, 3.8618802934447117`*^9}, {3.861881477301523*^9, 
   3.861881515711733*^9}}],

Cell[BoxData[
 TemplateBox[{
  "\"Neutral, V=0.2\"","\"Neutral, V=0.5\"","\"Coevolutionary, V=0.2\"",
   "\"Coevolutionary, V=0.5\""},
  "LineLegend",
  DisplayFunction->(StyleBox[
    StyleBox[
     PaneBox[
      TagBox[
       GridBox[{{
          TagBox[
           GridBox[{{
              GraphicsBox[{{
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1], 
                  Opacity[0.2], 
                  Dashing[{Small, Small}]], {
                  LineBox[{{0, 10}, {40, 10}}]}}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1], 
                  Opacity[0.2], 
                  Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
               ImageSize -> {40, 10}, PlotRangePadding -> None, ImagePadding -> 
               Automatic, BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
              GraphicsBox[{{
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0, 0], 
                  Opacity[0.2], 
                  Dashing[{Small, Small}]], {
                  LineBox[{{0, 10}, {40, 10}}]}}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0, 0], 
                  Opacity[0.2], 
                  Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
               ImageSize -> {40, 10}, PlotRangePadding -> None, ImagePadding -> 
               Automatic, 
               BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
              GraphicsBox[{{
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1]], {
                  LineBox[{{0, 10}, {40, 10}}]}}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
               ImageSize -> {40, 10}, PlotRangePadding -> None, ImagePadding -> 
               Automatic, 
               BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
              GraphicsBox[{{
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0, 0]], {
                  LineBox[{{0, 10}, {40, 10}}]}}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
               ImageSize -> {40, 10}, PlotRangePadding -> None, ImagePadding -> 
               Automatic, 
               BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
            GridBoxAlignment -> {
             "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "Columns" -> {{False}}, "Rows" -> {{False}}}, 
            GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
           "Grid"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
      Alignment -> Left, AppearanceElements -> None, 
      ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
     LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
    Background -> Automatic, StripOnInput -> False]& ),
  Editable->True,
  InterpretationFunction:>(RowBox[{"LineLegend", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
           RowBox[{"Directive", "[", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
               ",", 
               RowBox[{"Opacity", "[", "0.2`", "]"}], ",", 
               RowBox[{"Dashing", "[", 
                 RowBox[{"{", 
                   RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
           ",", 
           RowBox[{"Directive", "[", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
               ",", 
               RowBox[{"Opacity", "[", "0.2`", "]"}], ",", 
               RowBox[{"Dashing", "[", 
                 RowBox[{"{", 
                   RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
           ",", 
           RowBox[{"Directive", "[", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[0, 0, 1], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
               ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 0, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
             "]"}], ",", 
           RowBox[{"Directive", "[", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[1, 0, 0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
               ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], "]"}
            ]}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]], "Output",\

 CellChangeTimes->{
  3.86187840657825*^9, 3.861878861157926*^9, 3.861880149245852*^9, {
   3.86188020517761*^9, 3.861880224072468*^9}, 3.8618802576949463`*^9, 
   3.861880293983554*^9, 3.861881520873999*^9, 3.8618820544239807`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, GraphicsComplexBox[CompressedData["
1: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
Cug9Ibz3Orr13nP0nhBsGZd2dpWj94SQE3SRbZGM3hNCwcGpI4We6D0hVAf8
2n1aE70nhF7fXRpbB4jHpN5K7G67ovoHaam3jlj88fXmIfSeCKxvzrkWFIze
E8FSI1m1YVP0ngjiD/WcUVVD74kgecaGjbmy6D0RaCYbbWhqQ++JIHUnU8+k
DL0n9dq31PFfM9F7ItA/7rvRJxK999/eip8gL/uhhnrLuM9r3vpU6q3di35i
aPhQbw1Uj3Zx5lBvNaSayB16Rr21WTga3ZJLvTW+zjKhWUy9Vde1QPDViXrr
UZTKndPK1Fs5YRvbBx7R+9ZCt0vMaSeot163K+tWBFFv5bc6liasoN4a6x7j
6DaZessv1fXW8x70kAnwU6su2pTQ+9aX4IJx/hHUW+Gqh4IKLai3XLdLDHny
1Ft5e+ffPPYM/bMEDKoqO2bn0vuW5WYbyYUA6q39HxZ4hphRb8H6tMPHhtA7
FjDz4wnt4HrsZfDcYNhInE7vW4U7bbiRkfS+5XY/Mv6tB/VW9di6bLsZ1Fup
TBn72o/oHQBVgwH53TXoHYC1/X7v56fQ+9aE3Nyji72ot4qfVjq/16TeWhc3
OfjBf+5XK2DpAfnoQ43oGVuwBJ5D92l639qyc1drdRS9bz06EvekjknvW5yq
SCdXLeqth8Ot8n8OoGdWgoW23kr2XfSMPdTFbF7jV4Tv9vBhtDZy/U563/Is
GlpZIKL3LftjZ3cmWdL7lsWyV09/KFFvxUm0DZ69QM84gvkBj5ns/3jIEVIz
Z955s5vet9ra9sU2etP7Fu9k2NzLZvS+JSqqK1ulQL2V98DJiPUSveIC3xbV
/330NvrGBY4Os8vKs/HdFSpbAho6xfS+5RyyWfeCB71vWckPOefPo/ctS6Wk
UUdl6q0I8bG3Pe3ol9XQ0cdbdUmC3nGH7CCV4iMx9L6Vd1/4NtmZ3re+uJ02
z7Wm962kL7KP01Xpfeubfuo6iw70ChM2yvIj8/FeJfXWvu/Nzs6/oVeYkHTg
bsf1dfS+VXGglG9kS+9b166ZTCzWpPct8eXeA3LD6A0W7GfNHZ/agd7wgG1B
DWmSevSKB8R8qGxgV6BXPEC7livUTMW9B4RwXX4fjMa9J5T6yjZ1r6f3LeWe
SJHYit63DrcNpvcb0PvWw20fDqjK0vsWX1FREvYAvSH1V9+dL4fRM1JvuYf2
lP6ahV7xgjoD1d6aGPSKN6g3PO3SFtD7liHXjvOzK71vDfYOcZuM6H1Lr7Al
+KIKvW95bfrs+WsPeoMNYxz2Z+beQ2+woWyWkWV3NXqFDbNS88/3p6NXODD5
ZPQK73jcc0C+Z13GBha9b4n3tLU72dD7ll+n3iTjBfS+deT0+bwWNXrfKpb9
3G7/Cb3CBYVEszFyVegVLsQm5a0YjETv+EAg5x/FMaboHR8wzM9XzBpCr/jA
5qWlKVOvoFd84Pom/7yqLegdHhxU21j902L0Dg9GW7aYTn+OXuFBtqmX0uwU
9AoPNsxp6TPloXd8QY6z6+B9c/SOL3j2GLLKpuLeF9KjLDvSK9ErvqCps+1d
Wyh6xQ+KHr3zqrNC7/hBcqIaPP4HPeIHo8b+fVXt6A8/UJz2XjLjHHqDD5ZR
AYqxwegbPrDSLxktWYh7PjwHQdFfrXgv4oN6MKvoXAFpqbeGuvMelR1Bn/gD
fw3nalAoesQfJGGf2ryYuPeH1eIVZufVcC/1Uug8bX4DekMA5q6VWi7Z6A0B
XILMILv96A2pl+w27wpkojcEEDbYZ2mmQVrqrfDB0h8JX9EbAuhNC29M60Fv
CCDu5dFFB66jN4Rw2NQ0MSkN70tCuLT9rcn9ELwvCcGwuexb9krSUm8ZiPX4
ZYqkpd5S72Rf9GnB+5IQBvuDrRQL8b4khBnLrty0DMH7khC2rm99Nc0B70si
eJPzOVNFl7TUW6Z56zrn9tWQ3xfB44wbPTEPSUu9dagvQN/kOmmpt+66JcZ9
SCMt9RbXdIHlQChpqbd0nQr6rZmkpd462B7+SbywZvn/AdWhoxU=
     
     "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
       {RGBColor[0, 0, 1], Opacity[0.1], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl02O7EAYABeB7s20tL9ey22q5rZatbdm2F5bdvRn3ZtuuhWXbtl3v8/Th
PecPnJOqcdvKbcIEBAQEkk1kJwc/kZNc5CYPeclHfgpQkEIUpghFKcbP/EJx
SvArJSlFacpQlnKUpwK/8TsVqcQfVKYKValGdWpQk1rUpg51qUd9GtCQRjTm
T/7ib5rQlGY0pwUtaUVr2tCWdrSnAx3pRGe60JVudKcHPelFb/rQl370ZwAD
GcQ/DGYIQxnGvwxnBCMZxWjGMJZxjGcCE5nEZKYQRDBTmcZ0ZjCTWcxmDnOZ
RwihzGcBC1nEYpawlGUsZwUrWcVq1rCWdaxnAxvZxGa2sJVtbGcHO9nFbvaw
N/D7vrKShcxkIiMZ+JH0pCMtaUhNKlLyAylITjKSkoTEJCIhCYhPPOISh9jE
IiYxiE40ohKFyEQiIhEITzjCEobAwO/n+Kq+8JlPfOQD73nHW97wmle85AXP
ecZTnvCYRzzkAfe5x13ucJtb3OQG17nGVa5wmUtc5ALnOcdZznCaU5zkBMc5
xlGO8D+HOcRBDvAf+9nHXvawm13sZAfb2cZWtrCZTWxkA+tZx1rWsJpVrGQF
y1nGUpawmEUsZAHzCSWEecxlDrOZxUxmMJ1pTCWYIKbwDc8ToYY=
          
          "]]]}, {}, {}}, {{}, {}, {}, 
       {RGBColor[0, 0, 1], PointSize[0.011111111111111112`], 
        AbsoluteThickness[1.6], Opacity[0.2], Dashing[{Small, Small}], 
        LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
         18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
         35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
         52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
         69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
         86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 
         102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
          116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 
         129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
          143, 144, 145, 146, 147, 148, 149, 150, 151}]}, 
       {RGBColor[0, 0, 1], PointSize[0.011111111111111112`], 
        AbsoluteThickness[1.6], Opacity[0.2], Dashing[{Small, Small}], 
        LineBox[CompressedData["
1:eJwN0WciFQAAAOD3KKNCSUYqXkPJOIwjOADHMUIadlRkVYQyU2YKlRKFQjSk
Ur4f3wm+UH5hXkEwEAgUUUwJpVyhjHIquEol17jODW5SRTU11FJHPQ3copEm
bnOHuzTTwj1aaaOdDjq5zwMe0kU3j+ihlz4e84R+BhhkiGFGeMooz3jOGONM
MMkU07xghpe8YpY55nnNG96ywDves8gHlljmI59YYZU1PvOFdTbY5CtbbPON
7/zgJzv8Ypff/OEve/zjPwFRQcII5wAHiSCSKKI5xGGOEEMscRzlGPEcJ4ET
JJJEMimcJJVTnOYMaaQT4iznOM8FMrjIJTK5TBbZ5JDLPnOhWV8=
         "]]}, 
       {RGBColor[0, 0, 1], PointSize[0.011111111111111112`], 
        AbsoluteThickness[1.6], Opacity[0.2], Dashing[{Small, Small}], 
        LineBox[CompressedData["
1:eJwV0Oc6FQAAgOHjUlxBpIyQygyJE5VSOEU2IaspKqNdHLNCpZBSZkMS9+X1
432e7/cXGWoMNkQEAoEwB0QU0RwkhkMcJpY44kngCIkkkcxRUjjGcU6QShrp
ZJBJFifJJodcTpHHafIpIMgZCiniLOc4TzEXuEgJl7hMKWWUE+IKV6mgkmtU
UU0NtdRRz/6ERpq4TjMttHKDNtrpoJMubnKL29zhLvfo5j499PKAhzyij34G
GOQxT3jKM57zgpe84jVDDBNmhFHGGGeCSd7wlndMMc0M7/nAR2b5xGfmmGeB
LyzylW8s8Z0fLLPCKmuss8FPfvGbP2zyly3+sc1/dthlDyXgStg=
         
         "]]}}}], {}, {}, {{}, {}}}, {{}, GraphicsComplexBox[CompressedData["
1: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
     
     "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
       {RGBColor[1, 0, 0], Opacity[0.1], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl02O7EAYABeB7s20tL9ey22q5rZatbdm2F5bdvRn3ZtuuhWXbtl3v8/Th
PecPnJOqcdvKbcIEBAQEkk1kJwc/kZNc5CYPeclHfgpQkEIUpghFKcbP/EJx
SvArJSlFacpQlnKUpwK/8TsVqcQfVKYKValGdWpQk1rUpg51qUd9GtCQRjTm
T/7ib5rQlGY0pwUtaUVr2tCWdrSnAx3pRGe60JVudKcHPelFb/rQl370ZwAD
GcQ/DGYIQxnGvwxnBCMZxWjGMJZxjGcCE5nEZKYQRDBTmcZ0ZjCTWcxmDnOZ
RwihzGcBC1nEYpawlGUsZwUrWcVq1rCWdaxnAxvZxGa2sJVtbGcHO9nFbvaw
N/D7vrKShcxkIiMZ+JH0pCMtaUhNKlLyAylITjKSkoTEJCIhCYhPPOISh9jE
IiYxiE40ohKFyEQiIhEITzjCEobAwO/n+Kq+8JlPfOQD73nHW97wmle85AXP
ecZTnvCYRzzkAfe5x13ucJtb3OQG17nGVa5wmUtc5ALnOcdZznCaU5zkBMc5
xlGO8D+HOcRBDvAf+9nHXvawm13sZAfb2cZWtrCZTWxkA+tZx1rWsJpVrGQF
y1nGUpawmEUsZAHzCSWEecxlDrOZxUxmMJ1pTCWYIKbwDc8ToYY=
          
          "]]]}, {}, {}}, {{}, {}, {}, 
       {RGBColor[1, 0, 0], PointSize[0.011111111111111112`], 
        AbsoluteThickness[1.6], Opacity[0.2], Dashing[{Small, Small}], 
        LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
         18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
         35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
         52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
         69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
         86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 
         102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
          116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 
         129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
          143, 144, 145, 146, 147, 148, 149, 150, 151}]}, 
       {RGBColor[1, 0, 0], PointSize[0.011111111111111112`], 
        AbsoluteThickness[1.6], Opacity[0.2], Dashing[{Small, Small}], 
        LineBox[CompressedData["
1:eJwN0WciFQAAAOD3KKNCSUYqXkPJOIwjOADHMUIadlRkVYQyU2YKlRKFQjSk
Ur4f3wm+UH5hXkEwEAgUUUwJpVyhjHIquEol17jODW5SRTU11FJHPQ3copEm
bnOHuzTTwj1aaaOdDjq5zwMe0kU3j+ihlz4e84R+BhhkiGFGeMooz3jOGONM
MMkU07xghpe8YpY55nnNG96ywDves8gHlljmI59YYZU1PvOFdTbY5CtbbPON
7/zgJzv8Ypff/OEve/zjPwFRQcII5wAHiSCSKKI5xGGOEEMscRzlGPEcJ4ET
JJJEMimcJJVTnOYMaaQT4iznOM8FMrjIJTK5TBbZ5JDLPnOhWV8=
         "]]}, 
       {RGBColor[1, 0, 0], PointSize[0.011111111111111112`], 
        AbsoluteThickness[1.6], Opacity[0.2], Dashing[{Small, Small}], 
        LineBox[CompressedData["
1:eJwV0Oc6FQAAgOHjUlxBpIyQygyJE5VSOEU2IaspKqNdHLNCpZBSZkMS9+X1
432e7/cXGWoMNkQEAoEwB0QU0RwkhkMcJpY44kngCIkkkcxRUjjGcU6QShrp
ZJBJFifJJodcTpHHafIpIMgZCiniLOc4TzEXuEgJl7hMKWWUE+IKV6mgkmtU
UU0NtdRRz/6ERpq4TjMttHKDNtrpoJMubnKL29zhLvfo5j499PKAhzyij34G
GOQxT3jKM57zgpe84jVDDBNmhFHGGGeCSd7wlndMMc0M7/nAR2b5xGfmmGeB
LyzylW8s8Z0fLLPCKmuss8FPfvGbP2zyly3+sc1/dthlDyXgStg=
         
         "]]}}}], {}, {}, {{}, {}}}, {{}, GraphicsComplexBox[CompressedData["
1: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
IWu8z4Otnk06KdaWOv8DriBs8A==
     
     "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
       {RGBColor[0, 0, 1], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl02O7EAYABeB7s20tL9ey22q5rZatbdm2F5bdvRn3ZtuuhWXbtl3v8/Th
PecPnJOqcdvKbcIEBAQEkk1kJwc/kZNc5CYPeclHfgpQkEIUpghFKcbP/EJx
SvArJSlFacpQlnKUpwK/8TsVqcQfVKYKValGdWpQk1rUpg51qUd9GtCQRjTm
T/7ib5rQlGY0pwUtaUVr2tCWdrSnAx3pRGe60JVudKcHPelFb/rQl370ZwAD
GcQ/DGYIQxnGvwxnBCMZxWjGMJZxjGcCE5nEZKYQRDBTmcZ0ZjCTWcxmDnOZ
RwihzGcBC1nEYpawlGUsZwUrWcVq1rCWdaxnAxvZxGa2sJVtbGcHO9nFbvaw
N/D7vrKShcxkIiMZ+JH0pCMtaUhNKlLyAylITjKSkoTEJCIhCYhPPOISh9jE
IiYxiE40ohKFyEQiIhEITzjCEobAwO/n+Kq+8JlPfOQD73nHW97wmle85AXP
ecZTnvCYRzzkAfe5x13ucJtb3OQG17nGVa5wmUtc5ALnOcdZznCaU5zkBMc5
xlGO8D+HOcRBDvAf+9nHXvawm13sZAfb2cZWtrCZTWxkA+tZx1rWsJpVrGQF
y1nGUpawmEUsZAHzCSWEecxlDrOZxUxmMJ1pTCWYIKbwDc8ToYY=
          
          "]]]}, {}, {}}, {{}, {}, {}, 
       {RGBColor[0, 0, 1], PointSize[0.011111111111111112`], 
        AbsoluteThickness[1.6], Opacity[0.4], 
        LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
         18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
         35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
         52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
         69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
         86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 
         102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
          116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 
         129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
          143, 144, 145, 146, 147, 148, 149, 150, 151}]}, 
       {RGBColor[0, 0, 1], PointSize[0.011111111111111112`], 
        AbsoluteThickness[1.6], Opacity[0.4], LineBox[CompressedData["
1:eJwN0WciFQAAAOD3KKNCSUYqXkPJOIwjOADHMUIadlRkVYQyU2YKlRKFQjSk
Ur4f3wm+UH5hXkEwEAgUUUwJpVyhjHIquEol17jODW5SRTU11FJHPQ3copEm
bnOHuzTTwj1aaaOdDjq5zwMe0kU3j+ihlz4e84R+BhhkiGFGeMooz3jOGONM
MMkU07xghpe8YpY55nnNG96ywDves8gHlljmI59YYZU1PvOFdTbY5CtbbPON
7/zgJzv8Ypff/OEve/zjPwFRQcII5wAHiSCSKKI5xGGOEEMscRzlGPEcJ4ET
JJJEMimcJJVTnOYMaaQT4iznOM8FMrjIJTK5TBbZ5JDLPnOhWV8=
         "]]}, 
       {RGBColor[0, 0, 1], PointSize[0.011111111111111112`], 
        AbsoluteThickness[1.6], Opacity[0.4], LineBox[CompressedData["
1:eJwV0Oc6FQAAgOHjUlxBpIyQygyJE5VSOEU2IaspKqNdHLNCpZBSZkMS9+X1
432e7/cXGWoMNkQEAoEwB0QU0RwkhkMcJpY44kngCIkkkcxRUjjGcU6QShrp
ZJBJFifJJodcTpHHafIpIMgZCiniLOc4TzEXuEgJl7hMKWWUE+IKV6mgkmtU
UU0NtdRRz/6ERpq4TjMttHKDNtrpoJMubnKL29zhLvfo5j499PKAhzyij34G
GOQxT3jKM57zgpe84jVDDBNmhFHGGGeCSd7wlndMMc0M7/nAR2b5xGfmmGeB
LyzylW8s8Z0fLLPCKmuss8FPfvGbP2zyly3+sc1/dthlDyXgStg=
         
         "]]}}}], {}, {}, {{}, {}}}, {{}, GraphicsComplexBox[CompressedData["
1:eJzt2Pk3le0ex/FdpgZTkSkqpVIZigy1i2+KzPNmowyVqCgiRGoTmuVBg1DG
CI8nRIqyEYWwKaKiqCSph1Kd2OU4x3Vf9+le5w84Z638std7fX3W9pvXuuS3
7bN2n0qj0Wqm0Gj/+pz8GdKd/HyJPmmgvTxaJK/uBeppUGqu4JZ9mmhRoB98
V5pnS7Q47NVbLSq8hGgpiGR5zeJwu1HLQtMhxwpaM9ELIJQRM0/Hk+iFcJgR
e2fJYBdqBXA4blzco0f0Etjwqfz+/MznqBVhXVXn7quLiV4OWkqFkV8qn6FW
goe15+kBLKJVoJm+lLN2PdErQbtyGOa0PUW9CsbXRZieWUG0Gljb6SiHuHWi
VocjTB21nKgO1KvBK+DwDrOKJ6g1YIATUOvMbUetCRq9nHX+hkRrgULNyKnP
uW2otcE7XdYgewnRa+BOxEhhQfVj1GvBX+5cxRUdoumQ2Nc0kJ34CPU6uGxe
+0dwWyvq9TDb8fKZLzSidYB3Ru1wgmoLal147ZTrn+/CQQ3weWV9xwHx5slm
AbjxPL85c08jum8Ah5OaZeUyD9F9A0wTT5qnfaoe3fXAg75je8voA3TXgzfh
QyH5dffRfSO4Ru1JPmNfi+4bITjhlkja8D103wSeq+Zs7/GqRvdNUKkQul/3
TSW664P6B6W67XpsdNeH1vAks5MVd9DdAK6KzJ6zUqYM3Q2A//tfIwudStF9
M4xp6Gyhy5Sg+2bQFUja2FVahO6GEPVAvCDFqQDdDSH09q39WyPz0d0IXP3T
N8+0yEV3I3gnKCSY2pCN7sbgZxPAYgdcRXdjyLcfPOl/KQPdTSD05RB3elka
uptA4wfuTrGfKehuCh2dM6aY/byM7qZwEBSt9rxLRHczCPIJbN9bdhHdzeDV
hn5hzvtz6G4Obwtz0+88jkV3cyiJMvmTRzoG3S2A6c84NH/gJLpbgMghjUOO
WVHobgllNhmXe64dnWywhLsCKsJ9KmHo9y3hRiXP7rv3jkw22xKq37Rt/cEN
QXsraAnN26lJD0J7K8gRk1KfUX8A7a1ANOak4xdxf7S3AsUxzSU0c1+0t4YG
1fyvD2b5oL01GFX07a913YP21vDNMaxi0TMPtLcGmemD79JStqO9DRQfb/Ti
qrihvQ0YfNTOavrkjPY2sCKnNm5xmSPa24DIdy8NCWs7tLeF0+E7fQR8bNDe
Fuy6BjtaplijvS0EPKj040hboL0tuLUU8sv4GqE9A9Q0XDy7729CewZIbe2W
zW/TQXsGaO2aKuNRpoX2DEh8onL9m7Ym2ttB9m7ust6P6mhvB6IGojM7k9XQ
3g68vmb1tHUqo70dfHoylX+0dwna24NhV1VlBVcW7e1hXbF00bwucbS3h+zv
o7xCjSJobw8FIzxxu6dIoD0Taj7M92amLUZ7JrRa8km9GVNBeybEv3O6UCqt
ivZMGD28u9w/ThHtHUBOqNJdllce7R1gNFnLRdNEDO0d4KeP9tt8fkG0d4AM
wehY+7fT0N4RLv79Zzpf9Wudyb0jxBzwPRdd+2yyWZRmU5rmBDkMy7Hd3Q1o
7wS0//xhUZpNadqWXxsozaI0m9K0rZQ9pVmUZlOa5kzZU5pFaTalaS6UPaVZ
lGZTmub6ay+gNFDaldIsSqdQmk3pl5SmuVG+n9JAaVdKsyidQmk2pV9SmraN
8v2UBkq7UppF6RRKsyn9ktL/xVvbjsnd4mskveWsHLG7KY70VjPPfDEnF9Jb
FQO581rUSW9F1HyQ/yFItCyUKod8a+0hvaUo0RyjzyK9ZevOyXw4g2gFGC+L
H+7xJL1VmKS/xbiV9NZ09xNPepmkt8o4Y8qc76S3PO0S653LSG9VS9QFTg8h
veWxmcditQTRq2CHwuETvL6kt5aVT9FNySO9FWTI88a3k/SWpvmr/rPSRGtA
eFWC7J9OhL80wZnjfyUkh/TWFu49i3ZRorVhPyupbegs6a3AT8/M768iei1o
6MtbLrxOestGaFwmSoToddDCr+WjYkL4az1ckYv4lBpEeovudOpwQQ7prbFX
h473dJHe8rGIVrCbwcHemh093s3a24S9lfEojO/bgkbsrTHp88/q/2jA3uKT
67HdNrUee8sr5QYcan2AvRUfJ69c43Ife2tkPHih5Pca7C2dsvFNkj73sLd+
qJy48eRVFfZWR+DcYsaaSuyt7P4XGytSKrC37vWX17t/Ksfe8nQcVZJYeBt7
66t9Lje59SbpLZvwRfVbi7G3DvlzG/gHCrG3hjhjJz+XXsfeEnHidlpK5mNv
QVKU0tUjudhbvR9iWEJzrmFvHTt61JVPPgt7K01yuO6+Yib21qnWGFc5q3Ts
LamRVJH2slTsrdvJbcmqUoTHzIA503NpNDsJe2uT4Qud0VsJ2Ftfnd0/5jie
x97arHlFeJ9ZHPYWa6aHdOP2GOytqD2qF8bETmNvNXYMBgRUHMfeUkocFQh7
F4m9JZRc3znTPwJ7a6GDRWf7hnDsrYS8OerasizsLa+qZuERp1DsrVZJ7k1x
vxDsLbG58m3RFkHYW1vo7CcHhgOwtzgN/asGnvhhb91+Lr6fx8oXeyvNhi/Y
T8Ubeys1pSD/YNZu7C2+oAsH6b2e2FtDlqygYZmd2FsqAZW8UkPbsLf484eE
1Ppcsbc+Jp77mmjsir0V71DCG8CzFXuLla+fH+PExN4yeGN81C7UFnvr7k8T
ze0V5thbuzghVdpnN2Nv8c+aVlTqSXjNDqIigxLdyo2wt56IF3GLs4ywtxS2
34fKz/rYWy+mBuion9XF3mI3z+Of2aGGvdU3MFAYUrSM9Jadg0B+lwL2lkyJ
TNK3bmXsLYP2ZXEegjrYW44h7xv2JBhgb20r1T86JEP8/UyIydZTb/LWw956
nK1aIxa5Bnvrzfurnuf+VsLe2tQkclaOdzH21pnAcxnFeQuxt1T9LDasXjSO
vRX0Qs5F4PEI9tYvzab0hLfia/n73795/dtb/97/9tav3///5y3hxp/u1rWk
t2b73LMPjyS9lfWxyPmnEektuUvlU0ykSG9F0d/T0gfJ963XDWuOqZST3mqN
t8rTtCS9la1v28ZqJN+3imxpB3tkSW9xNq9W/xJIemvf/OU/d30ivLQcio55
dsmcJL21Uis274w+6a1nrpGKXuOEp1bCdPpLta9x5PvWJcZJEYk+wldqEDIU
PNdOgvRWlOfBI73qpLfSLku/nOFOvm9Zv7DxEU0m37cER5SeevURftKCwTMK
D0Q3k+9bnrVJJS53CD+tAR5JIckkBvm+VfRlmqpcI+EpOryquHy7YSn5vrXn
PKOo1oV834o8X6podILwlQ40ltLcw28QvtKFxKyiyq9VzdhbAtWBnrriTdhb
14NKY857PMTeEt7w3idcvAF7a45wmltmRB32Vp3DW1/4THhKD5zdlW6+ZNdi
bykdLBays6jB3qKp/4OrNFCNvRWbtTwsd1cV9lakjO/KrD429pZszaHbr87f
xd7iyjrYM7rLsLeOa3q4jG64hb2VccG9XDW+BHuLJt5S1uF2g/RWWfH2IbFC
7K35axyVDlz6C3tr7qOQ5kcXCU8ZQcEZ4+KaqGzsrdjQuPeJklext3hvObH8
OtKxt9pWMIpfiaVhbzGvDamamqVgb82f3fp0tl0y9lZYQ0vvh4hL2FtH9DN3
BqZdwN662BYVaVESj70VTh/uzpSLxd66LvS6ICU5GnvLOP/vCyvrTmBvFbQ8
r8kQJPxkARdP091urQ3D3rJOvnk6QTEUeyu1v0rxfH8Q9pa50f4F7qkB2Ft6
0kLTzQL8sLd80pQ9uOuJ9ykr4NSx88HHC3srSVRtNNd7F/ZWcEnCx96LO7C3
/A21V2jv2Ia99arxG4/vIuJ9yhq+/KNAI0yReJ+yhkWhmUUZi22xtxSqM3O5
nebYW7ydkSWmeobYWwM7pL05LD3srRmSWyKHRejYW2oZ+WK55quxt45L+C92
9luBvSUa6BT0qHAB9paoSmvUOeYs7K0FY2L631M/of/3DKA5Osf2GdciL0y0
h2n1Csl25AUGbGmok5h2WLpicm8HwXuGan5oLJ3sCW/J0k/V+i1VmuwJb5Vc
adR1mIt6wltPGX0++5nyaG8PeyO+xOftnIX29pDTvmncz4EH7e3B0mOf2OXn
qCe8lcbnpLA6QATtmcDTImY67/ECtGdClUn6+Gtv4vsnvCXs0m2prYL2TDDN
0LC1iFFEewfYp9V19+MU9PdMeKs9sXv2XUMxtHcAcfsmbykeQbR3gMF7a7yX
vp6G9o6gIrCRvpX9+u7k3hHYsfFWtOpnk82iNJvSE97i7g2+1vm0Ae1/e+vX
/W9v/fr9/zve+iesGV2H
     
     "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
       {RGBColor[1, 0, 0], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl02O7EAYABeB7s20tL9ey22q5rZatbdm2F5bdvRn3ZtuuhWXbtl3v8/Th
PecPnJOqcdvKbcIEBAQEkk1kJwc/kZNc5CYPeclHfgpQkEIUpghFKcbP/EJx
SvArJSlFacpQlnKUpwK/8TsVqcQfVKYKValGdWpQk1rUpg51qUd9GtCQRjTm
T/7ib5rQlGY0pwUtaUVr2tCWdrSnAx3pRGe60JVudKcHPelFb/rQl370ZwAD
GcQ/DGYIQxnGvwxnBCMZxWjGMJZxjGcCE5nEZKYQRDBTmcZ0ZjCTWcxmDnOZ
RwihzGcBC1nEYpawlGUsZwUrWcVq1rCWdaxnAxvZxGa2sJVtbGcHO9nFbvaw
N/D7vrKShcxkIiMZ+JH0pCMtaUhNKlLyAylITjKSkoTEJCIhCYhPPOISh9jE
IiYxiE40ohKFyEQiIhEITzjCEobAwO/n+Kq+8JlPfOQD73nHW97wmle85AXP
ecZTnvCYRzzkAfe5x13ucJtb3OQG17nGVa5wmUtc5ALnOcdZznCaU5zkBMc5
xlGO8D+HOcRBDvAf+9nHXvawm13sZAfb2cZWtrCZTWxkA+tZx1rWsJpVrGQF
y1nGUpawmEUsZAHzCSWEecxlDrOZxUxmMJ1pTCWYIKbwDc8ToYY=
          
          "]]]}, {}, {}}, {{}, {}, {}, 
       {RGBColor[1, 0, 0], PointSize[0.011111111111111112`], 
        AbsoluteThickness[1.6], 
        LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
         18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
         35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
         52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
         69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
         86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 
         102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
          116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 
         129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
          143, 144, 145, 146, 147, 148, 149, 150, 151}]}, 
       {RGBColor[1, 0, 0], PointSize[0.011111111111111112`], 
        AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwN0WciFQAAAOD3KKNCSUYqXkPJOIwjOADHMUIadlRkVYQyU2YKlRKFQjSk
Ur4f3wm+UH5hXkEwEAgUUUwJpVyhjHIquEol17jODW5SRTU11FJHPQ3copEm
bnOHuzTTwj1aaaOdDjq5zwMe0kU3j+ihlz4e84R+BhhkiGFGeMooz3jOGONM
MMkU07xghpe8YpY55nnNG96ywDves8gHlljmI59YYZU1PvOFdTbY5CtbbPON
7/zgJzv8Ypff/OEve/zjPwFRQcII5wAHiSCSKKI5xGGOEEMscRzlGPEcJ4ET
JJJEMimcJJVTnOYMaaQT4iznOM8FMrjIJTK5TBbZ5JDLPnOhWV8=
         "]]}, 
       {RGBColor[1, 0, 0], PointSize[0.011111111111111112`], 
        AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwV0Oc6FQAAgOHjUlxBpIyQygyJE5VSOEU2IaspKqNdHLNCpZBSZkMS9+X1
432e7/cXGWoMNkQEAoEwB0QU0RwkhkMcJpY44kngCIkkkcxRUjjGcU6QShrp
ZJBJFifJJodcTpHHafIpIMgZCiniLOc4TzEXuEgJl7hMKWWUE+IKV6mgkmtU
UU0NtdRRz/6ERpq4TjMttHKDNtrpoJMubnKL29zhLvfo5j499PKAhzyij34G
GOQxT3jKM57zgpe84jVDDBNmhFHGGGeCSd7wlndMMc0M7/nAR2b5xGfmmGeB
LyzylW8s8Z0fLLPCKmuss8FPfvGbP2zyly3+sc1/dthlDyXgStg=
         
         "]]}}}], {}, {}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->False,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{
    FormBox["\"Host generations\"", TraditionalForm], 
    FormBox["\"Host heterozygosity\"", TraditionalForm]},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.86187840657825*^9, 3.861878861157926*^9, 3.861880149245852*^9, {
   3.86188020517761*^9, 3.861880224072468*^9}, 3.8618802576949463`*^9, 
   3.861880293983554*^9, 3.861881520873999*^9, 3.861882054515023*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g2Legend", "=", 
  RowBox[{"Legended", "[", 
   RowBox[{"g2", ",", "leg3"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.86188212178153*^9, 3.861882125987206*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, 
      GraphicsComplexBox[CompressedData["
1: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
Cug9Ibz3Orr13nP0nhBsGZd2dpWj94SQE3SRbZGM3hNCwcGpI4We6D0hVAf8
2n1aE70nhF7fXRpbB4jHpN5K7G67ovoHaam3jlj88fXmIfSeCKxvzrkWFIze
E8FSI1m1YVP0ngjiD/WcUVVD74kgecaGjbmy6D0RaCYbbWhqQ++JIHUnU8+k
DL0n9dq31PFfM9F7ItA/7rvRJxK999/eip8gL/uhhnrLuM9r3vpU6q3di35i
aPhQbw1Uj3Zx5lBvNaSayB16Rr21WTga3ZJLvTW+zjKhWUy9Vde1QPDViXrr
UZTKndPK1Fs5YRvbBx7R+9ZCt0vMaSeot163K+tWBFFv5bc6liasoN4a6x7j
6DaZessv1fXW8x70kAnwU6su2pTQ+9aX4IJx/hHUW+Gqh4IKLai3XLdLDHny
1Ft5e+ffPPYM/bMEDKoqO2bn0vuW5WYbyYUA6q39HxZ4hphRb8H6tMPHhtA7
FjDz4wnt4HrsZfDcYNhInE7vW4U7bbiRkfS+5XY/Mv6tB/VW9di6bLsZ1Fup
TBn72o/oHQBVgwH53TXoHYC1/X7v56fQ+9aE3Nyji72ot4qfVjq/16TeWhc3
OfjBf+5XK2DpAfnoQ43oGVuwBJ5D92l639qyc1drdRS9bz06EvekjknvW5yq
SCdXLeqth8Ot8n8OoGdWgoW23kr2XfSMPdTFbF7jV4Tv9vBhtDZy/U563/Is
GlpZIKL3LftjZ3cmWdL7lsWyV09/KFFvxUm0DZ69QM84gvkBj5ns/3jIEVIz
Z955s5vet9ra9sU2etP7Fu9k2NzLZvS+JSqqK1ulQL2V98DJiPUSveIC3xbV
/330NvrGBY4Os8vKs/HdFSpbAho6xfS+5RyyWfeCB71vWckPOefPo/ctS6Wk
UUdl6q0I8bG3Pe3ol9XQ0cdbdUmC3nGH7CCV4iMx9L6Vd1/4NtmZ3re+uJ02
z7Wm962kL7KP01Xpfeubfuo6iw70ChM2yvIj8/FeJfXWvu/Nzs6/oVeYkHTg
bsf1dfS+VXGglG9kS+9b166ZTCzWpPct8eXeA3LD6A0W7GfNHZ/agd7wgG1B
DWmSevSKB8R8qGxgV6BXPEC7livUTMW9B4RwXX4fjMa9J5T6yjZ1r6f3LeWe
SJHYit63DrcNpvcb0PvWw20fDqjK0vsWX1FREvYAvSH1V9+dL4fRM1JvuYf2
lP6ahV7xgjoD1d6aGPSKN6g3PO3SFtD7liHXjvOzK71vDfYOcZuM6H1Lr7Al
+KIKvW95bfrs+WsPeoMNYxz2Z+beQ2+woWyWkWV3NXqFDbNS88/3p6NXODD5
ZPQK73jcc0C+Z13GBha9b4n3tLU72dD7ll+n3iTjBfS+deT0+bwWNXrfKpb9
3G7/Cb3CBYVEszFyVegVLsQm5a0YjETv+EAg5x/FMaboHR8wzM9XzBpCr/jA
5qWlKVOvoFd84Pom/7yqLegdHhxU21j902L0Dg9GW7aYTn+OXuFBtqmX0uwU
9AoPNsxp6TPloXd8QY6z6+B9c/SOL3j2GLLKpuLeF9KjLDvSK9ErvqCps+1d
Wyh6xQ+KHr3zqrNC7/hBcqIaPP4HPeIHo8b+fVXt6A8/UJz2XjLjHHqDD5ZR
AYqxwegbPrDSLxktWYh7PjwHQdFfrXgv4oN6MKvoXAFpqbeGuvMelR1Bn/gD
fw3nalAoesQfJGGf2ryYuPeH1eIVZufVcC/1Uug8bX4DekMA5q6VWi7Z6A0B
XILMILv96A2pl+w27wpkojcEEDbYZ2mmQVrqrfDB0h8JX9EbAuhNC29M60Fv
CCDu5dFFB66jN4Rw2NQ0MSkN70tCuLT9rcn9ELwvCcGwuexb9krSUm8ZiPX4
ZYqkpd5S72Rf9GnB+5IQBvuDrRQL8b4khBnLrty0DMH7khC2rm99Nc0B70si
eJPzOVNFl7TUW6Z56zrn9tWQ3xfB44wbPTEPSUu9dagvQN/kOmmpt+66JcZ9
SCMt9RbXdIHlQChpqbd0nQr6rZmkpd462B7+SbywZvn/AdWhoxU=
       
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[0, 0, 1], 
           Opacity[0.1]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl02O7EAYABeB7s20tL9ey22q5rZatbdm2F5bdvRn3ZtuuhWXbtl3v8/Th
PecPnJOqcdvKbcIEBAQEkk1kJwc/kZNc5CYPeclHfgpQkEIUpghFKcbP/EJx
SvArJSlFacpQlnKUpwK/8TsVqcQfVKYKValGdWpQk1rUpg51qUd9GtCQRjTm
T/7ib5rQlGY0pwUtaUVr2tCWdrSnAx3pRGe60JVudKcHPelFb/rQl370ZwAD
GcQ/DGYIQxnGvwxnBCMZxWjGMJZxjGcCE5nEZKYQRDBTmcZ0ZjCTWcxmDnOZ
RwihzGcBC1nEYpawlGUsZwUrWcVq1rCWdaxnAxvZxGa2sJVtbGcHO9nFbvaw
N/D7vrKShcxkIiMZ+JH0pCMtaUhNKlLyAylITjKSkoTEJCIhCYhPPOISh9jE
IiYxiE40ohKFyEQiIhEITzjCEobAwO/n+Kq+8JlPfOQD73nHW97wmle85AXP
ecZTnvCYRzzkAfe5x13ucJtb3OQG17nGVa5wmUtc5ALnOcdZznCaU5zkBMc5
xlGO8D+HOcRBDvAf+9nHXvawm13sZAfb2cZWtrCZTWxkA+tZx1rWsJpVrGQF
y1nGUpawmEUsZAHzCSWEecxlDrOZxUxmMJ1pTCWYIKbwDc8ToYY=
             
             "]]}]}, {}, {}}, {{}, {}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          
          LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
           18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
            35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
            68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 
           84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 
           100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 
           113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 
           126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 
           139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 
           151}]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwN0WciFQAAAOD3KKNCSUYqXkPJOIwjOADHMUIadlRkVYQyU2YKlRKFQjSk
Ur4f3wm+UH5hXkEwEAgUUUwJpVyhjHIquEol17jODW5SRTU11FJHPQ3copEm
bnOHuzTTwj1aaaOdDjq5zwMe0kU3j+ihlz4e84R+BhhkiGFGeMooz3jOGONM
MMkU07xghpe8YpY55nnNG96ywDves8gHlljmI59YYZU1PvOFdTbY5CtbbPON
7/zgJzv8Ypff/OEve/zjPwFRQcII5wAHiSCSKKI5xGGOEEMscRzlGPEcJ4ET
JJJEMimcJJVTnOYMaaQT4iznOM8FMrjIJTK5TBbZ5JDLPnOhWV8=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwV0Oc6FQAAgOHjUlxBpIyQygyJE5VSOEU2IaspKqNdHLNCpZBSZkMS9+X1
432e7/cXGWoMNkQEAoEwB0QU0RwkhkMcJpY44kngCIkkkcxRUjjGcU6QShrp
ZJBJFifJJodcTpHHafIpIMgZCiniLOc4TzEXuEgJl7hMKWWUE+IKV6mgkmtU
UU0NtdRRz/6ERpq4TjMttHKDNtrpoJMubnKL29zhLvfo5j499PKAhzyij34G
GOQxT3jKM57zgpe84jVDDBNmhFHGGGeCSd7wlndMMc0M7/nAR2b5xGfmmGeB
LyzylW8s8Z0fLLPCKmuss8FPfvGbP2zyly3+sc1/dthlDyXgStg=
           
           "]]}}}], {}, {}, {{}, {}}}, {{}, 
      GraphicsComplexBox[CompressedData["
1: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
       
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[1, 0, 0], 
           Opacity[0.1]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl02O7EAYABeB7s20tL9ey22q5rZatbdm2F5bdvRn3ZtuuhWXbtl3v8/Th
PecPnJOqcdvKbcIEBAQEkk1kJwc/kZNc5CYPeclHfgpQkEIUpghFKcbP/EJx
SvArJSlFacpQlnKUpwK/8TsVqcQfVKYKValGdWpQk1rUpg51qUd9GtCQRjTm
T/7ib5rQlGY0pwUtaUVr2tCWdrSnAx3pRGe60JVudKcHPelFb/rQl370ZwAD
GcQ/DGYIQxnGvwxnBCMZxWjGMJZxjGcCE5nEZKYQRDBTmcZ0ZjCTWcxmDnOZ
RwihzGcBC1nEYpawlGUsZwUrWcVq1rCWdaxnAxvZxGa2sJVtbGcHO9nFbvaw
N/D7vrKShcxkIiMZ+JH0pCMtaUhNKlLyAylITjKSkoTEJCIhCYhPPOISh9jE
IiYxiE40ohKFyEQiIhEITzjCEobAwO/n+Kq+8JlPfOQD73nHW97wmle85AXP
ecZTnvCYRzzkAfe5x13ucJtb3OQG17nGVa5wmUtc5ALnOcdZznCaU5zkBMc5
xlGO8D+HOcRBDvAf+9nHXvawm13sZAfb2cZWtrCZTWxkA+tZx1rWsJpVrGQF
y1nGUpawmEUsZAHzCSWEecxlDrOZxUxmMJ1pTCWYIKbwDc8ToYY=
             
             "]]}]}, {}, {}}, {{}, {}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          
          LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
           18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
            35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
            68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 
           84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 
           100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 
           113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 
           126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 
           139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 
           151}]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwN0WciFQAAAOD3KKNCSUYqXkPJOIwjOADHMUIadlRkVYQyU2YKlRKFQjSk
Ur4f3wm+UH5hXkEwEAgUUUwJpVyhjHIquEol17jODW5SRTU11FJHPQ3copEm
bnOHuzTTwj1aaaOdDjq5zwMe0kU3j+ihlz4e84R+BhhkiGFGeMooz3jOGONM
MMkU07xghpe8YpY55nnNG96ywDves8gHlljmI59YYZU1PvOFdTbY5CtbbPON
7/zgJzv8Ypff/OEve/zjPwFRQcII5wAHiSCSKKI5xGGOEEMscRzlGPEcJ4ET
JJJEMimcJJVTnOYMaaQT4iznOM8FMrjIJTK5TBbZ5JDLPnOhWV8=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwV0Oc6FQAAgOHjUlxBpIyQygyJE5VSOEU2IaspKqNdHLNCpZBSZkMS9+X1
432e7/cXGWoMNkQEAoEwB0QU0RwkhkMcJpY44kngCIkkkcxRUjjGcU6QShrp
ZJBJFifJJodcTpHHafIpIMgZCiniLOc4TzEXuEgJl7hMKWWUE+IKV6mgkmtU
UU0NtdRRz/6ERpq4TjMttHKDNtrpoJMubnKL29zhLvfo5j499PKAhzyij34G
GOQxT3jKM57zgpe84jVDDBNmhFHGGGeCSd7wlndMMc0M7/nAR2b5xGfmmGeB
LyzylW8s8Z0fLLPCKmuss8FPfvGbP2zyly3+sc1/dthlDyXgStg=
           
           "]]}}}], {}, {}, {{}, {}}}, {{}, 
      GraphicsComplexBox[CompressedData["
1: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
IWu8z4Otnk06KdaWOv8DriBs8A==
       
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[0, 0, 1], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl02O7EAYABeB7s20tL9ey22q5rZatbdm2F5bdvRn3ZtuuhWXbtl3v8/Th
PecPnJOqcdvKbcIEBAQEkk1kJwc/kZNc5CYPeclHfgpQkEIUpghFKcbP/EJx
SvArJSlFacpQlnKUpwK/8TsVqcQfVKYKValGdWpQk1rUpg51qUd9GtCQRjTm
T/7ib5rQlGY0pwUtaUVr2tCWdrSnAx3pRGe60JVudKcHPelFb/rQl370ZwAD
GcQ/DGYIQxnGvwxnBCMZxWjGMJZxjGcCE5nEZKYQRDBTmcZ0ZjCTWcxmDnOZ
RwihzGcBC1nEYpawlGUsZwUrWcVq1rCWdaxnAxvZxGa2sJVtbGcHO9nFbvaw
N/D7vrKShcxkIiMZ+JH0pCMtaUhNKlLyAylITjKSkoTEJCIhCYhPPOISh9jE
IiYxiE40ohKFyEQiIhEITzjCEobAwO/n+Kq+8JlPfOQD73nHW97wmle85AXP
ecZTnvCYRzzkAfe5x13ucJtb3OQG17nGVa5wmUtc5ALnOcdZznCaU5zkBMc5
xlGO8D+HOcRBDvAf+9nHXvawm13sZAfb2cZWtrCZTWxkA+tZx1rWsJpVrGQF
y1nGUpawmEUsZAHzCSWEecxlDrOZxUxmMJ1pTCWYIKbwDc8ToYY=
             
             "]]}]}, {}, {}}, {{}, {}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.4]], 
          
          LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
           18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
            35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
            68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 
           84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 
           100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 
           113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 
           126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 
           139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 
           151}]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.4]], 
          LineBox[CompressedData["
1:eJwN0WciFQAAAOD3KKNCSUYqXkPJOIwjOADHMUIadlRkVYQyU2YKlRKFQjSk
Ur4f3wm+UH5hXkEwEAgUUUwJpVyhjHIquEol17jODW5SRTU11FJHPQ3copEm
bnOHuzTTwj1aaaOdDjq5zwMe0kU3j+ihlz4e84R+BhhkiGFGeMooz3jOGONM
MMkU07xghpe8YpY55nnNG96ywDves8gHlljmI59YYZU1PvOFdTbY5CtbbPON
7/zgJzv8Ypff/OEve/zjPwFRQcII5wAHiSCSKKI5xGGOEEMscRzlGPEcJ4ET
JJJEMimcJJVTnOYMaaQT4iznOM8FMrjIJTK5TBbZ5JDLPnOhWV8=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.4]], 
          LineBox[CompressedData["
1:eJwV0Oc6FQAAgOHjUlxBpIyQygyJE5VSOEU2IaspKqNdHLNCpZBSZkMS9+X1
432e7/cXGWoMNkQEAoEwB0QU0RwkhkMcJpY44kngCIkkkcxRUjjGcU6QShrp
ZJBJFifJJodcTpHHafIpIMgZCiniLOc4TzEXuEgJl7hMKWWUE+IKV6mgkmtU
UU0NtdRRz/6ERpq4TjMttHKDNtrpoJMubnKL29zhLvfo5j499PKAhzyij34G
GOQxT3jKM57zgpe84jVDDBNmhFHGGGeCSd7wlndMMc0M7/nAR2b5xGfmmGeB
LyzylW8s8Z0fLLPCKmuss8FPfvGbP2zyly3+sc1/dthlDyXgStg=
           
           "]]}}}], {}, {}, {{}, {}}}, {{}, 
      GraphicsComplexBox[CompressedData["
1:eJzt2Pk3le0ex/FdpgZTkSkqpVIZigy1i2+KzPNmowyVqCgiRGoTmuVBg1DG
CI8nRIqyEYWwKaKiqCSph1Kd2OU4x3Vf9+le5w84Z638std7fX3W9pvXuuS3
7bN2n0qj0Wqm0Gj/+pz8GdKd/HyJPmmgvTxaJK/uBeppUGqu4JZ9mmhRoB98
V5pnS7Q47NVbLSq8hGgpiGR5zeJwu1HLQtMhxwpaM9ELIJQRM0/Hk+iFcJgR
e2fJYBdqBXA4blzco0f0Etjwqfz+/MznqBVhXVXn7quLiV4OWkqFkV8qn6FW
goe15+kBLKJVoJm+lLN2PdErQbtyGOa0PUW9CsbXRZieWUG0Gljb6SiHuHWi
VocjTB21nKgO1KvBK+DwDrOKJ6g1YIATUOvMbUetCRq9nHX+hkRrgULNyKnP
uW2otcE7XdYgewnRa+BOxEhhQfVj1GvBX+5cxRUdoumQ2Nc0kJ34CPU6uGxe
+0dwWyvq9TDb8fKZLzSidYB3Ru1wgmoLal147ZTrn+/CQQ3weWV9xwHx5slm
AbjxPL85c08jum8Ah5OaZeUyD9F9A0wTT5qnfaoe3fXAg75je8voA3TXgzfh
QyH5dffRfSO4Ru1JPmNfi+4bITjhlkja8D103wSeq+Zs7/GqRvdNUKkQul/3
TSW664P6B6W67XpsdNeH1vAks5MVd9DdAK6KzJ6zUqYM3Q2A//tfIwudStF9
M4xp6Gyhy5Sg+2bQFUja2FVahO6GEPVAvCDFqQDdDSH09q39WyPz0d0IXP3T
N8+0yEV3I3gnKCSY2pCN7sbgZxPAYgdcRXdjyLcfPOl/KQPdTSD05RB3elka
uptA4wfuTrGfKehuCh2dM6aY/byM7qZwEBSt9rxLRHczCPIJbN9bdhHdzeDV
hn5hzvtz6G4Obwtz0+88jkV3cyiJMvmTRzoG3S2A6c84NH/gJLpbgMghjUOO
WVHobgllNhmXe64dnWywhLsCKsJ9KmHo9y3hRiXP7rv3jkw22xKq37Rt/cEN
QXsraAnN26lJD0J7K8gRk1KfUX8A7a1ANOak4xdxf7S3AsUxzSU0c1+0t4YG
1fyvD2b5oL01GFX07a913YP21vDNMaxi0TMPtLcGmemD79JStqO9DRQfb/Ti
qrihvQ0YfNTOavrkjPY2sCKnNm5xmSPa24DIdy8NCWs7tLeF0+E7fQR8bNDe
Fuy6BjtaplijvS0EPKj040hboL0tuLUU8sv4GqE9A9Q0XDy7729CewZIbe2W
zW/TQXsGaO2aKuNRpoX2DEh8onL9m7Ym2ttB9m7ust6P6mhvB6IGojM7k9XQ
3g68vmb1tHUqo70dfHoylX+0dwna24NhV1VlBVcW7e1hXbF00bwucbS3h+zv
o7xCjSJobw8FIzxxu6dIoD0Taj7M92amLUZ7JrRa8km9GVNBeybEv3O6UCqt
ivZMGD28u9w/ThHtHUBOqNJdllce7R1gNFnLRdNEDO0d4KeP9tt8fkG0d4AM
wehY+7fT0N4RLv79Zzpf9Wudyb0jxBzwPRdd+2yyWZRmU5rmBDkMy7Hd3Q1o
7wS0//xhUZpNadqWXxsozaI0m9K0rZQ9pVmUZlOa5kzZU5pFaTalaS6UPaVZ
lGZTmub6ay+gNFDaldIsSqdQmk3pl5SmuVG+n9JAaVdKsyidQmk2pV9SmraN
8v2UBkq7UppF6RRKsyn9ktL/xVvbjsnd4mskveWsHLG7KY70VjPPfDEnF9Jb
FQO581rUSW9F1HyQ/yFItCyUKod8a+0hvaUo0RyjzyK9ZevOyXw4g2gFGC+L
H+7xJL1VmKS/xbiV9NZ09xNPepmkt8o4Y8qc76S3PO0S653LSG9VS9QFTg8h
veWxmcditQTRq2CHwuETvL6kt5aVT9FNySO9FWTI88a3k/SWpvmr/rPSRGtA
eFWC7J9OhL80wZnjfyUkh/TWFu49i3ZRorVhPyupbegs6a3AT8/M768iei1o
6MtbLrxOestGaFwmSoToddDCr+WjYkL4az1ckYv4lBpEeovudOpwQQ7prbFX
h473dJHe8rGIVrCbwcHemh093s3a24S9lfEojO/bgkbsrTHp88/q/2jA3uKT
67HdNrUee8sr5QYcan2AvRUfJ69c43Ife2tkPHih5Pca7C2dsvFNkj73sLd+
qJy48eRVFfZWR+DcYsaaSuyt7P4XGytSKrC37vWX17t/Ksfe8nQcVZJYeBt7
66t9Lje59SbpLZvwRfVbi7G3DvlzG/gHCrG3hjhjJz+XXsfeEnHidlpK5mNv
QVKU0tUjudhbvR9iWEJzrmFvHTt61JVPPgt7K01yuO6+Yib21qnWGFc5q3Ts
LamRVJH2slTsrdvJbcmqUoTHzIA503NpNDsJe2uT4Qud0VsJ2Ftfnd0/5jie
x97arHlFeJ9ZHPYWa6aHdOP2GOytqD2qF8bETmNvNXYMBgRUHMfeUkocFQh7
F4m9JZRc3znTPwJ7a6GDRWf7hnDsrYS8OerasizsLa+qZuERp1DsrVZJ7k1x
vxDsLbG58m3RFkHYW1vo7CcHhgOwtzgN/asGnvhhb91+Lr6fx8oXeyvNhi/Y
T8Ubeys1pSD/YNZu7C2+oAsH6b2e2FtDlqygYZmd2FsqAZW8UkPbsLf484eE
1Ppcsbc+Jp77mmjsir0V71DCG8CzFXuLla+fH+PExN4yeGN81C7UFnvr7k8T
ze0V5thbuzghVdpnN2Nv8c+aVlTqSXjNDqIigxLdyo2wt56IF3GLs4ywtxS2
34fKz/rYWy+mBuion9XF3mI3z+Of2aGGvdU3MFAYUrSM9Jadg0B+lwL2lkyJ
TNK3bmXsLYP2ZXEegjrYW44h7xv2JBhgb20r1T86JEP8/UyIydZTb/LWw956
nK1aIxa5Bnvrzfurnuf+VsLe2tQkclaOdzH21pnAcxnFeQuxt1T9LDasXjSO
vRX0Qs5F4PEI9tYvzab0hLfia/n73795/dtb/97/9tav3///5y3hxp/u1rWk
t2b73LMPjyS9lfWxyPmnEektuUvlU0ykSG9F0d/T0gfJ963XDWuOqZST3mqN
t8rTtCS9la1v28ZqJN+3imxpB3tkSW9xNq9W/xJIemvf/OU/d30ivLQcio55
dsmcJL21Uis274w+6a1nrpGKXuOEp1bCdPpLta9x5PvWJcZJEYk+wldqEDIU
PNdOgvRWlOfBI73qpLfSLku/nOFOvm9Zv7DxEU0m37cER5SeevURftKCwTMK
D0Q3k+9bnrVJJS53CD+tAR5JIckkBvm+VfRlmqpcI+EpOryquHy7YSn5vrXn
PKOo1oV834o8X6podILwlQ40ltLcw28QvtKFxKyiyq9VzdhbAtWBnrriTdhb
14NKY857PMTeEt7w3idcvAF7a45wmltmRB32Vp3DW1/4THhKD5zdlW6+ZNdi
bykdLBays6jB3qKp/4OrNFCNvRWbtTwsd1cV9lakjO/KrD429pZszaHbr87f
xd7iyjrYM7rLsLeOa3q4jG64hb2VccG9XDW+BHuLJt5S1uF2g/RWWfH2IbFC
7K35axyVDlz6C3tr7qOQ5kcXCU8ZQcEZ4+KaqGzsrdjQuPeJklext3hvObH8
OtKxt9pWMIpfiaVhbzGvDamamqVgb82f3fp0tl0y9lZYQ0vvh4hL2FtH9DN3
BqZdwN662BYVaVESj70VTh/uzpSLxd66LvS6ICU5GnvLOP/vCyvrTmBvFbQ8
r8kQJPxkARdP091urQ3D3rJOvnk6QTEUeyu1v0rxfH8Q9pa50f4F7qkB2Ft6
0kLTzQL8sLd80pQ9uOuJ9ykr4NSx88HHC3srSVRtNNd7F/ZWcEnCx96LO7C3
/A21V2jv2Ia99arxG4/vIuJ9yhq+/KNAI0yReJ+yhkWhmUUZi22xtxSqM3O5
nebYW7ydkSWmeobYWwM7pL05LD3srRmSWyKHRejYW2oZ+WK55quxt45L+C92
9luBvSUa6BT0qHAB9paoSmvUOeYs7K0FY2L631M/of/3DKA5Osf2GdciL0y0
h2n1Csl25AUGbGmok5h2WLpicm8HwXuGan5oLJ3sCW/J0k/V+i1VmuwJb5Vc
adR1mIt6wltPGX0++5nyaG8PeyO+xOftnIX29pDTvmncz4EH7e3B0mOf2OXn
qCe8lcbnpLA6QATtmcDTImY67/ECtGdClUn6+Gtv4vsnvCXs0m2prYL2TDDN
0LC1iFFEewfYp9V19+MU9PdMeKs9sXv2XUMxtHcAcfsmbykeQbR3gMF7a7yX
vp6G9o6gIrCRvpX9+u7k3hHYsfFWtOpnk82iNJvSE97i7g2+1vm0Ae1/e+vX
/W9v/fr9/zve+iesGV2H
       
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[1, 0, 0], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl02O7EAYABeB7s20tL9ey22q5rZatbdm2F5bdvRn3ZtuuhWXbtl3v8/Th
PecPnJOqcdvKbcIEBAQEkk1kJwc/kZNc5CYPeclHfgpQkEIUpghFKcbP/EJx
SvArJSlFacpQlnKUpwK/8TsVqcQfVKYKValGdWpQk1rUpg51qUd9GtCQRjTm
T/7ib5rQlGY0pwUtaUVr2tCWdrSnAx3pRGe60JVudKcHPelFb/rQl370ZwAD
GcQ/DGYIQxnGvwxnBCMZxWjGMJZxjGcCE5nEZKYQRDBTmcZ0ZjCTWcxmDnOZ
RwihzGcBC1nEYpawlGUsZwUrWcVq1rCWdaxnAxvZxGa2sJVtbGcHO9nFbvaw
N/D7vrKShcxkIiMZ+JH0pCMtaUhNKlLyAylITjKSkoTEJCIhCYhPPOISh9jE
IiYxiE40ohKFyEQiIhEITzjCEobAwO/n+Kq+8JlPfOQD73nHW97wmle85AXP
ecZTnvCYRzzkAfe5x13ucJtb3OQG17nGVa5wmUtc5ALnOcdZznCaU5zkBMc5
xlGO8D+HOcRBDvAf+9nHXvawm13sZAfb2cZWtrCZTWxkA+tZx1rWsJpVrGQF
y1nGUpawmEUsZAHzCSWEecxlDrOZxUxmMJ1pTCWYIKbwDc8ToYY=
             
             "]]}]}, {}, {}}, {{}, {}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          
          LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
           18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
            35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
            68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 
           84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 
           100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 
           113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 
           126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 
           139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 
           151}]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJwN0WciFQAAAOD3KKNCSUYqXkPJOIwjOADHMUIadlRkVYQyU2YKlRKFQjSk
Ur4f3wm+UH5hXkEwEAgUUUwJpVyhjHIquEol17jODW5SRTU11FJHPQ3copEm
bnOHuzTTwj1aaaOdDjq5zwMe0kU3j+ihlz4e84R+BhhkiGFGeMooz3jOGONM
MMkU07xghpe8YpY55nnNG96ywDves8gHlljmI59YYZU1PvOFdTbY5CtbbPON
7/zgJzv8Ypff/OEve/zjPwFRQcII5wAHiSCSKKI5xGGOEEMscRzlGPEcJ4ET
JJJEMimcJJVTnOYMaaQT4iznOM8FMrjIJTK5TBbZ5JDLPnOhWV8=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJwV0Oc6FQAAgOHjUlxBpIyQygyJE5VSOEU2IaspKqNdHLNCpZBSZkMS9+X1
432e7/cXGWoMNkQEAoEwB0QU0RwkhkMcJpY44kngCIkkkcxRUjjGcU6QShrp
ZJBJFifJJodcTpHHafIpIMgZCiniLOc4TzEXuEgJl7hMKWWUE+IKV6mgkmtU
UU0NtdRRz/6ERpq4TjMttHKDNtrpoJMubnKL29zhLvfo5j499PKAhzyij34G
GOQxT3jKM57zgpe84jVDDBNmhFHGGGeCSd7wlndMMc0M7/nAR2b5xGfmmGeB
LyzylW8s8Z0fLLPCKmuss8FPfvGbP2zyly3+sc1/dthlDyXgStg=
           
           "]]}}}], {}, {}, {{}, {}}}}, {
    PlotRange -> All, Frame -> True, FrameLabel -> {
       FormBox["\"Host generations\"", TraditionalForm], 
       FormBox["\"Host heterozygosity\"", TraditionalForm]}, Axes -> False, 
     DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
     PlotRange -> {{0., 151.}, {0, 0.5}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0., 151.}, {0, 0.5}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Neutral, V=0.2\"", "\"Neutral, V=0.5\"", "\"Coevolutionary, V=0.2\"",
        "\"Coevolutionary, V=0.5\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Opacity[0.2], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Opacity[0.2], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Opacity[0.2], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Opacity[0.2], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.2`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.2`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
                 "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.861882126607058*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/madeline/Desktop/Mideo.lab2/Coevolution/Data \
sets/FIgures/OnePatch_Discrete_Specificity.png\>\"", ",", "g1Legend", ",", 
   "\"\<PNG\>\"", ",", 
   RowBox[{"ImageResolution", "\[Rule]", " ", "300"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/madeline/Desktop/Mideo.lab2/Coevolution/Data \
sets/FIgures/OnePatch_Discrete_Virulence.png\>\"", ",", "g2Legend", ",", 
   "\"\<PNG\>\"", ",", 
   RowBox[{"ImageResolution", "\[Rule]", " ", "300"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.861564192043035*^9, 3.861564236338619*^9}, {
  3.8615685211214848`*^9, 3.8615685282858753`*^9}, {3.861568952374758*^9, 
  3.8615689532789307`*^9}, {3.861569049649403*^9, 3.861569050265788*^9}, {
  3.861789774781876*^9, 3.861789775920046*^9}, {3.861882073932786*^9, 
  3.861882108707745*^9}}],

Cell[BoxData["\<\"/Users/madeline/Desktop/Mideo.lab2/Coevolution/Data \
sets/FIgures/OnePatch_Discrete_Specificity.png\"\>"], "Output",
 CellChangeTimes->{
  3.861789784946966*^9, {3.861789898378087*^9, 3.8617899182767572`*^9}, 
   3.8618821349986753`*^9}],

Cell[BoxData["\<\"/Users/madeline/Desktop/Mideo.lab2/Coevolution/Data \
sets/FIgures/OnePatch_Discrete_Virulence.png\"\>"], "Output",
 CellChangeTimes->{
  3.861789784946966*^9, {3.861789898378087*^9, 3.8617899182767572`*^9}, 
   3.8618821353005447`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{65, Automatic}, {-625, Automatic}},
Magnification:>1.5 Inherited,
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 313, 6, 220, "Title"],
Cell[896, 30, 2487, 72, 142, "Input"],
Cell[3386, 104, 1487, 43, 138, "Input"],
Cell[CellGroupData[{
Cell[4898, 151, 444, 12, 48, "Input"],
Cell[5345, 165, 676, 22, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6058, 192, 446, 12, 48, "Input"],
Cell[6507, 206, 537, 18, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7081, 229, 220, 3, 65, "Subsection"],
Cell[CellGroupData[{
Cell[7326, 236, 2275, 47, 142, "Input"],
Cell[9604, 285, 213, 5, 48, "Output"],
Cell[9820, 292, 212, 5, 48, "Output"],
Cell[10035, 299, 211, 5, 48, "Output"]
}, Open  ]],
Cell[10261, 307, 6424, 171, 877, "Input"],
Cell[16688, 480, 487, 11, 48, "Input"],
Cell[CellGroupData[{
Cell[17200, 495, 3266, 83, 297, "Input"],
Cell[20469, 580, 62068, 1031, 389, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82574, 1616, 299, 6, 80, "Input"],
Cell[82876, 1624, 157, 2, 48, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[83082, 1632, 261, 4, 65, "Subsection"],
Cell[83346, 1638, 526, 11, 364, "Input"],
Cell[CellGroupData[{
Cell[83897, 1653, 545, 15, 364, "Input"],
Cell[84445, 1670, 1264, 39, 528, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[85758, 1715, 232, 3, 51, "Subsection"],
Cell[85993, 1720, 1140, 31, 559, "Input"],
Cell[87136, 1753, 735, 20, 559, "Input"],
Cell[CellGroupData[{
Cell[87896, 1777, 298, 4, 262, "Subsubsection"],
Cell[CellGroupData[{
Cell[88219, 1785, 161, 3, 243, "Input"],
Cell[88383, 1790, 942, 27, 397, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89362, 1822, 132, 2, 243, "Input"],
Cell[89497, 1826, 388, 12, 312, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89922, 1843, 496, 13, 405, "Input"],
Cell[90421, 1858, 355, 11, 312, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90813, 1874, 579, 15, 405, "Input"],
Cell[91395, 1891, 947, 25, 346, "Output"]
}, Open  ]],
Cell[92357, 1919, 155, 3, 231, "Text"],
Cell[CellGroupData[{
Cell[92537, 1926, 615, 17, 576, "Input"],
Cell[93155, 1945, 31897, 579, 2835, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[125101, 2530, 441, 8, 667, "Subsubsection"],
Cell[CellGroupData[{
Cell[125567, 2542, 146, 3, 364, "Input"],
Cell[125716, 2547, 308, 8, 364, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126061, 2560, 211, 4, 364, "Input"],
Cell[126275, 2566, 1000, 29, 688, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127312, 2600, 183, 3, 364, "Input"],
Cell[127498, 2605, 432, 13, 505, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127967, 2623, 546, 14, 607, "Input"],
Cell[128516, 2639, 363, 12, 505, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128916, 2656, 601, 15, 607, "Input"],
Cell[129520, 2673, 977, 26, 519, "Output"]
}, Open  ]],
Cell[130512, 2702, 159, 2, 519, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[130708, 2709, 387, 5, 306, "Subsubsection"],
Cell[CellGroupData[{
Cell[131120, 2718, 195, 4, 364, "Input"],
Cell[131318, 2724, 454, 12, 468, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131809, 2741, 260, 5, 364, "Input"],
Cell[132072, 2748, 1127, 31, 832, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133236, 2784, 131, 2, 364, "Input"],
Cell[133370, 2788, 2068, 74, 1720, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135475, 2867, 621, 15, 607, "Input"],
Cell[136099, 2884, 2273, 79, 991, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138409, 2968, 1835, 55, 1581, "Input"],
Cell[140247, 3025, 225, 4, 364, "Output"],
Cell[140475, 3031, 240, 4, 364, "Output"],
Cell[140718, 3037, 239, 4, 364, "Output"],
Cell[140960, 3043, 239, 4, 364, "Output"],
Cell[141202, 3049, 242, 4, 364, "Output"],
Cell[141447, 3055, 239, 4, 364, "Output"]
}, Open  ]],
Cell[141701, 3062, 201, 3, 346, "Text"],
Cell[CellGroupData[{
Cell[141927, 3069, 678, 24, 559, "Input"],
Cell[142608, 3095, 70, 1, 364, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[142727, 3102, 438, 8, 667, "Subsubsection"],
Cell[CellGroupData[{
Cell[143190, 3114, 145, 3, 1842, "Input"],
Cell[143338, 3119, 263, 7, 1842, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143638, 3131, 211, 4, 1842, "Input"],
Cell[143852, 3137, 952, 28, 3483, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144841, 3170, 522, 13, 1842, "Input"],
Cell[145366, 3185, 360, 12, 2553, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145763, 3202, 652, 16, 1842, "Input"],
Cell[146418, 3220, 925, 25, 2625, "Output"]
}, Open  ]],
Cell[147358, 3248, 155, 3, 1750, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[147562, 3257, 175, 2, 51, "Subsection"],
Cell[147740, 3261, 3492, 75, 173, "Input"],
Cell[151235, 3338, 214, 3, 46, "Text"],
Cell[151452, 3343, 2890, 86, 142, "Input"],
Cell[154345, 3431, 215, 3, 46, "Text"],
Cell[154563, 3436, 1651, 46, 138, "Input"],
Cell[156217, 3484, 6261, 142, 628, "Input"],
Cell[162481, 3628, 1058, 28, 213, "Input"],
Cell[163542, 3658, 1214, 33, 268, "Input"],
Cell[CellGroupData[{
Cell[164781, 3695, 1348, 27, 120, "Input"],
Cell[166132, 3724, 10386, 222, 199, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176555, 3951, 4574, 118, 852, "Input"],
Cell[181132, 4071, 41084, 775, 562, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222253, 4851, 6389, 168, 1239, "Input"],
Cell[228645, 5021, 13534, 290, 252, "Output"],
Cell[242182, 5313, 34942, 593, 559, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[277161, 5911, 184, 4, 72, "Input"],
Cell[277348, 5917, 51759, 979, 562, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[329144, 6901, 886, 18, 399, "Input"],
Cell[330033, 6921, 256, 4, 120, "Output"],
Cell[330292, 6927, 254, 4, 207, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

