(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1055094,      21312]
NotebookOptionsPosition[   1041336,      20875]
NotebookOutlinePosition[   1041726,      20892]
CellTagsIndexPosition[   1041683,      20889]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8146282641437674`*^9, 3.814628284248445*^9}, 
   3.814628315878787*^9}],

Cell[CellGroupData[{

Cell["\<\
Continuous-time matching alleles coevolution with two populations and mutation\
\>", "Title",
 CellChangeTimes->{{3.8145482099985123`*^9, 3.814548219760957*^9}, {
  3.8552262321010942`*^9, 3.855226233541149*^9}}],

Cell[CellGroupData[{

Cell["Deterministic model", "Section",
 CellChangeTimes->{{3.814548231241057*^9, 3.814548235227971*^9}}],

Cell[CellGroupData[{

Cell["Differential equations", "Subsection",
 CellChangeTimes->{{3.81454823904255*^9, 3.8145482430392733`*^9}}],

Cell[CellGroupData[{

Cell["Substitutions", "Subsubsection",
 CellChangeTimes->{{3.814548262772107*^9, 3.814548264542276*^9}}],

Cell["\<\
Below are substitutions to be used with the differential equations:\
\>", "Text",
 CellChangeTimes->{{3.8145482776324*^9, 3.81454828898844*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Beta]Sub", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Beta]", "[", 
       RowBox[{"1", ",", "1"}], "]"}], "\[Rule]", 
      FractionBox["X", "\[Kappa]"]}], ",", 
     RowBox[{
      RowBox[{"\[Beta]", "[", 
       RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", 
      FractionBox["Y", "\[Kappa]"]}], ",", 
     RowBox[{
      RowBox[{"\[Beta]", "[", 
       RowBox[{"2", ",", "1"}], "]"}], "\[Rule]", 
      FractionBox["Y", "\[Kappa]"]}], ",", 
     RowBox[{
      RowBox[{"\[Beta]", "[", 
       RowBox[{"2", ",", "2"}], "]"}], "\[Rule]", 
      FractionBox["X", "\[Kappa]"]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pSub", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"H", "[", 
       RowBox[{"1", ",", "1", ",", "t"}], "]"}], "\[Rule]", 
      RowBox[{"\[Kappa]", " ", 
       RowBox[{"pH", "[", 
        RowBox[{"1", ",", "t"}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"H", "[", 
       RowBox[{"1", ",", "2", ",", "t"}], "]"}], "\[Rule]", 
      RowBox[{"\[Kappa]", " ", 
       RowBox[{"pH", "[", 
        RowBox[{"2", ",", "t"}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"H", "[", 
       RowBox[{"2", ",", "1", ",", "t"}], "]"}], "\[Rule]", 
      RowBox[{"\[Kappa]", " ", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"pH", "[", 
          RowBox[{"1", ",", "t"}], "]"}]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"H", "[", 
       RowBox[{"2", ",", "2", ",", "t"}], "]"}], "\[Rule]", 
      RowBox[{"\[Kappa]", " ", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"pH", "[", 
          RowBox[{"2", ",", "t"}], "]"}]}], ")"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"P", "[", 
       RowBox[{"1", ",", "1", ",", "t"}], "]"}], "\[Rule]", 
      RowBox[{"\[Kappa]", " ", 
       RowBox[{"pP", "[", 
        RowBox[{"1", ",", "t"}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"P", "[", 
       RowBox[{"1", ",", "2", ",", "t"}], "]"}], "\[Rule]", 
      RowBox[{"\[Kappa]", " ", 
       RowBox[{"pP", "[", 
        RowBox[{"2", ",", "t"}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"P", "[", 
       RowBox[{"2", ",", "1", ",", "t"}], "]"}], "\[Rule]", 
      RowBox[{"\[Kappa]", " ", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"pP", "[", 
          RowBox[{"1", ",", "t"}], "]"}]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"P", "[", 
       RowBox[{"2", ",", "2", ",", "t"}], "]"}], "\[Rule]", 
      RowBox[{"\[Kappa]", " ", "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"pP", "[", 
          RowBox[{"2", ",", "t"}], "]"}]}], ")"}]}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", "\[Kappa]"}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Beta]", "[", 
          RowBox[{"i", ",", "j"}], "]"}], "\[Alpha]", " ", 
         RowBox[{"H", "[", 
          RowBox[{"i", ",", "1", ",", "t"}], "]"}], 
         RowBox[{"P", "[", 
          RowBox[{"j", ",", "1", ",", "t"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}], "+", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"\[Delta]", " ", 
         RowBox[{"H", "[", 
          RowBox[{"i", ",", "1", ",", "t"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}], "+", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Beta]", "[", 
          RowBox[{"i", ",", "j"}], "]"}], "\[Alpha]", " ", 
         RowBox[{"H", "[", 
          RowBox[{"i", ",", "2", ",", "t"}], "]"}], 
         RowBox[{"P", "[", 
          RowBox[{"j", ",", "2", ",", "t"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}], "+", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"\[Delta]", " ", 
         RowBox[{"H", "[", 
          RowBox[{"i", ",", "2", ",", "t"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ")"}]}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.814548291907649*^9, 3.8145486642685432`*^9}, {
  3.814548708190917*^9, 3.81454880697966*^9}, {3.8145490053573847`*^9, 
  3.814549005530657*^9}, {3.814549494805583*^9, 3.814549497654079*^9}, {
  3.8145521655479803`*^9, 3.814552186226366*^9}, {3.8145671905242443`*^9, 
  3.814567243862647*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Host dynamics", "Subsubsection",
 CellChangeTimes->{{3.814548262772107*^9, 3.814548264542276*^9}, {
  3.814548870478204*^9, 3.814548872392661*^9}}],

Cell[TextData[{
 "Differential equation for host allele frequency for populations 1 and 2, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"d", " "}], "dt"], 
      RowBox[{
       SubscriptBox["p", "H"], "(", 
       RowBox[{"1", ",", "t"}], ")"}]}], "=", 
     RowBox[{"gH", "(", 
      RowBox[{"1", ",", "t"}], ")"}]}], ",", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"d", " "}], "dt"], 
      RowBox[{
       SubscriptBox["p", "H"], "(", 
       RowBox[{"2", ",", "t"}], ")"}]}], "=", 
     RowBox[{"gH", "(", 
      RowBox[{"2", ",", "t"}], ")"}]}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.8145482776324*^9, 3.81454828898844*^9}, {
  3.814548879154059*^9, 3.8145489523730707`*^9}, {3.814627737092404*^9, 
  3.814627759600068*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"gH", "[", 
    RowBox[{"u_", ",", "t_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["1", "\[Kappa]"], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Beta]", "[", 
             RowBox[{"i", ",", "j"}], "]"}], "\[Alpha]", " ", 
            RowBox[{"H", "[", 
             RowBox[{"i", ",", "u", ",", "t"}], "]"}], 
            RowBox[{"P", "[", 
             RowBox[{"j", ",", "u", ",", "t"}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"-", 
                RowBox[{"Mod", "[", 
                 RowBox[{"i", ",", "2"}], "]"}]}], ")"}], "+", 
              FractionBox[
               RowBox[{"H", "[", 
                RowBox[{"1", ",", "u", ",", "t"}], "]"}], "\[Kappa]"]}], 
             ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}], "+", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"\[Delta]", " ", 
            RowBox[{"H", "[", 
             RowBox[{"i", ",", "u", ",", "t"}], "]"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"-", 
                RowBox[{"Mod", "[", 
                 RowBox[{"i", ",", "2"}], "]"}]}], ")"}], "+", 
              FractionBox[
               RowBox[{"H", "[", 
                RowBox[{"1", ",", "u", ",", "t"}], "]"}], "\[Kappa]"]}], 
             ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"\[Phi]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"H", "[", 
              RowBox[{"2", ",", "u", ",", "t"}], "]"}], "*", 
             FractionBox[
              RowBox[{"H", "[", 
               RowBox[{"1", ",", "u", ",", "t"}], "]"}], "\[Kappa]"]}], "-", 
            RowBox[{
             RowBox[{"H", "[", 
              RowBox[{"1", ",", "u", ",", "t"}], "]"}], "*", 
             FractionBox[
              RowBox[{"H", "[", 
               RowBox[{"2", ",", "u", ",", "t"}], "]"}], "\[Kappa]"]}]}], 
           ")"}]}], "+", 
         RowBox[{"\[Phi]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"H", "[", 
              RowBox[{"1", ",", 
               RowBox[{"1", "+", 
                RowBox[{"Mod", "[", 
                 RowBox[{"u", ",", "2"}], "]"}]}], ",", "t"}], "]"}], "*", 
             FractionBox[
              RowBox[{"H", "[", 
               RowBox[{"2", ",", "u", ",", "t"}], "]"}], "\[Kappa]"]}], "-", 
            RowBox[{
             RowBox[{"H", "[", 
              RowBox[{"2", ",", 
               RowBox[{"1", "+", 
                RowBox[{"Mod", "[", 
                 RowBox[{"u", ",", "2"}], "]"}]}], ",", "t"}], "]"}], "*", 
             FractionBox[
              RowBox[{"H", "[", 
               RowBox[{"1", ",", "u", ",", "t"}], "]"}], "\[Kappa]"]}]}], 
           ")"}]}]}], ")"}]}], "/.", "\[Beta]Sub"}], "/.", "pSub"}], "//", 
    "Simplify"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.814548291907649*^9, 3.8145486642685432`*^9}, {
   3.814548708190917*^9, 3.81454880697966*^9}, {3.81454895785376*^9, 
   3.8145489680512238`*^9}, {3.814549014192108*^9, 3.81454902962243*^9}, {
   3.8145490870100317`*^9, 3.814549139115912*^9}, {3.8145491828638687`*^9, 
   3.814549238893865*^9}, {3.814549370225995*^9, 3.814549406378645*^9}, {
   3.814549500551206*^9, 3.8145495281913*^9}, {3.814549618644494*^9, 
   3.814549618959238*^9}, {3.814549653620429*^9, 3.814549673210421*^9}, {
   3.814549708675832*^9, 3.814549719734084*^9}, {3.814549829949725*^9, 
   3.81454983901062*^9}, {3.8145503294517593`*^9, 3.814550372319326*^9}, {
   3.814550519664176*^9, 3.8145505198995237`*^9}, {3.814550694861246*^9, 
   3.814550703326502*^9}, {3.814550788977604*^9, 3.8145507902525*^9}, {
   3.814552309723827*^9, 3.814552312102507*^9}, 3.814568014682499*^9, {
   3.8145695436222763`*^9, 3.8145695438024883`*^9}, {3.814570470742352*^9, 
   3.8145704710386553`*^9}, 3.814571180395208*^9, {3.81462741777365*^9, 
   3.814627445376334*^9}, {3.814627598175099*^9, 3.814627632225779*^9}, {
   3.814627674889002*^9, 3.8146277173043547`*^9}, {3.8169470103323936`*^9, 
   3.816947015455826*^9}, {3.8298448333433237`*^9, 3.8298449126117287`*^9}, {
   3.8298449512280407`*^9, 3.82984496070717*^9}, {3.829845019021373*^9, 
   3.829845090332037*^9}, 3.829845856501734*^9, {3.854194389889591*^9, 
   3.854194440192265*^9}, {3.854194480376267*^9, 3.854194497233095*^9}, {
   3.855071969019327*^9, 3.855071969154681*^9}, 3.855072087600528*^9, {
   3.855072201644294*^9, 3.855072203736402*^9}, {3.855073628550993*^9, 
   3.8550736289578447`*^9}, 3.856876936537718*^9, {3.856956146437296*^9, 
   3.856956149870819*^9}, {3.8570541031416492`*^9, 3.857054136001687*^9}, {
   3.857054179627104*^9, 3.8570542936847153`*^9}, {3.857054329957346*^9, 
   3.8570543669582567`*^9}, {3.857074735343107*^9, 3.8570747557392*^9}, {
   3.8593909445716763`*^9, 3.859390946210619*^9}, {3.86128309296609*^9, 
   3.861283093095943*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gH1", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"gH", "[", 
       RowBox[{"1", ",", "t"}], "]"}], "/.", 
      RowBox[{
       RowBox[{"pH", "[", 
        RowBox[{"1", ",", "t"}], "]"}], "\[Rule]", " ", 
       RowBox[{"pH1", "[", "t", "]"}]}]}], "/.", 
     RowBox[{
      RowBox[{"pH", "[", 
       RowBox[{"2", ",", "t"}], "]"}], "\[Rule]", " ", 
      RowBox[{"pH2", "[", "t", "]"}]}]}], "/.", 
    RowBox[{
     RowBox[{"pP", "[", 
      RowBox[{"1", ",", "t"}], "]"}], "\[Rule]", " ", 
     RowBox[{"pP1", "[", "t", "]"}]}]}], "/.", 
   RowBox[{
    RowBox[{"pP", "[", 
     RowBox[{"2", ",", "t"}], "]"}], "\[Rule]", " ", 
    RowBox[{"pP2", "[", "t", "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gH2", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"gH", "[", 
       RowBox[{"2", ",", "t"}], "]"}], "/.", 
      RowBox[{
       RowBox[{"pH", "[", 
        RowBox[{"1", ",", "t"}], "]"}], "\[Rule]", " ", 
       RowBox[{"pH1", "[", "t", "]"}]}]}], "/.", 
     RowBox[{
      RowBox[{"pH", "[", 
       RowBox[{"2", ",", "t"}], "]"}], "\[Rule]", " ", 
      RowBox[{"pH2", "[", "t", "]"}]}]}], "/.", 
    RowBox[{
     RowBox[{"pP", "[", 
      RowBox[{"1", ",", "t"}], "]"}], "\[Rule]", " ", 
     RowBox[{"pP1", "[", "t", "]"}]}]}], "/.", 
   RowBox[{
    RowBox[{"pP", "[", 
     RowBox[{"2", ",", "t"}], "]"}], "\[Rule]", " ", 
    RowBox[{"pP2", "[", "t", "]"}]}]}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.814549042209023*^9, 3.81454904581245*^9}, {
   3.81454931833812*^9, 3.814549350547566*^9}, {3.8145498887267237`*^9, 
   3.814549891018641*^9}, {3.8145507441336*^9, 3.814550745980044*^9}, 
   3.8145679014233522`*^9, {3.814567991448968*^9, 3.814568007866308*^9}, {
   3.814568192255371*^9, 3.814568196335371*^9}, {3.814627582915394*^9, 
   3.81462765165886*^9}, {3.814627692331666*^9, 3.814627703033038*^9}, {
   3.8146299291682587`*^9, 3.814629950818348*^9}, {3.8146303340203257`*^9, 
   3.814630421791257*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"gH1", "[", "t", "]"}], "/.", 
        RowBox[{
         RowBox[{"pH1", "[", "t", "]"}], "\[Rule]", " ", 
         SubscriptBox["p", "Hi"]}]}], "/.", 
       RowBox[{
        RowBox[{"pH2", "[", "t", "]"}], "\[Rule]", " ", 
        SubscriptBox["p", "Hj"]}]}], "/.", 
      RowBox[{
       RowBox[{"pP1", "[", "t", "]"}], "\[Rule]", " ", 
       SubscriptBox["p", 
        RowBox[{"P", " ", "i"}]]}]}], "/.", 
     RowBox[{
      RowBox[{"pP2", "[", "t", "]"}], "\[Rule]", " ", 
      SubscriptBox["p", "Pj"]}]}], "/.", 
    RowBox[{"\[Mu]", "\[Rule]", " ", "0"}]}], "/.", 
   RowBox[{"\[Nu]", "\[Rule]", " ", "0"}]}], "//", "FullSimplify"}]], "Input",\

 CellChangeTimes->{{3.857074777002904*^9, 3.85707477810427*^9}, {
  3.860148761148733*^9, 3.860148831143963*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[Phi]", " ", 
      SubscriptBox["p", "Hj"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"X", "-", "Y"}], ")"}], " ", "\[Alpha]", " ", 
      SubsuperscriptBox["p", "Hi", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", 
         SubscriptBox["p", 
          RowBox[{"i", " ", "P"}]]}]}], ")"}]}], "-", 
     RowBox[{
      SubscriptBox["p", "Hi"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "X"}], " ", "\[Alpha]"}], "+", 
        RowBox[{"Y", " ", "\[Alpha]"}], "+", "\[Phi]", "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"X", "-", "Y"}], ")"}], " ", "\[Alpha]", " ", 
         SubscriptBox["p", 
          RowBox[{"i", " ", "P"}]]}]}], ")"}]}]}], ")"}]}], 
  RowBox[{
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"X", " ", "\[Alpha]"}], "+", "\[Delta]"}], ")"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"X", "-", "Y"}], ")"}], " ", "\[Alpha]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       SubscriptBox["p", 
        RowBox[{"i", " ", "P"}]]}], "+", 
      RowBox[{
       SubscriptBox["p", "Hi"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", 
          SubscriptBox["p", 
           RowBox[{"i", " ", "P"}]]}]}], ")"}]}], "-", 
      SubscriptBox["p", "Pj"], "+", 
      RowBox[{
       SubscriptBox["p", "Hj"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", 
          SubscriptBox["p", "Pj"]}]}], ")"}]}]}], ")"}]}]}]]], "Output",
 CellChangeTimes->{
  3.8570747784762497`*^9, 3.8570748110792913`*^9, 3.857074853254078*^9, 
   3.860148759409884*^9, {3.8601488101923437`*^9, 3.860148832503931*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parasite dynamics", "Subsubsection",
 CellChangeTimes->{{3.814548262772107*^9, 3.814548264542276*^9}, {
  3.814548870478204*^9, 3.814548872392661*^9}, {3.8145508094783783`*^9, 
  3.814550810371662*^9}}],

Cell[TextData[{
 "Differential equation for parasite allele frequency for populations 1 and \
2, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"d", " "}], "dt"], 
      RowBox[{
       SubscriptBox["p", "P1"], "(", "t", ")"}]}], "=", 
     RowBox[{"gP1", "(", "t", ")"}]}], ",", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"d", " "}], "dt"], 
      RowBox[{
       SubscriptBox["p", "P2"], "(", "t", ")"}]}], "=", 
     RowBox[{"gP2", "(", "t", ")"}]}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.8145482776324*^9, 3.81454828898844*^9}, {
  3.814548879154059*^9, 3.8145489523730707`*^9}, {3.814550813030727*^9, 
  3.814550828818562*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"gP", "[", 
    RowBox[{"u_", ",", "t_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["1", "\[Kappa]"], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Beta]", "[", 
             RowBox[{"i", ",", "j"}], "]"}], "\[Alpha]", " ", 
            RowBox[{"H", "[", 
             RowBox[{"i", ",", "u", ",", "t"}], "]"}], 
            RowBox[{"P", "[", 
             RowBox[{"j", ",", "u", ",", "t"}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Mod", "[", 
               RowBox[{"j", ",", "2"}], "]"}], "-", 
              FractionBox[
               RowBox[{"P", "[", 
                RowBox[{"1", ",", "u", ",", "t"}], "]"}], "\[Kappa]"]}], 
             ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}], "+", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"\[Gamma]", " ", 
            RowBox[{"P", "[", 
             RowBox[{"j", ",", "u", ",", "t"}], "]"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"Mod", "[", 
                RowBox[{"j", ",", "2"}], "]"}]}], "+", 
              FractionBox[
               RowBox[{"P", "[", 
                RowBox[{"1", ",", "u", ",", "t"}], "]"}], "\[Kappa]"]}], 
             ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], "]"}], "+", 
         "\[IndentingNewLine]", 
         RowBox[{"\[Omega]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"P", "[", 
              RowBox[{"2", ",", "u", ",", "t"}], "]"}], "*", 
             FractionBox[
              RowBox[{"P", "[", 
               RowBox[{"1", ",", "u", ",", "t"}], "]"}], "\[Kappa]"]}], "-", 
            RowBox[{
             RowBox[{"P", "[", 
              RowBox[{"1", ",", "u", ",", "t"}], "]"}], "*", 
             FractionBox[
              RowBox[{"P", "[", 
               RowBox[{"2", ",", "u", ",", "t"}], "]"}], "\[Kappa]"]}]}], 
           ")"}]}], "+", 
         RowBox[{"\[Omega]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"P", "[", 
              RowBox[{"1", ",", 
               RowBox[{"1", "+", 
                RowBox[{"Mod", "[", 
                 RowBox[{"u", ",", "2"}], "]"}]}], ",", "t"}], "]"}], "*", 
             FractionBox[
              RowBox[{"P", "[", 
               RowBox[{"2", ",", "u", ",", "t"}], "]"}], "\[Kappa]"]}], "-", 
            RowBox[{
             RowBox[{"P", "[", 
              RowBox[{"2", ",", 
               RowBox[{"1", "+", 
                RowBox[{"Mod", "[", 
                 RowBox[{"u", ",", "2"}], "]"}]}], ",", "t"}], "]"}], "*", 
             FractionBox[
              RowBox[{"P", "[", 
               RowBox[{"1", ",", "u", ",", "t"}], "]"}], "\[Kappa]"]}]}], 
           ")"}]}]}], ")"}]}], "/.", "\[Beta]Sub"}], "/.", "pSub"}], "//", 
    "FullSimplify"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.814548291907649*^9, 3.8145486642685432`*^9}, {
   3.814548708190917*^9, 3.81454880697966*^9}, {3.81454895785376*^9, 
   3.8145489680512238`*^9}, {3.814549014192108*^9, 3.81454902962243*^9}, {
   3.8145490870100317`*^9, 3.814549139115912*^9}, {3.8145491828638687`*^9, 
   3.814549238893865*^9}, {3.814549370225995*^9, 3.814549406378645*^9}, {
   3.814549500551206*^9, 3.8145495281913*^9}, {3.814549618644494*^9, 
   3.814549618959238*^9}, {3.814549653620429*^9, 3.814549673210421*^9}, {
   3.814549708675832*^9, 3.814549719734084*^9}, {3.814549829949725*^9, 
   3.81454983901062*^9}, {3.8145503294517593`*^9, 3.814550372319326*^9}, {
   3.814550519664176*^9, 3.8145505198995237`*^9}, {3.814550694861246*^9, 
   3.814550703326502*^9}, {3.814550788977604*^9, 3.8145507902525*^9}, {
   3.814550831447379*^9, 3.814550831684763*^9}, {3.8145508823636427`*^9, 
   3.814551014253008*^9}, {3.814551065608246*^9, 3.814551069067181*^9}, {
   3.814551193718711*^9, 3.8145511968986683`*^9}, {3.814551759480843*^9, 
   3.814551784647416*^9}, {3.814552325752255*^9, 3.814552328047859*^9}, {
   3.8145682351960773`*^9, 3.814568235565125*^9}, {3.8145684622126627`*^9, 
   3.8145684648837633`*^9}, {3.814568648517366*^9, 3.814568650553158*^9}, {
   3.814569521709921*^9, 3.8145695220741243`*^9}, {3.8145703242410088`*^9, 
   3.814570333744227*^9}, {3.814570480203042*^9, 3.814570501599513*^9}, 
   3.814571193814954*^9, {3.814627388527604*^9, 3.814627391005452*^9}, {
   3.814627775501402*^9, 3.814627827225893*^9}, {3.8298451939377403`*^9, 
   3.829845235812405*^9}, {3.854194519803268*^9, 3.854194529034235*^9}, {
   3.855154048871224*^9, 3.855154061102046*^9}, 3.856876945808672*^9, {
   3.857032190621216*^9, 3.857032193670691*^9}, {3.857054521715548*^9, 
   3.857054590545279*^9}, {3.857074873033636*^9, 3.857074883673881*^9}, {
   3.859390951091979*^9, 3.859390952435182*^9}, {3.861283090070448*^9, 
   3.861283090221999*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gP1", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"gP", "[", 
       RowBox[{"1", ",", "t"}], "]"}], "/.", 
      RowBox[{
       RowBox[{"pH", "[", 
        RowBox[{"1", ",", "t"}], "]"}], "\[Rule]", " ", 
       RowBox[{"pH1", "[", "t", "]"}]}]}], "/.", 
     RowBox[{
      RowBox[{"pH", "[", 
       RowBox[{"2", ",", "t"}], "]"}], "\[Rule]", " ", 
      RowBox[{"pH2", "[", "t", "]"}]}]}], "/.", 
    RowBox[{
     RowBox[{"pP", "[", 
      RowBox[{"1", ",", "t"}], "]"}], "\[Rule]", " ", 
     RowBox[{"pP1", "[", "t", "]"}]}]}], "/.", 
   RowBox[{
    RowBox[{"pP", "[", 
     RowBox[{"2", ",", "t"}], "]"}], "\[Rule]", " ", 
    RowBox[{"pP2", "[", "t", "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gP2", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"gP", "[", 
       RowBox[{"2", ",", "t"}], "]"}], "/.", 
      RowBox[{
       RowBox[{"pH", "[", 
        RowBox[{"1", ",", "t"}], "]"}], "\[Rule]", " ", 
       RowBox[{"pH1", "[", "t", "]"}]}]}], "/.", 
     RowBox[{
      RowBox[{"pH", "[", 
       RowBox[{"2", ",", "t"}], "]"}], "\[Rule]", " ", 
      RowBox[{"pH2", "[", "t", "]"}]}]}], "/.", 
    RowBox[{
     RowBox[{"pP", "[", 
      RowBox[{"1", ",", "t"}], "]"}], "\[Rule]", " ", 
     RowBox[{"pP1", "[", "t", "]"}]}]}], "/.", 
   RowBox[{
    RowBox[{"pP", "[", 
     RowBox[{"2", ",", "t"}], "]"}], "\[Rule]", " ", 
    RowBox[{"pP2", "[", "t", "]"}]}]}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.814630288978608*^9, 3.8146302956293488`*^9}, {
  3.8146304258045692`*^9, 3.814630426400072*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gP1", "[", "t", "]"}]], "Input",
 CellChangeTimes->{{3.857074899810463*^9, 3.857074901555328*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{"\[Nu]", "+", 
     RowBox[{
      RowBox[{"pP1", "[", "t", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "X"}], " ", "\[Alpha]"}], "+", 
        RowBox[{"Y", " ", "\[Alpha]"}], "-", 
        RowBox[{"2", " ", "\[Nu]"}], "-", "\[Omega]", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"X", "-", "Y"}], ")"}], " ", "\[Alpha]", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            RowBox[{"pH1", "[", "t", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"pP1", "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{"pP1", "[", "t", "]"}]}], ")"}]}]}], ")"}]}], "+", 
     RowBox[{"\[Omega]", " ", 
      RowBox[{"pP2", "[", "t", "]"}]}]}], ")"}]}], 
  RowBox[{
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"X", " ", "\[Alpha]"}], "+", "\[Delta]"}], ")"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"X", "-", "Y"}], ")"}], " ", "\[Alpha]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"pP1", "[", "t", "]"}]}], "+", 
      RowBox[{
       RowBox[{"pH1", "[", "t", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"pP1", "[", "t", "]"}]}]}], ")"}]}], "-", 
      RowBox[{"pP2", "[", "t", "]"}], "+", 
      RowBox[{
       RowBox[{"pH2", "[", "t", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"pP2", "[", "t", "]"}]}]}], ")"}]}]}], ")"}]}]}]]], "Output",\

 CellChangeTimes->{3.857074902084324*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numerical integration", "Subsection",
 CellChangeTimes->{{3.814548262772107*^9, 3.814548264542276*^9}, {
  3.814548870478204*^9, 3.814548872392661*^9}, {3.8145508094783783`*^9, 
  3.814550810371662*^9}, {3.8146278600899*^9, 3.814627866144101*^9}, {
  3.856883959326865*^9, 3.856883964155774*^9}, {3.857040634512487*^9, 
  3.85704064573632*^9}, {3.8570546628515472`*^9, 3.8570546652568274`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "deltT", ",", "eqn", ",", "nsol", ",", "phasePlot", ",", "timePlotH", ",", 
   "timePlotP"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"deltT", "=", "100"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"i1", "\[Rule]", "0.5"}], ",", 
     RowBox[{"i2", "\[Rule]", "0.45"}], ",", 
     RowBox[{"i3", "=", "0.5"}], ",", 
     RowBox[{"i4", "=", "0.5"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"paras1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Kappa]", "\[Rule]", "150"}], ",", 
     RowBox[{"\[Alpha]", "\[Rule]", "1"}], ",", 
     RowBox[{"X", "\[Rule]", " ", "0.7"}], ",", 
     RowBox[{"Y", "\[Rule]", " ", "0.1"}], ",", 
     RowBox[{"\[Mu]", "\[Rule]", " ", "0"}], ",", 
     RowBox[{"\[Delta]", "\[Rule]", " ", "0.5"}], ",", 
     RowBox[{"\[Nu]", "\[Rule]", " ", "0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"paras2", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Kappa]", "\[Rule]", "150"}], ",", 
      RowBox[{"\[Alpha]", "\[Rule]", "1"}], ",", 
      RowBox[{"X", "\[Rule]", " ", "0.3"}], ",", 
      RowBox[{"Y", "\[Rule]", " ", "0.1"}], ",", 
      RowBox[{"\[Mu]", "\[Rule]", " ", "0"}], ",", 
      RowBox[{"\[Delta]", "\[Rule]", " ", "0.5"}], ",", 
      RowBox[{"\[Nu]", "\[Rule]", " ", "0"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"eqn", "[", 
     RowBox[{"inits_", ",", "pars_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"eqn", "[", 
      RowBox[{"inits", ",", "pars"}], "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"pH", "'"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"gH", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"pP", "'"}], "[", "t", "]"}], "\[Equal]", 
          RowBox[{"gP", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{"pH", "[", "0", "]"}], "\[Equal]", "i1"}], ",", 
         RowBox[{
          RowBox[{"pP", "[", " ", "0", "]"}], "\[Equal]", "i2"}]}], "}"}], "/.",
        "pars"}], "/.", "inits"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"nsol", "[", 
     RowBox[{"inits_", ",", "pars_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"nsol", "[", 
      RowBox[{"inits", ",", "pars"}], "]"}], "=", 
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{"eqn", "[", 
         RowBox[{"inits", ",", "pars"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"pH", ",", "pP"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "deltT"}], "}"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"timePlotH", "[", 
    RowBox[{"inits_", ",", "pars_", ",", "col_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"timePlotH", "[", 
     RowBox[{"inits", ",", "pars", ",", "col"}], "]"}], "=", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"pH", "[", "t", "]"}], "/.", 
         RowBox[{"nsol", "[", 
          RowBox[{"inits", ",", "pars"}], "]"}]}], "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "deltT"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", " ", "col"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"timePlotP", "[", 
     RowBox[{"inits_", ",", "pars_", ",", "col_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"timePlotP", "[", 
      RowBox[{"inits", ",", "pars", ",", "col"}], "]"}], "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{"pP", "[", "t", "]"}], "/.", 
          RowBox[{"nsol", "[", 
           RowBox[{"inits", ",", "pars"}], "]"}]}], "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "deltT"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", " ", "Automatic"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", " ", "col"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"phasePlot", "[", 
    RowBox[{"inits_", ",", "pars_", ",", "col_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"phasePlot", "[", 
     RowBox[{"inits", ",", "pars", ",", "col"}], "]"}], "=", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Riffle", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Evaluate", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"pH", "[", "t", "]"}], ")"}], "/.", 
                 RowBox[{"nsol", "[", 
                  RowBox[{"inits", ",", "pars"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "0", ",", "deltT"}], "}"}]}], "]"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Evaluate", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"pP", "[", "t", "]"}], ")"}], "/.", 
                 RowBox[{"nsol", "[", 
                  RowBox[{"inits", ",", "pars"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"t", ",", "0", ",", "deltT"}], "}"}]}], "]"}]}], 
            "]"}], "]"}], ",", "2"}], "]"}], "\[IndentingNewLine]", "}"}], 
       ",", 
       RowBox[{"AspectRatio", "\[Rule]", " ", "1"}], ",", 
       RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(p\), \(H\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(p\), \(P\)]\)\>\""}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", " ", "col"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}], "/.", 
     RowBox[{
      RowBox[{"Line", "[", "x_", "]"}], "\[RuleDelayed]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Arrowheads", "[", 
         RowBox[{"Table", "[", 
          RowBox[{"0.03", ",", 
           RowBox[{"{", "1", "}"}]}], "]"}], "]"}], ",", 
        RowBox[{"Arrow", "[", "x", "]"}]}], "}"}]}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.856884145332567*^9, 3.856884155521557*^9}, {
   3.856884195732911*^9, 3.856884211460362*^9}, {3.856884283133988*^9, 
   3.856884309214119*^9}, {3.856884555789379*^9, 3.856884609091691*^9}, {
   3.8568846632700787`*^9, 3.856884668500983*^9}, {3.856884717546467*^9, 
   3.856884717661462*^9}, {3.8568847896166563`*^9, 3.856884822496022*^9}, {
   3.856885010880023*^9, 3.856885013700862*^9}, {3.8568851027368193`*^9, 
   3.856885110998445*^9}, {3.856885202626162*^9, 3.8568852035045*^9}, {
   3.856885272570897*^9, 3.85688528061001*^9}, {3.856885464161454*^9, 
   3.8568855145493927`*^9}, {3.856885558632985*^9, 3.856885646009273*^9}, {
   3.856885743190488*^9, 3.85688580528531*^9}, {3.8568859103457317`*^9, 
   3.8568859161759357`*^9}, {3.856885958738886*^9, 3.8568860338168697`*^9}, {
   3.8568860821975813`*^9, 3.856886082762208*^9}, {3.8568861826623077`*^9, 
   3.856886195170711*^9}, {3.856886275702276*^9, 3.8568863349021587`*^9}, {
   3.856886365082837*^9, 3.856886373327948*^9}, {3.856953703412126*^9, 
   3.856953706703944*^9}, {3.856953744413391*^9, 3.8569537540172567`*^9}, {
   3.856953961952425*^9, 3.856953967100573*^9}, {3.856954201837829*^9, 
   3.8569542512441874`*^9}, {3.8569543050698233`*^9, 
   3.8569543052869453`*^9}, {3.8569543693618517`*^9, 3.856954372372389*^9}, {
   3.856954515079399*^9, 3.856954516809841*^9}, {3.8569548601189613`*^9, 
   3.856954863023357*^9}, {3.856954913467585*^9, 3.856954937812533*^9}, {
   3.856955358967305*^9, 3.85695545556776*^9}, {3.856955515024702*^9, 
   3.856955525674836*^9}, {3.8569561804167747`*^9, 3.856956199495466*^9}, {
   3.8569562578833923`*^9, 3.856956271146863*^9}, {3.856956302036014*^9, 
   3.8569563290342827`*^9}, {3.856956404575369*^9, 3.8569564060867147`*^9}, {
   3.856956678566132*^9, 3.856956701971017*^9}, {3.856956848438138*^9, 
   3.856956873385818*^9}, {3.856957501483966*^9, 3.856957550364985*^9}, {
   3.8569575877294693`*^9, 3.856957621256543*^9}, {3.85695767231245*^9, 
   3.856957686775811*^9}, {3.856958003252495*^9, 3.856958005068932*^9}, {
   3.85695803656431*^9, 3.856958037588107*^9}, {3.856958201621031*^9, 
   3.856958202461184*^9}, {3.856959048539941*^9, 3.856959052764501*^9}, {
   3.856959159833074*^9, 3.8569591629480457`*^9}, {3.856959209622632*^9, 
   3.856959214791288*^9}, {3.856959276219973*^9, 3.8569592768165607`*^9}, {
   3.8569597257442923`*^9, 3.856959736344799*^9}, {3.856959835667427*^9, 
   3.856959856538416*^9}, {3.856959968490206*^9, 3.856960007127385*^9}, {
   3.8569600539942513`*^9, 3.8569600698962717`*^9}, {3.856960105785918*^9, 
   3.856960107173156*^9}, {3.856960722753201*^9, 3.856960918611026*^9}, {
   3.85703218082528*^9, 3.857032183422597*^9}, {3.857032229076352*^9, 
   3.857032284776423*^9}, {3.857032333567734*^9, 3.857032370354803*^9}, 
   3.8570324229657507`*^9, {3.857032727880681*^9, 3.8570329703697844`*^9}, {
   3.857033009124329*^9, 3.857033123317672*^9}, {3.857033163600051*^9, 
   3.857033178444647*^9}, {3.857033318246909*^9, 3.857033321384912*^9}, {
   3.857039762564267*^9, 3.857039771524057*^9}, {3.85703996748319*^9, 
   3.8570399726079617`*^9}, {3.857040042731217*^9, 3.85704004505765*^9}, {
   3.857040209597005*^9, 3.8570402627007303`*^9}, {3.8570403216919947`*^9, 
   3.8570403309779882`*^9}, {3.857040370889555*^9, 3.85704049611981*^9}, {
   3.857040677988193*^9, 3.857040765508154*^9}, {3.85704079731535*^9, 
   3.8570408054222097`*^9}, {3.857040980943749*^9, 3.857041026828588*^9}, {
   3.857041560077083*^9, 3.857041563978297*^9}, {3.8570417105764523`*^9, 
   3.857041712810959*^9}, {3.857042240488832*^9, 3.85704224796845*^9}, {
   3.857042302763743*^9, 3.857042307406336*^9}, {3.8570427172263737`*^9, 
   3.8570427198775578`*^9}, {3.85704291412704*^9, 3.857042915017672*^9}, {
   3.8570431430743523`*^9, 3.85704315019316*^9}, {3.857044138532207*^9, 
   3.8570441429761677`*^9}, {3.857044483772246*^9, 3.8570445269734583`*^9}, {
   3.857044909461484*^9, 3.857044928231127*^9}, {3.857045003936998*^9, 
   3.8570450040297327`*^9}, {3.8570450905525627`*^9, 3.857045122039982*^9}, {
   3.857045170900889*^9, 3.8570451742603607`*^9}, {3.8570459733609962`*^9, 
   3.857045975140143*^9}, {3.857049352171934*^9, 3.857049373656993*^9}, {
   3.8570494208554497`*^9, 3.857049427266062*^9}, {3.857049798517874*^9, 
   3.857049822958721*^9}, {3.8570498802519627`*^9, 3.8570498883587847`*^9}, {
   3.857050010632094*^9, 3.857050010738207*^9}, {3.857050076938448*^9, 
   3.8570500813076153`*^9}, {3.85705013541677*^9, 3.857050164254162*^9}, {
   3.8570502641467257`*^9, 3.857050266815666*^9}, {3.857050359437957*^9, 
   3.8570503602886257`*^9}, {3.857051364950535*^9, 3.857051413706904*^9}, {
   3.85705303386362*^9, 3.8570530371091967`*^9}, {3.857054670158601*^9, 
   3.857054793452998*^9}, {3.857057996519369*^9, 3.857058162212919*^9}, 
   3.857058261390716*^9, {3.857058313725746*^9, 3.857058507592985*^9}, {
   3.857058554018536*^9, 3.8570586014111156`*^9}, {3.857058650151491*^9, 
   3.8570586588834963`*^9}, {3.857058731999542*^9, 3.857058734550559*^9}, {
   3.857058784984067*^9, 3.857058798342786*^9}, {3.857058851490239*^9, 
   3.857058862552128*^9}, {3.857058915771731*^9, 3.8570589211533203`*^9}, {
   3.8570589888762083`*^9, 3.857059050426753*^9}, {3.857059189610477*^9, 
   3.857059205830036*^9}, {3.8570595710121317`*^9, 3.857059573154743*^9}, {
   3.85705964122342*^9, 3.857059644203608*^9}, {3.857059678062204*^9, 
   3.857059709318246*^9}, {3.858247395625656*^9, 3.858247417560968*^9}, 
   3.858247467435191*^9, {3.85824752094843*^9, 3.858247640949582*^9}, {
   3.8582478721935368`*^9, 3.8582479562254753`*^9}, {3.858248316969325*^9, 
   3.85824840400843*^9}, {3.858248636469056*^9, 3.8582486922627974`*^9}, {
   3.8582487773357763`*^9, 3.858248836783841*^9}, {3.858248871041603*^9, 
   3.85824887137535*^9}, {3.858249137566093*^9, 3.8582491442537127`*^9}, {
   3.858249185503892*^9, 3.8582491883267307`*^9}, {3.858249533365169*^9, 
   3.858249611468727*^9}, {3.858249699591646*^9, 3.858249703631105*^9}, {
   3.858250137367734*^9, 3.858250225903599*^9}, {3.8582502665858097`*^9, 
   3.8582503119457006`*^9}, {3.858250346867846*^9, 3.858250356704562*^9}, {
   3.858250485829081*^9, 3.858250563782887*^9}, {3.8582506171111393`*^9, 
   3.858250771888413*^9}, {3.8582508765869226`*^9, 3.858250917122635*^9}, {
   3.85825102758279*^9, 3.858251040188291*^9}, {3.85825108383949*^9, 
   3.858251084677459*^9}, {3.858251152000334*^9, 3.8582512011433*^9}, {
   3.8584317203048363`*^9, 3.858431760793837*^9}, {3.858432058048891*^9, 
   3.858432058134138*^9}, {3.858853588809329*^9, 3.858853606410183*^9}, {
   3.858949776734407*^9, 3.8589498267971163`*^9}, {3.861282959838372*^9, 
   3.861282975751214*^9}, {3.861283034056386*^9, 3.8612830637021217`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"timePlotH", "[", 
       RowBox[{"init1", ",", "paras1", ",", "Blue"}], "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", " ", "\"\<X+Y=0.5, X-Y=0.1\>\""}], ",", 
      
      RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<Generation\>\"", ",", "\"\<Host allele frequency\>\""}], 
        "}"}]}]}], "]"}], ",", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"timePlotH", "[", 
       RowBox[{"init1", ",", "paras2", ",", "Red"}], "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", " ", "\"\<X+Y=0.5, X-Y=0.3\>\""}], ",", 
      
      RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"\"\<Generation\>\"", ",", "\"\<Host allele frequency\>\""}], 
        "}"}]}]}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.857058609497493*^9, 3.8570586363789587`*^9}, {
  3.8570586762854843`*^9, 3.857058686794877*^9}, {3.857058802288575*^9, 
  3.8570588105655107`*^9}, {3.8570588712988777`*^9, 3.857058890725812*^9}, {
  3.857058940398314*^9, 3.857058959328141*^9}, {3.857059107102889*^9, 
  3.8570591556656857`*^9}, {3.8570592357904043`*^9, 3.857059245581571*^9}, {
  3.857059311510931*^9, 3.8570593830776453`*^9}, {3.85824744289058*^9, 
  3.858247445760355*^9}, {3.8582474934119043`*^9, 3.858247502129978*^9}, {
  3.8582476504372253`*^9, 3.8582477512701893`*^9}, {3.858247967634124*^9, 
  3.858248016793367*^9}, {3.858248420545004*^9, 3.858248444071731*^9}, {
  3.85825026083461*^9, 3.858250287575408*^9}, {3.858250581509939*^9, 
  3.858250593652576*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1: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
           "]]},
         Annotation[#, "Charting`Private`Tag$6833#1"]& ]}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->True,
      FrameLabel->{
        FormBox["\"Generation\"", TraditionalForm], 
        FormBox["\"Host allele frequency\"", TraditionalForm]},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"X+Y=0.5, X-Y=0.1\"", TraditionalForm],
      PlotRange->{{0., 99.99999795918367}, {0, 1}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{Automatic, Automatic}], {192., -116.80842387373012}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}], InsetBox[
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
          LineBox[CompressedData["
1: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
           "]]},
         Annotation[#, "Charting`Private`Tag$7123#1"]& ]}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->True,
      FrameLabel->{
        FormBox["\"Generation\"", TraditionalForm], 
        FormBox["\"Host allele frequency\"", TraditionalForm]},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
             Part[#, 1]], 
            (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"X+Y=0.5, X-Y=0.3\"", TraditionalForm],
      PlotRange->{{0., 99.99999795918367}, {0, 1}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{Automatic, Automatic}], {576., -116.80842387373012}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}]}, {}},
  ContentSelectable->True,
  ImageSize->{731.9895833333333, Automatic},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.857059051983135*^9, 3.8570590848998737`*^9, {3.857059132358676*^9, 
   3.8570591558962107`*^9}, {3.857059193581225*^9, 3.857059207551429*^9}, {
   3.85705924217854*^9, 3.857059245942709*^9}, 3.857059314660363*^9, {
   3.857059369921261*^9, 3.857059410215126*^9}, 3.857059578929947*^9, 
   3.857059649862299*^9, 3.8570596857603292`*^9, 3.857059717143079*^9, {
   3.858247403900173*^9, 3.858247472505649*^9}, {3.8582475025636168`*^9, 
   3.858247604802264*^9}, {3.858247642723344*^9, 3.85824768036351*^9}, {
   3.858247723561995*^9, 3.858247751792592*^9}, {3.8582478844006042`*^9, 
   3.8582479581539907`*^9}, 3.858248018551111*^9, {3.8582483935013933`*^9, 
   3.858248407278453*^9}, 3.858248445862974*^9, {3.8582486390267477`*^9, 
   3.858248694529417*^9}, {3.8582487910392237`*^9, 3.858248841085506*^9}, 
   3.8582488730975113`*^9, 3.858249146438636*^9, 3.858249191055235*^9, {
   3.858249538508628*^9, 3.858249613124002*^9}, 3.8582497066218977`*^9, {
   3.8582501572024937`*^9, 3.858250198191802*^9}, 3.8582502347967873`*^9, {
   3.858250288869803*^9, 3.858250358327654*^9}, {3.858250521179637*^9, 
   3.8582505943612328`*^9}, {3.8582506328919153`*^9, 3.8582507330045033`*^9}, 
   3.858250773692873*^9, 3.8582508875001307`*^9, 3.8582510865286922`*^9, {
   3.858949765649164*^9, 3.8589498311901712`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Equilibria-Perturbation Solution", "Subsection",
 CellChangeTimes->{{3.814548231241057*^9, 3.814548235227971*^9}, {
  3.814793276135005*^9, 3.814793279082466*^9}, {3.8148808247197866`*^9, 
  3.8148808297265787`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"equs", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"gH1", "[", "t", "]"}], ",", 
      RowBox[{"gH2", "[", "t", "]"}], ",", 
      RowBox[{"gP1", "[", "t", "]"}], ",", 
      RowBox[{"gP2", "[", "t", "]"}]}], "}"}], "//", "Factor"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Don", "'"}], "t", " ", "miss", " ", "equilbria"}], "*)"}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.829904475566431*^9, 3.829904478571802*^9}}],

Cell["\<\
Substitute Taylor series expression for parameters that are small (\[Phi], \
\[Omega]).\
\>", "Text",
 CellChangeTimes->{{3.814881049729507*^9, 3.814881057359375*^9}, {
   3.829904482568738*^9, 3.829904499329329*^9}, 3.8299046030571747`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Phi]", "[", "j", "]"}], " ", 
    SuperscriptBox["\[Epsilon]", "j"]}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.829920944177846*^9, 3.8299209445051928`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Epsilon]", " ", 
   RowBox[{"\[Phi]", "[", "1", "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[Epsilon]", "2"], " ", 
   RowBox[{"\[Phi]", "[", "2", "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.829920944946394*^9, 3.831727472835577*^9, 3.852048116864705*^9, 
   3.854194664020232*^9, 3.854365614541813*^9, 3.855073681631487*^9, 
   3.8551432134022713`*^9, 3.855250579674065*^9, 3.8553168512833652`*^9, 
   3.8553363665668087`*^9, 3.855398158258049*^9, {3.8553991036978683`*^9, 
   3.85539912260914*^9}, 3.855403459451358*^9, 3.8556623842739353`*^9, 
   3.855834081083086*^9, 3.856014925681938*^9, 3.8566309142359457`*^9, 
   3.8568632451328793`*^9, 3.8568696258696012`*^9, 3.856878644331459*^9, {
   3.8569551476344223`*^9, 3.856955164716164*^9}, 3.859390615032946*^9, 
   3.859390975496045*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"equs2", "=", 
   RowBox[{"Factor", "[", 
    RowBox[{"equs", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Phi]", "\[Rule]", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Phi]", "[", "j", "]"}], " ", 
           SuperscriptBox["\[Epsilon]", "j"]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\[Omega]", "\[Rule]", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Omega]", "[", "j", "]"}], " ", 
           SuperscriptBox["\[Epsilon]", "j"]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\[Mu]", "\[Rule]", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Mu]", "[", "j", "]"}], " ", 
           SuperscriptBox["\[Epsilon]", "j"]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\[Nu]", "\[Rule]", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Nu]", "[", "j", "]"}], " ", 
           SuperscriptBox["\[Epsilon]", "j"]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"pH1", "[", "t", "]"}], "\[Rule]", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"pH1", "[", "j", "]"}], " ", 
           SuperscriptBox["\[Epsilon]", "j"]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", "2"}], "}"}]}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"pH2", "[", "t", "]"}], "\[Rule]", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"pH2", "[", "j", "]"}], " ", 
           SuperscriptBox["\[Epsilon]", "j"]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", "2"}], "}"}]}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"pP1", "[", "t", "]"}], "\[Rule]", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"pP1", "[", "j", "]"}], " ", 
           SuperscriptBox["\[Epsilon]", "j"]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", "2"}], "}"}]}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"pP2", "[", "t", "]"}], "\[Rule]", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"pP2", "[", "j", "]"}], " ", 
           SuperscriptBox["\[Epsilon]", "j"]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", "2"}], "}"}]}], "]"}]}]}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.814881299990871*^9, 3.814881301311904*^9}, {
  3.814881363846532*^9, 3.814881366276926*^9}, {3.8148815275922623`*^9, 
  3.814881533433063*^9}, {3.85419467592494*^9, 3.8541946898767776`*^9}}],

Cell["Solve for frequencies that set all ODEs to zero.", "Text",
 CellChangeTimes->{{3.814881049729507*^9, 3.814881057359375*^9}, {
  3.829904482568738*^9, 3.829904499329329*^9}, {3.8299045811406317`*^9, 
  3.8299046149775352`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"equs2", "/.", 
       RowBox[{"\[Epsilon]", "\[Rule]", " ", "0"}]}], ")"}], "\[Equal]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"pH1", "[", "0", "]"}], ",", 
      RowBox[{"pH2", "[", "0", "]"}], ",", 
      RowBox[{"pP1", "[", "0", "]"}], ",", 
      RowBox[{"pP2", "[", "0", "]"}]}], "}"}]}], "]"}], "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FirstTerms", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"equs2", "/.", 
        RowBox[{"\[Epsilon]", "\[Rule]", " ", "0"}]}], ")"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"pH1", "[", "0", "]"}], ",", 
       RowBox[{"pH2", "[", "0", "]"}], ",", 
       RowBox[{"pP1", "[", "0", "]"}], ",", 
       RowBox[{"pP2", "[", "0", "]"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.814881309571896*^9, 3.814881378299617*^9}, {
  3.814881543414164*^9, 3.814881545229826*^9}, {3.81488164512243*^9, 
  3.814881677290461*^9}, {3.81488630720396*^9, 3.814886321312364*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"pH1", "[", "0", "]"}], "\[Rule]", "0"}], 
      RowBox[{
       RowBox[{"pH2", "[", "0", "]"}], "\[Rule]", "0"}], 
      RowBox[{
       RowBox[{"pP1", "[", "0", "]"}], "\[Rule]", "0"}], 
      RowBox[{
       RowBox[{"pP2", "[", "0", "]"}], "\[Rule]", "0"}]},
     {
      RowBox[{
       RowBox[{"pH1", "[", "0", "]"}], "\[Rule]", "1"}], 
      RowBox[{
       RowBox[{"pH2", "[", "0", "]"}], "\[Rule]", "0"}], 
      RowBox[{
       RowBox[{"pP1", "[", "0", "]"}], "\[Rule]", "0"}], 
      RowBox[{
       RowBox[{"pP2", "[", "0", "]"}], "\[Rule]", "0"}]},
     {
      RowBox[{
       RowBox[{"pH1", "[", "0", "]"}], "\[Rule]", "0"}], 
      RowBox[{
       RowBox[{"pH2", "[", "0", "]"}], "\[Rule]", "1"}], 
      RowBox[{
       RowBox[{"pP1", "[", "0", "]"}], "\[Rule]", "0"}], 
      RowBox[{
       RowBox[{"pP2", "[", "0", "]"}], "\[Rule]", "0"}]},
     {
      RowBox[{
       RowBox[{"pH1", "[", "0", "]"}], "\[Rule]", "1"}], 
      RowBox[{
       RowBox[{"pH2", "[", "0", "]"}], "\[Rule]", "1"}], 
      RowBox[{
       RowBox[{"pP1", "[", "0", "]"}], "\[Rule]", "0"}], 
      RowBox[{
       RowBox[{"pP2", "[", "0", "]"}], "\[Rule]", "0"}]},
     {
      RowBox[{
       RowBox[{"pH1", "[", "0", "]"}], "\[Rule]", 
       FractionBox["1", "2"]}], 
      RowBox[{
       RowBox[{"pH2", "[", "0", "]"}], "\[Rule]", "0"}], 
      RowBox[{
       RowBox[{"pP1", "[", "0", "]"}], "\[Rule]", 
       FractionBox["1", "2"]}], 
      RowBox[{
       RowBox[{"pP2", "[", "0", "]"}], "\[Rule]", "0"}]},
     {
      RowBox[{
       RowBox[{"pH1", "[", "0", "]"}], "\[Rule]", 
       FractionBox["1", "2"]}], 
      RowBox[{
       RowBox[{"pH2", "[", "0", "]"}], "\[Rule]", "1"}], 
      RowBox[{
       RowBox[{"pP1", "[", "0", "]"}], "\[Rule]", 
       FractionBox["1", "2"]}], 
      RowBox[{
       RowBox[{"pP2", "[", "0", "]"}], "\[Rule]", "0"}]},
     {
      RowBox[{
       RowBox[{"pH1", "[", "0", "]"}], "\[Rule]", "0"}], 
      RowBox[{
       RowBox[{"pH2", "[", "0", "]"}], "\[Rule]", "0"}], 
      RowBox[{
       RowBox[{"pP1", "[", "0", "]"}], "\[Rule]", "1"}], 
      RowBox[{
       RowBox[{"pP2", "[", "0", "]"}], "\[Rule]", "0"}]},
     {
      RowBox[{
       RowBox[{"pH1", "[", "0", "]"}], "\[Rule]", "1"}], 
      RowBox[{
       RowBox[{"pH2", "[", "0", "]"}], "\[Rule]", "0"}], 
      RowBox[{
       RowBox[{"pP1", "[", "0", "]"}], "\[Rule]", "1"}], 
      RowBox[{
       RowBox[{"pP2", "[", "0", "]"}], "\[Rule]", "0"}]},
     {
      RowBox[{
       RowBox[{"pH1", "[", "0", "]"}], "\[Rule]", "0"}], 
      RowBox[{
       RowBox[{"pH2", "[", "0", "]"}], "\[Rule]", "1"}], 
      RowBox[{
       RowBox[{"pP1", "[", "0", "]"}], "\[Rule]", "1"}], 
      RowBox[{
       RowBox[{"pP2", "[", "0", "]"}], "\[Rule]", "0"}]},
     {
      RowBox[{
       RowBox[{"pH1", "[", "0", "]"}], "\[Rule]", "1"}], 
      RowBox[{
       RowBox[{"pH2", "[", "0", "]"}], "\[Rule]", "1"}], 
      RowBox[{
       RowBox[{"pP1", "[", "0", "]"}], "\[Rule]", "1"}], 
      RowBox[{
       RowBox[{"pP2", "[", "0", "]"}], "\[Rule]", "0"}]},
     {
      RowBox[{
       RowBox[{"pH1", "[", "0", "]"}], "\[Rule]", "0"}], 
      RowBox[{
       RowBox[{"pH2", "[", "0", "]"}], "\[Rule]", 
       FractionBox["1", "2"]}], 
      RowBox[{
       RowBox[{"pP1", "[", "0", "]"}], "\[Rule]", "0"}], 
      RowBox[{
       RowBox[{"pP2", "[", "0", "]"}], "\[Rule]", 
       FractionBox["1", "2"]}]},
     {
      RowBox[{
       RowBox[{"pH1", "[", "0", "]"}], "\[Rule]", "1"}], 
      RowBox[{
       RowBox[{"pH2", "[", "0", "]"}], "\[Rule]", 
       FractionBox["1", "2"]}], 
      RowBox[{
       RowBox[{"pP1", "[", "0", "]"}], "\[Rule]", "0"}], 
      RowBox[{
       RowBox[{"pP2", "[", "0", "]"}], "\[Rule]", 
       FractionBox["1", "2"]}]},
     {
      RowBox[{
       RowBox[{"pH1", "[", "0", "]"}], "\[Rule]", 
       FractionBox["1", "2"]}], 
      RowBox[{
       RowBox[{"pH2", "[", "0", "]"}], "\[Rule]", 
       FractionBox["1", "2"]}], 
      RowBox[{
       RowBox[{"pP1", "[", "0", "]"}], "\[Rule]", 
       FractionBox["1", "2"]}], 
      RowBox[{
       RowBox[{"pP2", "[", "0", "]"}], "\[Rule]", 
       FractionBox["1", "2"]}]},
     {
      RowBox[{
       RowBox[{"pH1", "[", "0", "]"}], "\[Rule]", "0"}], 
      RowBox[{
       RowBox[{"pH2", "[", "0", "]"}], "\[Rule]", 
       FractionBox["1", "2"]}], 
      RowBox[{
       RowBox[{"pP1", "[", "0", "]"}], "\[Rule]", "1"}], 
      RowBox[{
       RowBox[{"pP2", "[", "0", "]"}], "\[Rule]", 
       FractionBox["1", "2"]}]},
     {
      RowBox[{
       RowBox[{"pH1", "[", "0", "]"}], "\[Rule]", "1"}], 
      RowBox[{
       RowBox[{"pH2", "[", "0", "]"}], "\[Rule]", 
       FractionBox["1", "2"]}], 
      RowBox[{
       RowBox[{"pP1", "[", "0", "]"}], "\[Rule]", "1"}], 
      RowBox[{
       RowBox[{"pP2", "[", "0", "]"}], "\[Rule]", 
       FractionBox["1", "2"]}]},
     {
      RowBox[{
       RowBox[{"pH1", "[", "0", "]"}], "\[Rule]", "0"}], 
      RowBox[{
       RowBox[{"pH2", "[", "0", "]"}], "\[Rule]", "0"}], 
      RowBox[{
       RowBox[{"pP1", "[", "0", "]"}], "\[Rule]", "0"}], 
      RowBox[{
       RowBox[{"pP2", "[", "0", "]"}], "\[Rule]", "1"}]},
     {
      RowBox[{
       RowBox[{"pH1", "[", "0", "]"}], "\[Rule]", "1"}], 
      RowBox[{
       RowBox[{"pH2", "[", "0", "]"}], "\[Rule]", "0"}], 
      RowBox[{
       RowBox[{"pP1", "[", "0", "]"}], "\[Rule]", "0"}], 
      RowBox[{
       RowBox[{"pP2", "[", "0", "]"}], "\[Rule]", "1"}]},
     {
      RowBox[{
       RowBox[{"pH1", "[", "0", "]"}], "\[Rule]", "0"}], 
      RowBox[{
       RowBox[{"pH2", "[", "0", "]"}], "\[Rule]", "1"}], 
      RowBox[{
       RowBox[{"pP1", "[", "0", "]"}], "\[Rule]", "0"}], 
      RowBox[{
       RowBox[{"pP2", "[", "0", "]"}], "\[Rule]", "1"}]},
     {
      RowBox[{
       RowBox[{"pH1", "[", "0", "]"}], "\[Rule]", "1"}], 
      RowBox[{
       RowBox[{"pH2", "[", "0", "]"}], "\[Rule]", "1"}], 
      RowBox[{
       RowBox[{"pP1", "[", "0", "]"}], "\[Rule]", "0"}], 
      RowBox[{
       RowBox[{"pP2", "[", "0", "]"}], "\[Rule]", "1"}]},
     {
      RowBox[{
       RowBox[{"pH1", "[", "0", "]"}], "\[Rule]", 
       FractionBox["1", "2"]}], 
      RowBox[{
       RowBox[{"pH2", "[", "0", "]"}], "\[Rule]", "0"}], 
      RowBox[{
       RowBox[{"pP1", "[", "0", "]"}], "\[Rule]", 
       FractionBox["1", "2"]}], 
      RowBox[{
       RowBox[{"pP2", "[", "0", "]"}], "\[Rule]", "1"}]},
     {
      RowBox[{
       RowBox[{"pH1", "[", "0", "]"}], "\[Rule]", 
       FractionBox["1", "2"]}], 
      RowBox[{
       RowBox[{"pH2", "[", "0", "]"}], "\[Rule]", "1"}], 
      RowBox[{
       RowBox[{"pP1", "[", "0", "]"}], "\[Rule]", 
       FractionBox["1", "2"]}], 
      RowBox[{
       RowBox[{"pP2", "[", "0", "]"}], "\[Rule]", "1"}]},
     {
      RowBox[{
       RowBox[{"pH1", "[", "0", "]"}], "\[Rule]", "0"}], 
      RowBox[{
       RowBox[{"pH2", "[", "0", "]"}], "\[Rule]", "0"}], 
      RowBox[{
       RowBox[{"pP1", "[", "0", "]"}], "\[Rule]", "1"}], 
      RowBox[{
       RowBox[{"pP2", "[", "0", "]"}], "\[Rule]", "1"}]},
     {
      RowBox[{
       RowBox[{"pH1", "[", "0", "]"}], "\[Rule]", "1"}], 
      RowBox[{
       RowBox[{"pH2", "[", "0", "]"}], "\[Rule]", "0"}], 
      RowBox[{
       RowBox[{"pP1", "[", "0", "]"}], "\[Rule]", "1"}], 
      RowBox[{
       RowBox[{"pP2", "[", "0", "]"}], "\[Rule]", "1"}]},
     {
      RowBox[{
       RowBox[{"pH1", "[", "0", "]"}], "\[Rule]", "0"}], 
      RowBox[{
       RowBox[{"pH2", "[", "0", "]"}], "\[Rule]", "1"}], 
      RowBox[{
       RowBox[{"pP1", "[", "0", "]"}], "\[Rule]", "1"}], 
      RowBox[{
       RowBox[{"pP2", "[", "0", "]"}], "\[Rule]", "1"}]},
     {
      RowBox[{
       RowBox[{"pH1", "[", "0", "]"}], "\[Rule]", "1"}], 
      RowBox[{
       RowBox[{"pH2", "[", "0", "]"}], "\[Rule]", "1"}], 
      RowBox[{
       RowBox[{"pP1", "[", "0", "]"}], "\[Rule]", "1"}], 
      RowBox[{
       RowBox[{"pP2", "[", "0", "]"}], "\[Rule]", "1"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.814881373402938*^9, 3.814881378997787*^9}, {
   3.81488153812434*^9, 3.814881545626279*^9}, {3.814881653479743*^9, 
   3.8148816778314543`*^9}, 3.8148837603378057`*^9, {3.8148863053893013`*^9, 
   3.8148863217249823`*^9}, 3.814898066704323*^9, 3.815223802188418*^9, 
   3.815225553458083*^9, 3.815237695928597*^9, 3.815401195902853*^9, 
   3.815745248768442*^9, 3.815778048408371*^9, 3.816540977631052*^9, 
   3.8182594974413233`*^9, 3.818259840596465*^9, 3.818421589601963*^9, 
   3.8184229116058826`*^9, 3.818521654292858*^9, 3.8187752957204638`*^9, 
   3.819043110900663*^9, 3.819122489662483*^9, 3.8298451007783318`*^9, 
   3.82984562676999*^9, 3.829846496874956*^9, 3.829904410675705*^9, {
   3.8299045412566032`*^9, 3.829904546541271*^9}, 3.829908995340115*^9, 
   3.829909027707303*^9, 3.830352672090946*^9, 3.830352715795516*^9, 
   3.831655354955471*^9, {3.831727453491267*^9, 3.8317274770549173`*^9}, 
   3.8520479099019213`*^9, 3.8520481202316933`*^9, 3.8520488855465183`*^9, 
   3.854194696405924*^9, 3.8543656191146803`*^9, 3.855071863985656*^9, 
   3.8550736840446672`*^9, 3.8551359879242783`*^9, 3.8551431487619133`*^9, 
   3.855143215773247*^9, 3.855226242584241*^9, 3.855250488864079*^9, 
   3.855250579942933*^9, 3.855315043112059*^9, 3.855316851617676*^9, 
   3.855336123481341*^9, 3.855336366730569*^9, 3.855398158602125*^9, {
   3.855399103915929*^9, 3.8553991229095163`*^9}, 3.855403459822254*^9, 
   3.8556623845629787`*^9, {3.855834063155707*^9, 3.855834081298624*^9}, 
   3.856001182924786*^9, 3.856014925845989*^9, {3.8566309012520037`*^9, 
   3.856630914479827*^9}, {3.856863230907652*^9, 3.856863245318501*^9}, {
   3.8568696181563597`*^9, 3.856869626015596*^9}, 3.8568769749144487`*^9, 
   3.856877034698885*^9, 3.8568770948569813`*^9, 3.8568771286581087`*^9, 
   3.856878644545113*^9, 3.8569535256603928`*^9, {3.856955147764803*^9, 
   3.85695516484592*^9}, 3.857032043862689*^9, 3.857074334191454*^9, 
   3.857137340075796*^9, 3.857508339867683*^9, 3.859390616022092*^9, 
   3.859390738608425*^9, 3.8593909799640017`*^9, 3.8595589343493023`*^9, 
   3.859898046773781*^9, 3.859898128287215*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Equilibria 1: all fixed for WT allele", "Subsubsection",
 CellChangeTimes->{{3.814548262772107*^9, 3.814548264542276*^9}, {
  3.814548870478204*^9, 3.814548872392661*^9}, {3.8147945370513563`*^9, 
  3.814794537734541*^9}, {3.814882246474237*^9, 3.814882257530211*^9}, {
  3.814882311914341*^9, 3.814882311982937*^9}, {3.814892154708329*^9, 
  3.814892165987094*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FirstTerms", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.814881662362957*^9, 3.814881666239748*^9}, {
  3.814892171676284*^9, 3.814892171906477*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"pH1", "[", "0", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pH2", "[", "0", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP1", "[", "0", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP2", "[", "0", "]"}], "\[Rule]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.814881666666131*^9, 3.8148816800289087`*^9}, 
   3.814883811267733*^9, 3.814892172263112*^9, 3.814893529643363*^9, 
   3.814893701157875*^9, 3.8152599032987843`*^9, 3.815261140462398*^9, 
   3.8154012078425093`*^9, 3.829924738629595*^9, 3.829925586892235*^9, 
   3.83172749885816*^9, 3.852048146193183*^9, 3.855076755767516*^9, 
   3.8551360028410597`*^9, 3.8551432187819138`*^9, 3.855226257299075*^9, 
   3.8552505800748568`*^9, 3.855316851835453*^9, 3.855336366821418*^9, 
   3.855398158717764*^9, {3.85539910405015*^9, 3.855399123059846*^9}, 
   3.8554034599350023`*^9, 3.855662384658731*^9, 3.855834081397605*^9, 
   3.856014925927978*^9, 3.8566309146165667`*^9, 3.856863245402705*^9, 
   3.856869626105847*^9, 3.856878644652272*^9, {3.8569551478359423`*^9, 
   3.8569551649142323`*^9}, 3.8593906161109467`*^9, 3.859390750936823*^9, 
   3.859390982261093*^9}]
}, Open  ]],

Cell["\<\
If at equilibrium and zeroth term works, then if the second order term also \
has to be zero at equilibrium\
\>", "Text",
 CellChangeTimes->{{3.8148818086078663`*^9, 3.8148818255513277`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"map", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"#", ",", "\[Epsilon]"}], "]"}], "&"}], ",", "equs2"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.830352730277636*^9, 3.830352747185417*^9}, {
  3.83035279003174*^9, 3.830352819774372*^9}, {3.830352960907208*^9, 
  3.830352985840878*^9}, {3.8303530446285963`*^9, 3.830353044795479*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SecondTerm", "[", "1", "]"}], "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"map", "/.", 
         RowBox[{"\[Epsilon]", "\[Rule]", " ", "0"}]}], "/.", 
        RowBox[{"FirstTerms", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"pH1", "[", "1", "]"}], ",", 
       RowBox[{"pH2", "[", "1", "]"}], ",", 
       RowBox[{"pP1", "[", "1", "]"}], ",", 
       RowBox[{"pP2", "[", "1", "]"}]}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.830352831770853*^9, 3.8303529673503*^9}, {
  3.830353012629157*^9, 3.830353038067169*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"pH1", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pH2", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP1", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP2", "[", "1", "]"}], "\[Rule]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.830352836555689*^9, 3.830352890567293*^9}, {
   3.830352953186088*^9, 3.8303529715948353`*^9}, {3.8303530176068296`*^9, 
   3.8303530403091183`*^9}, 3.831727503070634*^9, 3.852048149121297*^9, 
   3.85507675948808*^9, 3.8551360067069893`*^9, 3.855143221300064*^9, 
   3.855226259707144*^9, 3.8552505801742887`*^9, 3.855316852125388*^9, 
   3.855336366894561*^9, 3.855398158783772*^9, {3.855399104151856*^9, 
   3.855399123113717*^9}, 3.85540346004417*^9, 3.8556623847102127`*^9, 
   3.855834081481224*^9, 3.856014926010661*^9, 3.856630914739006*^9, 
   3.856863245459388*^9, 3.8568696261734257`*^9, 3.8568786447433167`*^9, {
   3.8569551478914337`*^9, 3.85695516496624*^9}, 3.8593906162374496`*^9, 
   3.8593907511452503`*^9, 3.859390986251594*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"map2", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{"\[Epsilon]", ",", "2"}], "}"}]}], "]"}], "&"}], ",", 
     "equs2"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8303530817103043`*^9, 3.830353105668476*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ThirdTerm", "[", "1", "]"}], "=", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Normal", "[", 
        RowBox[{"Series", "[", 
         RowBox[{
          RowBox[{"Factor", "[", 
           RowBox[{
            RowBox[{"equs2", "/.", 
             RowBox[{"FirstTerms", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
            RowBox[{"SecondTerm", "[", "1", "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Epsilon]", ",", " ", "0", ",", "2"}], "}"}]}], "]"}], 
        "]"}], "\[Equal]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"pH1", "[", "2", "]"}], ",", 
        RowBox[{"pH2", "[", "2", "]"}], ",", 
        RowBox[{"pP1", "[", "2", "]"}], ",", 
        RowBox[{"pP2", "[", "2", "]"}]}], "}"}]}], "]"}], "]"}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.814882002547967*^9, 3.814882182521311*^9}, {
  3.81488303220497*^9, 3.814883035100103*^9}, {3.8148921945684958`*^9, 
  3.814892200036455*^9}, {3.856881149802946*^9, 3.856881151176289*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"pH1", "[", "2", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pH2", "[", "2", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP1", "[", "2", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP2", "[", "2", "]"}], "\[Rule]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.81488202040592*^9, 3.814882037812099*^9}, {
   3.814882100802043*^9, 3.81488218305035*^9}, 3.8148830361721487`*^9, 
   3.8148838160975027`*^9, 3.814892201258544*^9, 3.814893540634893*^9, 
   3.814893708249771*^9, 3.815259910059606*^9, 3.815261145993718*^9, 
   3.8154012304448643`*^9, 3.829924741696753*^9, 3.829925590775936*^9, 
   3.831727507517144*^9, 3.85204815161658*^9, 3.855076763756679*^9, 
   3.855136009833789*^9, 3.855143223012383*^9, 3.8552262615088587`*^9, 
   3.855250580438925*^9, 3.855316852449697*^9, 3.855336368855686*^9, 
   3.8553981591108313`*^9, {3.855399104309678*^9, 3.8553991232377663`*^9}, 
   3.8554034605293303`*^9, 3.85566238508183*^9, 3.855834081753175*^9, 
   3.8560149263197403`*^9, 3.856630915243505*^9, 3.8568632457158546`*^9, 
   3.8568696264652357`*^9, 3.856878645008012*^9, 3.856881151590343*^9, {
   3.856955148081236*^9, 3.856955165040852*^9}, 3.859390706115408*^9, 
   3.859390751406537*^9, 3.859390991954813*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Normal", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Series", "[", 
       RowBox[{"equs2", ",", 
        RowBox[{"{", 
         RowBox[{"\[Epsilon]", ",", "0", ",", "2"}], "}"}]}], "]"}], "/.", 
      RowBox[{"FirstTerms", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
     RowBox[{"SecondTerm", "[", "1", "]"}]}], "/.", 
    RowBox[{"ThirdTerm", "[", "1", "]"}]}], "]"}], "//", "Factor"}]], "Input",\

 CellChangeTimes->{{3.814882592012838*^9, 3.814882646901944*^9}, {
  3.814893622277008*^9, 3.814893629026492*^9}, {3.8148936963708563`*^9, 
  3.814893699230641*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.814882621436717*^9, 3.8148826488572197`*^9}, 
   3.8148837753469133`*^9, {3.814893632740666*^9, 3.8148936461157427`*^9}, 
   3.814893711679576*^9, 3.815259914398259*^9, 3.815261148997261*^9, 
   3.815401236031739*^9, 3.829924746140942*^9, 3.8303531728664722`*^9, 
   3.831727511821054*^9, 3.8520481569307528`*^9, 3.85507679496684*^9, 
   3.855136016527095*^9, 3.85514323285445*^9, 3.8552262673275633`*^9, 
   3.855250584691517*^9, 3.855316857152937*^9, 3.855336373838373*^9, 
   3.8553981656097507`*^9, {3.855399107228422*^9, 3.855399126252527*^9}, 
   3.855403468564065*^9, 3.855662390300745*^9, 3.855834086190524*^9, 
   3.856014930805496*^9, 3.856630921151552*^9, 3.8568632502201853`*^9, 
   3.856869630916465*^9, 3.8568786469533863`*^9, {3.8569551511144123`*^9, 
   3.856955166244748*^9}, 3.859390755790337*^9, 3.859390998475028*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Equilibria 4: hosts fixed for mutant allele, parasites fixed for WT allele\
\>", "Subsubsection",
 CellChangeTimes->{{3.814548262772107*^9, 3.814548264542276*^9}, {
  3.814548870478204*^9, 3.814548872392661*^9}, {3.8147945370513563`*^9, 
  3.814794537734541*^9}, {3.814882246474237*^9, 3.814882257530211*^9}, {
  3.814882311914341*^9, 3.814882311982937*^9}, {3.814892154708329*^9, 
  3.814892165987094*^9}, {3.855231256980605*^9, 3.855231267802693*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FirstTerms", "[", 
  RowBox[{"[", "4", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.814881662362957*^9, 3.814881666239748*^9}, {
  3.814892171676284*^9, 3.814892171906477*^9}, {3.855231270884492*^9, 
  3.855231270958563*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"pH1", "[", "0", "]"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"pH2", "[", "0", "]"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"pP1", "[", "0", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP2", "[", "0", "]"}], "\[Rule]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.814881666666131*^9, 3.8148816800289087`*^9}, 
   3.814883811267733*^9, 3.814892172263112*^9, 3.814893529643363*^9, 
   3.814893701157875*^9, 3.8152599032987843`*^9, 3.815261140462398*^9, 
   3.8154012078425093`*^9, 3.829924738629595*^9, 3.829925586892235*^9, 
   3.83172749885816*^9, 3.852048146193183*^9, 3.855076755767516*^9, 
   3.8551360028410597`*^9, 3.8551432187819138`*^9, 3.855226257299075*^9, {
   3.855231271296501*^9, 3.8552312986086597`*^9}, 3.855250584798818*^9, 
   3.855316857351673*^9, 3.85533637388487*^9, 3.855398165822061*^9, {
   3.855399107331699*^9, 3.855399126304777*^9}, 3.855403468619907*^9, 
   3.8556623906501904`*^9, 3.855834086310371*^9, 3.856014930928524*^9, 
   3.856630921231196*^9, 3.8568632502837677`*^9, 3.856869631069364*^9, 
   3.8568786470132523`*^9, {3.85695515118298*^9, 3.856955166317278*^9}, {
   3.859390761045903*^9, 3.8593907703297358`*^9}, 3.85939100675943*^9}]
}, Open  ]],

Cell["\<\
If at equilibrium and zeroth term works, then if the second order term also \
has to be zero at equilibrium\
\>", "Text",
 CellChangeTimes->{{3.8148818086078663`*^9, 3.8148818255513277`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"map", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"#", ",", "\[Epsilon]"}], "]"}], "&"}], ",", "equs2"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.830352730277636*^9, 3.830352747185417*^9}, {
  3.83035279003174*^9, 3.830352819774372*^9}, {3.830352960907208*^9, 
  3.830352985840878*^9}, {3.8303530446285963`*^9, 3.830353044795479*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SecondTerm", "[", "4", "]"}], "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"map", "/.", 
         RowBox[{"\[Epsilon]", "\[Rule]", " ", "0"}]}], "/.", 
        RowBox[{"FirstTerms", "[", 
         RowBox[{"[", "4", "]"}], "]"}]}], ")"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"pH1", "[", "1", "]"}], ",", 
       RowBox[{"pH2", "[", "1", "]"}], ",", 
       RowBox[{"pP1", "[", "1", "]"}], ",", 
       RowBox[{"pP2", "[", "1", "]"}]}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.830352831770853*^9, 3.8303529673503*^9}, {
  3.830353012629157*^9, 3.830353038067169*^9}, {3.855231278700981*^9, 
  3.855231295643713*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"pH1", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pH2", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP1", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP2", "[", "1", "]"}], "\[Rule]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.830352836555689*^9, 3.830352890567293*^9}, {
   3.830352953186088*^9, 3.8303529715948353`*^9}, {3.8303530176068296`*^9, 
   3.8303530403091183`*^9}, 3.831727503070634*^9, 3.852048149121297*^9, 
   3.85507675948808*^9, 3.8551360067069893`*^9, 3.855143221300064*^9, 
   3.855226259707144*^9, {3.855231279399321*^9, 3.85523130141661*^9}, 
   3.85525058488013*^9, 3.8553168574514847`*^9, 3.8553363739364843`*^9, 
   3.855398165925434*^9, {3.855399107437294*^9, 3.855399126368194*^9}, 
   3.8554034686783237`*^9, 3.855662390703792*^9, 3.855834086418261*^9, 
   3.856014930999938*^9, 3.856630921355865*^9, 3.856863250344016*^9, 
   3.856869631136039*^9, 3.856878647107987*^9, {3.856955151255587*^9, 
   3.856955166369076*^9}, {3.859390761167613*^9, 3.859390770378037*^9}, 
   3.8593910068419743`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"map2", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{"\[Epsilon]", ",", "2"}], "}"}]}], "]"}], "&"}], ",", 
     "equs2"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8303530817103043`*^9, 3.830353105668476*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ThirdTerm", "[", "4", "]"}], "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Normal", "[", 
       RowBox[{"Series", "[", 
        RowBox[{
         RowBox[{"Factor", "[", 
          RowBox[{
           RowBox[{"equs2", "/.", 
            RowBox[{"FirstTerms", "[", 
             RowBox[{"[", "4", "]"}], "]"}]}], "/.", 
           RowBox[{"SecondTerm", "[", "4", "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Epsilon]", ",", " ", "0", ",", "2"}], "}"}]}], "]"}], 
       "]"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"pH1", "[", "2", "]"}], ",", 
       RowBox[{"pH2", "[", "2", "]"}], ",", 
       RowBox[{"pP1", "[", "2", "]"}], ",", 
       RowBox[{"pP2", "[", "2", "]"}]}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.814882002547967*^9, 3.814882182521311*^9}, {
  3.81488303220497*^9, 3.814883035100103*^9}, {3.8148921945684958`*^9, 
  3.814892200036455*^9}, {3.8552312843079777`*^9, 3.85523129195499*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"pH1", "[", "2", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pH2", "[", "2", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP1", "[", "2", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP2", "[", "2", "]"}], "\[Rule]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.81488202040592*^9, 3.814882037812099*^9}, {
   3.814882100802043*^9, 3.81488218305035*^9}, 3.8148830361721487`*^9, 
   3.8148838160975027`*^9, 3.814892201258544*^9, 3.814893540634893*^9, 
   3.814893708249771*^9, 3.815259910059606*^9, 3.815261145993718*^9, 
   3.8154012304448643`*^9, 3.829924741696753*^9, 3.829925590775936*^9, 
   3.831727507517144*^9, 3.85204815161658*^9, 3.855076763756679*^9, 
   3.855136009833789*^9, 3.855143223012383*^9, 3.8552262615088587`*^9, {
   3.8552312886770267`*^9, 3.85523130358521*^9}, 3.855250585084032*^9, 
   3.855316857642784*^9, 3.855336374147027*^9, 3.855398166333304*^9, {
   3.855399107586318*^9, 3.8553991264833527`*^9}, 3.855403468957203*^9, 
   3.855662390923235*^9, 3.855834086651699*^9, 3.856014931223472*^9, 
   3.856630921657234*^9, 3.856863250545825*^9, 3.856869631355936*^9, 
   3.8568786473418493`*^9, {3.8569551514176283`*^9, 3.856955166445179*^9}, {
   3.8593907613762217`*^9, 3.859390770459476*^9}, 3.859391006912957*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Normal", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Series", "[", 
       RowBox[{"equs2", ",", 
        RowBox[{"{", 
         RowBox[{"\[Epsilon]", ",", "0", ",", "2"}], "}"}]}], "]"}], "/.", 
      RowBox[{"FirstTerms", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}], "/.", 
     RowBox[{"SecondTerm", "[", "4", "]"}]}], "/.", 
    RowBox[{"ThirdTerm", "[", "4", "]"}]}], "]"}], "//", "Factor"}]], "Input",\

 CellChangeTimes->{{3.814882592012838*^9, 3.814882646901944*^9}, {
  3.814893622277008*^9, 3.814893629026492*^9}, {3.8148936963708563`*^9, 
  3.814893699230641*^9}, {3.855231314348873*^9, 3.8552313206685963`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.814882621436717*^9, 3.8148826488572197`*^9}, 
   3.8148837753469133`*^9, {3.814893632740666*^9, 3.8148936461157427`*^9}, 
   3.814893711679576*^9, 3.815259914398259*^9, 3.815261148997261*^9, 
   3.815401236031739*^9, 3.829924746140942*^9, 3.8303531728664722`*^9, 
   3.831727511821054*^9, 3.8520481569307528`*^9, 3.85507679496684*^9, 
   3.855136016527095*^9, 3.85514323285445*^9, 3.8552262673275633`*^9, 
   3.8552313251371727`*^9, 3.8552505869514313`*^9, 3.855316859824003*^9, 
   3.855336376412704*^9, 3.8553981695894203`*^9, {3.855399111267948*^9, 
   3.855399129405895*^9}, 3.855403471903789*^9, 3.855662393196034*^9, 
   3.855834088639332*^9, 3.8560149331797667`*^9, 3.856630924381193*^9, 
   3.856863252518375*^9, 3.856869633250197*^9, 3.856878649257557*^9, {
   3.8569551526077347`*^9, 3.856955167626883*^9}, {3.859390763388987*^9, 
   3.859390772293989*^9}, 3.859391008210939*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Equilibria 13: all polymorphic", "Subsubsection",
 CellChangeTimes->{{3.814548262772107*^9, 3.814548264542276*^9}, {
  3.814548870478204*^9, 3.814548872392661*^9}, {3.8147945370513563`*^9, 
  3.814794537734541*^9}, {3.814882246474237*^9, 3.814882257530211*^9}, {
  3.814882311914341*^9, 3.814882311982937*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FirstTerms", "[", 
  RowBox[{"[", "13", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.814881662362957*^9, 3.814881666239748*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"pH1", "[", "0", "]"}], "\[Rule]", 
    FractionBox["1", "2"]}], ",", 
   RowBox[{
    RowBox[{"pH2", "[", "0", "]"}], "\[Rule]", 
    FractionBox["1", "2"]}], ",", 
   RowBox[{
    RowBox[{"pP1", "[", "0", "]"}], "\[Rule]", 
    FractionBox["1", "2"]}], ",", 
   RowBox[{
    RowBox[{"pP2", "[", "0", "]"}], "\[Rule]", 
    FractionBox["1", "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.814881666666131*^9, 3.8148816800289087`*^9}, 
   3.814883811267733*^9, 3.81524251896596*^9, 3.815242769105584*^9, 
   3.815244932878111*^9, 3.815765927670148*^9, 3.852048167080061*^9, 
   3.854194731453251*^9, 3.85436562336264*^9, 3.8550736881310797`*^9, 
   3.8551360267104893`*^9, 3.855226269329382*^9, 3.855250587004612*^9, 
   3.8553168599071503`*^9, 3.8553363764557943`*^9, 3.8553981696998663`*^9, {
   3.8553991115846853`*^9, 3.85539912946111*^9}, 3.855403471969962*^9, 
   3.8556623932606688`*^9, 3.8558340887683477`*^9, 3.856014933244149*^9, 
   3.856630924483103*^9, 3.856863252569511*^9, 3.856869633315295*^9, 
   3.856877139726338*^9, 3.856878649614256*^9, {3.8569551526745358`*^9, 
   3.856955167687727*^9}, {3.8593907634567213`*^9, 3.859390772344179*^9}, 
   3.8593910082999153`*^9}]
}, Open  ]],

Cell["\<\
Substitute in generating solution (i.e., solution to first term) to equations \
and take Taylor series approximation to second order:\
\>", "Text",
 CellChangeTimes->{{3.8148818086078663`*^9, 3.8148818255513277`*^9}, {
  3.854194810902329*^9, 3.854194811605918*^9}, {3.85419489256112*^9, 
  3.854194948928815*^9}, {3.854195013579996*^9, 3.854195046562614*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", 
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"Factor", "[", 
     RowBox[{"equs2", "/.", 
      RowBox[{"FirstTerms", "[", 
       RowBox[{"[", "13", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.814881701461109*^9, 3.814881801741959*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"\[Epsilon]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "X"}], " ", "\[Alpha]", " ", 
        RowBox[{"pP1", "[", "1", "]"}]}], "+", 
       RowBox[{"Y", " ", "\[Alpha]", " ", 
        RowBox[{"pP1", "[", "1", "]"}]}]}], ")"}]}], 
    RowBox[{
     RowBox[{"X", " ", "\[Alpha]"}], "+", 
     RowBox[{"Y", " ", "\[Alpha]"}], "+", 
     RowBox[{"2", " ", "\[Delta]"}]}]], ",", 
   FractionBox[
    RowBox[{"\[Epsilon]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "X"}], " ", "\[Alpha]", " ", 
        RowBox[{"pP2", "[", "1", "]"}]}], "+", 
       RowBox[{"Y", " ", "\[Alpha]", " ", 
        RowBox[{"pP2", "[", "1", "]"}]}]}], ")"}]}], 
    RowBox[{
     RowBox[{"X", " ", "\[Alpha]"}], "+", 
     RowBox[{"Y", " ", "\[Alpha]"}], "+", 
     RowBox[{"2", " ", "\[Delta]"}]}]], ",", 
   FractionBox[
    RowBox[{"\[Epsilon]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"X", " ", "\[Alpha]", " ", 
        RowBox[{"pH1", "[", "1", "]"}]}], "-", 
       RowBox[{"Y", " ", "\[Alpha]", " ", 
        RowBox[{"pH1", "[", "1", "]"}]}]}], ")"}]}], 
    RowBox[{
     RowBox[{"X", " ", "\[Alpha]"}], "+", 
     RowBox[{"Y", " ", "\[Alpha]"}], "+", 
     RowBox[{"2", " ", "\[Delta]"}]}]], ",", 
   FractionBox[
    RowBox[{"\[Epsilon]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"X", " ", "\[Alpha]", " ", 
        RowBox[{"pH2", "[", "1", "]"}]}], "-", 
       RowBox[{"Y", " ", "\[Alpha]", " ", 
        RowBox[{"pH2", "[", "1", "]"}]}]}], ")"}]}], 
    RowBox[{
     RowBox[{"X", " ", "\[Alpha]"}], "+", 
     RowBox[{"Y", " ", "\[Alpha]"}], "+", 
     RowBox[{"2", " ", "\[Delta]"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.814881788288458*^9, 3.814881801996398*^9}, 
   3.814883812750863*^9, 3.815242520431925*^9, 3.815242771317946*^9, 
   3.815244934678914*^9, 3.815765928692685*^9, 3.852048168839995*^9, 
   3.8541947353645887`*^9, 3.854365624902708*^9, 3.855073689417748*^9, 
   3.855136028257753*^9, 3.855226270725223*^9, 3.8552505870695343`*^9, 
   3.855316859973216*^9, 3.855336376521056*^9, 3.8553981697893763`*^9, {
   3.855399111764921*^9, 3.855399129509659*^9}, 3.855403472052202*^9, 
   3.855662393364316*^9, 3.855834088861557*^9, 3.856014933459166*^9, 
   3.856630924582313*^9, 3.8568632526310587`*^9, 3.8568696333789*^9, 
   3.856877140962943*^9, 3.856878649697698*^9, {3.8569551527353077`*^9, 
   3.8569551677212763`*^9}, {3.8593907635376787`*^9, 3.859390772376265*^9}, 
   3.859391008355791*^9}]
}, Open  ]],

Cell["\<\
If at equilibrium and zeroth term works, then the second term (first order) \
also has to be zero at equilibrium. Again substituting in the generating \
solution (i.e., solution to first term), solve such that the second term is \
also equal to zero:\
\>", "Text",
 CellChangeTimes->{{3.8148818086078663`*^9, 3.8148818255513277`*^9}, {
  3.854194831086586*^9, 3.854194831654418*^9}, {3.8541949260891933`*^9, 
  3.854194926528603*^9}, {3.854195054482936*^9, 3.854195070729835*^9}, {
  3.854195101423856*^9, 3.854195106459874*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SecondTerm", "[", "13", "]"}], "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Normal", "[", 
       RowBox[{"Series", "[", 
        RowBox[{
         RowBox[{"Factor", "[", 
          RowBox[{"equs2", "/.", 
           RowBox[{"FirstTerms", "[", 
            RowBox[{"[", "13", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}], 
      "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"pH1", "[", "1", "]"}], ",", 
       RowBox[{"pH2", "[", "1", "]"}], ",", 
       RowBox[{"pP1", "[", "1", "]"}], ",", 
       RowBox[{"pP2", "[", "1", "]"}]}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8148818811834993`*^9, 3.814881924914178*^9}, {
  3.81488197311384*^9, 3.81488198661553*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"pH1", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pH2", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP1", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP2", "[", "1", "]"}], "\[Rule]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.814881961049362*^9, 3.814881989810463*^9}, 
   3.8148838142482567`*^9, 3.8152425222964973`*^9, 3.8152427761050863`*^9, 
   3.81524493746165*^9, 3.815765930632277*^9, 3.8520481706862698`*^9, 
   3.8541947386509857`*^9, 3.854195074206603*^9, 3.854365626692759*^9, 
   3.8550736915532007`*^9, 3.855136030433749*^9, 3.855226272213771*^9, 
   3.855250587133436*^9, 3.855316860042241*^9, 3.855336376561891*^9, 
   3.8553981698420897`*^9, {3.8553991118660994`*^9, 3.8553991295668707`*^9}, 
   3.855403472102682*^9, 3.855662393449963*^9, 3.855834088933139*^9, 
   3.856014933508493*^9, 3.856630924650503*^9, 3.856863252679369*^9, 
   3.85686963341644*^9, 3.856877142910632*^9, 3.856878649780192*^9, {
   3.856955152779748*^9, 3.8569551677730427`*^9}, {3.8593907635907927`*^9, 
   3.859390772428605*^9}, 3.859391008392498*^9}]
}, Open  ]],

Cell["\<\
Substituting in the solutions to the first and second terms (zeroth and first \
order, respecitvely), solve such that the third term (second order) is also \
equal to zero:\
\>", "Text",
 CellChangeTimes->{{3.8148818086078663`*^9, 3.8148818255513277`*^9}, {
  3.854194831086586*^9, 3.854194831654418*^9}, {3.8541949260891933`*^9, 
  3.854194926528603*^9}, {3.854195054482936*^9, 3.854195070729835*^9}, {
  3.854195120028638*^9, 3.8541951544686003`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ThirdTerm", "[", "13", "]"}], "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Normal", "[", 
       RowBox[{"Series", "[", 
        RowBox[{
         RowBox[{"Factor", "[", 
          RowBox[{
           RowBox[{"equs2", "/.", 
            RowBox[{"FirstTerms", "[", 
             RowBox[{"[", "13", "]"}], "]"}]}], "/.", 
           RowBox[{"SecondTerm", "[", "13", "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Epsilon]", ",", " ", "0", ",", "2"}], "}"}]}], "]"}], 
       "]"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"pH1", "[", "2", "]"}], ",", 
       RowBox[{"pH2", "[", "2", "]"}], ",", 
       RowBox[{"pP1", "[", "2", "]"}], ",", 
       RowBox[{"pP2", "[", "2", "]"}]}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.814882002547967*^9, 3.814882182521311*^9}, {
  3.81488303220497*^9, 3.814883035100103*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"pH1", "[", "2", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pH2", "[", "2", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP1", "[", "2", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP2", "[", "2", "]"}], "\[Rule]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.81488202040592*^9, 3.814882037812099*^9}, {
   3.814882100802043*^9, 3.81488218305035*^9}, 3.8148830361721487`*^9, 
   3.8148838160975027`*^9, 3.815242525196278*^9, 3.815242793052958*^9, 
   3.815244940517068*^9, 3.815765932899724*^9, 3.852048172468253*^9, 
   3.8541951572941504`*^9, 3.854365628225602*^9, 3.855073693712534*^9, 
   3.855136032268499*^9, 3.855226273911153*^9, 3.855250587200556*^9, 
   3.855316860103187*^9, 3.855336376601666*^9, 3.855398169910184*^9, {
   3.855399111916101*^9, 3.855399129612872*^9}, 3.855403472161386*^9, 
   3.855662393566894*^9, 3.855834089018127*^9, 3.8560149335588017`*^9, 
   3.856630924719288*^9, 3.8568632527447777`*^9, 3.856869633470683*^9, 
   3.8568771447503233`*^9, 3.856878649846629*^9, {3.856955152841168*^9, 
   3.856955167818412*^9}, {3.859390763638098*^9, 3.859390772482325*^9}, 
   3.859391008455014*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Normal", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Series", "[", 
       RowBox[{"equs2", ",", 
        RowBox[{"{", 
         RowBox[{"\[Epsilon]", ",", "0", ",", "2"}], "}"}]}], "]"}], "/.", 
      RowBox[{"FirstTerms", "[", 
       RowBox[{"[", "13", "]"}], "]"}]}], "/.", 
     RowBox[{"SecondTerm", "[", "13", "]"}]}], "/.", 
    RowBox[{"ThirdTerm", "[", "13", "]"}]}], "]"}], "//", "Factor"}]], "Input",\

 CellChangeTimes->{{3.814882592012838*^9, 3.814882646901944*^9}, {
  3.814893622277008*^9, 3.814893629026492*^9}, {3.814893679060392*^9, 
  3.814893682776371*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.814882621436717*^9, 3.8148826488572197`*^9}, 
   3.8148837753469133`*^9, {3.814893632740666*^9, 3.8148936461157427`*^9}, 
   3.81489368607341*^9, 3.815242529187313*^9, 3.815242796033853*^9, 
   3.815244943371273*^9, 3.852048175503179*^9, 3.8541951660757103`*^9, 
   3.85507370088979*^9, 3.85513603563984*^9, 3.855226277308832*^9, 
   3.855250589037602*^9, 3.855316862085558*^9, 3.8553363789025908`*^9, 
   3.855398172805986*^9, {3.855399115856574*^9, 3.8553991326960783`*^9}, 
   3.8554034751109743`*^9, 3.855662396100968*^9, 3.8558340912878523`*^9, 
   3.856014935589951*^9, 3.856630927166843*^9, 3.856863254643379*^9, 
   3.856869635334531*^9, 3.856877150187704*^9, 3.856878651568413*^9, {
   3.8569551540456047`*^9, 3.8569551690407553`*^9}, {3.859390765539605*^9, 
   3.859390774317778*^9}, 3.859391009747601*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Equilibria 22: hosts fixed for WT allele, parasites fixed for mutant allele\
\>", "Subsubsection",
 CellChangeTimes->{{3.814548262772107*^9, 3.814548264542276*^9}, {
  3.814548870478204*^9, 3.814548872392661*^9}, {3.8147945370513563`*^9, 
  3.814794537734541*^9}, {3.814882246474237*^9, 3.814882257530211*^9}, {
  3.814882311914341*^9, 3.814882311982937*^9}, {3.8551553972944803`*^9, 
  3.855155410181287*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FirstTerms", "[", 
  RowBox[{"[", "22", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.814881662362957*^9, 3.814881666239748*^9}, {
  3.855155413646017*^9, 3.8551554142703743`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"pH1", "[", "0", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pH2", "[", "0", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP1", "[", "0", "]"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"pP2", "[", "0", "]"}], "\[Rule]", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.814881666666131*^9, 3.8148816800289087`*^9}, 
   3.814883811267733*^9, 3.81524251896596*^9, 3.815242769105584*^9, 
   3.815244932878111*^9, 3.815765927670148*^9, 3.852048167080061*^9, 
   3.854194731453251*^9, 3.85436562336264*^9, 3.8550736881310797`*^9, 
   3.8551360267104893`*^9, 3.855155414654799*^9, 3.855226280483182*^9, 
   3.855250589096319*^9, 3.855316862207128*^9, 3.8553363789470863`*^9, 
   3.855398172858082*^9, {3.85539911590767*^9, 3.8553991327542067`*^9}, 
   3.855403475162779*^9, 3.855662396375064*^9, 3.855834091536241*^9, 
   3.856014935635977*^9, 3.856630927248012*^9, 3.856863254710966*^9, 
   3.8568696353991127`*^9, 3.856878651667529*^9, {3.85695515411775*^9, 
   3.856955169117581*^9}, {3.859390765619925*^9, 3.859390774364565*^9}, 
   3.859391009811863*^9}]
}, Open  ]],

Cell["\<\
Substitute in generating solution (i.e., solution to first term) to equations \
and take Taylor series approximation to second order:\
\>", "Text",
 CellChangeTimes->{{3.8148818086078663`*^9, 3.8148818255513277`*^9}, {
  3.854194810902329*^9, 3.854194811605918*^9}, {3.85419489256112*^9, 
  3.854194948928815*^9}, {3.854195013579996*^9, 3.854195046562614*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", 
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"Factor", "[", 
     RowBox[{"equs2", "/.", 
      RowBox[{"FirstTerms", "[", 
       RowBox[{"[", "22", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.814881701461109*^9, 3.814881801741959*^9}, {
  3.855155418574999*^9, 3.85515541906264*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"\[Epsilon]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "X"}], " ", "\[Alpha]", " ", 
        RowBox[{"pH1", "[", "1", "]"}]}], "+", 
       RowBox[{"Y", " ", "\[Alpha]", " ", 
        RowBox[{"pH1", "[", "1", "]"}]}]}], ")"}]}], 
    RowBox[{
     RowBox[{"Y", " ", "\[Alpha]"}], "+", "\[Delta]"}]], ",", 
   FractionBox[
    RowBox[{"\[Epsilon]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "X"}], " ", "\[Alpha]", " ", 
        RowBox[{"pH2", "[", "1", "]"}]}], "+", 
       RowBox[{"Y", " ", "\[Alpha]", " ", 
        RowBox[{"pH2", "[", "1", "]"}]}]}], ")"}]}], 
    RowBox[{
     RowBox[{"Y", " ", "\[Alpha]"}], "+", "\[Delta]"}]], ",", 
   FractionBox[
    RowBox[{"\[Epsilon]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"X", " ", "\[Alpha]", " ", 
        RowBox[{"pP1", "[", "1", "]"}]}], "-", 
       RowBox[{"Y", " ", "\[Alpha]", " ", 
        RowBox[{"pP1", "[", "1", "]"}]}]}], ")"}]}], 
    RowBox[{
     RowBox[{"Y", " ", "\[Alpha]"}], "+", "\[Delta]"}]], ",", 
   FractionBox[
    RowBox[{"\[Epsilon]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"X", " ", "\[Alpha]", " ", 
        RowBox[{"pP2", "[", "1", "]"}]}], "-", 
       RowBox[{"Y", " ", "\[Alpha]", " ", 
        RowBox[{"pP2", "[", "1", "]"}]}]}], ")"}]}], 
    RowBox[{
     RowBox[{"Y", " ", "\[Alpha]"}], "+", "\[Delta]"}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.814881788288458*^9, 3.814881801996398*^9}, 
   3.814883812750863*^9, 3.815242520431925*^9, 3.815242771317946*^9, 
   3.815244934678914*^9, 3.815765928692685*^9, 3.852048168839995*^9, 
   3.8541947353645887`*^9, 3.854365624902708*^9, 3.855073689417748*^9, 
   3.855136028257753*^9, 3.855155419532484*^9, 3.855226281788995*^9, 
   3.85525058918579*^9, 3.8553168623093147`*^9, 3.855336379035801*^9, 
   3.855398172973317*^9, {3.8553991159760637`*^9, 3.855399132821846*^9}, 
   3.855403475267167*^9, 3.8556623965174217`*^9, 3.85583409162578*^9, 
   3.8560149357232437`*^9, 3.85663092739535*^9, 3.8568632547985067`*^9, 
   3.8568696354843884`*^9, 3.856878651769372*^9, {3.856955154196292*^9, 
   3.8569551691686153`*^9}, {3.8593907657089167`*^9, 3.859390774411564*^9}, 
   3.859391009885427*^9}]
}, Open  ]],

Cell["\<\
If at equilibrium and zeroth term works, then the second term (first order) \
also has to be zero at equilibrium. Again substituting in the generating \
solution (i.e., solution to first term), solve such that the second term is \
also equal to zero:\
\>", "Text",
 CellChangeTimes->{{3.8148818086078663`*^9, 3.8148818255513277`*^9}, {
  3.854194831086586*^9, 3.854194831654418*^9}, {3.8541949260891933`*^9, 
  3.854194926528603*^9}, {3.854195054482936*^9, 3.854195070729835*^9}, {
  3.854195101423856*^9, 3.854195106459874*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SecondTerm", "[", "22", "]"}], "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Normal", "[", 
       RowBox[{"Series", "[", 
        RowBox[{
         RowBox[{"Factor", "[", 
          RowBox[{"equs2", "/.", 
           RowBox[{"FirstTerms", "[", 
            RowBox[{"[", "22", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}], 
      "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"pH1", "[", "1", "]"}], ",", 
       RowBox[{"pH2", "[", "1", "]"}], ",", 
       RowBox[{"pP1", "[", "1", "]"}], ",", 
       RowBox[{"pP2", "[", "1", "]"}]}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8148818811834993`*^9, 3.814881924914178*^9}, {
  3.81488197311384*^9, 3.81488198661553*^9}, {3.855155422182712*^9, 
  3.855155426014717*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"pH1", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pH2", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP1", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP2", "[", "1", "]"}], "\[Rule]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.814881961049362*^9, 3.814881989810463*^9}, 
   3.8148838142482567`*^9, 3.8152425222964973`*^9, 3.8152427761050863`*^9, 
   3.81524493746165*^9, 3.815765930632277*^9, 3.8520481706862698`*^9, 
   3.8541947386509857`*^9, 3.854195074206603*^9, 3.854365626692759*^9, 
   3.8550736915532007`*^9, 3.855136030433749*^9, 3.855155427000794*^9, 
   3.855226283302248*^9, 3.855250589233911*^9, 3.8553168624129257`*^9, 
   3.8553363790850677`*^9, 3.855398173040577*^9, {3.85539911606079*^9, 
   3.855399132895076*^9}, 3.85540347533934*^9, 3.855662396719001*^9, 
   3.85583409170327*^9, 3.8560149357740583`*^9, 3.856630927489336*^9, 
   3.856863254843713*^9, 3.8568696355396757`*^9, 3.856878651848406*^9, {
   3.8569551542572327`*^9, 3.8569551692181807`*^9}, {3.859390765803041*^9, 
   3.859390774465713*^9}, 3.859391009936936*^9}]
}, Open  ]],

Cell["\<\
Substituting in the solutions to the first and second terms (zeroth and first \
order, respecitvely), solve such that the third term (second order) is also \
equal to zero:\
\>", "Text",
 CellChangeTimes->{{3.8148818086078663`*^9, 3.8148818255513277`*^9}, {
  3.854194831086586*^9, 3.854194831654418*^9}, {3.8541949260891933`*^9, 
  3.854194926528603*^9}, {3.854195054482936*^9, 3.854195070729835*^9}, {
  3.854195120028638*^9, 3.8541951544686003`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ThirdTerm", "[", "22", "]"}], "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Normal", "[", 
       RowBox[{"Series", "[", 
        RowBox[{
         RowBox[{"Factor", "[", 
          RowBox[{
           RowBox[{"equs2", "/.", 
            RowBox[{"FirstTerms", "[", 
             RowBox[{"[", "22", "]"}], "]"}]}], "/.", 
           RowBox[{"SecondTerm", "[", "22", "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Epsilon]", ",", " ", "0", ",", "2"}], "}"}]}], "]"}], 
       "]"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"pH1", "[", "2", "]"}], ",", 
       RowBox[{"pH2", "[", "2", "]"}], ",", 
       RowBox[{"pP1", "[", "2", "]"}], ",", 
       RowBox[{"pP2", "[", "2", "]"}]}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.814882002547967*^9, 3.814882182521311*^9}, {
  3.81488303220497*^9, 3.814883035100103*^9}, {3.8551554304613047`*^9, 
  3.855155437135651*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"pH1", "[", "2", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pH2", "[", "2", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP1", "[", "2", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP2", "[", "2", "]"}], "\[Rule]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.81488202040592*^9, 3.814882037812099*^9}, {
   3.814882100802043*^9, 3.81488218305035*^9}, 3.8148830361721487`*^9, 
   3.8148838160975027`*^9, 3.815242525196278*^9, 3.815242793052958*^9, 
   3.815244940517068*^9, 3.815765932899724*^9, 3.852048172468253*^9, 
   3.8541951572941504`*^9, 3.854365628225602*^9, 3.855073693712534*^9, 
   3.855136032268499*^9, 3.855155437702305*^9, 3.8552262865745687`*^9, 
   3.855250589398188*^9, 3.8553168625881033`*^9, 3.855336379262043*^9, 
   3.8553981732614727`*^9, {3.855399116168133*^9, 3.855399132994729*^9}, 
   3.855403475530965*^9, 3.8556623970089083`*^9, 3.855834091974723*^9, 
   3.856014935941516*^9, 3.856630927738237*^9, 3.8568632550039663`*^9, 
   3.8568696357095947`*^9, 3.856878652031473*^9, {3.856955154386959*^9, 
   3.856955169286215*^9}, {3.859390765967585*^9, 3.859390774524436*^9}, 
   3.859391009987035*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Normal", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Series", "[", 
       RowBox[{"equs2", ",", 
        RowBox[{"{", 
         RowBox[{"\[Epsilon]", ",", "0", ",", "2"}], "}"}]}], "]"}], "/.", 
      RowBox[{"FirstTerms", "[", 
       RowBox[{"[", "22", "]"}], "]"}]}], "/.", 
     RowBox[{"SecondTerm", "[", "22", "]"}]}], "/.", 
    RowBox[{"ThirdTerm", "[", "22", "]"}]}], "]"}], "//", "Factor"}]], "Input",\

 CellChangeTimes->{{3.814882592012838*^9, 3.814882646901944*^9}, {
  3.814893622277008*^9, 3.814893629026492*^9}, {3.814893679060392*^9, 
  3.814893682776371*^9}, {3.855155441519641*^9, 3.85515544827079*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.814882621436717*^9, 3.8148826488572197`*^9}, 
   3.8148837753469133`*^9, {3.814893632740666*^9, 3.8148936461157427`*^9}, 
   3.81489368607341*^9, 3.815242529187313*^9, 3.815242796033853*^9, 
   3.815244943371273*^9, 3.852048175503179*^9, 3.8541951660757103`*^9, 
   3.85507370088979*^9, 3.85513603563984*^9, 3.855155452665354*^9, 
   3.85522629156752*^9, 3.855250591298091*^9, 3.855316864561414*^9, 
   3.8553363815708103`*^9, 3.8553981757243147`*^9, {3.8553991191720133`*^9, 
   3.855399136247252*^9}, 3.855403478598126*^9, 3.855662402191037*^9, 
   3.855834093939683*^9, 3.8560149378496923`*^9, 3.8566309302560053`*^9, 
   3.856863256908979*^9, 3.856869637586076*^9, 3.856878653704709*^9, {
   3.856955155597797*^9, 3.856955170475861*^9}, {3.859390767910548*^9, 
   3.859390776383254*^9}, 3.8593910112528353`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Equilibria 25: all fixed for mutant allele", "Subsubsection",
 CellChangeTimes->{{3.814548262772107*^9, 3.814548264542276*^9}, {
  3.814548870478204*^9, 3.814548872392661*^9}, {3.8147945370513563`*^9, 
  3.814794537734541*^9}, {3.814882246474237*^9, 3.814882257530211*^9}, {
  3.814882311914341*^9, 3.814882311982937*^9}, {3.855078036809557*^9, 
  3.8550780444384947`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FirstTerms", "[", 
  RowBox[{"[", "25", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.814881662362957*^9, 3.814881666239748*^9}, {
  3.855078047671646*^9, 3.8550780479432573`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"pH1", "[", "0", "]"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"pH2", "[", "0", "]"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"pP1", "[", "0", "]"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"pP2", "[", "0", "]"}], "\[Rule]", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.814881666666131*^9, 3.8148816800289087`*^9}, 
   3.814883811267733*^9, 3.81524251896596*^9, 3.815242769105584*^9, 
   3.815244932878111*^9, 3.815765927670148*^9, 3.852048167080061*^9, 
   3.854194731453251*^9, 3.85436562336264*^9, 3.8550736881310797`*^9, 
   3.855078048254768*^9, 3.855136037318931*^9, 3.85522629499898*^9, 
   3.855250591357986*^9, 3.855316864639739*^9, 3.855336381615003*^9, 
   3.855398175775547*^9, {3.8553991192259827`*^9, 3.855399136297337*^9}, 
   3.8554034786716843`*^9, 3.855662402677009*^9, 3.855834094028262*^9, 
   3.856014937893249*^9, 3.856630930327808*^9, 3.8568632569638577`*^9, 
   3.8568696376476583`*^9, 3.856878653779035*^9, {3.856955155707234*^9, 
   3.856955170520239*^9}, {3.859390767970956*^9, 3.859390776581053*^9}, 
   3.8593910113119802`*^9}]
}, Open  ]],

Cell["\<\
Substitute in generating solution (i.e., solution to first term) to equations \
and take Taylor series approximation to second order:\
\>", "Text",
 CellChangeTimes->{{3.8148818086078663`*^9, 3.8148818255513277`*^9}, {
  3.854194810902329*^9, 3.854194811605918*^9}, {3.85419489256112*^9, 
  3.854194948928815*^9}, {3.854195013579996*^9, 3.854195046562614*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", 
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"Factor", "[", 
     RowBox[{"equs2", "/.", 
      RowBox[{"FirstTerms", "[", 
       RowBox[{"[", "25", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.814881701461109*^9, 3.814881801741959*^9}, {
  3.8550780546793633`*^9, 3.855078054991171*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"\[Epsilon]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"X", " ", "\[Alpha]", " ", 
        RowBox[{"pH1", "[", "1", "]"}]}], "-", 
       RowBox[{"Y", " ", "\[Alpha]", " ", 
        RowBox[{"pH1", "[", "1", "]"}]}]}], ")"}]}], 
    RowBox[{
     RowBox[{"X", " ", "\[Alpha]"}], "+", "\[Delta]"}]], ",", 
   FractionBox[
    RowBox[{"\[Epsilon]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"X", " ", "\[Alpha]", " ", 
        RowBox[{"pH2", "[", "1", "]"}]}], "-", 
       RowBox[{"Y", " ", "\[Alpha]", " ", 
        RowBox[{"pH2", "[", "1", "]"}]}]}], ")"}]}], 
    RowBox[{
     RowBox[{"X", " ", "\[Alpha]"}], "+", "\[Delta]"}]], ",", 
   FractionBox[
    RowBox[{"\[Epsilon]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "X"}], " ", "\[Alpha]", " ", 
        RowBox[{"pP1", "[", "1", "]"}]}], "+", 
       RowBox[{"Y", " ", "\[Alpha]", " ", 
        RowBox[{"pP1", "[", "1", "]"}]}]}], ")"}]}], 
    RowBox[{
     RowBox[{"X", " ", "\[Alpha]"}], "+", "\[Delta]"}]], ",", 
   FractionBox[
    RowBox[{"\[Epsilon]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "X"}], " ", "\[Alpha]", " ", 
        RowBox[{"pP2", "[", "1", "]"}]}], "+", 
       RowBox[{"Y", " ", "\[Alpha]", " ", 
        RowBox[{"pP2", "[", "1", "]"}]}]}], ")"}]}], 
    RowBox[{
     RowBox[{"X", " ", "\[Alpha]"}], "+", "\[Delta]"}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.814881788288458*^9, 3.814881801996398*^9}, 
   3.814883812750863*^9, 3.815242520431925*^9, 3.815242771317946*^9, 
   3.815244934678914*^9, 3.815765928692685*^9, 3.852048168839995*^9, 
   3.8541947353645887`*^9, 3.854365624902708*^9, 3.855073689417748*^9, 
   3.855078055445199*^9, 3.8551360403892612`*^9, 3.855226296585053*^9, 
   3.8552505914452553`*^9, 3.855316864723262*^9, 3.855336381702098*^9, 
   3.855398175891087*^9, {3.855399119290197*^9, 3.85539913637204*^9}, 
   3.855403478783575*^9, 3.855662402780108*^9, 3.855834094124267*^9, 
   3.856014937980769*^9, 3.856630930477414*^9, 3.856863257048225*^9, 
   3.856869637838904*^9, 3.8568786538885193`*^9, {3.8569551557929277`*^9, 
   3.856955170569339*^9}, {3.8593907680598593`*^9, 3.85939077668287*^9}, 
   3.8593910113800497`*^9}]
}, Open  ]],

Cell["\<\
If at equilibrium and zeroth term works, then the second term (first order) \
also has to be zero at equilibrium. Again substituting in the generating \
solution (i.e., solution to first term), solve such that the second term is \
also equal to zero:\
\>", "Text",
 CellChangeTimes->{{3.8148818086078663`*^9, 3.8148818255513277`*^9}, {
  3.854194831086586*^9, 3.854194831654418*^9}, {3.8541949260891933`*^9, 
  3.854194926528603*^9}, {3.854195054482936*^9, 3.854195070729835*^9}, {
  3.854195101423856*^9, 3.854195106459874*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SecondTerm", "[", "25", "]"}], "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Normal", "[", 
       RowBox[{"Series", "[", 
        RowBox[{
         RowBox[{"Factor", "[", 
          RowBox[{"equs2", "/.", 
           RowBox[{"FirstTerms", "[", 
            RowBox[{"[", "25", "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}], 
      "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"pH1", "[", "1", "]"}], ",", 
       RowBox[{"pH2", "[", "1", "]"}], ",", 
       RowBox[{"pP1", "[", "1", "]"}], ",", 
       RowBox[{"pP2", "[", "1", "]"}]}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8148818811834993`*^9, 3.814881924914178*^9}, {
  3.81488197311384*^9, 3.81488198661553*^9}, {3.8550780575682096`*^9, 
  3.855078060350973*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"pH1", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pH2", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP1", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP2", "[", "1", "]"}], "\[Rule]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.814881961049362*^9, 3.814881989810463*^9}, 
   3.8148838142482567`*^9, 3.8152425222964973`*^9, 3.8152427761050863`*^9, 
   3.81524493746165*^9, 3.815765930632277*^9, 3.8520481706862698`*^9, 
   3.8541947386509857`*^9, 3.854195074206603*^9, 3.854365626692759*^9, 
   3.8550736915532007`*^9, 3.8550780607280397`*^9, 3.855136042102682*^9, 
   3.8552263010910883`*^9, 3.855250591500149*^9, 3.855316864795972*^9, 
   3.8553363817529707`*^9, 3.855398175953314*^9, {3.8553991193558607`*^9, 
   3.855399136439619*^9}, 3.855403478853754*^9, 3.855662402842664*^9, 
   3.855834094222496*^9, 3.856014938030157*^9, 3.8566309305588408`*^9, 
   3.8568632570944433`*^9, 3.856869637988599*^9, 3.856878653953693*^9, {
   3.8569551558474503`*^9, 3.856955170641382*^9}, {3.85939076811267*^9, 
   3.859390776798705*^9}, 3.8593910114316607`*^9}]
}, Open  ]],

Cell["\<\
Substituting in the solutions to the first and second terms (zeroth and first \
order, respecitvely), solve such that the third term (second order) is also \
equal to zero:\
\>", "Text",
 CellChangeTimes->{{3.8148818086078663`*^9, 3.8148818255513277`*^9}, {
  3.854194831086586*^9, 3.854194831654418*^9}, {3.8541949260891933`*^9, 
  3.854194926528603*^9}, {3.854195054482936*^9, 3.854195070729835*^9}, {
  3.854195120028638*^9, 3.8541951544686003`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ThirdTerm", "[", "25", "]"}], "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Normal", "[", 
       RowBox[{"Series", "[", 
        RowBox[{
         RowBox[{"Factor", "[", 
          RowBox[{
           RowBox[{"equs2", "/.", 
            RowBox[{"FirstTerms", "[", 
             RowBox[{"[", "25", "]"}], "]"}]}], "/.", 
           RowBox[{"SecondTerm", "[", "25", "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Epsilon]", ",", " ", "0", ",", "2"}], "}"}]}], "]"}], 
       "]"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"pH1", "[", "2", "]"}], ",", 
       RowBox[{"pH2", "[", "2", "]"}], ",", 
       RowBox[{"pP1", "[", "2", "]"}], ",", 
       RowBox[{"pP2", "[", "2", "]"}]}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.814882002547967*^9, 3.814882182521311*^9}, {
  3.81488303220497*^9, 3.814883035100103*^9}, {3.85507806328054*^9, 
  3.8550780814804163`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"pH1", "[", "2", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pH2", "[", "2", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP1", "[", "2", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP2", "[", "2", "]"}], "\[Rule]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.81488202040592*^9, 3.814882037812099*^9}, {
   3.814882100802043*^9, 3.81488218305035*^9}, 3.8148830361721487`*^9, 
   3.8148838160975027`*^9, 3.815242525196278*^9, 3.815242793052958*^9, 
   3.815244940517068*^9, 3.815765932899724*^9, 3.852048172468253*^9, 
   3.8541951572941504`*^9, 3.854365628225602*^9, 3.855073693712534*^9, {
   3.855078063855275*^9, 3.855078082640828*^9}, 3.855136044093688*^9, 
   3.855226303204571*^9, 3.855250591680489*^9, 3.855316864972184*^9, 
   3.8553363819335747`*^9, 3.855398176186438*^9, {3.8553991194488583`*^9, 
   3.855399136525753*^9}, 3.8554034790690117`*^9, 3.8556624032186613`*^9, 
   3.855834094405999*^9, 3.856014938206273*^9, 3.856630930833755*^9, 
   3.856863257267159*^9, 3.856869638220875*^9, 3.85687865411871*^9, {
   3.856955155963874*^9, 3.8569551707172413`*^9}, {3.859390768307745*^9, 
   3.859390776914967*^9}, 3.859391011481882*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Normal", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Series", "[", 
       RowBox[{"equs2", ",", 
        RowBox[{"{", 
         RowBox[{"\[Epsilon]", ",", "0", ",", "2"}], "}"}]}], "]"}], "/.", 
      RowBox[{"FirstTerms", "[", 
       RowBox[{"[", "25", "]"}], "]"}]}], "/.", 
     RowBox[{"SecondTerm", "[", "25", "]"}]}], "/.", 
    RowBox[{"ThirdTerm", "[", "25", "]"}]}], "]"}], "//", "Factor"}]], "Input",\

 CellChangeTimes->{{3.814882592012838*^9, 3.814882646901944*^9}, {
  3.814893622277008*^9, 3.814893629026492*^9}, {3.814893679060392*^9, 
  3.814893682776371*^9}, {3.855078067551714*^9, 3.8550780712158947`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.814882621436717*^9, 3.8148826488572197`*^9}, 
   3.8148837753469133`*^9, {3.814893632740666*^9, 3.8148936461157427`*^9}, 
   3.81489368607341*^9, 3.815242529187313*^9, 3.815242796033853*^9, 
   3.815244943371273*^9, 3.852048175503179*^9, 3.8541951660757103`*^9, 
   3.85507370088979*^9, {3.8550780737159567`*^9, 3.8550780863090277`*^9}, 
   3.855136050099128*^9, 3.855226308329975*^9, 3.855250593522414*^9, 
   3.855316866889546*^9, 3.855336384275949*^9, 3.8553981786725693`*^9, {
   3.8553991225407476`*^9, 3.8553991395463247`*^9}, 3.8554034819063377`*^9, 
   3.8556624062564707`*^9, 3.8558340962792788`*^9, 3.856014940214467*^9, 
   3.856630933588758*^9, 3.856863259187039*^9, 3.8568696402213583`*^9, 
   3.85687865647406*^9, {3.856955157268813*^9, 3.856955171942534*^9}, {
   3.859390770275379*^9, 3.8593907788347263`*^9}, 3.859391012751422*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Stability-Perturbation Solution", "Subsection",
 CellChangeTimes->{{3.814548231241057*^9, 3.814548235227971*^9}, {
  3.814793276135005*^9, 3.814793279082466*^9}, {3.8148808247197866`*^9, 
  3.8148808297265787`*^9}, {3.814882714016932*^9, 3.814882715032444*^9}}],

Cell["\<\
If any eigenvalue has a positive real part, the system will tend to move away \
from the fixed point (unstable system).
If all eigenvalues have a negative real part, the system will tend to move \
back to steady state (stable system).
If any eigenvalue has an imaginary part, the system oscillate around the \
steady state.
If eigenvalue is zero, the system remains position or amplitude constant.

Set up Jacobian matrix.\
\>", "Text",
 CellChangeTimes->{{3.831727602781782*^9, 3.831727635440977*^9}, {
  3.854195186645911*^9, 3.854195208381879*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "jMtrx", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"jMtrx", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"gH1", "[", "t", "]"}], ",", 
         RowBox[{"pH1", "[", "t", "]"}]}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"gH1", "[", "t", "]"}], ",", 
         RowBox[{"pH2", "[", "t", "]"}]}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"gH1", "[", "t", "]"}], ",", 
         RowBox[{"pP1", "[", "t", "]"}]}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"gH1", "[", "t", "]"}], ",", 
         RowBox[{"pP2", "[", "t", "]"}]}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"gH2", "[", "t", "]"}], ",", 
         RowBox[{"pH1", "[", "t", "]"}]}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"gH2", "[", "t", "]"}], ",", 
         RowBox[{"pH2", "[", "t", "]"}]}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"gH2", "[", "t", "]"}], ",", 
         RowBox[{"pP1", "[", "t", "]"}]}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"gH2", "[", "t", "]"}], ",", 
         RowBox[{"pP2", "[", "t", "]"}]}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"gP1", "[", "t", "]"}], ",", 
         RowBox[{"pH1", "[", "t", "]"}]}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"gP1", "[", "t", "]"}], ",", 
         RowBox[{"pH2", "[", "t", "]"}]}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"gP1", "[", "t", "]"}], ",", 
         RowBox[{"pP1", "[", "t", "]"}]}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"gP1", "[", "t", "]"}], ",", 
         RowBox[{"pP2", "[", "t", "]"}]}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"gP2", "[", "t", "]"}], ",", 
         RowBox[{"pH1", "[", "t", "]"}]}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"gP2", "[", "t", "]"}], ",", 
         RowBox[{"pH2", "[", "t", "]"}]}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"gP2", "[", "t", "]"}], ",", 
         RowBox[{"pP1", "[", "t", "]"}]}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"gP2", "[", "t", "]"}], ",", 
         RowBox[{"pP2", "[", "t", "]"}]}], "]"}]}], "}"}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.814882754666709*^9, 3.814882894632928*^9}, {
  3.852048788718178*^9, 3.852048793850815*^9}}],

Cell["\<\
Substitute in Taylor series approximations of migration and mutation rates \
and allele frequencies.\
\>", "Text",
 CellChangeTimes->{{3.8148829289097853`*^9, 3.814882938999922*^9}, {
  3.854195277784896*^9, 3.854195288839168*^9}, {3.8541953316406727`*^9, 
  3.854195339391239*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"jMtrx2", "=", 
   RowBox[{"jMtrx", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Phi]", "\[Rule]", " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Phi]", "[", "j", "]"}], " ", 
          SuperscriptBox["\[Epsilon]", "j"]}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"\[Omega]", "\[Rule]", " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Omega]", "[", "j", "]"}], " ", 
          SuperscriptBox["\[Epsilon]", "j"]}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"\[Mu]", "\[Rule]", " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Mu]", "[", "j", "]"}], " ", 
          SuperscriptBox["\[Epsilon]", "j"]}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"\[Nu]", "\[Rule]", " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Nu]", "[", "j", "]"}], " ", 
          SuperscriptBox["\[Epsilon]", "j"]}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"pH1", "[", "t", "]"}], "\[Rule]", " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"pH1", "[", "j", "]"}], " ", 
          SuperscriptBox["\[Epsilon]", "j"]}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "2"}], "}"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"pH2", "[", "t", "]"}], "\[Rule]", " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"pH2", "[", "j", "]"}], " ", 
          SuperscriptBox["\[Epsilon]", "j"]}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "2"}], "}"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"pP1", "[", "t", "]"}], "\[Rule]", " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"pP1", "[", "j", "]"}], " ", 
          SuperscriptBox["\[Epsilon]", "j"]}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "2"}], "}"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"pP2", "[", "t", "]"}], "\[Rule]", " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"pP2", "[", "j", "]"}], " ", 
          SuperscriptBox["\[Epsilon]", "j"]}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "2"}], "}"}]}], "]"}]}]}], "}"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.814882897517665*^9, 3.814882914570139*^9}, {
  3.8148829499758377`*^9, 3.814882957263955*^9}, {3.85419525766501*^9, 
  3.854195257839898*^9}}],

Cell["\<\
Solve for the characteristic polynomial and substitution in Taylor series \
expansions for allele frequencies and mutation and migration rates:\
\>", "Text",
 CellChangeTimes->{{3.8148829289097853`*^9, 3.814882938999922*^9}, {
  3.85419534539293*^9, 3.85419534735214*^9}, {3.856866044069113*^9, 
  3.856866055076125*^9}, {3.856866220472386*^9, 3.85686623734413*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Epsilon]order", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CP", "=", 
   RowBox[{
    RowBox[{"CharacteristicPolynomial", "[", 
     RowBox[{"jMtrx", ",", "\[Lambda]"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Phi]", "\[Rule]", " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Phi]", "[", "j", "]"}], " ", 
          SuperscriptBox["\[Epsilon]", "j"]}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "\[Epsilon]order"}], "}"}]}], "]"}]}], 
      ",", 
      RowBox[{"\[Omega]", "\[Rule]", " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Omega]", "[", "j", "]"}], " ", 
          SuperscriptBox["\[Epsilon]", "j"]}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "\[Epsilon]order"}], "}"}]}], "]"}]}], 
      ",", 
      RowBox[{"\[Mu]", "\[Rule]", " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Mu]", "[", "j", "]"}], " ", 
          SuperscriptBox["\[Epsilon]", "j"]}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "\[Epsilon]order"}], "}"}]}], "]"}]}], 
      ",", 
      RowBox[{"\[Nu]", "\[Rule]", " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Nu]", "[", "j", "]"}], " ", 
          SuperscriptBox["\[Epsilon]", "j"]}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "\[Epsilon]order"}], "}"}]}], "]"}]}], 
      ",", 
      RowBox[{
       RowBox[{"pH1", "[", "t", "]"}], "\[Rule]", " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"pH1", "[", "j", "]"}], " ", 
          SuperscriptBox["\[Epsilon]", "j"]}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "\[Epsilon]order"}], "}"}]}], "]"}]}], 
      ",", 
      RowBox[{
       RowBox[{"pH2", "[", "t", "]"}], "\[Rule]", " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"pH2", "[", "j", "]"}], " ", 
          SuperscriptBox["\[Epsilon]", "j"]}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "\[Epsilon]order"}], "}"}]}], "]"}]}], 
      ",", 
      RowBox[{
       RowBox[{"pP1", "[", "t", "]"}], "\[Rule]", " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"pP1", "[", "j", "]"}], " ", 
          SuperscriptBox["\[Epsilon]", "j"]}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "\[Epsilon]order"}], "}"}]}], "]"}]}], 
      ",", 
      RowBox[{
       RowBox[{"pP2", "[", "t", "]"}], "\[Rule]", " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"pP2", "[", "j", "]"}], " ", 
          SuperscriptBox["\[Epsilon]", "j"]}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "\[Epsilon]order"}], "}"}]}], "]"}]}], 
      ",", 
      RowBox[{"\[Lambda]", "\[Rule]", " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Lambda]", "[", "j", "]"}], " ", 
          SuperscriptBox["\[Epsilon]", "j"]}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "\[Epsilon]order"}], "}"}]}], "]"}]}]}],
      "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.856866056886264*^9, 3.856866076597439*^9}, 
   3.8568662018503847`*^9, 3.856866240092619*^9, {3.856866398695492*^9, 
   3.85686643695245*^9}, {3.8568769107719297`*^9, 3.8568769121353817`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Lambda]0sol", "[", "e_", "]"}], ":=", 
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"CP", "/.", 
          RowBox[{"\[Epsilon]", "\[Rule]", " ", "0"}]}], "/.", 
         RowBox[{"FirstTerms", "[", 
          RowBox[{"[", "e", "]"}], "]"}]}], ")"}], "\[Equal]", "0"}], ",", 
      RowBox[{"\[Lambda]", "[", "0", "]"}]}], "]"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"X", ">", "0"}], ",", 
       RowBox[{"Y", ">", "0"}], ",", 
       RowBox[{"\[Delta]", ">", "0"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.856869669106312*^9, 3.8568696808615713`*^9}, 
   3.8568771085001802`*^9}],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"\[Lambda]1sol", ",", "\[Lambda]1factor"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Lambda]1factor", "[", 
    RowBox[{"e_", ",", "o_"}], "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Factor", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{"CP", ",", 
             RowBox[{"{", 
              RowBox[{"\[Epsilon]", ",", "o"}], "}"}]}], "]"}], "/.", 
           RowBox[{"\[Epsilon]", "\[Rule]", "0"}]}], "/.", 
          RowBox[{"FirstTerms", "[", 
           RowBox[{"[", "13", "]"}], "]"}]}], "/.", 
         RowBox[{"SecondTerm", "[", "13", "]"}]}], "/.", 
        RowBox[{"ThirdTerm", "[", "13", "]"}]}], "/.", 
       RowBox[{
        RowBox[{"\[Lambda]0sol", "[", "13", "]"}], "[", 
        RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";", 
  RowBox[{
   RowBox[{"\[Lambda]1sol", "[", 
    RowBox[{"e_", ",", "o_"}], "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Factor", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"D", "[", 
                 RowBox[{"CP", ",", 
                  RowBox[{"{", 
                   RowBox[{"\[Epsilon]", ",", "o"}], "}"}]}], "]"}], "/.", 
                RowBox[{"\[Epsilon]", "\[Rule]", "0"}]}], "/.", 
               RowBox[{"FirstTerms", "[", 
                RowBox[{"[", "e", "]"}], "]"}]}], "/.", 
              RowBox[{"SecondTerm", "[", "e", "]"}]}], "/.", 
             RowBox[{"ThirdTerm", "[", "e", "]"}]}], "/.", 
            RowBox[{
             RowBox[{"\[Lambda]0sol", "[", "e", "]"}], "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], "]"}], "\[Equal]", "0"}], ",", 
         
         RowBox[{"\[Lambda]", "[", "1", "]"}]}], "]"}], "]"}], "//", 
      "Simplify"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.85686969369265*^9, 3.856869719517626*^9}, {
  3.856869789697509*^9, 3.856869821487382*^9}, {3.856869883329204*^9, 
  3.856869884496159*^9}, {3.856869974458562*^9, 3.856869974818963*^9}, {
  3.856870307186014*^9, 3.856870340442513*^9}, {3.856870413628276*^9, 
  3.8568704234196587`*^9}, {3.856877535419536*^9, 3.85687754514325*^9}, {
  3.856877578951723*^9, 3.856877594621951*^9}}],

Cell[CellGroupData[{

Cell["Equilibria 1: all fixed for WT allele", "Subsubsection",
 CellChangeTimes->{{3.814548262772107*^9, 3.814548264542276*^9}, {
  3.814548870478204*^9, 3.814548872392661*^9}, {3.8147945370513563`*^9, 
  3.814794537734541*^9}, {3.814882246474237*^9, 3.814882257530211*^9}, {
  3.8148822950195837`*^9, 3.814882309711152*^9}, {3.8148826958653708`*^9, 
  3.814882695933755*^9}, {3.814883409561872*^9, 3.814883414453061*^9}, {
  3.814892253404953*^9, 3.8148922598178043`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FirstTerms", "[", 
  RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"SecondTerm", "[", "1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ThirdTerm", "[", "1", "]"}]}], "Input",
 CellChangeTimes->{{3.852048574734606*^9, 3.85204859103113*^9}, {
  3.856878993019721*^9, 3.85687899451278*^9}, {3.856881133458274*^9, 
  3.85688115728263*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"pH1", "[", "0", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pH2", "[", "0", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP1", "[", "0", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP2", "[", "0", "]"}], "\[Rule]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8520485912709627`*^9, 3.8541953551265593`*^9, 3.8543656426332703`*^9, 
   3.855073712962167*^9, 3.855141040718543*^9, 3.855152809641643*^9, 
   3.8553170983144627`*^9, 3.855317888271052*^9, 3.855336398491603*^9, 
   3.8553982037721367`*^9, 3.8553991538941803`*^9, 3.855403500591508*^9, 
   3.85540401979615*^9, 3.8558341064490433`*^9, 3.856014959420479*^9, 
   3.856864397416582*^9, 3.856873292654173*^9, 3.856876330828877*^9, 
   3.8568771787418528`*^9, 3.8568776058751297`*^9, 3.856878678263651*^9, 
   3.8568789952291594`*^9, 3.856879560843028*^9, {3.856881120428194*^9, 
   3.856881157706462*^9}, 3.856955179112064*^9, 3.8593907872339*^9, 
   3.859391021076745*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"pH1", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pH2", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP1", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP2", "[", "1", "]"}], "\[Rule]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8520485912709627`*^9, 3.8541953551265593`*^9, 3.8543656426332703`*^9, 
   3.855073712962167*^9, 3.855141040718543*^9, 3.855152809641643*^9, 
   3.8553170983144627`*^9, 3.855317888271052*^9, 3.855336398491603*^9, 
   3.8553982037721367`*^9, 3.8553991538941803`*^9, 3.855403500591508*^9, 
   3.85540401979615*^9, 3.8558341064490433`*^9, 3.856014959420479*^9, 
   3.856864397416582*^9, 3.856873292654173*^9, 3.856876330828877*^9, 
   3.8568771787418528`*^9, 3.8568776058751297`*^9, 3.856878678263651*^9, 
   3.8568789952291594`*^9, 3.856879560843028*^9, {3.856881120428194*^9, 
   3.856881157706462*^9}, 3.856955179112064*^9, 3.8593907872339*^9, 
   3.8593910210846024`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"pH1", "[", "2", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pH2", "[", "2", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP1", "[", "2", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP2", "[", "2", "]"}], "\[Rule]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8520485912709627`*^9, 3.8541953551265593`*^9, 3.8543656426332703`*^9, 
   3.855073712962167*^9, 3.855141040718543*^9, 3.855152809641643*^9, 
   3.8553170983144627`*^9, 3.855317888271052*^9, 3.855336398491603*^9, 
   3.8553982037721367`*^9, 3.8553991538941803`*^9, 3.855403500591508*^9, 
   3.85540401979615*^9, 3.8558341064490433`*^9, 3.856014959420479*^9, 
   3.856864397416582*^9, 3.856873292654173*^9, 3.856876330828877*^9, 
   3.8568771787418528`*^9, 3.8568776058751297`*^9, 3.856878678263651*^9, 
   3.8568789952291594`*^9, 3.856879560843028*^9, {3.856881120428194*^9, 
   3.856881157706462*^9}, 3.856955179112064*^9, 3.8593907872339*^9, 
   3.859391021090849*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Lambda]0sol", "[", "1", "]"}], "//", 
  "DeleteDuplicates"}]], "Input",
 CellChangeTimes->{{3.856866259068791*^9, 3.856866281562333*^9}, {
   3.856866364133321*^9, 3.8568663810304937`*^9}, {3.8568664648956203`*^9, 
   3.856866561344843*^9}, 3.8568689053803577`*^9, {3.856868935543618*^9, 
   3.856868939013833*^9}, {3.856869565619141*^9, 3.8568695659293623`*^9}, 
   3.8568697361908092`*^9, {3.8568763624947653`*^9, 3.856876385534523*^9}, {
   3.8568771970593357`*^9, 3.856877198635976*^9}, {3.85687838168935*^9, 
   3.85687838947114*^9}, 3.856879016427052*^9, {3.856881169087779*^9, 
   3.856881172837841*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Lambda]", "[", "0", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"X", "-", "Y"}], ")"}], " ", "\[Alpha]"}], 
      RowBox[{
       RowBox[{"X", " ", "\[Alpha]"}], "+", "\[Delta]"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Lambda]", "[", "0", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "X"}], "+", "Y"}], ")"}], " ", "\[Alpha]"}], 
      RowBox[{
       RowBox[{"X", " ", "\[Alpha]"}], "+", "\[Delta]"}]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.856866478306952*^9, {3.856866524241255*^9, 3.856866562236409*^9}, {
   3.8568689311347637`*^9, 3.8568689398496428`*^9}, 3.856869566298594*^9, 
   3.856869647223362*^9, {3.8568697295618353`*^9, 3.856869742676223*^9}, 
   3.8568698412892647`*^9, 3.856870317725629*^9, 3.856873295392517*^9, 
   3.856876332981892*^9, {3.856876363461761*^9, 3.856876385806752*^9}, 
   3.856876607034156*^9, {3.856877180639523*^9, 3.8568771990809183`*^9}, 
   3.856877608318087*^9, 3.856878389862772*^9, 3.8568786799606657`*^9, 
   3.8568790174107122`*^9, 3.8568795619870462`*^9, {3.856881170277975*^9, 
   3.856881174124055*^9}, 3.85695518097847*^9, 3.859390790339397*^9, 
   3.859391022959482*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]0sol", "[", "1", "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]0sol", "[", "1", "]"}], "[", 
  RowBox[{"[", "3", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.856869047961071*^9, 3.8568690507439117`*^9}, {
  3.8568695617231913`*^9, 3.8568695620021152`*^9}, {3.856878401415369*^9, 
  3.856878407597416*^9}, {3.856879024233788*^9, 3.856879028417376*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Lambda]", "[", "0", "]"}], "\[Rule]", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"X", "-", "Y"}], ")"}], " ", "\[Alpha]"}], 
    RowBox[{
     RowBox[{"X", " ", "\[Alpha]"}], "+", "\[Delta]"}]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.856869051087487*^9, 3.856869567461248*^9, 3.8568696488974247`*^9, {
   3.856869730772326*^9, 3.856869748592475*^9}, 3.85686984256352*^9, 
   3.856873298357855*^9, 3.8568763352370253`*^9, 3.8568766085092173`*^9, {
   3.856877181672586*^9, 3.856877202208617*^9}, {3.856878403518093*^9, 
   3.856878408065185*^9}, 3.856878681181135*^9, 3.8568790297586184`*^9, 
   3.8568795631690197`*^9, 3.856881176005143*^9, 3.856955183082457*^9, 
   3.859390795776126*^9, 3.859391029202058*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Lambda]", "[", "0", "]"}], "\[Rule]", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "X"}], "+", "Y"}], ")"}], " ", "\[Alpha]"}], 
    RowBox[{
     RowBox[{"X", " ", "\[Alpha]"}], "+", "\[Delta]"}]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.856869051087487*^9, 3.856869567461248*^9, 3.8568696488974247`*^9, {
   3.856869730772326*^9, 3.856869748592475*^9}, 3.85686984256352*^9, 
   3.856873298357855*^9, 3.8568763352370253`*^9, 3.8568766085092173`*^9, {
   3.856877181672586*^9, 3.856877202208617*^9}, {3.856878403518093*^9, 
   3.856878408065185*^9}, 3.856878681181135*^9, 3.8568790297586184`*^9, 
   3.8568795631690197`*^9, 3.856881176005143*^9, 3.856955183082457*^9, 
   3.859390795776126*^9, 3.859391029280195*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[Lambda]1factor", "[", 
  RowBox[{"1", ",", "1"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[Lambda]1factor", "[", 
  RowBox[{"1", ",", "2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.856869542089575*^9, 3.8568695806084223`*^9}, {
   3.85686986224819*^9, 3.856869864119783*^9}, {3.856877619361167*^9, 
   3.856877633686575*^9}, {3.856878431903215*^9, 3.856878435336905*^9}, {
   3.856879037856947*^9, 3.85687903878587*^9}, 3.859390807111456*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"4", " ", "\[ImaginaryI]", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"X", "-", "Y"}], ")"}], "3"], " ", 
      SuperscriptBox["\[Alpha]", "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"X", " ", "\[Alpha]"}], "+", 
        RowBox[{"Y", " ", "\[Alpha]"}], "+", 
        RowBox[{"2", " ", "\[Delta]"}], "-", 
        SqrtBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"X", " ", "\[Alpha]"}], "+", 
            RowBox[{"Y", " ", "\[Alpha]"}], "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"X", " ", "\[Alpha]"}], "+", 
        RowBox[{"Y", " ", "\[Alpha]"}], "+", 
        RowBox[{"2", " ", "\[Delta]"}], "+", 
        SqrtBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"X", " ", "\[Alpha]"}], "+", 
            RowBox[{"Y", " ", "\[Alpha]"}], "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"X", " ", "\[Alpha]", " ", 
         RowBox[{"\[Lambda]", "[", "1", "]"}]}], "+", 
        RowBox[{"Y", " ", "\[Alpha]", " ", 
         RowBox[{"\[Lambda]", "[", "1", "]"}]}], "+", 
        RowBox[{"2", " ", "\[Delta]", " ", 
         RowBox[{"\[Lambda]", "[", "1", "]"}]}], "+", 
        RowBox[{"\[Phi]", "[", "1", "]"}], "+", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"X", " ", "\[Alpha]"}], "+", 
         RowBox[{"Y", " ", "\[Alpha]"}], "+", 
         RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "3"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], ")"}], 
       RowBox[{"3", "/", "2"}]]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"4", " ", "\[ImaginaryI]", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"X", "-", "Y"}], ")"}], "3"], " ", 
      SuperscriptBox["\[Alpha]", "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"X", " ", "\[Alpha]"}], "+", 
        RowBox[{"Y", " ", "\[Alpha]"}], "+", 
        RowBox[{"2", " ", "\[Delta]"}], "-", 
        SqrtBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"X", " ", "\[Alpha]"}], "+", 
            RowBox[{"Y", " ", "\[Alpha]"}], "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"X", " ", "\[Alpha]"}], "+", 
        RowBox[{"Y", " ", "\[Alpha]"}], "+", 
        RowBox[{"2", " ", "\[Delta]"}], "+", 
        SqrtBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"X", " ", "\[Alpha]"}], "+", 
            RowBox[{"Y", " ", "\[Alpha]"}], "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"X", " ", "\[Alpha]", " ", 
         RowBox[{"\[Lambda]", "[", "1", "]"}]}], "+", 
        RowBox[{"Y", " ", "\[Alpha]", " ", 
         RowBox[{"\[Lambda]", "[", "1", "]"}]}], "+", 
        RowBox[{"2", " ", "\[Delta]", " ", 
         RowBox[{"\[Lambda]", "[", "1", "]"}]}], "+", 
        RowBox[{"\[Phi]", "[", "1", "]"}], "+", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"X", " ", "\[Alpha]"}], "+", 
         RowBox[{"Y", " ", "\[Alpha]"}], "+", 
         RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "3"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], ")"}], 
       RowBox[{"3", "/", "2"}]]}], ")"}]}], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"4", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"X", "-", "Y"}], ")"}], "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"X", " ", "\[Alpha]"}], "+", 
          RowBox[{"Y", " ", "\[Alpha]"}], "+", 
          RowBox[{"2", " ", "\[Delta]"}], "-", 
          SqrtBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"X", " ", "\[Alpha]"}], "+", 
              RowBox[{"Y", " ", "\[Alpha]"}], "+", 
              RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"X", " ", "\[Alpha]"}], "+", 
          RowBox[{"Y", " ", "\[Alpha]"}], "+", 
          RowBox[{"2", " ", "\[Delta]"}], "+", 
          SqrtBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"X", " ", "\[Alpha]"}], "+", 
              RowBox[{"Y", " ", "\[Alpha]"}], "+", 
              RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"X", " ", "\[Alpha]", " ", 
           RowBox[{"\[Lambda]", "[", "1", "]"}]}], "+", 
          RowBox[{"Y", " ", "\[Alpha]", " ", 
           RowBox[{"\[Lambda]", "[", "1", "]"}]}], "+", 
          RowBox[{"2", " ", "\[Delta]", " ", 
           RowBox[{"\[Lambda]", "[", "1", "]"}]}], "+", 
          RowBox[{"\[Phi]", "[", "1", "]"}], "+", 
          RowBox[{"\[Omega]", "[", "1", "]"}]}], ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "3"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"X", " ", "\[Alpha]"}], "+", 
             RowBox[{"Y", " ", "\[Alpha]"}], "+", 
             RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], ")"}], 
         RowBox[{"3", "/", "2"}]]}], ")"}]}], ")"}]}], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"4", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"X", "-", "Y"}], ")"}], "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"X", " ", "\[Alpha]"}], "+", 
          RowBox[{"Y", " ", "\[Alpha]"}], "+", 
          RowBox[{"2", " ", "\[Delta]"}], "-", 
          SqrtBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"X", " ", "\[Alpha]"}], "+", 
              RowBox[{"Y", " ", "\[Alpha]"}], "+", 
              RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"X", " ", "\[Alpha]"}], "+", 
          RowBox[{"Y", " ", "\[Alpha]"}], "+", 
          RowBox[{"2", " ", "\[Delta]"}], "+", 
          SqrtBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"X", " ", "\[Alpha]"}], "+", 
              RowBox[{"Y", " ", "\[Alpha]"}], "+", 
              RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"X", " ", "\[Alpha]", " ", 
           RowBox[{"\[Lambda]", "[", "1", "]"}]}], "+", 
          RowBox[{"Y", " ", "\[Alpha]", " ", 
           RowBox[{"\[Lambda]", "[", "1", "]"}]}], "+", 
          RowBox[{"2", " ", "\[Delta]", " ", 
           RowBox[{"\[Lambda]", "[", "1", "]"}]}], "+", 
          RowBox[{"\[Phi]", "[", "1", "]"}], "+", 
          RowBox[{"\[Omega]", "[", "1", "]"}]}], ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "3"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"X", " ", "\[Alpha]"}], "+", 
             RowBox[{"Y", " ", "\[Alpha]"}], "+", 
             RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], ")"}], 
         RowBox[{"3", "/", "2"}]]}], ")"}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8568698687045813`*^9, 3.8568699815821047`*^9, {3.856870322553742*^9, 
   3.856870346013722*^9}, 3.856870428652014*^9, 3.856873302369608*^9, 
   3.856876339356758*^9, 3.8568766131278753`*^9, 3.856876826092842*^9, 
   3.856877208065948*^9, {3.85687762636372*^9, 3.856877636994108*^9}, 
   3.856878444033648*^9, 3.8568786854193087`*^9, 3.8568790415776873`*^9, 
   3.8568795668589687`*^9, 3.856881182819916*^9, 3.856955186723501*^9, 
   3.859390801452611*^9, 3.8593910361784143`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"X", " ", "\[Alpha]"}], "+", 
        RowBox[{"Y", " ", "\[Alpha]"}], "+", 
        RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "6"]], 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"X", "-", "Y"}], ")"}], "2"], " ", 
     SuperscriptBox["\[Alpha]", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", 
        SuperscriptBox["X", "4"], " ", 
        SuperscriptBox["\[Alpha]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"12", " ", 
        SuperscriptBox["X", "3"], " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"18", " ", 
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"12", " ", "X", " ", 
        SuperscriptBox["Y", "3"], " ", 
        SuperscriptBox["\[Alpha]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"3", " ", 
        SuperscriptBox["Y", "4"], " ", 
        SuperscriptBox["\[Alpha]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"24", " ", 
        SuperscriptBox["X", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"72", " ", 
        SuperscriptBox["X", "2"], " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"72", " ", "X", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"24", " ", 
        SuperscriptBox["Y", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"72", " ", 
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"144", " ", "X", " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"72", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"96", " ", "X", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "3"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"96", " ", "Y", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "3"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"48", " ", 
        SuperscriptBox["\[Delta]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{"2", " ", "X", " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{"4", " ", "X", " ", "\[Alpha]", " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{"4", " ", "Y", " ", "\[Alpha]", " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["X", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"18", " ", 
        SuperscriptBox["X", "2"], " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"18", " ", "X", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["Y", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"36", " ", 
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "X", " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"36", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "X", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "Y", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"48", " ", 
        SuperscriptBox["\[Delta]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "+", 
       RowBox[{"2", " ", "X", " ", "\[Alpha]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "+", 
       RowBox[{"2", " ", "Y", " ", "\[Alpha]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "+", 
       RowBox[{"4", " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["X", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"18", " ", 
        SuperscriptBox["X", "2"], " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"18", " ", "X", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["Y", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"36", " ", 
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "X", " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"36", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "X", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "Y", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"48", " ", 
        SuperscriptBox["\[Delta]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "+", 
       RowBox[{"2", " ", "X", " ", "\[Alpha]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "+", 
       RowBox[{"2", " ", "Y", " ", "\[Alpha]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "+", 
       RowBox[{"4", " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"16", " ", "X", " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"32", " ", "X", " ", "\[Alpha]", " ", "\[Delta]", " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"32", " ", "Y", " ", "\[Alpha]", " ", "\[Delta]", " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"32", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"X", " ", "\[Alpha]"}], "+", 
        RowBox[{"Y", " ", "\[Alpha]"}], "+", 
        RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "6"]], 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"X", "-", "Y"}], ")"}], "2"], " ", 
     SuperscriptBox["\[Alpha]", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", 
        SuperscriptBox["X", "4"], " ", 
        SuperscriptBox["\[Alpha]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"12", " ", 
        SuperscriptBox["X", "3"], " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"18", " ", 
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"12", " ", "X", " ", 
        SuperscriptBox["Y", "3"], " ", 
        SuperscriptBox["\[Alpha]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"3", " ", 
        SuperscriptBox["Y", "4"], " ", 
        SuperscriptBox["\[Alpha]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"24", " ", 
        SuperscriptBox["X", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"72", " ", 
        SuperscriptBox["X", "2"], " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"72", " ", "X", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"24", " ", 
        SuperscriptBox["Y", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"72", " ", 
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"144", " ", "X", " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"72", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"96", " ", "X", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "3"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"96", " ", "Y", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "3"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"48", " ", 
        SuperscriptBox["\[Delta]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{"2", " ", "X", " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{"4", " ", "X", " ", "\[Alpha]", " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{"4", " ", "Y", " ", "\[Alpha]", " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["X", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"18", " ", 
        SuperscriptBox["X", "2"], " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"18", " ", "X", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["Y", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"36", " ", 
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "X", " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"36", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "X", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "Y", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"48", " ", 
        SuperscriptBox["\[Delta]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "+", 
       RowBox[{"2", " ", "X", " ", "\[Alpha]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "+", 
       RowBox[{"2", " ", "Y", " ", "\[Alpha]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "+", 
       RowBox[{"4", " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["X", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"18", " ", 
        SuperscriptBox["X", "2"], " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"18", " ", "X", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["Y", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"36", " ", 
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "X", " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"36", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "X", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "Y", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"48", " ", 
        SuperscriptBox["\[Delta]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "+", 
       RowBox[{"2", " ", "X", " ", "\[Alpha]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "+", 
       RowBox[{"2", " ", "Y", " ", "\[Alpha]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "+", 
       RowBox[{"4", " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"16", " ", "X", " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"32", " ", "X", " ", "\[Alpha]", " ", "\[Delta]", " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"32", " ", "Y", " ", "\[Alpha]", " ", "\[Delta]", " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"32", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"X", " ", "\[Alpha]"}], "+", 
        RowBox[{"Y", " ", "\[Alpha]"}], "+", 
        RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "6"]], 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"X", "-", "Y"}], ")"}], "2"], " ", 
     SuperscriptBox["\[Alpha]", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", 
        SuperscriptBox["X", "4"], " ", 
        SuperscriptBox["\[Alpha]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"12", " ", 
        SuperscriptBox["X", "3"], " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"18", " ", 
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"12", " ", "X", " ", 
        SuperscriptBox["Y", "3"], " ", 
        SuperscriptBox["\[Alpha]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"3", " ", 
        SuperscriptBox["Y", "4"], " ", 
        SuperscriptBox["\[Alpha]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"24", " ", 
        SuperscriptBox["X", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"72", " ", 
        SuperscriptBox["X", "2"], " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"72", " ", "X", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"24", " ", 
        SuperscriptBox["Y", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"72", " ", 
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"144", " ", "X", " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"72", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"96", " ", "X", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "3"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"96", " ", "Y", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "3"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"48", " ", 
        SuperscriptBox["\[Delta]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{"2", " ", "X", " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{"4", " ", "X", " ", "\[Alpha]", " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{"4", " ", "Y", " ", "\[Alpha]", " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["X", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"18", " ", 
        SuperscriptBox["X", "2"], " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"18", " ", "X", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["Y", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"36", " ", 
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "X", " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"36", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "X", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "Y", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"48", " ", 
        SuperscriptBox["\[Delta]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "+", 
       RowBox[{"2", " ", "X", " ", "\[Alpha]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "+", 
       RowBox[{"2", " ", "Y", " ", "\[Alpha]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "+", 
       RowBox[{"4", " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["X", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"18", " ", 
        SuperscriptBox["X", "2"], " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"18", " ", "X", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["Y", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"36", " ", 
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "X", " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"36", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "X", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "Y", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"48", " ", 
        SuperscriptBox["\[Delta]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "+", 
       RowBox[{"2", " ", "X", " ", "\[Alpha]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "+", 
       RowBox[{"2", " ", "Y", " ", "\[Alpha]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "+", 
       RowBox[{"4", " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"16", " ", "X", " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"32", " ", "X", " ", "\[Alpha]", " ", "\[Delta]", " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"32", " ", "Y", " ", "\[Alpha]", " ", "\[Delta]", " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"32", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"X", " ", "\[Alpha]"}], "+", 
        RowBox[{"Y", " ", "\[Alpha]"}], "+", 
        RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "6"]], 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"X", "-", "Y"}], ")"}], "2"], " ", 
     SuperscriptBox["\[Alpha]", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", 
        SuperscriptBox["X", "4"], " ", 
        SuperscriptBox["\[Alpha]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"12", " ", 
        SuperscriptBox["X", "3"], " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"18", " ", 
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"12", " ", "X", " ", 
        SuperscriptBox["Y", "3"], " ", 
        SuperscriptBox["\[Alpha]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"3", " ", 
        SuperscriptBox["Y", "4"], " ", 
        SuperscriptBox["\[Alpha]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"24", " ", 
        SuperscriptBox["X", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"72", " ", 
        SuperscriptBox["X", "2"], " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"72", " ", "X", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"24", " ", 
        SuperscriptBox["Y", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"72", " ", 
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"144", " ", "X", " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"72", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"96", " ", "X", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "3"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"96", " ", "Y", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "3"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"48", " ", 
        SuperscriptBox["\[Delta]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{"2", " ", "X", " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{"4", " ", "X", " ", "\[Alpha]", " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{"4", " ", "Y", " ", "\[Alpha]", " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["X", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"18", " ", 
        SuperscriptBox["X", "2"], " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"18", " ", "X", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["Y", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"36", " ", 
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "X", " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"36", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "X", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "Y", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"48", " ", 
        SuperscriptBox["\[Delta]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "+", 
       RowBox[{"2", " ", "X", " ", "\[Alpha]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "+", 
       RowBox[{"2", " ", "Y", " ", "\[Alpha]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "+", 
       RowBox[{"4", " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["X", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"18", " ", 
        SuperscriptBox["X", "2"], " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"18", " ", "X", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["Y", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"36", " ", 
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "X", " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"36", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "X", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "Y", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"48", " ", 
        SuperscriptBox["\[Delta]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "+", 
       RowBox[{"2", " ", "X", " ", "\[Alpha]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "+", 
       RowBox[{"2", " ", "Y", " ", "\[Alpha]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "+", 
       RowBox[{"4", " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"16", " ", "X", " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"32", " ", "X", " ", "\[Alpha]", " ", "\[Delta]", " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"32", " ", "Y", " ", "\[Alpha]", " ", "\[Delta]", " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"32", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}]}], ")"}]}]}]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.8568698687045813`*^9, 3.8568699815821047`*^9, {3.856870322553742*^9, 
   3.856870346013722*^9}, 3.856870428652014*^9, 3.856873302369608*^9, 
   3.856876339356758*^9, 3.8568766131278753`*^9, 3.856876826092842*^9, 
   3.856877208065948*^9, {3.85687762636372*^9, 3.856877636994108*^9}, 
   3.856878444033648*^9, 3.8568786854193087`*^9, 3.8568790415776873`*^9, 
   3.8568795668589687`*^9, 3.856881182819916*^9, 3.856955186723501*^9, 
   3.859390801452611*^9, 3.859391044964039*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Lambda]1sol", "[", 
      RowBox[{"1", ",", "2"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "/.", 
    RowBox[{
     RowBox[{"\[Mu]", "[", "1", "]"}], "\[Rule]", " ", "0"}]}], "/.", 
   RowBox[{
    RowBox[{"\[Nu]", "[", "1", "]"}], "\[Rule]", " ", "0"}]}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Lambda]1sol", "[", 
      RowBox[{"1", ",", "2"}], "]"}], "[", 
     RowBox[{"[", "3", "]"}], "]"}], "/.", 
    RowBox[{
     RowBox[{"\[Mu]", "[", "1", "]"}], "\[Rule]", " ", "0"}]}], "/.", 
   RowBox[{
    RowBox[{"\[Nu]", "[", "1", "]"}], "\[Rule]", " ", "0"}]}], "//", 
  "Simplify"}]}], "Input",
 CellChangeTimes->{{3.856870207354351*^9, 3.856870210310507*^9}, {
  3.8568768728555183`*^9, 3.856876873365862*^9}, {3.856877655929981*^9, 
  3.8568776630884743`*^9}, {3.8568782154057198`*^9, 3.85687821593892*^9}, {
  3.856878446809044*^9, 3.856878470366826*^9}, {3.8568794789482594`*^9, 
  3.856879508156332*^9}, {3.856955208459217*^9, 3.85695521066308*^9}, {
  3.856955270921509*^9, 3.856955284582841*^9}, {3.859390827001173*^9, 
  3.859390839615613*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Lambda]", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"\[Phi]", "[", "1", "]"}]}], 
      RowBox[{
       RowBox[{"X", " ", "\[Alpha]"}], "+", "\[Delta]"}]]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.856870230527442*^9, 3.856870405285686*^9, 3.856870473848785*^9, {
   3.856873442545711*^9, 3.856873458341145*^9}, 3.856873509290749*^9, 
   3.85687663206805*^9, 3.856876886309188*^9, 3.856877673983567*^9, 
   3.8568782276641493`*^9, {3.85687845514048*^9, 3.8568784810412807`*^9}, 
   3.8568787100821657`*^9, 3.856879064621977*^9, {3.856879493919541*^9, 
   3.8568795169620323`*^9}, 3.8568795862880993`*^9, 3.856881209003346*^9, 
   3.856955206594903*^9, 3.85695529320863*^9, 3.8593909107819557`*^9, 
   3.859391097082843*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Lambda]", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"\[Omega]", "[", "1", "]"}]}], 
      RowBox[{
       RowBox[{"X", " ", "\[Alpha]"}], "+", "\[Delta]"}]]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.856870230527442*^9, 3.856870405285686*^9, 3.856870473848785*^9, {
   3.856873442545711*^9, 3.856873458341145*^9}, 3.856873509290749*^9, 
   3.85687663206805*^9, 3.856876886309188*^9, 3.856877673983567*^9, 
   3.8568782276641493`*^9, {3.85687845514048*^9, 3.8568784810412807`*^9}, 
   3.8568787100821657`*^9, 3.856879064621977*^9, {3.856879493919541*^9, 
   3.8568795169620323`*^9}, 3.8568795862880993`*^9, 3.856881209003346*^9, 
   3.856955206594903*^9, 3.85695529320863*^9, 3.8593909107819557`*^9, 
   3.859391104640348*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Equilibria 4: hosts fixed for mutant allele, parasites fixed for WT allele\
\>", "Subsubsection",
 CellChangeTimes->{{3.814548262772107*^9, 3.814548264542276*^9}, {
  3.814548870478204*^9, 3.814548872392661*^9}, {3.8147945370513563`*^9, 
  3.814794537734541*^9}, {3.814882246474237*^9, 3.814882257530211*^9}, {
  3.8148822950195837`*^9, 3.814882309711152*^9}, {3.8148826958653708`*^9, 
  3.814882695933755*^9}, {3.814883409561872*^9, 3.814883414453061*^9}, {
  3.814892253404953*^9, 3.8148922598178043`*^9}, {3.8552313343246393`*^9, 
  3.855231343236162*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FirstTerms", "[", 
  RowBox[{"[", "4", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"SecondTerm", "[", "4", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ThirdTerm", "[", "4", "]"}]}], "Input",
 CellChangeTimes->{{3.852048574734606*^9, 3.85204859103113*^9}, {
  3.856878993019721*^9, 3.85687899451278*^9}, {3.85687943228549*^9, 
  3.8568794347376547`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"pH1", "[", "0", "]"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"pH2", "[", "0", "]"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"pP1", "[", "0", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP2", "[", "0", "]"}], "\[Rule]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8520485912709627`*^9, 3.8541953551265593`*^9, 
  3.8543656426332703`*^9, 3.855073712962167*^9, 3.855141040718543*^9, 
  3.855152809641643*^9, 3.8553170983144627`*^9, 3.855317888271052*^9, 
  3.855336398491603*^9, 3.8553982037721367`*^9, 3.8553991538941803`*^9, 
  3.855403500591508*^9, 3.85540401979615*^9, 3.8558341064490433`*^9, 
  3.856014959420479*^9, 3.856864397416582*^9, 3.856873292654173*^9, 
  3.856876330828877*^9, 3.8568771787418528`*^9, 3.8568776058751297`*^9, 
  3.856878678263651*^9, 3.8568789952291594`*^9, 3.85687943576994*^9, 
  3.856879831918035*^9, 3.8593913278081503`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"pH1", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pH2", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP1", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP2", "[", "1", "]"}], "\[Rule]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8520485912709627`*^9, 3.8541953551265593`*^9, 
  3.8543656426332703`*^9, 3.855073712962167*^9, 3.855141040718543*^9, 
  3.855152809641643*^9, 3.8553170983144627`*^9, 3.855317888271052*^9, 
  3.855336398491603*^9, 3.8553982037721367`*^9, 3.8553991538941803`*^9, 
  3.855403500591508*^9, 3.85540401979615*^9, 3.8558341064490433`*^9, 
  3.856014959420479*^9, 3.856864397416582*^9, 3.856873292654173*^9, 
  3.856876330828877*^9, 3.8568771787418528`*^9, 3.8568776058751297`*^9, 
  3.856878678263651*^9, 3.8568789952291594`*^9, 3.85687943576994*^9, 
  3.856879831918035*^9, 3.859391327818183*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"pH1", "[", "2", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pH2", "[", "2", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP1", "[", "2", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP2", "[", "2", "]"}], "\[Rule]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8520485912709627`*^9, 3.8541953551265593`*^9, 
  3.8543656426332703`*^9, 3.855073712962167*^9, 3.855141040718543*^9, 
  3.855152809641643*^9, 3.8553170983144627`*^9, 3.855317888271052*^9, 
  3.855336398491603*^9, 3.8553982037721367`*^9, 3.8553991538941803`*^9, 
  3.855403500591508*^9, 3.85540401979615*^9, 3.8558341064490433`*^9, 
  3.856014959420479*^9, 3.856864397416582*^9, 3.856873292654173*^9, 
  3.856876330828877*^9, 3.8568771787418528`*^9, 3.8568776058751297`*^9, 
  3.856878678263651*^9, 3.8568789952291594`*^9, 3.85687943576994*^9, 
  3.856879831918035*^9, 3.859391327824995*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Lambda]0sol", "[", "4", "]"}], "//", 
  "DeleteDuplicates"}]], "Input",
 CellChangeTimes->{{3.856866259068791*^9, 3.856866281562333*^9}, {
   3.856866364133321*^9, 3.8568663810304937`*^9}, {3.8568664648956203`*^9, 
   3.856866561344843*^9}, 3.8568689053803577`*^9, {3.856868935543618*^9, 
   3.856868939013833*^9}, {3.856869565619141*^9, 3.8568695659293623`*^9}, 
   3.8568697361908092`*^9, {3.8568763624947653`*^9, 3.856876385534523*^9}, {
   3.8568771970593357`*^9, 3.856877198635976*^9}, {3.85687838168935*^9, 
   3.85687838947114*^9}, 3.856879016427052*^9, {3.856879444281746*^9, 
   3.8568794443773193`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Lambda]", "[", "0", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"X", "-", "Y"}], ")"}], " ", "\[Alpha]"}], 
      RowBox[{
       RowBox[{"Y", " ", "\[Alpha]"}], "+", "\[Delta]"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Lambda]", "[", "0", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "X"}], "+", "Y"}], ")"}], " ", "\[Alpha]"}], 
      RowBox[{
       RowBox[{"Y", " ", "\[Alpha]"}], "+", "\[Delta]"}]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.856866478306952*^9, {3.856866524241255*^9, 3.856866562236409*^9}, {
   3.8568689311347637`*^9, 3.8568689398496428`*^9}, 3.856869566298594*^9, 
   3.856869647223362*^9, {3.8568697295618353`*^9, 3.856869742676223*^9}, 
   3.8568698412892647`*^9, 3.856870317725629*^9, 3.856873295392517*^9, 
   3.856876332981892*^9, {3.856876363461761*^9, 3.856876385806752*^9}, 
   3.856876607034156*^9, {3.856877180639523*^9, 3.8568771990809183`*^9}, 
   3.856877608318087*^9, 3.856878389862772*^9, 3.8568786799606657`*^9, 
   3.8568790174107122`*^9, 3.856879444842319*^9, 3.856879833243137*^9, 
   3.859391329277103*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]0sol", "[", "4", "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]0sol", "[", "4", "]"}], "[", 
  RowBox[{"[", "3", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.856869047961071*^9, 3.8568690507439117`*^9}, {
  3.8568695617231913`*^9, 3.8568695620021152`*^9}, {3.856878401415369*^9, 
  3.856878407597416*^9}, {3.856879024233788*^9, 3.856879028417376*^9}, {
  3.8568794488503017`*^9, 3.85687944972081*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Lambda]", "[", "0", "]"}], "\[Rule]", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"X", "-", "Y"}], ")"}], " ", "\[Alpha]"}], 
    RowBox[{
     RowBox[{"Y", " ", "\[Alpha]"}], "+", "\[Delta]"}]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.856869051087487*^9, 3.856869567461248*^9, 3.8568696488974247`*^9, {
   3.856869730772326*^9, 3.856869748592475*^9}, 3.85686984256352*^9, 
   3.856873298357855*^9, 3.8568763352370253`*^9, 3.8568766085092173`*^9, {
   3.856877181672586*^9, 3.856877202208617*^9}, {3.856878403518093*^9, 
   3.856878408065185*^9}, 3.856878681181135*^9, 3.8568790297586184`*^9, 
   3.8568794503202543`*^9, 3.856879834330181*^9, 3.8593913308195353`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Lambda]", "[", "0", "]"}], "\[Rule]", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "X"}], "+", "Y"}], ")"}], " ", "\[Alpha]"}], 
    RowBox[{
     RowBox[{"Y", " ", "\[Alpha]"}], "+", "\[Delta]"}]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.856869051087487*^9, 3.856869567461248*^9, 3.8568696488974247`*^9, {
   3.856869730772326*^9, 3.856869748592475*^9}, 3.85686984256352*^9, 
   3.856873298357855*^9, 3.8568763352370253`*^9, 3.8568766085092173`*^9, {
   3.856877181672586*^9, 3.856877202208617*^9}, {3.856878403518093*^9, 
   3.856878408065185*^9}, 3.856878681181135*^9, 3.8568790297586184`*^9, 
   3.8568794503202543`*^9, 3.856879834330181*^9, 3.859391330900844*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]1factor", "[", 
   RowBox[{"4", ",", "1"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]1factor", "[", 
   RowBox[{"4", ",", "2"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.856869542089575*^9, 3.8568695806084223`*^9}, {
  3.85686986224819*^9, 3.856869864119783*^9}, {3.856877619361167*^9, 
  3.856877633686575*^9}, {3.856878431903215*^9, 3.856878435336905*^9}, {
  3.856879037856947*^9, 3.85687903878587*^9}, {3.8568794538655033`*^9, 
  3.85687945469799*^9}, {3.859391348789256*^9, 3.859391349844159*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]1sol", "[", 
   RowBox[{"4", ",", "2"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]1sol", "[", 
   RowBox[{"4", ",", "2"}], "]"}], "[", 
  RowBox[{"[", "3", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.856870207354351*^9, 3.856870210310507*^9}, {
  3.8568768728555183`*^9, 3.856876873365862*^9}, {3.856877655929981*^9, 
  3.8568776630884743`*^9}, {3.8568782154057198`*^9, 3.85687821593892*^9}, {
  3.856878446809044*^9, 3.856878470366826*^9}, {3.8568794664188766`*^9, 
  3.856879469330019*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Lambda]", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"\[Omega]", "[", "1", "]"}]}], 
      RowBox[{
       RowBox[{"Y", " ", "\[Alpha]"}], "+", "\[Delta]"}]]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.856870230527442*^9, 3.856870405285686*^9, 3.856870473848785*^9, {
   3.856873442545711*^9, 3.856873458341145*^9}, 3.856873509290749*^9, 
   3.85687663206805*^9, 3.856876886309188*^9, 3.856877673983567*^9, 
   3.8568782276641493`*^9, {3.85687845514048*^9, 3.8568784810412807`*^9}, 
   3.8568787100821657`*^9, 3.856879064621977*^9, 3.856879858687819*^9, {
   3.859391351665102*^9, 3.859391379186481*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Lambda]", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"\[Phi]", "[", "1", "]"}]}], 
      RowBox[{
       RowBox[{"Y", " ", "\[Alpha]"}], "+", "\[Delta]"}]]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.856870230527442*^9, 3.856870405285686*^9, 3.856870473848785*^9, {
   3.856873442545711*^9, 3.856873458341145*^9}, 3.856873509290749*^9, 
   3.85687663206805*^9, 3.856876886309188*^9, 3.856877673983567*^9, 
   3.8568782276641493`*^9, {3.85687845514048*^9, 3.8568784810412807`*^9}, 
   3.8568787100821657`*^9, 3.856879064621977*^9, 3.856879858687819*^9, 
   3.859391351665102*^9, 3.859391387189527*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Equilibria 13: all polymorphic", "Subsubsection",
 CellChangeTimes->{{3.814548262772107*^9, 3.814548264542276*^9}, {
   3.814548870478204*^9, 3.814548872392661*^9}, {3.8147945370513563`*^9, 
   3.814794537734541*^9}, {3.814882246474237*^9, 3.814882257530211*^9}, {
   3.814882311914341*^9, 3.814882311982937*^9}, {3.814892154708329*^9, 
   3.814892165987094*^9}, {3.8148934785394783`*^9, 3.81489351636578*^9}, {
   3.814894365942486*^9, 3.8148943683386374`*^9}, {3.814894509747568*^9, 
   3.814894512821969*^9}, {3.814898130467587*^9, 3.814898144224456*^9}, {
   3.8152239545714808`*^9, 3.815224007579747*^9}, 3.815747027171245*^9, 
   3.8157651654437304`*^9, 3.815765335305832*^9, 3.815765604083496*^9, 
   3.815765731233336*^9, 3.815765889416676*^9, {3.815765960414208*^9, 
   3.81576596502419*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FirstTerms", "[", 
  RowBox[{"[", "13", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"SecondTerm", "[", "13", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ThirdTerm", "[", "13", "]"}]}], "Input",
 CellChangeTimes->{{3.852048574734606*^9, 3.85204859103113*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"pH1", "[", "0", "]"}], "\[Rule]", 
    FractionBox["1", "2"]}], ",", 
   RowBox[{
    RowBox[{"pH2", "[", "0", "]"}], "\[Rule]", 
    FractionBox["1", "2"]}], ",", 
   RowBox[{
    RowBox[{"pP1", "[", "0", "]"}], "\[Rule]", 
    FractionBox["1", "2"]}], ",", 
   RowBox[{
    RowBox[{"pP2", "[", "0", "]"}], "\[Rule]", 
    FractionBox["1", "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8520485912709627`*^9, 3.8541953551265593`*^9, 
  3.8543656426332703`*^9, 3.855073712962167*^9, 3.855141040718543*^9, 
  3.855152809641643*^9, 3.8553170983144627`*^9, 3.855317888271052*^9, 
  3.855336398491603*^9, 3.8553982037721367`*^9, 3.8553991538941803`*^9, 
  3.855403500591508*^9, 3.85540401979615*^9, 3.8558341064490433`*^9, 
  3.856014959420479*^9, 3.856864397416582*^9, 3.856873292654173*^9, 
  3.856876330828877*^9, 3.8568771787418528`*^9, 3.8568776058751297`*^9, 
  3.856878678263651*^9, 3.85688099612212*^9, 3.859391409650982*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"pH1", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pH2", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP1", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP2", "[", "1", "]"}], "\[Rule]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8520485912709627`*^9, 3.8541953551265593`*^9, 
  3.8543656426332703`*^9, 3.855073712962167*^9, 3.855141040718543*^9, 
  3.855152809641643*^9, 3.8553170983144627`*^9, 3.855317888271052*^9, 
  3.855336398491603*^9, 3.8553982037721367`*^9, 3.8553991538941803`*^9, 
  3.855403500591508*^9, 3.85540401979615*^9, 3.8558341064490433`*^9, 
  3.856014959420479*^9, 3.856864397416582*^9, 3.856873292654173*^9, 
  3.856876330828877*^9, 3.8568771787418528`*^9, 3.8568776058751297`*^9, 
  3.856878678263651*^9, 3.85688099612212*^9, 3.859391409659234*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"pH1", "[", "2", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pH2", "[", "2", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP1", "[", "2", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP2", "[", "2", "]"}], "\[Rule]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8520485912709627`*^9, 3.8541953551265593`*^9, 
  3.8543656426332703`*^9, 3.855073712962167*^9, 3.855141040718543*^9, 
  3.855152809641643*^9, 3.8553170983144627`*^9, 3.855317888271052*^9, 
  3.855336398491603*^9, 3.8553982037721367`*^9, 3.8553991538941803`*^9, 
  3.855403500591508*^9, 3.85540401979615*^9, 3.8558341064490433`*^9, 
  3.856014959420479*^9, 3.856864397416582*^9, 3.856873292654173*^9, 
  3.856876330828877*^9, 3.8568771787418528`*^9, 3.8568776058751297`*^9, 
  3.856878678263651*^9, 3.85688099612212*^9, 3.859391409665663*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Lambda]0sol", "[", "13", "]"}], "//", 
  "DeleteDuplicates"}]], "Input",
 CellChangeTimes->{{3.856866259068791*^9, 3.856866281562333*^9}, {
   3.856866364133321*^9, 3.8568663810304937`*^9}, {3.8568664648956203`*^9, 
   3.856866561344843*^9}, 3.8568689053803577`*^9, {3.856868935543618*^9, 
   3.856868939013833*^9}, {3.856869565619141*^9, 3.8568695659293623`*^9}, 
   3.8568697361908092`*^9, {3.8568763624947653`*^9, 3.856876385534523*^9}, {
   3.8568771970593357`*^9, 3.856877198635976*^9}, {3.85687838168935*^9, 
   3.85687838947114*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Lambda]", "[", "0", "]"}], "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"X", "-", "Y"}], ")"}], " ", "\[Alpha]"}], 
       SqrtBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"]]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Lambda]", "[", "0", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{"X", "-", "Y"}], ")"}], " ", "\[Alpha]"}], 
      SqrtBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"X", " ", "\[Alpha]"}], "+", 
          RowBox[{"Y", " ", "\[Alpha]"}], "+", 
          RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"]]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.856866478306952*^9, {3.856866524241255*^9, 3.856866562236409*^9}, {
   3.8568689311347637`*^9, 3.8568689398496428`*^9}, 3.856869566298594*^9, 
   3.856869647223362*^9, {3.8568697295618353`*^9, 3.856869742676223*^9}, 
   3.8568698412892647`*^9, 3.856870317725629*^9, 3.856873295392517*^9, 
   3.856876332981892*^9, {3.856876363461761*^9, 3.856876385806752*^9}, 
   3.856876607034156*^9, {3.856877180639523*^9, 3.8568771990809183`*^9}, 
   3.856877608318087*^9, 3.856878389862772*^9, 3.8568786799606657`*^9, 
   3.8568810001478024`*^9, 3.859391411081913*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]0sol", "[", "13", "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]0sol", "[", "13", "]"}], "[", 
  RowBox[{"[", "3", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.856869047961071*^9, 3.8568690507439117`*^9}, {
  3.8568695617231913`*^9, 3.8568695620021152`*^9}, {3.856878401415369*^9, 
  3.856878407597416*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Lambda]", "[", "0", "]"}], "\[Rule]", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{"X", "-", "Y"}], ")"}], " ", "\[Alpha]"}], 
     SqrtBox[
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"X", " ", "\[Alpha]"}], "+", 
         RowBox[{"Y", " ", "\[Alpha]"}], "+", 
         RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"]]]}]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.856869051087487*^9, 3.856869567461248*^9, 3.8568696488974247`*^9, {
   3.856869730772326*^9, 3.856869748592475*^9}, 3.85686984256352*^9, 
   3.856873298357855*^9, 3.8568763352370253`*^9, 3.8568766085092173`*^9, {
   3.856877181672586*^9, 3.856877202208617*^9}, {3.856878403518093*^9, 
   3.856878408065185*^9}, 3.856878681181135*^9, 3.85688100638764*^9, 
   3.859391412288877*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Lambda]", "[", "0", "]"}], "\[Rule]", 
   FractionBox[
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{"X", "-", "Y"}], ")"}], " ", "\[Alpha]"}], 
    SqrtBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"X", " ", "\[Alpha]"}], "+", 
        RowBox[{"Y", " ", "\[Alpha]"}], "+", 
        RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.856869051087487*^9, 3.856869567461248*^9, 3.8568696488974247`*^9, {
   3.856869730772326*^9, 3.856869748592475*^9}, 3.85686984256352*^9, 
   3.856873298357855*^9, 3.8568763352370253`*^9, 3.8568766085092173`*^9, {
   3.856877181672586*^9, 3.856877202208617*^9}, {3.856878403518093*^9, 
   3.856878408065185*^9}, 3.856878681181135*^9, 3.85688100638764*^9, 
   3.859391412399089*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]1factor", "[", 
   RowBox[{"13", ",", "1"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]1factor", "[", 
   RowBox[{"13", ",", "2"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.856869542089575*^9, 3.8568695806084223`*^9}, {
  3.85686986224819*^9, 3.856869864119783*^9}, {3.856877619361167*^9, 
  3.856877633686575*^9}, {3.856878431903215*^9, 3.856878435336905*^9}, {
  3.859391426854257*^9, 3.859391428872225*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]1sol", "[", 
   RowBox[{"13", ",", "2"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]1sol", "[", 
   RowBox[{"13", ",", "2"}], "]"}], "[", 
  RowBox[{"[", "3", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.856870207354351*^9, 3.856870210310507*^9}, {
  3.8568768728555183`*^9, 3.856876873365862*^9}, {3.856877655929981*^9, 
  3.8568776630884743`*^9}, {3.8568782154057198`*^9, 3.85687821593892*^9}, {
  3.856878446809044*^9, 3.856878470366826*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Lambda]", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Phi]", "[", "1", "]"}], "+", 
         RowBox[{"\[Omega]", "[", "1", "]"}]}], ")"}]}], 
      RowBox[{
       RowBox[{"X", " ", "\[Alpha]"}], "+", 
       RowBox[{"Y", " ", "\[Alpha]"}], "+", 
       RowBox[{"2", " ", "\[Delta]"}]}]]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.856870230527442*^9, 3.856870405285686*^9, 3.856870473848785*^9, {
   3.856873442545711*^9, 3.856873458341145*^9}, 3.856873509290749*^9, 
   3.85687663206805*^9, 3.856876886309188*^9, 3.856877673983567*^9, 
   3.8568782276641493`*^9, {3.85687845514048*^9, 3.8568784810412807`*^9}, 
   3.8568787100821657`*^9, 3.85688105591884*^9, 3.859391451569347*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Lambda]", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Phi]", "[", "1", "]"}], "+", 
         RowBox[{"\[Omega]", "[", "1", "]"}]}], ")"}]}], 
      RowBox[{
       RowBox[{"X", " ", "\[Alpha]"}], "+", 
       RowBox[{"Y", " ", "\[Alpha]"}], "+", 
       RowBox[{"2", " ", "\[Delta]"}]}]]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.856870230527442*^9, 3.856870405285686*^9, 3.856870473848785*^9, {
   3.856873442545711*^9, 3.856873458341145*^9}, 3.856873509290749*^9, 
   3.85687663206805*^9, 3.856876886309188*^9, 3.856877673983567*^9, 
   3.8568782276641493`*^9, {3.85687845514048*^9, 3.8568784810412807`*^9}, 
   3.8568787100821657`*^9, 3.85688105591884*^9, 3.8593914601553993`*^9}]
}, Open  ]],

Cell[TextData[{
 "There are four eigenvalues:\n",
 Cell[BoxData[
  RowBox[{"-", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Mu]", "[", "1", "]"}], "+", 
       RowBox[{"\[Nu]", "[", "1", "]"}]}], ")"}]}], 
    RowBox[{"X", "+", "Y", "+", 
     RowBox[{"2", " ", "\[Delta]"}]}]]}]], "Output",
  CellChangeTimes->{
   3.856870230527442*^9, 3.856870405285686*^9, 3.856870473848785*^9, {
    3.856873442545711*^9, 3.856873458341145*^9}, 3.856873509290749*^9, 
    3.85687663206805*^9, 3.856876886309188*^9, 3.856877673983567*^9, 
    3.8568782276641493`*^9, {3.85687845514048*^9, 3.8568784810412807`*^9}}],
 "\[PlusMinus]",
 Cell[BoxData[
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"(", 
     RowBox[{"X", "-", "Y"}], ")"}]}], 
   RowBox[{"X", "+", "Y", "+", 
    RowBox[{"2", " ", "\[Delta]"}]}]]],
  CellChangeTimes->{
   3.856869051087487*^9, 3.856869567461248*^9, 3.8568696488974247`*^9, {
    3.856869730772326*^9, 3.856869748592475*^9}, 3.85686984256352*^9, 
    3.856873298357855*^9, 3.8568763352370253`*^9, 3.8568766085092173`*^9, {
    3.856877181672586*^9, 3.856877202208617*^9}, {3.856878403518093*^9, 
    3.856878408065185*^9}}],
 "\n",
 Cell[BoxData[
  RowBox[{"-", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Mu]", "[", "1", "]"}], "+", 
       RowBox[{"\[Nu]", "[", "1", "]"}], "+", 
       RowBox[{"\[Phi]", "[", "1", "]"}], "+", 
       RowBox[{"\[Omega]", "[", "1", "]"}]}], ")"}]}], 
    RowBox[{"X", "+", "Y", "+", 
     RowBox[{"2", " ", "\[Delta]"}]}]]}]],
  CellChangeTimes->{
   3.856870230527442*^9, 3.856870405285686*^9, 3.856870473848785*^9, {
    3.856873442545711*^9, 3.856873458341145*^9}, 3.856873509290749*^9, 
    3.85687663206805*^9, 3.856876886309188*^9, 3.856877673983567*^9, 
    3.8568782276641493`*^9, {3.85687845514048*^9, 3.8568784810412807`*^9}}],
 "\[PlusMinus]",
 Cell[BoxData[
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"(", 
     RowBox[{"X", "-", "Y"}], ")"}]}], 
   RowBox[{"X", "+", "Y", "+", 
    RowBox[{"2", " ", "\[Delta]"}]}]]],
  CellChangeTimes->{
   3.856869051087487*^9, 3.856869567461248*^9, 3.8568696488974247`*^9, {
    3.856869730772326*^9, 3.856869748592475*^9}, 3.85686984256352*^9, 
    3.856873298357855*^9, 3.8568763352370253`*^9, 3.8568766085092173`*^9, {
    3.856877181672586*^9, 3.856877202208617*^9}, {3.856878403518093*^9, 
    3.856878408065185*^9}}],
 "\n"
}], "Text",
 CellChangeTimes->{{3.856878562139475*^9, 3.8568786070946074`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Mu]", "[", "1", "]"}], "+", 
      RowBox[{"\[Nu]", "[", "1", "]"}]}], ")"}]}], 
   RowBox[{"X", "+", "Y", "+", 
    RowBox[{"2", " ", "\[Delta]"}]}]]}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Equilibria 22: hosts fixed for WT allele, parasites fixed for mutant allele\
\>", "Subsubsection",
 CellChangeTimes->{{3.814548262772107*^9, 3.814548264542276*^9}, {
  3.814548870478204*^9, 3.814548872392661*^9}, {3.8147945370513563`*^9, 
  3.814794537734541*^9}, {3.814882246474237*^9, 3.814882257530211*^9}, {
  3.8148822950195837`*^9, 3.814882309711152*^9}, {3.8148826958653708`*^9, 
  3.814882695933755*^9}, {3.814883409561872*^9, 3.814883414453061*^9}, {
  3.814892253404953*^9, 3.8148922598178043`*^9}, {3.859391591221939*^9, 
  3.859391612153934*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FirstTerms", "[", 
  RowBox[{"[", "22", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"SecondTerm", "[", "22", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ThirdTerm", "[", "22", "]"}]}], "Input",
 CellChangeTimes->{{3.852048574734606*^9, 3.85204859103113*^9}, {
  3.856878993019721*^9, 3.85687899451278*^9}, {3.856881133458274*^9, 
  3.85688115728263*^9}, {3.859391595737883*^9, 3.859391598649971*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"pH1", "[", "0", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pH2", "[", "0", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP1", "[", "0", "]"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"pP2", "[", "0", "]"}], "\[Rule]", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8520485912709627`*^9, 3.8541953551265593`*^9, 3.8543656426332703`*^9, 
   3.855073712962167*^9, 3.855141040718543*^9, 3.855152809641643*^9, 
   3.8553170983144627`*^9, 3.855317888271052*^9, 3.855336398491603*^9, 
   3.8553982037721367`*^9, 3.8553991538941803`*^9, 3.855403500591508*^9, 
   3.85540401979615*^9, 3.8558341064490433`*^9, 3.856014959420479*^9, 
   3.856864397416582*^9, 3.856873292654173*^9, 3.856876330828877*^9, 
   3.8568771787418528`*^9, 3.8568776058751297`*^9, 3.856878678263651*^9, 
   3.8568789952291594`*^9, 3.856879560843028*^9, {3.856881120428194*^9, 
   3.856881157706462*^9}, 3.856955179112064*^9, 3.8593907872339*^9, 
   3.859391021076745*^9, 3.85939159897752*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"pH1", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pH2", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP1", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP2", "[", "1", "]"}], "\[Rule]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8520485912709627`*^9, 3.8541953551265593`*^9, 3.8543656426332703`*^9, 
   3.855073712962167*^9, 3.855141040718543*^9, 3.855152809641643*^9, 
   3.8553170983144627`*^9, 3.855317888271052*^9, 3.855336398491603*^9, 
   3.8553982037721367`*^9, 3.8553991538941803`*^9, 3.855403500591508*^9, 
   3.85540401979615*^9, 3.8558341064490433`*^9, 3.856014959420479*^9, 
   3.856864397416582*^9, 3.856873292654173*^9, 3.856876330828877*^9, 
   3.8568771787418528`*^9, 3.8568776058751297`*^9, 3.856878678263651*^9, 
   3.8568789952291594`*^9, 3.856879560843028*^9, {3.856881120428194*^9, 
   3.856881157706462*^9}, 3.856955179112064*^9, 3.8593907872339*^9, 
   3.859391021076745*^9, 3.859391598985429*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"pH1", "[", "2", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pH2", "[", "2", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP1", "[", "2", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP2", "[", "2", "]"}], "\[Rule]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8520485912709627`*^9, 3.8541953551265593`*^9, 3.8543656426332703`*^9, 
   3.855073712962167*^9, 3.855141040718543*^9, 3.855152809641643*^9, 
   3.8553170983144627`*^9, 3.855317888271052*^9, 3.855336398491603*^9, 
   3.8553982037721367`*^9, 3.8553991538941803`*^9, 3.855403500591508*^9, 
   3.85540401979615*^9, 3.8558341064490433`*^9, 3.856014959420479*^9, 
   3.856864397416582*^9, 3.856873292654173*^9, 3.856876330828877*^9, 
   3.8568771787418528`*^9, 3.8568776058751297`*^9, 3.856878678263651*^9, 
   3.8568789952291594`*^9, 3.856879560843028*^9, {3.856881120428194*^9, 
   3.856881157706462*^9}, 3.856955179112064*^9, 3.8593907872339*^9, 
   3.859391021076745*^9, 3.85939159899233*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Lambda]0sol", "[", "22", "]"}], "//", 
  "DeleteDuplicates"}]], "Input",
 CellChangeTimes->{{3.856866259068791*^9, 3.856866281562333*^9}, {
   3.856866364133321*^9, 3.8568663810304937`*^9}, {3.8568664648956203`*^9, 
   3.856866561344843*^9}, 3.8568689053803577`*^9, {3.856868935543618*^9, 
   3.856868939013833*^9}, {3.856869565619141*^9, 3.8568695659293623`*^9}, 
   3.8568697361908092`*^9, {3.8568763624947653`*^9, 3.856876385534523*^9}, {
   3.8568771970593357`*^9, 3.856877198635976*^9}, {3.85687838168935*^9, 
   3.85687838947114*^9}, 3.856879016427052*^9, {3.856881169087779*^9, 
   3.856881172837841*^9}, {3.859391615427059*^9, 3.859391615874011*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Lambda]", "[", "0", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"X", "-", "Y"}], ")"}], " ", "\[Alpha]"}], 
      RowBox[{
       RowBox[{"Y", " ", "\[Alpha]"}], "+", "\[Delta]"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Lambda]", "[", "0", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "X"}], "+", "Y"}], ")"}], " ", "\[Alpha]"}], 
      RowBox[{
       RowBox[{"Y", " ", "\[Alpha]"}], "+", "\[Delta]"}]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.856866478306952*^9, {3.856866524241255*^9, 3.856866562236409*^9}, {
   3.8568689311347637`*^9, 3.8568689398496428`*^9}, 3.856869566298594*^9, 
   3.856869647223362*^9, {3.8568697295618353`*^9, 3.856869742676223*^9}, 
   3.8568698412892647`*^9, 3.856870317725629*^9, 3.856873295392517*^9, 
   3.856876332981892*^9, {3.856876363461761*^9, 3.856876385806752*^9}, 
   3.856876607034156*^9, {3.856877180639523*^9, 3.8568771990809183`*^9}, 
   3.856877608318087*^9, 3.856878389862772*^9, 3.8568786799606657`*^9, 
   3.8568790174107122`*^9, 3.8568795619870462`*^9, {3.856881170277975*^9, 
   3.856881174124055*^9}, 3.85695518097847*^9, 3.859390790339397*^9, 
   3.859391022959482*^9, 3.859391616303241*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]0sol", "[", "22", "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]0sol", "[", "22", "]"}], "[", 
  RowBox[{"[", "3", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.856869047961071*^9, 3.8568690507439117`*^9}, {
  3.8568695617231913`*^9, 3.8568695620021152`*^9}, {3.856878401415369*^9, 
  3.856878407597416*^9}, {3.856879024233788*^9, 3.856879028417376*^9}, {
  3.859391619554434*^9, 3.859391621770473*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Lambda]", "[", "0", "]"}], "\[Rule]", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"X", "-", "Y"}], ")"}], " ", "\[Alpha]"}], 
    RowBox[{
     RowBox[{"Y", " ", "\[Alpha]"}], "+", "\[Delta]"}]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.856869051087487*^9, 3.856869567461248*^9, 3.8568696488974247`*^9, {
   3.856869730772326*^9, 3.856869748592475*^9}, 3.85686984256352*^9, 
   3.856873298357855*^9, 3.8568763352370253`*^9, 3.8568766085092173`*^9, {
   3.856877181672586*^9, 3.856877202208617*^9}, {3.856878403518093*^9, 
   3.856878408065185*^9}, 3.856878681181135*^9, 3.8568790297586184`*^9, 
   3.8568795631690197`*^9, 3.856881176005143*^9, 3.856955183082457*^9, 
   3.859390795776126*^9, 3.859391029202058*^9, 3.859391622375025*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Lambda]", "[", "0", "]"}], "\[Rule]", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "X"}], "+", "Y"}], ")"}], " ", "\[Alpha]"}], 
    RowBox[{
     RowBox[{"Y", " ", "\[Alpha]"}], "+", "\[Delta]"}]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.856869051087487*^9, 3.856869567461248*^9, 3.8568696488974247`*^9, {
   3.856869730772326*^9, 3.856869748592475*^9}, 3.85686984256352*^9, 
   3.856873298357855*^9, 3.8568763352370253`*^9, 3.8568766085092173`*^9, {
   3.856877181672586*^9, 3.856877202208617*^9}, {3.856878403518093*^9, 
   3.856878408065185*^9}, 3.856878681181135*^9, 3.8568790297586184`*^9, 
   3.8568795631690197`*^9, 3.856881176005143*^9, 3.856955183082457*^9, 
   3.859390795776126*^9, 3.859391029202058*^9, 3.859391622456435*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]1factor", "[", 
   RowBox[{"22", ",", "1"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]1factor", "[", 
   RowBox[{"22", ",", "2"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.856869542089575*^9, 3.8568695806084223`*^9}, {
   3.85686986224819*^9, 3.856869864119783*^9}, {3.856877619361167*^9, 
   3.856877633686575*^9}, {3.856878431903215*^9, 3.856878435336905*^9}, {
   3.856879037856947*^9, 3.85687903878587*^9}, 3.859390807111456*^9, {
   3.859391628330179*^9, 3.859391632763789*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"4", " ", "\[ImaginaryI]", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"X", "-", "Y"}], ")"}], "3"], " ", 
      SuperscriptBox["\[Alpha]", "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"X", " ", "\[Alpha]"}], "+", 
        RowBox[{"Y", " ", "\[Alpha]"}], "+", 
        RowBox[{"2", " ", "\[Delta]"}], "-", 
        SqrtBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"X", " ", "\[Alpha]"}], "+", 
            RowBox[{"Y", " ", "\[Alpha]"}], "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"X", " ", "\[Alpha]"}], "+", 
        RowBox[{"Y", " ", "\[Alpha]"}], "+", 
        RowBox[{"2", " ", "\[Delta]"}], "+", 
        SqrtBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"X", " ", "\[Alpha]"}], "+", 
            RowBox[{"Y", " ", "\[Alpha]"}], "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"X", " ", "\[Alpha]", " ", 
         RowBox[{"\[Lambda]", "[", "1", "]"}]}], "+", 
        RowBox[{"Y", " ", "\[Alpha]", " ", 
         RowBox[{"\[Lambda]", "[", "1", "]"}]}], "+", 
        RowBox[{"2", " ", "\[Delta]", " ", 
         RowBox[{"\[Lambda]", "[", "1", "]"}]}], "+", 
        RowBox[{"\[Phi]", "[", "1", "]"}], "+", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"X", " ", "\[Alpha]"}], "+", 
         RowBox[{"Y", " ", "\[Alpha]"}], "+", 
         RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "3"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], ")"}], 
       RowBox[{"3", "/", "2"}]]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"4", " ", "\[ImaginaryI]", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"X", "-", "Y"}], ")"}], "3"], " ", 
      SuperscriptBox["\[Alpha]", "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"X", " ", "\[Alpha]"}], "+", 
        RowBox[{"Y", " ", "\[Alpha]"}], "+", 
        RowBox[{"2", " ", "\[Delta]"}], "-", 
        SqrtBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"X", " ", "\[Alpha]"}], "+", 
            RowBox[{"Y", " ", "\[Alpha]"}], "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"X", " ", "\[Alpha]"}], "+", 
        RowBox[{"Y", " ", "\[Alpha]"}], "+", 
        RowBox[{"2", " ", "\[Delta]"}], "+", 
        SqrtBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"X", " ", "\[Alpha]"}], "+", 
            RowBox[{"Y", " ", "\[Alpha]"}], "+", 
            RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"]]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"X", " ", "\[Alpha]", " ", 
         RowBox[{"\[Lambda]", "[", "1", "]"}]}], "+", 
        RowBox[{"Y", " ", "\[Alpha]", " ", 
         RowBox[{"\[Lambda]", "[", "1", "]"}]}], "+", 
        RowBox[{"2", " ", "\[Delta]", " ", 
         RowBox[{"\[Lambda]", "[", "1", "]"}]}], "+", 
        RowBox[{"\[Phi]", "[", "1", "]"}], "+", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"X", " ", "\[Alpha]"}], "+", 
         RowBox[{"Y", " ", "\[Alpha]"}], "+", 
         RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "3"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], ")"}], 
       RowBox[{"3", "/", "2"}]]}], ")"}]}], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"4", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"X", "-", "Y"}], ")"}], "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"X", " ", "\[Alpha]"}], "+", 
          RowBox[{"Y", " ", "\[Alpha]"}], "+", 
          RowBox[{"2", " ", "\[Delta]"}], "-", 
          SqrtBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"X", " ", "\[Alpha]"}], "+", 
              RowBox[{"Y", " ", "\[Alpha]"}], "+", 
              RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"X", " ", "\[Alpha]"}], "+", 
          RowBox[{"Y", " ", "\[Alpha]"}], "+", 
          RowBox[{"2", " ", "\[Delta]"}], "+", 
          SqrtBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"X", " ", "\[Alpha]"}], "+", 
              RowBox[{"Y", " ", "\[Alpha]"}], "+", 
              RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"X", " ", "\[Alpha]", " ", 
           RowBox[{"\[Lambda]", "[", "1", "]"}]}], "+", 
          RowBox[{"Y", " ", "\[Alpha]", " ", 
           RowBox[{"\[Lambda]", "[", "1", "]"}]}], "+", 
          RowBox[{"2", " ", "\[Delta]", " ", 
           RowBox[{"\[Lambda]", "[", "1", "]"}]}], "+", 
          RowBox[{"\[Phi]", "[", "1", "]"}], "+", 
          RowBox[{"\[Omega]", "[", "1", "]"}]}], ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "3"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"X", " ", "\[Alpha]"}], "+", 
             RowBox[{"Y", " ", "\[Alpha]"}], "+", 
             RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], ")"}], 
         RowBox[{"3", "/", "2"}]]}], ")"}]}], ")"}]}], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"4", " ", "\[ImaginaryI]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"X", "-", "Y"}], ")"}], "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"X", " ", "\[Alpha]"}], "+", 
          RowBox[{"Y", " ", "\[Alpha]"}], "+", 
          RowBox[{"2", " ", "\[Delta]"}], "-", 
          SqrtBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"X", " ", "\[Alpha]"}], "+", 
              RowBox[{"Y", " ", "\[Alpha]"}], "+", 
              RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"X", " ", "\[Alpha]"}], "+", 
          RowBox[{"Y", " ", "\[Alpha]"}], "+", 
          RowBox[{"2", " ", "\[Delta]"}], "+", 
          SqrtBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"X", " ", "\[Alpha]"}], "+", 
              RowBox[{"Y", " ", "\[Alpha]"}], "+", 
              RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"]]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"X", " ", "\[Alpha]", " ", 
           RowBox[{"\[Lambda]", "[", "1", "]"}]}], "+", 
          RowBox[{"Y", " ", "\[Alpha]", " ", 
           RowBox[{"\[Lambda]", "[", "1", "]"}]}], "+", 
          RowBox[{"2", " ", "\[Delta]", " ", 
           RowBox[{"\[Lambda]", "[", "1", "]"}]}], "+", 
          RowBox[{"\[Phi]", "[", "1", "]"}], "+", 
          RowBox[{"\[Omega]", "[", "1", "]"}]}], ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "3"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"X", " ", "\[Alpha]"}], "+", 
             RowBox[{"Y", " ", "\[Alpha]"}], "+", 
             RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], ")"}], 
         RowBox[{"3", "/", "2"}]]}], ")"}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8568698687045813`*^9, 3.8568699815821047`*^9, {3.856870322553742*^9, 
   3.856870346013722*^9}, 3.856870428652014*^9, 3.856873302369608*^9, 
   3.856876339356758*^9, 3.8568766131278753`*^9, 3.856876826092842*^9, 
   3.856877208065948*^9, {3.85687762636372*^9, 3.856877636994108*^9}, 
   3.856878444033648*^9, 3.8568786854193087`*^9, 3.8568790415776873`*^9, 
   3.8568795668589687`*^9, 3.856881182819916*^9, 3.856955186723501*^9, 
   3.859390801452611*^9, 3.8593910361784143`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"X", " ", "\[Alpha]"}], "+", 
        RowBox[{"Y", " ", "\[Alpha]"}], "+", 
        RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "6"]], 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"X", "-", "Y"}], ")"}], "2"], " ", 
     SuperscriptBox["\[Alpha]", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", 
        SuperscriptBox["X", "4"], " ", 
        SuperscriptBox["\[Alpha]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"12", " ", 
        SuperscriptBox["X", "3"], " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"18", " ", 
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"12", " ", "X", " ", 
        SuperscriptBox["Y", "3"], " ", 
        SuperscriptBox["\[Alpha]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"3", " ", 
        SuperscriptBox["Y", "4"], " ", 
        SuperscriptBox["\[Alpha]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"24", " ", 
        SuperscriptBox["X", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"72", " ", 
        SuperscriptBox["X", "2"], " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"72", " ", "X", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"24", " ", 
        SuperscriptBox["Y", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"72", " ", 
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"144", " ", "X", " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"72", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"96", " ", "X", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "3"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"96", " ", "Y", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "3"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"48", " ", 
        SuperscriptBox["\[Delta]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{"2", " ", "X", " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{"4", " ", "X", " ", "\[Alpha]", " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{"4", " ", "Y", " ", "\[Alpha]", " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["X", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"18", " ", 
        SuperscriptBox["X", "2"], " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"18", " ", "X", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["Y", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"36", " ", 
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "X", " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"36", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "X", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "Y", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"48", " ", 
        SuperscriptBox["\[Delta]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "+", 
       RowBox[{"2", " ", "X", " ", "\[Alpha]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "+", 
       RowBox[{"2", " ", "Y", " ", "\[Alpha]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "+", 
       RowBox[{"4", " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["X", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"18", " ", 
        SuperscriptBox["X", "2"], " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"18", " ", "X", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["Y", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"36", " ", 
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "X", " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"36", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "X", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "Y", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"48", " ", 
        SuperscriptBox["\[Delta]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "+", 
       RowBox[{"2", " ", "X", " ", "\[Alpha]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "+", 
       RowBox[{"2", " ", "Y", " ", "\[Alpha]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "+", 
       RowBox[{"4", " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"16", " ", "X", " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"32", " ", "X", " ", "\[Alpha]", " ", "\[Delta]", " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"32", " ", "Y", " ", "\[Alpha]", " ", "\[Delta]", " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"32", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"X", " ", "\[Alpha]"}], "+", 
        RowBox[{"Y", " ", "\[Alpha]"}], "+", 
        RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "6"]], 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"X", "-", "Y"}], ")"}], "2"], " ", 
     SuperscriptBox["\[Alpha]", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", 
        SuperscriptBox["X", "4"], " ", 
        SuperscriptBox["\[Alpha]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"12", " ", 
        SuperscriptBox["X", "3"], " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"18", " ", 
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"12", " ", "X", " ", 
        SuperscriptBox["Y", "3"], " ", 
        SuperscriptBox["\[Alpha]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"3", " ", 
        SuperscriptBox["Y", "4"], " ", 
        SuperscriptBox["\[Alpha]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"24", " ", 
        SuperscriptBox["X", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"72", " ", 
        SuperscriptBox["X", "2"], " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"72", " ", "X", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"24", " ", 
        SuperscriptBox["Y", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"72", " ", 
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"144", " ", "X", " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"72", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"96", " ", "X", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "3"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"96", " ", "Y", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "3"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"48", " ", 
        SuperscriptBox["\[Delta]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{"2", " ", "X", " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{"4", " ", "X", " ", "\[Alpha]", " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{"4", " ", "Y", " ", "\[Alpha]", " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["X", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"18", " ", 
        SuperscriptBox["X", "2"], " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"18", " ", "X", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["Y", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"36", " ", 
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "X", " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"36", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "X", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "Y", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"48", " ", 
        SuperscriptBox["\[Delta]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "+", 
       RowBox[{"2", " ", "X", " ", "\[Alpha]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "+", 
       RowBox[{"2", " ", "Y", " ", "\[Alpha]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "+", 
       RowBox[{"4", " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["X", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"18", " ", 
        SuperscriptBox["X", "2"], " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"18", " ", "X", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["Y", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"36", " ", 
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "X", " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"36", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "X", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "Y", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"48", " ", 
        SuperscriptBox["\[Delta]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "+", 
       RowBox[{"2", " ", "X", " ", "\[Alpha]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "+", 
       RowBox[{"2", " ", "Y", " ", "\[Alpha]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "+", 
       RowBox[{"4", " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"16", " ", "X", " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"32", " ", "X", " ", "\[Alpha]", " ", "\[Delta]", " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"32", " ", "Y", " ", "\[Alpha]", " ", "\[Delta]", " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"32", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"X", " ", "\[Alpha]"}], "+", 
        RowBox[{"Y", " ", "\[Alpha]"}], "+", 
        RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "6"]], 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"X", "-", "Y"}], ")"}], "2"], " ", 
     SuperscriptBox["\[Alpha]", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", 
        SuperscriptBox["X", "4"], " ", 
        SuperscriptBox["\[Alpha]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"12", " ", 
        SuperscriptBox["X", "3"], " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"18", " ", 
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"12", " ", "X", " ", 
        SuperscriptBox["Y", "3"], " ", 
        SuperscriptBox["\[Alpha]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"3", " ", 
        SuperscriptBox["Y", "4"], " ", 
        SuperscriptBox["\[Alpha]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"24", " ", 
        SuperscriptBox["X", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"72", " ", 
        SuperscriptBox["X", "2"], " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"72", " ", "X", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"24", " ", 
        SuperscriptBox["Y", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"72", " ", 
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"144", " ", "X", " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"72", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"96", " ", "X", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "3"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"96", " ", "Y", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "3"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"48", " ", 
        SuperscriptBox["\[Delta]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{"2", " ", "X", " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{"4", " ", "X", " ", "\[Alpha]", " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{"4", " ", "Y", " ", "\[Alpha]", " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["X", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"18", " ", 
        SuperscriptBox["X", "2"], " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"18", " ", "X", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["Y", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"36", " ", 
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "X", " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"36", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "X", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "Y", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"48", " ", 
        SuperscriptBox["\[Delta]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "+", 
       RowBox[{"2", " ", "X", " ", "\[Alpha]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "+", 
       RowBox[{"2", " ", "Y", " ", "\[Alpha]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "+", 
       RowBox[{"4", " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["X", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"18", " ", 
        SuperscriptBox["X", "2"], " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"18", " ", "X", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["Y", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"36", " ", 
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "X", " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"36", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "X", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "Y", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"48", " ", 
        SuperscriptBox["\[Delta]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "+", 
       RowBox[{"2", " ", "X", " ", "\[Alpha]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "+", 
       RowBox[{"2", " ", "Y", " ", "\[Alpha]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "+", 
       RowBox[{"4", " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"16", " ", "X", " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"32", " ", "X", " ", "\[Alpha]", " ", "\[Delta]", " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"32", " ", "Y", " ", "\[Alpha]", " ", "\[Delta]", " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"32", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    FractionBox["1", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"X", " ", "\[Alpha]"}], "+", 
        RowBox[{"Y", " ", "\[Alpha]"}], "+", 
        RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "6"]], 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"X", "-", "Y"}], ")"}], "2"], " ", 
     SuperscriptBox["\[Alpha]", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "3"}], " ", 
        SuperscriptBox["X", "4"], " ", 
        SuperscriptBox["\[Alpha]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"12", " ", 
        SuperscriptBox["X", "3"], " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"18", " ", 
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"12", " ", "X", " ", 
        SuperscriptBox["Y", "3"], " ", 
        SuperscriptBox["\[Alpha]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"3", " ", 
        SuperscriptBox["Y", "4"], " ", 
        SuperscriptBox["\[Alpha]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"24", " ", 
        SuperscriptBox["X", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"72", " ", 
        SuperscriptBox["X", "2"], " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"72", " ", "X", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"24", " ", 
        SuperscriptBox["Y", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"72", " ", 
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"144", " ", "X", " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"72", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"96", " ", "X", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "3"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"96", " ", "Y", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "3"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"48", " ", 
        SuperscriptBox["\[Delta]", "4"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{"2", " ", "X", " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{"4", " ", "X", " ", "\[Alpha]", " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{"4", " ", "Y", " ", "\[Alpha]", " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"\[Lambda]", "[", "1", "]"}], "2"]}], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["X", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"18", " ", 
        SuperscriptBox["X", "2"], " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"18", " ", "X", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["Y", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"36", " ", 
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "X", " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"36", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "X", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "Y", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"48", " ", 
        SuperscriptBox["\[Delta]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "+", 
       RowBox[{"2", " ", "X", " ", "\[Alpha]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "+", 
       RowBox[{"2", " ", "Y", " ", "\[Alpha]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "+", 
       RowBox[{"4", " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}]}], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["X", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"18", " ", 
        SuperscriptBox["X", "2"], " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"18", " ", "X", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"6", " ", 
        SuperscriptBox["Y", "3"], " ", 
        SuperscriptBox["\[Alpha]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"36", " ", 
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "X", " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"36", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", "\[Delta]", " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "X", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"72", " ", "Y", " ", "\[Alpha]", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"48", " ", 
        SuperscriptBox["\[Delta]", "3"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "+", 
       RowBox[{"2", " ", "X", " ", "\[Alpha]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "+", 
       RowBox[{"2", " ", "Y", " ", "\[Alpha]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "+", 
       RowBox[{"4", " ", "\[Delta]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Lambda]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["X", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"16", " ", "X", " ", "Y", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"8", " ", 
        SuperscriptBox["Y", "2"], " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"32", " ", "X", " ", "\[Alpha]", " ", "\[Delta]", " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"32", " ", "Y", " ", "\[Alpha]", " ", "\[Delta]", " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "-", 
       RowBox[{"32", " ", 
        SuperscriptBox["\[Delta]", "2"], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"X", " ", "\[Alpha]"}], "+", 
           RowBox[{"Y", " ", "\[Alpha]"}], "+", 
           RowBox[{"2", " ", "\[Delta]"}]}], ")"}], "2"], " ", 
        RowBox[{"\[Phi]", "[", "1", "]"}], " ", 
        RowBox[{"\[Omega]", "[", "1", "]"}]}]}], ")"}]}]}]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.8568698687045813`*^9, 3.8568699815821047`*^9, {3.856870322553742*^9, 
   3.856870346013722*^9}, 3.856870428652014*^9, 3.856873302369608*^9, 
   3.856876339356758*^9, 3.8568766131278753`*^9, 3.856876826092842*^9, 
   3.856877208065948*^9, {3.85687762636372*^9, 3.856877636994108*^9}, 
   3.856878444033648*^9, 3.8568786854193087`*^9, 3.8568790415776873`*^9, 
   3.8568795668589687`*^9, 3.856881182819916*^9, 3.856955186723501*^9, 
   3.859390801452611*^9, 3.859391044964039*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Lambda]1sol", "[", 
    RowBox[{"22", ",", "2"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Lambda]1sol", "[", 
    RowBox[{"22", ",", "2"}], "]"}], "[", 
   RowBox[{"[", "3", "]"}], "]"}], "//", "Simplify"}]}], "Input",
 CellChangeTimes->{{3.856870207354351*^9, 3.856870210310507*^9}, {
  3.8568768728555183`*^9, 3.856876873365862*^9}, {3.856877655929981*^9, 
  3.8568776630884743`*^9}, {3.8568782154057198`*^9, 3.85687821593892*^9}, {
  3.856878446809044*^9, 3.856878470366826*^9}, {3.8568794789482594`*^9, 
  3.856879508156332*^9}, {3.856955208459217*^9, 3.85695521066308*^9}, {
  3.856955270921509*^9, 3.856955284582841*^9}, {3.859390827001173*^9, 
  3.859390839615613*^9}, {3.859391643098412*^9, 3.85939164985207*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Lambda]", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"\[Omega]", "[", "1", "]"}]}], 
      RowBox[{
       RowBox[{"Y", " ", "\[Alpha]"}], "+", "\[Delta]"}]]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.856870230527442*^9, 3.856870405285686*^9, 3.856870473848785*^9, {
   3.856873442545711*^9, 3.856873458341145*^9}, 3.856873509290749*^9, 
   3.85687663206805*^9, 3.856876886309188*^9, 3.856877673983567*^9, 
   3.8568782276641493`*^9, {3.85687845514048*^9, 3.8568784810412807`*^9}, 
   3.8568787100821657`*^9, 3.856879064621977*^9, {3.856879493919541*^9, 
   3.8568795169620323`*^9}, 3.8568795862880993`*^9, 3.856881209003346*^9, 
   3.856955206594903*^9, 3.85695529320863*^9, 3.8593909107819557`*^9, 
   3.859391097082843*^9, 3.859391658372383*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Lambda]", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"\[Phi]", "[", "1", "]"}]}], 
      RowBox[{
       RowBox[{"Y", " ", "\[Alpha]"}], "+", "\[Delta]"}]]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.856870230527442*^9, 3.856870405285686*^9, 3.856870473848785*^9, {
   3.856873442545711*^9, 3.856873458341145*^9}, 3.856873509290749*^9, 
   3.85687663206805*^9, 3.856876886309188*^9, 3.856877673983567*^9, 
   3.8568782276641493`*^9, {3.85687845514048*^9, 3.8568784810412807`*^9}, 
   3.8568787100821657`*^9, 3.856879064621977*^9, {3.856879493919541*^9, 
   3.8568795169620323`*^9}, 3.8568795862880993`*^9, 3.856881209003346*^9, 
   3.856955206594903*^9, 3.85695529320863*^9, 3.8593909107819557`*^9, 
   3.859391097082843*^9, 3.859391666231106*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Equilibria 25: all fixed for mutant allele", "Subsubsection",
 CellChangeTimes->{{3.814548262772107*^9, 3.814548264542276*^9}, {
  3.814548870478204*^9, 3.814548872392661*^9}, {3.8147945370513563`*^9, 
  3.814794537734541*^9}, {3.814882246474237*^9, 3.814882257530211*^9}, {
  3.8148822950195837`*^9, 3.814882309711152*^9}, {3.8148826958653708`*^9, 
  3.814882695933755*^9}, {3.814883409561872*^9, 3.814883414453061*^9}, {
  3.814892253404953*^9, 3.8148922598178043`*^9}, {3.8552313343246393`*^9, 
  3.855231343236162*^9}, {3.859391730685252*^9, 3.859391737972077*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FirstTerms", "[", 
  RowBox[{"[", "25", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"SecondTerm", "[", "25", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ThirdTerm", "[", "25", "]"}]}], "Input",
 CellChangeTimes->{{3.852048574734606*^9, 3.85204859103113*^9}, {
  3.856878993019721*^9, 3.85687899451278*^9}, {3.85687943228549*^9, 
  3.8568794347376547`*^9}, {3.859391742452742*^9, 3.8593917450761127`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"pH1", "[", "0", "]"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"pH2", "[", "0", "]"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"pP1", "[", "0", "]"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"pP2", "[", "0", "]"}], "\[Rule]", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8520485912709627`*^9, 3.8541953551265593`*^9, 
  3.8543656426332703`*^9, 3.855073712962167*^9, 3.855141040718543*^9, 
  3.855152809641643*^9, 3.8553170983144627`*^9, 3.855317888271052*^9, 
  3.855336398491603*^9, 3.8553982037721367`*^9, 3.8553991538941803`*^9, 
  3.855403500591508*^9, 3.85540401979615*^9, 3.8558341064490433`*^9, 
  3.856014959420479*^9, 3.856864397416582*^9, 3.856873292654173*^9, 
  3.856876330828877*^9, 3.8568771787418528`*^9, 3.8568776058751297`*^9, 
  3.856878678263651*^9, 3.8568789952291594`*^9, 3.85687943576994*^9, 
  3.856879831918035*^9, 3.8593913278081503`*^9, 3.8593917456169157`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"pH1", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pH2", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP1", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP2", "[", "1", "]"}], "\[Rule]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8520485912709627`*^9, 3.8541953551265593`*^9, 
  3.8543656426332703`*^9, 3.855073712962167*^9, 3.855141040718543*^9, 
  3.855152809641643*^9, 3.8553170983144627`*^9, 3.855317888271052*^9, 
  3.855336398491603*^9, 3.8553982037721367`*^9, 3.8553991538941803`*^9, 
  3.855403500591508*^9, 3.85540401979615*^9, 3.8558341064490433`*^9, 
  3.856014959420479*^9, 3.856864397416582*^9, 3.856873292654173*^9, 
  3.856876330828877*^9, 3.8568771787418528`*^9, 3.8568776058751297`*^9, 
  3.856878678263651*^9, 3.8568789952291594`*^9, 3.85687943576994*^9, 
  3.856879831918035*^9, 3.8593913278081503`*^9, 3.8593917456263437`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"pH1", "[", "2", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pH2", "[", "2", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP1", "[", "2", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP2", "[", "2", "]"}], "\[Rule]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8520485912709627`*^9, 3.8541953551265593`*^9, 
  3.8543656426332703`*^9, 3.855073712962167*^9, 3.855141040718543*^9, 
  3.855152809641643*^9, 3.8553170983144627`*^9, 3.855317888271052*^9, 
  3.855336398491603*^9, 3.8553982037721367`*^9, 3.8553991538941803`*^9, 
  3.855403500591508*^9, 3.85540401979615*^9, 3.8558341064490433`*^9, 
  3.856014959420479*^9, 3.856864397416582*^9, 3.856873292654173*^9, 
  3.856876330828877*^9, 3.8568771787418528`*^9, 3.8568776058751297`*^9, 
  3.856878678263651*^9, 3.8568789952291594`*^9, 3.85687943576994*^9, 
  3.856879831918035*^9, 3.8593913278081503`*^9, 3.859391745633492*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Lambda]0sol", "[", "25", "]"}], "//", 
  "DeleteDuplicates"}]], "Input",
 CellChangeTimes->{{3.856866259068791*^9, 3.856866281562333*^9}, {
   3.856866364133321*^9, 3.8568663810304937`*^9}, {3.8568664648956203`*^9, 
   3.856866561344843*^9}, 3.8568689053803577`*^9, {3.856868935543618*^9, 
   3.856868939013833*^9}, {3.856869565619141*^9, 3.8568695659293623`*^9}, 
   3.8568697361908092`*^9, {3.8568763624947653`*^9, 3.856876385534523*^9}, {
   3.8568771970593357`*^9, 3.856877198635976*^9}, {3.85687838168935*^9, 
   3.85687838947114*^9}, 3.856879016427052*^9, {3.856879444281746*^9, 
   3.8568794443773193`*^9}, {3.85939174983671*^9, 3.859391750052747*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Lambda]", "[", "0", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"X", "-", "Y"}], ")"}], " ", "\[Alpha]"}], 
      RowBox[{
       RowBox[{"X", " ", "\[Alpha]"}], "+", "\[Delta]"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Lambda]", "[", "0", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "X"}], "+", "Y"}], ")"}], " ", "\[Alpha]"}], 
      RowBox[{
       RowBox[{"X", " ", "\[Alpha]"}], "+", "\[Delta]"}]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.856866478306952*^9, {3.856866524241255*^9, 3.856866562236409*^9}, {
   3.8568689311347637`*^9, 3.8568689398496428`*^9}, 3.856869566298594*^9, 
   3.856869647223362*^9, {3.8568697295618353`*^9, 3.856869742676223*^9}, 
   3.8568698412892647`*^9, 3.856870317725629*^9, 3.856873295392517*^9, 
   3.856876332981892*^9, {3.856876363461761*^9, 3.856876385806752*^9}, 
   3.856876607034156*^9, {3.856877180639523*^9, 3.8568771990809183`*^9}, 
   3.856877608318087*^9, 3.856878389862772*^9, 3.8568786799606657`*^9, 
   3.8568790174107122`*^9, 3.856879444842319*^9, 3.856879833243137*^9, 
   3.859391329277103*^9, 3.859391750598548*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]0sol", "[", "25", "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]0sol", "[", "25", "]"}], "[", 
  RowBox[{"[", "3", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.856869047961071*^9, 3.8568690507439117`*^9}, {
  3.8568695617231913`*^9, 3.8568695620021152`*^9}, {3.856878401415369*^9, 
  3.856878407597416*^9}, {3.856879024233788*^9, 3.856879028417376*^9}, {
  3.8568794488503017`*^9, 3.85687944972081*^9}, {3.859391754165193*^9, 
  3.859391755436356*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Lambda]", "[", "0", "]"}], "\[Rule]", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"X", "-", "Y"}], ")"}], " ", "\[Alpha]"}], 
    RowBox[{
     RowBox[{"X", " ", "\[Alpha]"}], "+", "\[Delta]"}]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.856869051087487*^9, 3.856869567461248*^9, 3.8568696488974247`*^9, {
   3.856869730772326*^9, 3.856869748592475*^9}, 3.85686984256352*^9, 
   3.856873298357855*^9, 3.8568763352370253`*^9, 3.8568766085092173`*^9, {
   3.856877181672586*^9, 3.856877202208617*^9}, {3.856878403518093*^9, 
   3.856878408065185*^9}, 3.856878681181135*^9, 3.8568790297586184`*^9, 
   3.8568794503202543`*^9, 3.856879834330181*^9, 3.8593913308195353`*^9, 
   3.8593917567675457`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Lambda]", "[", "0", "]"}], "\[Rule]", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "X"}], "+", "Y"}], ")"}], " ", "\[Alpha]"}], 
    RowBox[{
     RowBox[{"X", " ", "\[Alpha]"}], "+", "\[Delta]"}]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.856869051087487*^9, 3.856869567461248*^9, 3.8568696488974247`*^9, {
   3.856869730772326*^9, 3.856869748592475*^9}, 3.85686984256352*^9, 
   3.856873298357855*^9, 3.8568763352370253`*^9, 3.8568766085092173`*^9, {
   3.856877181672586*^9, 3.856877202208617*^9}, {3.856878403518093*^9, 
   3.856878408065185*^9}, 3.856878681181135*^9, 3.8568790297586184`*^9, 
   3.8568794503202543`*^9, 3.856879834330181*^9, 3.8593913308195353`*^9, 
   3.859391756852797*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]1factor", "[", 
   RowBox[{"25", ",", "1"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]1factor", "[", 
   RowBox[{"25", ",", "2"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.856869542089575*^9, 3.8568695806084223`*^9}, {
  3.85686986224819*^9, 3.856869864119783*^9}, {3.856877619361167*^9, 
  3.856877633686575*^9}, {3.856878431903215*^9, 3.856878435336905*^9}, {
  3.856879037856947*^9, 3.85687903878587*^9}, {3.8568794538655033`*^9, 
  3.85687945469799*^9}, {3.859391348789256*^9, 3.859391349844159*^9}, {
  3.859391759700953*^9, 3.859391760829074*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]1sol", "[", 
   RowBox[{"25", ",", "2"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]1sol", "[", 
   RowBox[{"25", ",", "2"}], "]"}], "[", 
  RowBox[{"[", "3", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.856870207354351*^9, 3.856870210310507*^9}, {
  3.8568768728555183`*^9, 3.856876873365862*^9}, {3.856877655929981*^9, 
  3.8568776630884743`*^9}, {3.8568782154057198`*^9, 3.85687821593892*^9}, {
  3.856878446809044*^9, 3.856878470366826*^9}, {3.8568794664188766`*^9, 
  3.856879469330019*^9}, {3.85939176560533*^9, 3.859391766820631*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Lambda]", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"\[Phi]", "[", "1", "]"}]}], 
      RowBox[{
       RowBox[{"X", " ", "\[Alpha]"}], "+", "\[Delta]"}]]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.856870230527442*^9, 3.856870405285686*^9, 3.856870473848785*^9, {
   3.856873442545711*^9, 3.856873458341145*^9}, 3.856873509290749*^9, 
   3.85687663206805*^9, 3.856876886309188*^9, 3.856877673983567*^9, 
   3.8568782276641493`*^9, {3.85687845514048*^9, 3.8568784810412807`*^9}, 
   3.8568787100821657`*^9, 3.856879064621977*^9, 3.856879858687819*^9, {
   3.859391351665102*^9, 3.859391379186481*^9}, 3.8593917748722687`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Lambda]", "[", "1", "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"\[Lambda]", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"\[Omega]", "[", "1", "]"}]}], 
      RowBox[{
       RowBox[{"X", " ", "\[Alpha]"}], "+", "\[Delta]"}]]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.856870230527442*^9, 3.856870405285686*^9, 3.856870473848785*^9, {
   3.856873442545711*^9, 3.856873458341145*^9}, 3.856873509290749*^9, 
   3.85687663206805*^9, 3.856876886309188*^9, 3.856877673983567*^9, 
   3.8568782276641493`*^9, {3.85687845514048*^9, 3.8568784810412807`*^9}, 
   3.8568787100821657`*^9, 3.856879064621977*^9, 3.856879858687819*^9, {
   3.859391351665102*^9, 3.859391379186481*^9}, 3.859391782622868*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Equilibria solution with migration", "Subsection",
 CellChangeTimes->{{3.814548231241057*^9, 3.814548235227971*^9}, {
  3.814793276135005*^9, 3.814793279082466*^9}, {3.8148808247197866`*^9, 
  3.8148808297265787`*^9}, {3.859898156564561*^9, 3.859898161771533*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"equs", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"gH1", "[", "t", "]"}], ",", 
      RowBox[{"gH2", "[", "t", "]"}], ",", 
      RowBox[{"gP1", "[", "t", "]"}], ",", 
      RowBox[{"gP2", "[", "t", "]"}]}], "}"}], "//", "Factor"}]}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Don", "'"}], "t", " ", "miss", " ", "equilbria"}], "*)"}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.829904475566431*^9, 3.829904478571802*^9}}],

Cell["\<\
Substitute Taylor series expression for parameters that are small (\[Phi], \
\[Omega]).\
\>", "Text",
 CellChangeTimes->{{3.814881049729507*^9, 3.814881057359375*^9}, {
   3.829904482568738*^9, 3.829904499329329*^9}, 3.8299046030571747`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Phi]", "[", "j", "]"}], " ", 
    SuperscriptBox["\[Epsilon]", "j"]}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.829920944177846*^9, 3.8299209445051928`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Epsilon]", " ", 
   RowBox[{"\[Phi]", "[", "1", "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[Epsilon]", "2"], " ", 
   RowBox[{"\[Phi]", "[", "2", "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.829920944946394*^9, 3.831727472835577*^9, 3.852048116864705*^9, 
   3.854194664020232*^9, 3.854365614541813*^9, 3.855073681631487*^9, 
   3.8551432134022713`*^9, 3.855250579674065*^9, 3.8553168512833652`*^9, 
   3.8553363665668087`*^9, 3.855398158258049*^9, {3.8553991036978683`*^9, 
   3.85539912260914*^9}, 3.855403459451358*^9, 3.8556623842739353`*^9, 
   3.855834081083086*^9, 3.856014925681938*^9, 3.8566309142359457`*^9, 
   3.8568632451328793`*^9, 3.8568696258696012`*^9, 3.856878644331459*^9, {
   3.8569551476344223`*^9, 3.856955164716164*^9}, 3.859390615032946*^9, 
   3.859390975496045*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"equs2", "=", 
   RowBox[{"Factor", "[", 
    RowBox[{"equs", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Phi]", "\[Rule]", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Phi]", "[", "j", "]"}], " ", 
           SuperscriptBox["\[Epsilon]", "j"]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", "2"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\[Omega]", "\[Rule]", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Omega]", "[", "j", "]"}], " ", 
           SuperscriptBox["\[Epsilon]", "j"]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", "2"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\[Mu]", "\[Rule]", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Mu]", "[", "j", "]"}], " ", 
           SuperscriptBox["\[Epsilon]", "j"]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\[Nu]", "\[Rule]", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Nu]", "[", "j", "]"}], " ", 
           SuperscriptBox["\[Epsilon]", "j"]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"pH1", "[", "t", "]"}], "\[Rule]", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"pH1", "[", "j", "]"}], " ", 
           SuperscriptBox["\[Epsilon]", "j"]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", "2"}], "}"}]}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"pH2", "[", "t", "]"}], "\[Rule]", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"pH2", "[", "j", "]"}], " ", 
           SuperscriptBox["\[Epsilon]", "j"]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", "2"}], "}"}]}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"pP1", "[", "t", "]"}], "\[Rule]", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"pP1", "[", "j", "]"}], " ", 
           SuperscriptBox["\[Epsilon]", "j"]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", "2"}], "}"}]}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"pP2", "[", "t", "]"}], "\[Rule]", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"pP2", "[", "j", "]"}], " ", 
           SuperscriptBox["\[Epsilon]", "j"]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "0", ",", "2"}], "}"}]}], "]"}]}]}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.814881299990871*^9, 3.814881301311904*^9}, {
   3.814881363846532*^9, 3.814881366276926*^9}, {3.8148815275922623`*^9, 
   3.814881533433063*^9}, {3.85419467592494*^9, 3.8541946898767776`*^9}, 
   3.859898214301195*^9, {3.859898272808729*^9, 3.859898276072384*^9}}],

Cell["Solve for frequencies that set all ODEs to zero.", "Text",
 CellChangeTimes->{{3.814881049729507*^9, 3.814881057359375*^9}, {
  3.829904482568738*^9, 3.829904499329329*^9}, {3.8299045811406317`*^9, 
  3.8299046149775352`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"equs2", "/.", 
       RowBox[{"\[Epsilon]", "\[Rule]", " ", "0"}]}], ")"}], "\[Equal]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"pH1", "[", "0", "]"}], ",", 
      RowBox[{"pH2", "[", "0", "]"}], ",", 
      RowBox[{"pP1", "[", "0", "]"}], ",", 
      RowBox[{"pP2", "[", "0", "]"}]}], "}"}]}], "]"}], "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FirstTerms", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"equs2", "/.", 
        RowBox[{"\[Epsilon]", "\[Rule]", " ", "0"}]}], ")"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"pH1", "[", "0", "]"}], ",", 
       RowBox[{"pH2", "[", "0", "]"}], ",", 
       RowBox[{"pP1", "[", "0", "]"}], ",", 
       RowBox[{"pP2", "[", "0", "]"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.814881309571896*^9, 3.814881378299617*^9}, {
  3.814881543414164*^9, 3.814881545229826*^9}, {3.81488164512243*^9, 
  3.814881677290461*^9}, {3.81488630720396*^9, 3.814886321312364*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.859902113797814*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.8599021164565973`*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulations", "Section",
 CellChangeTimes->{{3.818259323622815*^9, 3.8182593670174837`*^9}, {
  3.8593918080213013`*^9, 3.859391809077277*^9}},
 ExpressionUUID -> "0d2e0ecc-3f0e-4455-9b7a-a864ce91cd32"],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "pars1", ",", " ", "pars2", ",", "pars3", ",", "\[Kappa]scale", ",", 
   "\[Beta]Sub"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pars1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Kappa]", "\[Rule]", 
      RowBox[{"300", "*", "0.5"}]}], ",", 
     RowBox[{"\[Delta]", "\[Rule]", "0.5"}], ",", 
     RowBox[{"\[Gamma]", "\[Rule]", " ", "0.5"}], ",", 
     RowBox[{"X", "\[Rule]", " ", "0.7"}], ",", 
     RowBox[{"Y", "\[Rule]", " ", "0.1"}], ",", 
     RowBox[{"\[Alpha]", "\[Rule]", "1"}], ",", 
     RowBox[{"\[Tau]Max", "\[Rule]", " ", "100"}], ",", 
     RowBox[{"\[Phi]", "\[Rule]", " ", "0.05"}], ",", 
     RowBox[{"\[Omega]", "\[Rule]", " ", "0.05"}], ",", 
     RowBox[{"fp", "\[Rule]", " ", "1"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pars2", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Kappa]", "\[Rule]", 
      RowBox[{"300", "*", "0.5"}]}], ",", 
     RowBox[{"\[Delta]", "\[Rule]", "0.5"}], ",", 
     RowBox[{"\[Gamma]", "\[Rule]", " ", "0.5"}], ",", 
     RowBox[{"X", "\[Rule]", " ", "0.7"}], ",", 
     RowBox[{"Y", "\[Rule]", " ", "0.1"}], ",", 
     RowBox[{"\[Alpha]", "\[Rule]", "1"}], ",", 
     RowBox[{"\[Tau]Max", "\[Rule]", " ", "100"}], ",", 
     RowBox[{"\[Phi]", "\[Rule]", " ", "0.01"}], ",", 
     RowBox[{"\[Omega]", "\[Rule]", " ", "0.01"}], ",", 
     RowBox[{"fp", "\[Rule]", " ", "1"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pars3", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Kappa]", "\[Rule]", 
      RowBox[{"300", "*", "0.5"}]}], ",", 
     RowBox[{"\[Delta]", "\[Rule]", "0.5"}], ",", 
     RowBox[{"\[Gamma]", "\[Rule]", " ", "0.5"}], ",", 
     RowBox[{"X", "\[Rule]", " ", "0.7"}], ",", 
     RowBox[{"Y", "\[Rule]", " ", "0.1"}], ",", 
     RowBox[{"\[Alpha]", "\[Rule]", "1"}], ",", 
     RowBox[{"\[Tau]Max", "\[Rule]", " ", "100"}], ",", 
     RowBox[{"\[Phi]", "\[Rule]", " ", "0.001"}], ",", 
     RowBox[{"\[Omega]", "\[Rule]", " ", "0.001"}], ",", 
     RowBox[{"fp", "\[Rule]", " ", "1"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pars1N", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Kappa]", "\[Rule]", 
      RowBox[{"300", "*", "0.5"}]}], ",", 
     RowBox[{"\[Delta]", "\[Rule]", "0.5"}], ",", 
     RowBox[{"\[Gamma]", "\[Rule]", " ", "0.5"}], ",", 
     RowBox[{"X", "\[Rule]", " ", "0.4"}], ",", 
     RowBox[{"Y", "\[Rule]", " ", "0.4"}], ",", 
     RowBox[{"\[Alpha]", "\[Rule]", "1"}], ",", 
     RowBox[{"\[Tau]Max", "\[Rule]", " ", "100"}], ",", 
     RowBox[{"\[Phi]", "\[Rule]", " ", "0.05"}], ",", 
     RowBox[{"\[Omega]", "\[Rule]", " ", "0.05"}], ",", 
     RowBox[{"fp", "\[Rule]", " ", "1"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pars2N", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Kappa]", "\[Rule]", 
      RowBox[{"300", "*", "0.5"}]}], ",", 
     RowBox[{"\[Delta]", "\[Rule]", "0.5"}], ",", 
     RowBox[{"\[Gamma]", "\[Rule]", " ", "0.5"}], ",", 
     RowBox[{"X", "\[Rule]", " ", "0.4"}], ",", 
     RowBox[{"Y", "\[Rule]", " ", "0.4"}], ",", 
     RowBox[{"\[Alpha]", "\[Rule]", "1"}], ",", 
     RowBox[{"\[Tau]Max", "\[Rule]", " ", "100"}], ",", 
     RowBox[{"\[Phi]", "\[Rule]", " ", "0.01"}], ",", 
     RowBox[{"\[Omega]", "\[Rule]", " ", "0.01"}], ",", 
     RowBox[{"fp", "\[Rule]", " ", "1"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pars3N", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Kappa]", "\[Rule]", 
       RowBox[{"300", "*", "0.5"}]}], ",", 
      RowBox[{"\[Delta]", "\[Rule]", "0.5"}], ",", 
      RowBox[{"\[Gamma]", "\[Rule]", " ", "0.5"}], ",", 
      RowBox[{"X", "\[Rule]", " ", "0.4"}], ",", 
      RowBox[{"Y", "\[Rule]", " ", "0.4"}], ",", 
      RowBox[{"\[Alpha]", "\[Rule]", "1"}], ",", 
      RowBox[{"\[Tau]Max", "\[Rule]", " ", "100"}], ",", 
      RowBox[{"\[Phi]", "\[Rule]", " ", "0.001"}], ",", 
      RowBox[{"\[Omega]", "\[Rule]", " ", "0.001"}], ",", 
      RowBox[{"fp", "\[Rule]", " ", "1"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Parameters", " ", "for", " ", "scaling", " ", "\[Kappa]", " ", "in", " ", 
    "different", " ", "populations"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Kappa]scale", "=", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Transmission", " ", "rates"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]Sub", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Beta]", "[", 
       RowBox[{"1", ",", "1", ",", "1"}], "]"}], "\[Rule]", 
      FractionBox["X", 
       RowBox[{"\[Kappa]", "*", 
        RowBox[{"\[Kappa]scale", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]]}], ",", 
     RowBox[{
      RowBox[{"\[Beta]", "[", 
       RowBox[{"1", ",", "2", ",", "1"}], "]"}], "\[Rule]", 
      FractionBox["Y", 
       RowBox[{"\[Kappa]", "*", 
        RowBox[{"\[Kappa]scale", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]]}], ",", 
     RowBox[{
      RowBox[{"\[Beta]", "[", 
       RowBox[{"2", ",", "1", ",", "1"}], "]"}], "\[Rule]", 
      FractionBox["Y", 
       RowBox[{"\[Kappa]", "*", 
        RowBox[{"\[Kappa]scale", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]]}], ",", 
     RowBox[{
      RowBox[{"\[Beta]", "[", 
       RowBox[{"2", ",", "2", ",", "1"}], "]"}], "\[Rule]", 
      FractionBox["X", 
       RowBox[{"\[Kappa]", "*", 
        RowBox[{"\[Kappa]scale", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]]}], ",", 
     RowBox[{
      RowBox[{"\[Beta]", "[", 
       RowBox[{"1", ",", "1", ",", "2"}], "]"}], "\[Rule]", 
      FractionBox["X", 
       RowBox[{"\[Kappa]", "*", 
        RowBox[{"\[Kappa]scale", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]]}], ",", 
     RowBox[{
      RowBox[{"\[Beta]", "[", 
       RowBox[{"1", ",", "2", ",", "2"}], "]"}], "\[Rule]", 
      FractionBox["Y", 
       RowBox[{"\[Kappa]", "*", 
        RowBox[{"\[Kappa]scale", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]]}], ",", 
     RowBox[{
      RowBox[{"\[Beta]", "[", 
       RowBox[{"2", ",", "1", ",", "2"}], "]"}], "\[Rule]", 
      FractionBox["Y", 
       RowBox[{"\[Kappa]", "*", 
        RowBox[{"\[Kappa]scale", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]]}], ",", 
     RowBox[{
      RowBox[{"\[Beta]", "[", 
       RowBox[{"2", ",", "2", ",", "2"}], "]"}], "\[Rule]", 
      FractionBox["X", 
       RowBox[{"\[Kappa]", "*", 
        RowBox[{"\[Kappa]scale", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}]]}]}], "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.839439607969306*^9, 3.8394396264228563`*^9}, 
   3.839439726449751*^9, {3.839880572502232*^9, 3.839880578822404*^9}, 
   3.8398806232419*^9, 3.8398806707390223`*^9, {3.839880716528277*^9, 
   3.839880719965455*^9}, 3.839880751623321*^9, 3.8398807913593407`*^9, {
   3.839881137881147*^9, 3.839881139477929*^9}, {3.839881315385192*^9, 
   3.839881317156383*^9}, {3.8400290285892153`*^9, 3.840029031114683*^9}, 
   3.840029095209282*^9, {3.840207986326645*^9, 3.840207986435998*^9}, {
   3.840208251030569*^9, 3.840208251187097*^9}, {3.840208456888052*^9, 
   3.8402084578756247`*^9}, 3.840208682964319*^9, 3.8402087277866907`*^9, 
   3.8402089304840403`*^9, {3.84089511332006*^9, 3.8408951286544323`*^9}, 
   3.841084057728776*^9, {3.841084102648827*^9, 3.841084134640151*^9}, 
   3.841237472215946*^9, 3.8412382350740843`*^9, 3.841239072171853*^9, {
   3.8412392477191143`*^9, 3.841239252264381*^9}, 3.841260414175578*^9, 
   3.841260477143095*^9, {3.841267675645835*^9, 3.841267676337641*^9}, {
   3.841269193735259*^9, 3.841269194095077*^9}, {3.841269979104195*^9, 
   3.841269979440687*^9}, 3.842535996625313*^9, {3.8425368243590937`*^9, 
   3.842536843525388*^9}, {3.842538786995254*^9, 3.8425387870894117`*^9}, {
   3.8425392734361963`*^9, 3.8425392795708857`*^9}, {3.842539482168234*^9, 
   3.8425394823900223`*^9}, {3.84254017851392*^9, 3.842540178970096*^9}, {
   3.842540353966332*^9, 3.842540371918833*^9}, {3.842543511660261*^9, 
   3.84254351200263*^9}, {3.842612611914567*^9, 3.8426126244794073`*^9}, {
   3.843213024730419*^9, 3.843213047587216*^9}, {3.843214658260076*^9, 
   3.84321466031383*^9}, {3.843214793277519*^9, 3.843214835700975*^9}, {
   3.843215649359001*^9, 3.843215649444593*^9}, 3.843215761345142*^9, {
   3.8432170445261927`*^9, 3.84321704464594*^9}, {3.843217131945977*^9, 
   3.843217174984414*^9}, 3.843218413981402*^9, {3.8432215649708843`*^9, 
   3.8432215686159143`*^9}, {3.843221648866843*^9, 3.843221650641469*^9}, 
   3.843226899782749*^9, {3.84329808742871*^9, 3.8432980979715347`*^9}, {
   3.843572649849037*^9, 3.843572679657783*^9}, {3.843572748604974*^9, 
   3.843572749156137*^9}, {3.843579425976062*^9, 3.84357942606319*^9}, {
   3.843579475065269*^9, 3.8435794803052387`*^9}, {3.843579560985003*^9, 
   3.84357956230028*^9}, 3.843580304019732*^9, {3.8435947331792803`*^9, 
   3.84359473666568*^9}, {3.843595113736474*^9, 3.843595126226165*^9}, {
   3.8438236014305677`*^9, 3.8438236534716063`*^9}, 3.843919178448392*^9, 
   3.843920303509761*^9, {3.8442508607791348`*^9, 3.84425087573414*^9}, {
   3.844251187302259*^9, 3.844251190003989*^9}, {3.84425301648709*^9, 
   3.844253089511757*^9}, {3.844253126097754*^9, 3.844253153041525*^9}, {
   3.844253782929529*^9, 3.844253791818419*^9}, {3.8442547460407476`*^9, 
   3.8442547563591127`*^9}, {3.844254791737988*^9, 3.844254802664859*^9}, {
   3.844255291282159*^9, 3.844255341025866*^9}, {3.84425554648009*^9, 
   3.844255547444892*^9}, {3.844255860370084*^9, 3.844255861161738*^9}, {
   3.8442567580223703`*^9, 3.844256758254355*^9}, {3.844256812505279*^9, 
   3.844256813587163*^9}, {3.844256883233087*^9, 3.844256901291025*^9}, {
   3.844264050890192*^9, 3.84426405101973*^9}, {3.8442654324742403`*^9, 
   3.844265433606175*^9}, {3.8442716747209663`*^9, 3.84427171066807*^9}, {
   3.844271792088924*^9, 3.8442717928478518`*^9}, {3.8443407451279593`*^9, 
   3.844340746023261*^9}, {3.844341214575769*^9, 3.844341216517837*^9}, 
   3.844341251203615*^9, {3.844341626712245*^9, 3.844341626955805*^9}, {
   3.844341783047532*^9, 3.844341806516285*^9}, {3.8443418472474213`*^9, 
   3.844341873118272*^9}, {3.844342097676446*^9, 3.844342100006205*^9}, 
   3.844342158211096*^9, {3.8443448557202663`*^9, 3.84434485983158*^9}, {
   3.844529627213429*^9, 3.844529641870949*^9}, {3.845042098679303*^9, 
   3.845042103554783*^9}, {3.8450421350561333`*^9, 3.845042135417097*^9}, {
   3.8450421960540733`*^9, 3.845042207594707*^9}, {3.845384380966928*^9, 
   3.845384386869985*^9}, {3.845384521713415*^9, 3.8453845259200153`*^9}, {
   3.845384758948374*^9, 3.845384763940317*^9}, {3.8453856688576527`*^9, 
   3.845385717930378*^9}, {3.8453859089523783`*^9, 3.845385947518366*^9}, {
   3.845386086248909*^9, 3.845386114481173*^9}, {3.845386178553145*^9, 
   3.845386195188161*^9}, {3.845579201483843*^9, 3.845579203027967*^9}, {
   3.845633705203148*^9, 3.845633706003849*^9}, {3.8457186618254013`*^9, 
   3.845718665720907*^9}, {3.8457267082796583`*^9, 3.84572671225889*^9}, {
   3.846069782022253*^9, 3.846069784562304*^9}, {3.846258422419551*^9, 
   3.846258422665204*^9}, {3.8508219335150537`*^9, 3.850821935985025*^9}, {
   3.850839321225192*^9, 3.8508393315020933`*^9}, {3.850839781209652*^9, 
   3.85083978142249*^9}, {3.850839883003853*^9, 3.8508399170832367`*^9}, {
   3.852048416456962*^9, 3.852048416573083*^9}, {3.858688176428527*^9, 
   3.858688216883102*^9}, {3.858688544971246*^9, 3.858688545273858*^9}, {
   3.85868862499617*^9, 3.858688625355545*^9}, {3.858689752563117*^9, 
   3.858689754025462*^9}, {3.858691708486904*^9, 3.858691764153008*^9}, {
   3.858692028854328*^9, 3.8586920464216757`*^9}, {3.858785357384324*^9, 
   3.8587853613980627`*^9}, {3.858788731498176*^9, 3.858788733454472*^9}, {
   3.85879130742424*^9, 3.858791319420124*^9}},
 ExpressionUUID -> "c2ed1eaa-fd58-44df-a788-7b6bd5710aeb"],

Cell[CellGroupData[{

Cell["Event matrix", "Subsection",
 CellChangeTimes->{{3.818259323622815*^9, 3.8182593670174837`*^9}},
 ExpressionUUID -> "0d2e0ecc-3f0e-4455-9b7a-a864ce91cd32"],

Cell["The change in counts for each event.", "Text",
 CellChangeTimes->{{3.845034240132388*^9, 3.845034250174597*^9}},
 ExpressionUUID -> "4f002c29-ecfa-4c4e-b6e4-0007483729ac"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[CapitalDelta]E", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalDelta]E", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "out", "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"H11", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"H12", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"P11", "=", 
       RowBox[{"{", "}"}]}], ";", "\n", 
      RowBox[{"P12", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "Host", " ", "turnover", " ", "in", " ", "population", " ", "1"}], 
        ",", " ", 
        RowBox[{"1", "-", "4"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"H11", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", "k"}], ",", "0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", "\[Equal]", "1"}], ",", 
               RowBox[{"-", "1"}], ",", "1"}], "]"}]}], "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"P11", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", "k"}], ",", "0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", "\[Equal]", "1"}], ",", "0", ",", "0"}], "]"}]}], 
            "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"H12", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", "k"}], ",", "0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", "\[Equal]", "1"}], ",", "0", ",", "0"}], "]"}]}], 
            "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"P12", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", "k"}], ",", "0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", "\[Equal]", "1"}], ",", "0", ",", "0"}], "]"}]}], 
            "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "Parasite", " ", "turnover", " ", "in", " ", "population", " ", "1"}],
         ",", " ", 
        RowBox[{"5", "-", "8"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"H11", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"j", "\[Equal]", "l"}], ",", "0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"j", "\[Equal]", "1"}], ",", "0", ",", "0"}], "]"}]}], 
            "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"l", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"P11", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"j", "\[Equal]", "l"}], ",", "0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"j", "\[Equal]", "1"}], ",", 
               RowBox[{"-", "1"}], ",", "1"}], "]"}]}], "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"l", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"H12", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"j", "\[Equal]", "l"}], ",", "0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"j", "\[Equal]", "1"}], ",", "0", ",", "0"}], "]"}]}], 
            "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"l", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"P12", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"j", "\[Equal]", "l"}], ",", "0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"j", "\[Equal]", "1"}], ",", "0", ",", "0"}], "]"}]}], 
            "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"l", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Infection", " ", "in", " ", "population", " ", "1"}], ",", 
        " ", 
        RowBox[{"9", "-", "24"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"H11", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", "k"}], ",", "0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", "\[Equal]", "1"}], ",", 
               RowBox[{"-", "1"}], ",", "1"}], "]"}]}], "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"l", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"P11", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"j", "\[Equal]", "l"}], ",", "0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"j", "\[Equal]", "1"}], ",", "1", ",", 
               RowBox[{"-", "1"}]}], "]"}]}], "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"l", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"H12", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", "k"}], ",", "0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", "\[Equal]", "1"}], ",", "0", ",", "0"}], "]"}]}], 
            "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"l", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"P12", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"j", "\[Equal]", "l"}], ",", "0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"j", "\[Equal]", "1"}], ",", "0", ",", "0"}], "]"}]}], 
            "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"l", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "Host", " ", "migration", " ", "from", " ", "population", " ", "1"}], 
        ",", " ", 
        RowBox[{"25", "-", "32"}]}], "*)"}], "\n", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "i", " ", "is", " ", "host", " ", "that", " ", "migrates", " ", "out",
          " ", "of", " ", "pop", " ", "1"}], ",", " ", 
        RowBox[{
        "k", " ", "is", " ", "host", " ", "that", " ", "is", " ", "born", " ",
          "to", " ", "replace", " ", "and", " ", "m", " ", "is", " ", "host", 
         " ", "that", " ", "dies", " ", "in", " ", "pop", " ", "2"}]}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"H11", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", "k"}], ",", "0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", "\[Equal]", "1"}], ",", 
               RowBox[{"-", "1"}], ",", "1"}], "]"}]}], "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"P11", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", "k"}], ",", "0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", "\[Equal]", "1"}], ",", "0", ",", "0"}], "]"}]}], 
            "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"H12", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", "m"}], ",", "0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", "\[Equal]", "1"}], ",", "1", ",", 
               RowBox[{"-", "1"}]}], "]"}]}], "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"P12", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", "k"}], ",", "0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", "\[Equal]", "1"}], ",", "0", ",", "0"}], "]"}]}], 
            "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "Parasite", " ", "migration", " ", "from", " ", "population", " ", 
         "1"}], ",", " ", 
        RowBox[{"33", "-", "40"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"H11", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", "k"}], ",", "0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", "\[Equal]", "1"}], ",", "0", ",", "0"}], "]"}]}], 
            "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"P11", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", "k"}], ",", "0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", "\[Equal]", "1"}], ",", 
               RowBox[{"-", "1"}], ",", "1"}], "]"}]}], "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"H12", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", "k"}], ",", "0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", "\[Equal]", "1"}], ",", "0", ",", "0"}], "]"}]}], 
            "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"P12", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", "n"}], ",", "0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", "\[Equal]", "1"}], ",", "1", ",", 
               RowBox[{"-", "1"}]}], "]"}]}], "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\n", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "Host", " ", "turnover", " ", "in", " ", "population", " ", "2"}], 
        ",", " ", 
        RowBox[{"41", "-", "44"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"H11", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", "k"}], ",", "0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", "\[Equal]", "1"}], ",", "0", ",", "0"}], "]"}]}], 
            "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"P11", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", "k"}], ",", "0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", "\[Equal]", "1"}], ",", "0", ",", "0"}], "]"}]}], 
            "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"H12", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", "k"}], ",", "0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", "\[Equal]", "1"}], ",", 
               RowBox[{"-", "1"}], ",", "1"}], "]"}]}], "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"P12", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", "k"}], ",", "0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", "\[Equal]", "1"}], ",", "0", ",", "0"}], "]"}]}], 
            "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "Parasite", " ", "turnover", " ", "in", " ", "population", " ", "2"}],
         ",", " ", 
        RowBox[{"45", "-", "48"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"H11", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"j", "\[Equal]", "l"}], ",", "0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"j", "\[Equal]", "1"}], ",", "0", ",", "0"}], "]"}]}], 
            "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"l", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"P11", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"j", "\[Equal]", "l"}], ",", "0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"j", "\[Equal]", "1"}], ",", "0", ",", "0"}], "]"}]}], 
            "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"l", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"H12", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"j", "\[Equal]", "l"}], ",", "0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"j", "\[Equal]", "1"}], ",", "0", ",", "0"}], "]"}]}], 
            "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"l", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"P12", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"j", "\[Equal]", "l"}], ",", "0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"j", "\[Equal]", "1"}], ",", 
               RowBox[{"-", "1"}], ",", "1"}], "]"}]}], "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"l", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Infection", " ", "in", " ", "population", " ", "2"}], ",", 
        " ", 
        RowBox[{"49", "-", "64"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"H11", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", "k"}], ",", "0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", "\[Equal]", "1"}], ",", "0", ",", "0"}], "]"}]}], 
            "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"l", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"P11", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"j", "\[Equal]", "l"}], ",", "0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"j", "\[Equal]", "1"}], ",", "0", ",", "0"}], "]"}]}], 
            "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"l", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"H12", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", "k"}], ",", "0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", "\[Equal]", "1"}], ",", 
               RowBox[{"-", "1"}], ",", "1"}], "]"}]}], "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"l", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"P12", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"j", "\[Equal]", "l"}], ",", "0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"j", "\[Equal]", "1"}], ",", "1", ",", 
               RowBox[{"-", "1"}]}], "]"}]}], "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"l", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "Host", " ", "migration", " ", "from", " ", "population", " ", "2"}], 
        ",", " ", 
        RowBox[{"65", "-", "72"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"H11", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", "m"}], ",", "0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", "\[Equal]", "1"}], ",", "1", ",", 
               RowBox[{"-", "1"}]}], "]"}]}], "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"P11", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", "k"}], ",", "0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", "\[Equal]", "1"}], ",", "0", ",", "0"}], "]"}]}], 
            "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"H12", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", "k"}], ",", "0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", "\[Equal]", "1"}], ",", 
               RowBox[{"-", "1"}], ",", "1"}], "]"}]}], "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"P12", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", "k"}], ",", "0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", "\[Equal]", "1"}], ",", "0", ",", "0"}], "]"}]}], 
            "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\n", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "Parasite", " ", "migration", " ", "from", " ", "population", " ", 
         "2"}], ",", " ", 
        RowBox[{"73", "-", "80"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"H11", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", "k"}], ",", "0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", "\[Equal]", "1"}], ",", "0", ",", "0"}], "]"}]}], 
            "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"P11", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", "n"}], ",", "0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", "\[Equal]", "1"}], ",", "1", ",", 
               RowBox[{"-", "1"}]}], "]"}]}], "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"H12", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", "k"}], ",", "0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", "\[Equal]", "1"}], ",", "0", ",", "0"}], "]"}]}], 
            "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"P12", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", "k"}], ",", "0", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", "\[Equal]", "1"}], ",", 
               RowBox[{"-", "1"}], ",", "1"}], "]"}]}], "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"out", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Flatten", "[", "H11", "]"}], ",", 
            RowBox[{"Flatten", "[", "P11", "]"}], ",", 
            RowBox[{"Flatten", "[", "H12", "]"}], ",", 
            RowBox[{"Flatten", "[", "P12", "]"}]}], "}"}], ")"}], "//", "N"}],
         "//", "Transpose"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Selecting", " ", "subset", " ", "of", " ", "events", " ", "that", " ",
         "have", " ", "an", " ", "effect"}], "*)"}], "\n", 
      RowBox[{"nonZeroE", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Position", "[", 
         RowBox[{"out", ",", 
          RowBox[{"_", "?", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", "!=", 
              RowBox[{"{", 
               RowBox[{"0.", ",", "0.", ",", "0.", ",", "0."}], "}"}]}], 
             "&"}], ")"}]}]}], "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
       "position", " ", "of", " ", "events", " ", "with", " ", "nonzero", " ",
         "effect"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"out", "[", 
        RowBox[{"[", "nonZeroE", "]"}], "]"}], "*)"}], "\n", "out"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.8165362942332573`*^9, 3.816536309361134*^9}, {
   3.8165364788432493`*^9, 3.816536645651836*^9}, {3.816537590803617*^9, 
   3.816537618324894*^9}, {3.81653778611429*^9, 3.816537791614748*^9}, {
   3.816537829276709*^9, 3.8165378385177593`*^9}, {3.816538820393139*^9, 
   3.816538825310379*^9}, {3.816539025696052*^9, 3.8165391413348093`*^9}, {
   3.816539174001956*^9, 3.816539271902976*^9}, {3.816539501979776*^9, 
   3.816539557920904*^9}, {3.816539607714569*^9, 3.816539635866742*^9}, 
   3.816539698319872*^9, {3.816539855399708*^9, 3.816539866655155*^9}, {
   3.816540015938702*^9, 3.8165400184197693`*^9}, {3.816540054884637*^9, 
   3.816540055059402*^9}, {3.816540140280698*^9, 3.816540176057691*^9}, {
   3.816540294418256*^9, 3.8165403902108307`*^9}, {3.8165404329442787`*^9, 
   3.8165405494959183`*^9}, 3.816541437055331*^9, {3.817051086283535*^9, 
   3.817051293885023*^9}, {3.8170513242019653`*^9, 3.817051375065178*^9}, {
   3.8170514500235567`*^9, 3.817051548573658*^9}, {3.817051579223454*^9, 
   3.8170515917525663`*^9}, {3.817051638154767*^9, 3.81705168169074*^9}, {
   3.81705184809665*^9, 3.817052057012105*^9}, {3.817249895618526*^9, 
   3.817249902910548*^9}, {3.817250107449844*^9, 3.817250114758335*^9}, {
   3.817291559228731*^9, 3.8172916069829807`*^9}, {3.817291642293268*^9, 
   3.817291734580462*^9}, {3.81729178267218*^9, 3.817291791322801*^9}, {
   3.81729182406733*^9, 3.817291855907125*^9}, {3.817291898890654*^9, 
   3.817291900713435*^9}, 3.817291956710125*^9, {3.817292002371516*^9, 
   3.8172920969080563`*^9}, {3.8176423009538593`*^9, 3.817642321277154*^9}, {
   3.817642364585731*^9, 3.8176423658384047`*^9}, {3.817643714719397*^9, 
   3.81764373497449*^9}, {3.8176440145127087`*^9, 3.817644015051588*^9}, {
   3.844253242380424*^9, 3.844253243044241*^9}, {3.844253302172521*^9, 
   3.844253306099774*^9}, {3.844253344796419*^9, 3.84425343068532*^9}, 
   3.844260666156365*^9, {3.84434244497528*^9, 3.844342447258608*^9}, 
   3.8443519092222967`*^9, {3.845034559971972*^9, 3.8450345781911983`*^9}, {
   3.845034615503088*^9, 3.845034650767378*^9}, {3.845034686391677*^9, 
   3.845034757935276*^9}, {3.8450348054561243`*^9, 3.8450348267119503`*^9}, {
   3.8450349935139027`*^9, 3.8450349960178947`*^9}, {3.845474000394541*^9, 
   3.845474000823579*^9}, {3.845474103744244*^9, 3.8454741383198977`*^9}, {
   3.845474177901952*^9, 3.84547419759837*^9}, {3.845474244199305*^9, 
   3.845474246409541*^9}, {3.845482990942752*^9, 3.845483090750293*^9}, {
   3.853257272920455*^9, 3.853257279440633*^9}, {3.858683954234004*^9, 
   3.858684028461371*^9}, {3.858684062763152*^9, 3.858684122658333*^9}, {
   3.858684315352009*^9, 3.858684373070105*^9}, {3.858685018001086*^9, 
   3.858685041525674*^9}, {3.858685174400161*^9, 3.858685223959634*^9}, {
   3.858685267037541*^9, 3.8586852698247137`*^9}, {3.8586873193579807`*^9, 
   3.8586873543507767`*^9}},
 ExpressionUUID -> "ed93beae-d541-4904-809c-c9bbc78d9bc0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalDelta]E", "//", "Length"}]], "Input",
 CellChangeTimes->{{3.8454838147753277`*^9, 3.8454838213866997`*^9}, 
   3.858688464663666*^9, {3.858691776849576*^9, 3.858691781322001*^9}}],

Cell[BoxData["80"], "Output",
 CellChangeTimes->{{3.8454838181600943`*^9, 3.845483821621593*^9}, 
   3.846258466230238*^9, 3.8586917815929003`*^9, 3.858774038481176*^9, 
   3.858774123130046*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Join", "[", 
  RowBox[{
   RowBox[{"\[CapitalDelta]E", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"\[CapitalDelta]E", "[", 
    RowBox[{"[", "22", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.858803051888666*^9, 3.858803097255238*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", ",", "0.`", ",", 
   "0.`", ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{{3.85880306032341*^9, 3.858803097381102*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rate list", "Subsection",
 CellChangeTimes->{{3.818259323622815*^9, 3.818259371392971*^9}},
 ExpressionUUID -> "113584fc-8e77-431d-915c-d677f905e09d"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "RatesStart", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RatesStart", "[", 
    RowBox[{"parms_", ",", "\[Kappa]scale_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"RatesStart", "[", 
     RowBox[{"parms", ",", "\[Kappa]scale"}], "]"}], "=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "out", ",", "d", ",", "i", ",", "j", ",", "k", ",", "l", ",", "sub1", 
        ",", "H", ",", "P"}], "}"}], ",", 
      RowBox[{
       RowBox[{"out", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"sub1", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"H", "[", 
            RowBox[{"2", ",", "1"}], "]"}], "\[Rule]", 
           RowBox[{
            RowBox[{"\[Kappa]", "*", 
             RowBox[{"\[Kappa]scale", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "-", 
            RowBox[{"H", "[", 
             RowBox[{"1", ",", "1"}], "]"}]}]}], ",", 
          RowBox[{
           RowBox[{"P", "[", 
            RowBox[{"2", ",", "1"}], "]"}], "\[Rule]", 
           RowBox[{
            RowBox[{"\[Kappa]", "*", 
             RowBox[{"\[Kappa]scale", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "-", 
            RowBox[{"P", "[", 
             RowBox[{"1", ",", "1"}], "]"}]}]}], ",", 
          RowBox[{
           RowBox[{"H", "[", 
            RowBox[{"2", ",", "2"}], "]"}], "\[Rule]", 
           RowBox[{
            RowBox[{"\[Kappa]", "*", 
             RowBox[{"\[Kappa]scale", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "-", 
            RowBox[{"H", "[", 
             RowBox[{"1", ",", "2"}], "]"}]}]}], ",", 
          RowBox[{
           RowBox[{"P", "[", 
            RowBox[{"2", ",", "2"}], "]"}], "\[Rule]", 
           RowBox[{
            RowBox[{"\[Kappa]", "*", 
             RowBox[{"\[Kappa]scale", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "-", 
            RowBox[{"P", "[", 
             RowBox[{"1", ",", "2"}], "]"}]}]}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"d", "=", 
        FractionBox[
         RowBox[{"\[Kappa]", "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Kappa]scale", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "+", 
            RowBox[{"\[Kappa]scale", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], 
         RowBox[{"(", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Beta]", "[", 
                 RowBox[{"i", ",", "j", ",", "u"}], "]"}], "\[Alpha]", " ", 
                RowBox[{"H", "[", 
                 RowBox[{"i", ",", "u"}], "]"}], 
                RowBox[{"P", "[", 
                 RowBox[{"j", ",", "u"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "1", ",", "2"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}], "+", 
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{"\[Delta]", " ", 
                RowBox[{"H", "[", 
                 RowBox[{"i", ",", "u"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"u", ",", "1", ",", "2"}], "}"}]}], "]"}], ")"}]]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Host", " ", "turnover", " ", "in", " ", "population", " ", "1"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"out", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"d", " ", "\[Delta]", " ", 
            RowBox[{"H", "[", 
             RowBox[{"i", ",", "1"}], "]"}], 
            FractionBox[
             RowBox[{"H", "[", 
              RowBox[{"k", ",", "1"}], "]"}], 
             RowBox[{"\[Kappa]", "*", 
              RowBox[{"\[Kappa]scale", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}]]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
       RowBox[{"(*", "4", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Parasite", " ", "turnover", " ", "in", " ", "population", " ", "1"}],
         "*)"}], "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"out", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"d", " ", "\[Gamma]", " ", 
            RowBox[{"P", "[", 
             RowBox[{"j", ",", "1"}], "]"}], 
            FractionBox[
             RowBox[{"P", "[", 
              RowBox[{"l", ",", "1"}], "]"}], 
             RowBox[{"\[Kappa]", "*", 
              RowBox[{"\[Kappa]scale", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}]]}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"l", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
       RowBox[{"(*", 
        RowBox[{"4", "=", "8"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Infection", " ", "in", " ", "population", " ", "1"}], "*)"}],
        "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"out", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"d", " ", "\[Alpha]", " ", 
            RowBox[{"\[Beta]", "[", 
             RowBox[{"i", ",", "j", ",", "1"}], "]"}], " ", 
            RowBox[{"H", "[", 
             RowBox[{"i", ",", "1"}], "]"}], " ", 
            RowBox[{"P", "[", 
             RowBox[{"j", ",", "1"}], "]"}], 
            FractionBox[
             RowBox[{"H", "[", 
              RowBox[{"k", ",", "1"}], "]"}], 
             RowBox[{"\[Kappa]", "*", 
              RowBox[{"\[Kappa]scale", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}]], 
            FractionBox[
             RowBox[{"P", "[", 
              RowBox[{"l", ",", "1"}], "]"}], 
             RowBox[{"\[Kappa]", "*", 
              RowBox[{"\[Kappa]scale", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}]]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"l", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
       RowBox[{"(*", 
        RowBox[{"16", "=", "24"}], "*)"}], "\n", 
       RowBox[{"(*", 
        RowBox[{
        "Host", " ", "migration", " ", "from", " ", "population", " ", "1"}], 
        "*)"}], "\n", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"out", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"d", " ", "\[Phi]", " ", 
            RowBox[{"H", "[", 
             RowBox[{"i", ",", "1"}], "]"}], 
            FractionBox[
             RowBox[{"H", "[", 
              RowBox[{"k", ",", "1"}], "]"}], 
             RowBox[{"\[Kappa]", "*", 
              RowBox[{"\[Kappa]scale", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}]], 
            FractionBox[
             RowBox[{"H", "[", 
              RowBox[{"m", ",", "2"}], "]"}], 
             RowBox[{"\[Kappa]", "*", 
              RowBox[{"\[Kappa]scale", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"m", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
       RowBox[{"(*", 
        RowBox[{"4", "=", "28"}], "*)"}], "\n", 
       RowBox[{"(*", 
        RowBox[{
        "Parasite", " ", "migration", " ", "from", " ", "population", " ", 
         "1"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"out", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"d", " ", "\[Omega]", " ", 
            RowBox[{"P", "[", 
             RowBox[{"j", ",", "1"}], "]"}], 
            FractionBox[
             RowBox[{"P", "[", 
              RowBox[{"l", ",", "1"}], "]"}], 
             RowBox[{"\[Kappa]", "*", 
              RowBox[{"\[Kappa]scale", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}]], 
            FractionBox[
             RowBox[{"P", "[", 
              RowBox[{"n", ",", "2"}], "]"}], 
             RowBox[{"\[Kappa]", "*", 
              RowBox[{"\[Kappa]scale", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]]}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"l", ",", "1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
       RowBox[{"(*", 
        RowBox[{"4", "=", "32"}], "*)"}], "\n", 
       RowBox[{"(*", 
        RowBox[{
        "Host", " ", "turnover", " ", "in", " ", "population", " ", "2"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"out", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"d", " ", "\[Delta]", " ", 
            RowBox[{"H", "[", 
             RowBox[{"i", ",", "2"}], "]"}], 
            FractionBox[
             RowBox[{"H", "[", 
              RowBox[{"k", ",", "2"}], "]"}], 
             RowBox[{"\[Kappa]", "*", 
              RowBox[{"\[Kappa]scale", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
       RowBox[{"(*", 
        RowBox[{"4", "=", "36"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Parasite", " ", "turnover", " ", "in", " ", "population", " ", "2"}],
         "*)"}], "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"out", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"d", " ", "\[Gamma]", " ", 
            RowBox[{"P", "[", 
             RowBox[{"j", ",", "2"}], "]"}], 
            FractionBox[
             RowBox[{"P", "[", 
              RowBox[{"l", ",", "2"}], "]"}], 
             RowBox[{"\[Kappa]", "*", 
              RowBox[{"\[Kappa]scale", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]]}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"l", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
       RowBox[{"(*", 
        RowBox[{"4", "=", "40"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Infection", " ", "in", " ", "population", " ", "2"}], "*)"}],
        "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"out", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"d", " ", "\[Alpha]", " ", 
            RowBox[{"\[Beta]", "[", 
             RowBox[{"i", ",", "j", ",", "2"}], "]"}], " ", 
            RowBox[{"H", "[", 
             RowBox[{"i", ",", "2"}], "]"}], " ", 
            RowBox[{"P", "[", 
             RowBox[{"j", ",", "2"}], "]"}], 
            FractionBox[
             RowBox[{"H", "[", 
              RowBox[{"k", ",", "2"}], "]"}], 
             RowBox[{"\[Kappa]", "*", 
              RowBox[{"\[Kappa]scale", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]], 
            FractionBox[
             RowBox[{"P", "[", 
              RowBox[{"l", ",", "2"}], "]"}], 
             RowBox[{"\[Kappa]", "*", 
              RowBox[{"\[Kappa]scale", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"l", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
       RowBox[{"(*", 
        RowBox[{"16", "=", "56"}], "*)"}], "\n", 
       RowBox[{"(*", 
        RowBox[{
        "Host", " ", "migration", " ", "from", " ", "population", " ", "2"}], 
        "*)"}], "\n", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"out", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"d", " ", "\[Phi]", " ", 
            RowBox[{"H", "[", 
             RowBox[{"i", ",", "2"}], "]"}], 
            FractionBox[
             RowBox[{"H", "[", 
              RowBox[{"k", ",", "2"}], "]"}], 
             RowBox[{"\[Kappa]", "*", 
              RowBox[{"\[Kappa]scale", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]], 
            FractionBox[
             RowBox[{"H", "[", 
              RowBox[{"m", ",", "1"}], "]"}], 
             RowBox[{"\[Kappa]", "*", 
              RowBox[{"\[Kappa]scale", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}]]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"m", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
       RowBox[{"(*", 
        RowBox[{"4", "=", "60"}], "*)"}], "\n", 
       RowBox[{"(*", 
        RowBox[{
        "Parasite", " ", "migration", " ", "from", " ", "population", " ", 
         "2"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"out", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"d", " ", "\[Omega]", " ", 
            RowBox[{"P", "[", 
             RowBox[{"j", ",", "2"}], "]"}], 
            FractionBox[
             RowBox[{"P", "[", 
              RowBox[{"l", ",", "2"}], "]"}], 
             RowBox[{"\[Kappa]", "*", 
              RowBox[{"\[Kappa]scale", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]], 
            FractionBox[
             RowBox[{"P", "[", 
              RowBox[{"n", ",", "1"}], "]"}], 
             RowBox[{"\[Kappa]", "*", 
              RowBox[{"\[Kappa]scale", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}]]}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"l", ",", "1", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "]"}], ";", 
       RowBox[{"(*", 
        RowBox[{"4", "=", "64"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"out", "=", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Flatten", "[", "out", "]"}], "/.", "sub1"}], "/.", 
           "\[Beta]Sub"}], "/.", "parms"}], "//", "Simplify"}]}], ";", 
       "\[IndentingNewLine]", "out"}]}], "\[IndentingNewLine]", "]"}]}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.816535627340788*^9, 3.816535841508461*^9}, {
   3.816535892010139*^9, 3.816536099990307*^9}, {3.8165361697711906`*^9, 
   3.81653619782653*^9}, {3.816536255082179*^9, 3.816536271166767*^9}, {
   3.8165364279755497`*^9, 3.816536430005516*^9}, {3.817212360860718*^9, 
   3.8172123636388206`*^9}, {3.81724715798831*^9, 3.817247269789404*^9}, {
   3.8172475549911413`*^9, 3.817247572549913*^9}, {3.8172476100447817`*^9, 
   3.817247658871276*^9}, 3.817247701781869*^9, {3.817247735045306*^9, 
   3.817247780628592*^9}, {3.817247840655059*^9, 3.817247843910852*^9}, {
   3.817247940550696*^9, 3.817247962961164*^9}, {3.817248005317102*^9, 
   3.817248016748876*^9}, {3.8172480596661386`*^9, 3.817248069301929*^9}, {
   3.81724821003257*^9, 3.817248220709311*^9}, {3.817248583953813*^9, 
   3.817248613593543*^9}, {3.8172486490319023`*^9, 3.817248822787299*^9}, {
   3.817248889940085*^9, 3.8172489402307158`*^9}, {3.817248990091955*^9, 
   3.8172490288740587`*^9}, {3.817290574842289*^9, 3.817290592563533*^9}, {
   3.817290628107564*^9, 3.817290629698242*^9}, {3.817290731540258*^9, 
   3.817290732672826*^9}, {3.8173020970938807`*^9, 3.8173021321274223`*^9}, {
   3.817302822895733*^9, 3.817302834214299*^9}, {3.8176421648161983`*^9, 
   3.817642165349978*^9}, {3.8176427084716673`*^9, 3.817642709387249*^9}, {
   3.817642876031145*^9, 3.817643001127056*^9}, {3.8176430657002087`*^9, 
   3.817643134262953*^9}, {3.817643167447653*^9, 3.817643263657906*^9}, {
   3.817644167651579*^9, 3.817644217476103*^9}, {3.8176442743596163`*^9, 
   3.817644363057088*^9}, 3.817644393272215*^9, {3.817644449275382*^9, 
   3.817644510946703*^9}, {3.817645290465991*^9, 3.817645293012562*^9}, {
   3.8182478797251987`*^9, 3.818247885249291*^9}, {3.8184226239141693`*^9, 
   3.8184226322831707`*^9}, {3.819127842920887*^9, 3.8191278498364077`*^9}, {
   3.819127883441494*^9, 3.819127883878141*^9}, {3.819127961128251*^9, 
   3.819127973536704*^9}, {3.8442526385877132`*^9, 3.844252743342298*^9}, 
   3.8442529900580807`*^9, {3.844253182352888*^9, 3.8442531848670692`*^9}, 
   3.8442572429552107`*^9, {3.8443422597028027`*^9, 3.844342276195128*^9}, 
   3.845033937364081*^9, {3.845034073953515*^9, 3.845034123109655*^9}, {
   3.845034792182992*^9, 3.845034800745943*^9}, {3.845474363195449*^9, 
   3.845474436786104*^9}, {3.845474467403468*^9, 3.845474534389319*^9}, {
   3.845474646714924*^9, 3.845474755906488*^9}, {3.84547479996275*^9, 
   3.845475011757102*^9}, {3.845478656676297*^9, 3.845478656756467*^9}, {
   3.8454838649218082`*^9, 3.845483866396123*^9}, {3.845483922895607*^9, 
   3.845483923505727*^9}, {3.845483972913945*^9, 3.845483995414246*^9}, {
   3.858684406133662*^9, 3.858684428955513*^9}, {3.858684463280538*^9, 
   3.858684583102269*^9}, 3.8586884227164373`*^9, {3.858774280011011*^9, 
   3.85877428098543*^9}},
 ExpressionUUID -> "addaad7d-a9ba-40fb-b0ad-df2670b0bafb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Rates", "[", 
   RowBox[{"sVec_", ",", "parms_", ",", "\[Kappa]scale_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"RatesStart", "[", 
    RowBox[{"parms", ",", "\[Kappa]scale"}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"H", "[", 
       RowBox[{"1", ",", "1"}], "]"}], "\[Rule]", " ", 
      RowBox[{"sVec", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"P", "[", 
       RowBox[{"1", ",", "1"}], "]"}], "\[Rule]", 
      RowBox[{"sVec", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"H", "[", 
       RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", " ", 
      RowBox[{"sVec", "[", 
       RowBox[{"[", "3", "]"}], "]"}]}], ",", 
     RowBox[{
      RowBox[{"P", "[", 
       RowBox[{"1", ",", "2"}], "]"}], "\[Rule]", 
      RowBox[{"sVec", "[", 
       RowBox[{"[", "4", "]"}], "]"}]}]}], "}"}]}]}]], "Code",
 CellChangeTimes->{{3.816535627340788*^9, 3.816535841508461*^9}, {
   3.816535892010139*^9, 3.816536099990307*^9}, {3.8165361697711906`*^9, 
   3.81653619782653*^9}, {3.816536255082179*^9, 3.816536271166767*^9}, {
   3.8165364279755497`*^9, 3.816536430005516*^9}, {3.817212360860718*^9, 
   3.8172123636388206`*^9}, {3.81724715798831*^9, 3.817247269789404*^9}, {
   3.8172475549911413`*^9, 3.817247572549913*^9}, {3.8172476100447817`*^9, 
   3.817247658871276*^9}, 3.817247701781869*^9, {3.817247735045306*^9, 
   3.817247780628592*^9}, {3.817247840655059*^9, 3.817247843910852*^9}, {
   3.817247940550696*^9, 3.817247962961164*^9}, {3.817248005317102*^9, 
   3.817248016748876*^9}, {3.8172480596661386`*^9, 3.817248069301929*^9}, {
   3.81724821003257*^9, 3.817248220709311*^9}, {3.817248583953813*^9, 
   3.817248613593543*^9}, {3.8172486490319023`*^9, 3.817248822787299*^9}, {
   3.817248889940085*^9, 3.8172489402307158`*^9}, {3.817248990091955*^9, 
   3.8172490288740587`*^9}, {3.817290574842289*^9, 3.817290592563533*^9}, {
   3.817290628107564*^9, 3.817290629698242*^9}, {3.817290731540258*^9, 
   3.817290732672826*^9}, {3.8173020970938807`*^9, 3.8173021321274223`*^9}, {
   3.817302822895733*^9, 3.817302834214299*^9}, {3.8176421648161983`*^9, 
   3.817642165349978*^9}, {3.8176427084716673`*^9, 3.817642709387249*^9}, {
   3.817642876031145*^9, 3.817643001127056*^9}, {3.8176430657002087`*^9, 
   3.817643134262953*^9}, {3.817643167447653*^9, 3.817643218365265*^9}, {
   3.817643273024897*^9, 3.817643280564568*^9}, {3.817644843071134*^9, 
   3.817644849407752*^9}, {3.8185223251836767`*^9, 3.818522341440384*^9}, {
   3.818775377284606*^9, 3.818775403325391*^9}, {3.819127854456449*^9, 
   3.819127855031177*^9}, {3.819127887357086*^9, 3.819127887886693*^9}, {
   3.819127950048332*^9, 3.8191279544152927`*^9}, {3.8442527618893642`*^9, 
   3.844252794618005*^9}, {3.845034109457511*^9, 3.845034126781673*^9}, {
   3.845034162688178*^9, 3.845034167234627*^9}, {3.845475067763987*^9, 
   3.845475102571651*^9}},
 ExpressionUUID -> "3735dfbb-22e1-4a8e-8024-c79263354df7"],

Cell["\<\
The total rate which events (with nonzero effect) occur is given by:\
\>", "Text",
 CellChangeTimes->{{3.84504602941035*^9, 3.8450460449565*^9}},
 ExpressionUUID -> "32f059c0-17a6-4d96-a7a5-afd90f42bd72"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Rates", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.5", "*", 
         RowBox[{"\[Kappa]scale", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{"0.5", "*", 
         RowBox[{"\[Kappa]scale", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{"0.5", "*", 
         RowBox[{"\[Kappa]scale", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", 
        RowBox[{"0.5", "*", 
         RowBox[{"\[Kappa]scale", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "*", "\[Kappa]"}], "/.", 
     "pars1"}], ",", "pars1", ",", "\[Kappa]scale"}], "]"}], "//", 
  "Length"}]], "Input",
 CellChangeTimes->{{3.844529158338127*^9, 3.84452921094582*^9}, {
  3.844529277310254*^9, 3.844529290449218*^9}, {3.8445293520091877`*^9, 
  3.84452935482627*^9}, {3.84452940212017*^9, 3.844529402968628*^9}, {
  3.845475113359988*^9, 3.845475119941393*^9}, {3.845475319368752*^9, 
  3.845475330110338*^9}, {3.858688307517831*^9, 3.858688310340014*^9}, {
  3.8586963240454206`*^9, 3.858696325264821*^9}},
 ExpressionUUID -> "c826765d-f029-4e8b-a704-ef7fcd743a02"],

Cell[BoxData["80"], "Output",
 CellChangeTimes->{{3.844529166609975*^9, 3.84452921129314*^9}, {
   3.844529285608728*^9, 3.844529290623665*^9}, 3.8445293551652308`*^9, 
   3.8445294033415403`*^9, 3.8450339537076187`*^9, 3.845034229470359*^9, {
   3.845034833100848*^9, 3.8450348530275106`*^9}, 3.845046006120393*^9, 
   3.845376487991785*^9, 3.845475121303549*^9, 3.84547515376882*^9, {
   3.845475217020555*^9, 3.845475222238823*^9}, 3.845475330623082*^9, 
   3.845483171718542*^9, {3.845483986559473*^9, 3.845483999174366*^9}, 
   3.846258473542787*^9, 3.850822063500524*^9, 3.858688247932184*^9, 
   3.858688310585639*^9, 3.858688471770129*^9, 3.858688565161852*^9, 
   3.858688637694371*^9, 3.858691789341344*^9, {3.85869632113032*^9, 
   3.858696325829894*^9}, 3.8586963895675573`*^9, 3.858774065896388*^9, 
   3.8587741298562603`*^9, 3.858847478579815*^9},
 ExpressionUUID -> "f3ec6bb8-300e-40ca-b3da-c63094013571"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Define algorithm function \[OpenCurlyDoubleQuote]",
 StyleBox["sim[parms]",
  IgnoreSpellCheck->True],
 "\[CloseCurlyDoubleQuote]"
}], "Subsection",
 CellChangeTimes->{{3.818259624198258*^9, 3.8182596471887302`*^9}, {
  3.818260251425699*^9, 3.8182602594006033`*^9}, {3.8182602924832573`*^9, 
  3.818260315809164*^9}},
 ExpressionUUID -> "3a742992-9912-4243-ab87-f3f1247d5aa9"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "sim", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sim", "[", 
    RowBox[{"parms_", ",", "intG_", ",", "\[Kappa]scale_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"sim", "[", 
     RowBox[{"parms", ",", "intG", ",", "\[Kappa]scale"}], "]"}], "=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "out", ",", "rateVec", ",", "\[CapitalDelta]t", ",", "ct", ",", "e", 
        ",", "elist", ",", "eNeutral", ",", "eJoint"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", "Initialize", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"out", "=", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"0.5", "*", "\[Kappa]", "*", 
               RowBox[{"\[Kappa]scale", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "/.", "parms"}], ",", 
             RowBox[{
              RowBox[{"0.5", "*", "\[Kappa]", "*", 
               RowBox[{"\[Kappa]scale", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "/.", "parms"}], ",", 
             RowBox[{
              RowBox[{".5", "*", "\[Kappa]", "*", 
               RowBox[{"\[Kappa]scale", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "/.", "parms"}], ",", 
             RowBox[{
              RowBox[{".5", "*", "\[Kappa]", "*", 
               RowBox[{"\[Kappa]scale", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "/.", "parms"}], ",", 
             RowBox[{
              RowBox[{"0.5", "*", "\[Kappa]", "*", 
               RowBox[{"\[Kappa]scale", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "/.", "parms"}], ",", 
             RowBox[{
              RowBox[{"0.5", "*", "\[Kappa]", "*", 
               RowBox[{"\[Kappa]scale", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "/.", "parms"}], ",", 
             RowBox[{
              RowBox[{".5", "*", "\[Kappa]", "*", 
               RowBox[{"\[Kappa]scale", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "/.", "parms"}], ",", 
             RowBox[{
              RowBox[{".5", "*", "\[Kappa]", "*", 
               RowBox[{"\[Kappa]scale", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "/.", "parms"}]}], "}"}]}], 
          "}"}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"rateVec", "=", 
        RowBox[{"Rates", "[", 
         RowBox[{
          RowBox[{"out", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "2", ",", 
             RowBox[{"1", ";;", "4"}]}], "]"}], "]"}], ",", "parms", ",", 
          "\[Kappa]scale"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[CapitalDelta]t", "=", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"ExponentialDistribution", "[", 
          RowBox[{"Total", "[", "rateVec", "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"elist", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"e", ",", 
          RowBox[{"{", 
           RowBox[{"e", ",", "1", ",", 
            RowBox[{"Length", "[", "\[CapitalDelta]E", "]"}]}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"out", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}], "+", 
            "\[CapitalDelta]t"}], ")"}], "\[LessEqual]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Tau]Max", "/.", "parms"}], ")"}], "*", "1.1"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"ct", "=", "1"}], ",", 
            RowBox[{"ct", "<", "10000"}], ",", 
            RowBox[{"ct", "++"}], ","}]}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"e", "=", 
           RowBox[{"RandomChoice", "[", 
            RowBox[{"rateVec", "\[Rule]", "elist"}], "]"}]}], ";", "\n", 
          RowBox[{"eNeutral", "=", 
           RowBox[{"RandomChoice", "[", "elist", "]"}]}], ";", "\n", 
          RowBox[{"eJoint", "=", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"\[CapitalDelta]E", "[", 
              RowBox[{"[", "e", "]"}], "]"}], ",", 
             RowBox[{"\[CapitalDelta]E", "[", 
              RowBox[{"[", "eNeutral", "]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"out", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"out", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}], "+", 
               "\[CapitalDelta]t"}], ",", 
              RowBox[{
               RowBox[{"out", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}], "+", 
               "eJoint"}]}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"rateVec", "=", 
           RowBox[{"Rates", "[", 
            RowBox[{
             RowBox[{"out", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "2", ",", 
                RowBox[{"1", ";;", "4"}]}], "]"}], "]"}], ",", "parms", ",", 
             "\[Kappa]scale"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"\[CapitalDelta]t", "=", 
           RowBox[{"RandomVariate", "[", 
            RowBox[{"ExponentialDistribution", "[", 
             RowBox[{"Total", "[", "rateVec", "]"}], "]"}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "out"}]}], 
     "\[IndentingNewLine]", "]"}]}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.8176433227517138`*^9, 3.8176436745514793`*^9}, {
   3.817643768301881*^9, 3.817643768571197*^9}, {3.817643867302458*^9, 
   3.817643942458765*^9}, {3.817645067122465*^9, 3.8176451021145477`*^9}, {
   3.8176451791427402`*^9, 3.8176451933487587`*^9}, {3.817645321556904*^9, 
   3.8176454021917477`*^9}, {3.817645704546652*^9, 3.8176457048679247`*^9}, {
   3.817645740632338*^9, 3.8176457431553097`*^9}, {3.81764593739357*^9, 
   3.817645942144189*^9}, {3.817646000363265*^9, 3.8176460004492807`*^9}, {
   3.8182480247005787`*^9, 3.8182480672043447`*^9}, {3.818248436238508*^9, 
   3.818248436555393*^9}, {3.818249138698366*^9, 3.818249364552864*^9}, {
   3.818249473716482*^9, 3.818249476177484*^9}, {3.8182495645058317`*^9, 
   3.818249568748336*^9}, {3.8182496870452957`*^9, 3.818249687619335*^9}, {
   3.818249738737001*^9, 3.8182497593585587`*^9}, {3.818249871368203*^9, 
   3.818249877090679*^9}, {3.818249962180675*^9, 3.818249962966577*^9}, {
   3.818250181735304*^9, 3.8182501853808117`*^9}, {3.818250237436067*^9, 
   3.8182502615641747`*^9}, {3.8182503240931673`*^9, 3.818250329753729*^9}, {
   3.8182505429482613`*^9, 3.818250584335807*^9}, {3.818252575549559*^9, 
   3.818252575795102*^9}, {3.818252963235303*^9, 3.8182529636000147`*^9}, {
   3.818253397621181*^9, 3.8182533988056803`*^9}, {3.818260553444168*^9, 
   3.818260559250202*^9}, {3.8184212965718517`*^9, 3.818421349776429*^9}, {
   3.818421380299891*^9, 3.818421384971887*^9}, {3.81842328106112*^9, 
   3.818423287805193*^9}, {3.81842332461719*^9, 3.81842335630212*^9}, {
   3.8185226191549797`*^9, 3.818522670338872*^9}, 3.818781688920431*^9, {
   3.818782982081483*^9, 3.818782984420027*^9}, {3.819048148790155*^9, 
   3.819048149441897*^9}, {3.819048643128626*^9, 3.819048654116335*^9}, {
   3.819049175885826*^9, 3.819049176532998*^9}, {3.8191268864457197`*^9, 
   3.819126895165012*^9}, {3.819127569424951*^9, 3.819127603157199*^9}, 
   3.84425349328996*^9, {3.8442535821355886`*^9, 3.844253616709362*^9}, {
   3.84425365923481*^9, 3.8442536593473587`*^9}, 3.844253703628481*^9, {
   3.844253823170782*^9, 3.8442538251289682`*^9}, {3.8442558216040277`*^9, 
   3.844255831485633*^9}, {3.844255896432427*^9, 3.844255896546402*^9}, {
   3.844255927786042*^9, 3.844255928781331*^9}, {3.844256958601091*^9, 
   3.844256964277421*^9}, {3.844257351532114*^9, 3.8442573557640247`*^9}, {
   3.8442606261137037`*^9, 3.844260652520509*^9}, 3.844260851792569*^9, {
   3.844264736873929*^9, 3.844264748124008*^9}, {3.844342454457096*^9, 
   3.844342511967845*^9}, {3.844342569607862*^9, 3.8443425772475147`*^9}, 
   3.8443446678958063`*^9, {3.844351917235779*^9, 3.844351922947062*^9}, {
   3.844352407046978*^9, 3.844352451580374*^9}, {3.844528693998398*^9, 
   3.8445286942160187`*^9}, {3.8445297773296337`*^9, 3.844529788539955*^9}, {
   3.845034948635648*^9, 3.845034966912302*^9}, {3.845035020244256*^9, 
   3.8450350252831078`*^9}, {3.8450461935998383`*^9, 3.845046228491025*^9}, {
   3.8454752954158087`*^9, 3.845475297446822*^9}, {3.8454753373620443`*^9, 
   3.8454753947248*^9}, {3.8587694023481607`*^9, 3.858769406892338*^9}, 
   3.858769452245163*^9, {3.858773765650076*^9, 3.858773768780795*^9}, {
   3.858779474108523*^9, 3.858779475547432*^9}, {3.858802949197372*^9, 
   3.8588029497903643`*^9}, {3.858802992614366*^9, 3.858803024560028*^9}, {
   3.8588031065856037`*^9, 3.858803139690054*^9}, {3.858803253942919*^9, 
   3.858803286332139*^9}},
 ExpressionUUID -> "07001c0b-8850-4a57-acdf-e149e40f6b6e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sim", "[", 
  RowBox[{"pars2", ",", "1", ",", "\[Kappa]scale"}], "]"}]], "Input",
 CellChangeTimes->{{3.85880329539585*^9, 3.8588033028592987`*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"{", 
              RowBox[{
              "75.`", ",", "75.`", ",", "75.`", ",", "75.`", ",", "75.`", ",",
                "75.`", ",", "75.`", ",", "75.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.005604809006808311`", ",", 
             RowBox[{"{", 
              RowBox[{
              "75.`", ",", "75.`", ",", "74.`", ",", "75.`", ",", "75.`", ",",
                "75.`", ",", "75.`", ",", "75.`"}], "}"}]}], "}"}], ",", 
           TemplateBox[{"52897"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> {{1, 1}, {1, 2}}, 
              FrameStyle -> None, RoundingRadius -> 7]& )], ",", 
           RowBox[{"{", 
            RowBox[{"109.99499299579789`", ",", 
             RowBox[{"{", 
              RowBox[{
              "150.`", ",", "0.`", ",", "150.`", ",", "0.`", ",", "162.`", 
               ",", "13.`", ",", "18.`", ",", "8.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"109.99981955306949`", ",", 
             RowBox[{"{", 
              RowBox[{
              "150.`", ",", "0.`", ",", "150.`", ",", "0.`", ",", "162.`", 
               ",", "13.`", ",", "17.`", ",", "8.`"}], "}"}]}], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{73., {3., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{61., {0., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 129, 27068356760114524050, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{68., {0., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 129, 27068356760114524050, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{51., {0., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 129, 27068356760114524050, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{92., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[129]]], "Output",
 CellChangeTimes->{3.858803359047494*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Define function \[OpenCurlyDoubleQuote]",
 StyleBox["plostList",
  IgnoreSpellCheck->True],
 "\[CloseCurlyDoubleQuote], which contains allele frequencies, \
heterozygosities and measures of local adaptation"
}], "Subsection",
 CellChangeTimes->{{3.818259624198258*^9, 3.8182596471887302`*^9}, {
  3.818260251425699*^9, 3.8182602594006033`*^9}, {3.8182602924832573`*^9, 
  3.818260315809164*^9}, {3.850489965906767*^9, 3.850489971913869*^9}, {
  3.850491430438607*^9, 3.8504914440520887`*^9}},
 ExpressionUUID -> "3a742992-9912-4243-ab87-f3f1247d5aa9"],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "pHsim", ",", "pPsim", ",", "plotList", ",", "out", ",", "s", ",", "sMax", 
   ",", "pH1", ",", "pP1", ",", "pH2", ",", "pP2", ",", "t", ",", 
   "overallHet", ",", "Het1", ",", "Het2", ",", "LH1", ",", "LH2", ",", 
   "overallLH"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotList", "[", 
   RowBox[{"pars_", ",", "intG_", ",", "\[Kappa]scale_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"plotList", "[", 
    RowBox[{"pars", ",", "intG", ",", "\[Kappa]scale"}], "]"}], "=", 
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "out", ",", "s", ",", "sMax", ",", "pH1", ",", "pP1", ",", "pH2", ",", 
       "pP2", ",", "t", ",", "overallHet", ",", "Het1", ",", "Het2", ",", 
       "pHsim", ",", "pPsim", ",", "pH1N", ",", "pP1N", ",", "pH2N", ",", 
       "pP2N", ",", "overallHetN", ",", "Het1N", ",", "Het2N", ",", "pHsimN", 
       ",", "pPsimN"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Length", " ", "of", " ", "simulation", " ", "in", " ", "timesteps"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sMax", "=", 
       RowBox[{"Length", "[", 
        RowBox[{
         RowBox[{"sim", "[", 
          RowBox[{"pars", ",", "intG", ",", "\[Kappa]scale"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "1"}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Function", " ", "for", " ", "frequency", " ", "of", " ", "host", " ", 
        "type", " ", "1", " ", "in", " ", "population", " ", "i", " ", "at", 
        " ", "timestep", " ", "s", " ", "in", " ", "simulation", " ", 
        "intG"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pHsim", "[", 
        RowBox[{"i_", ",", "s_"}], "]"}], ":=", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"sim", "[", 
           RowBox[{"pars", ",", "intG", ",", "\[Kappa]scale"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"s", ",", "2", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"i", "\[Equal]", "2"}], ",", "3", ",", "1"}], "]"}]}], 
           "]"}], "]"}], 
         RowBox[{"\[Kappa]", "*", 
          RowBox[{"\[Kappa]scale", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}]], "/.", "pars"}]}], ";", "\n", 
      RowBox[{
       RowBox[{"pHsimN", "[", 
        RowBox[{"i_", ",", "s_"}], "]"}], ":=", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"sim", "[", 
           RowBox[{"pars", ",", "intG", ",", "\[Kappa]scale"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"s", ",", "2", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"i", "\[Equal]", "2"}], ",", "7", ",", "5"}], "]"}]}], 
           "]"}], "]"}], 
         RowBox[{"\[Kappa]", "*", 
          RowBox[{"\[Kappa]scale", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}]], "/.", "pars"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Function", " ", "for", " ", "frequency", " ", "of", " ", "parasite", 
        " ", "type", " ", "1", " ", "in", " ", "population", " ", "i", " ", 
        "at", " ", "timestep", " ", "s", " ", "in", " ", "simulation", " ", 
        "intG"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pPsim", "[", 
        RowBox[{"i_", ",", "s_"}], "]"}], ":=", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"sim", "[", 
           RowBox[{"pars", ",", "intG", ",", "\[Kappa]scale"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"s", ",", "2", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"i", "\[Equal]", "2"}], ",", "4", ",", "2"}], "]"}]}], 
           "]"}], "]"}], 
         RowBox[{"\[Kappa]", "*", 
          RowBox[{"\[Kappa]scale", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}]], "/.", "pars"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pPsimN", "[", 
        RowBox[{"i_", ",", "s_"}], "]"}], ":=", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"sim", "[", 
           RowBox[{"pars", ",", "intG", ",", "\[Kappa]scale"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"s", ",", "2", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"i", "\[Equal]", "2"}], ",", "8", ",", "6"}], "]"}]}], 
           "]"}], "]"}], 
         RowBox[{"\[Kappa]", "*", 
          RowBox[{"\[Kappa]scale", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}]], "/.", "pars"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"out", " ", "should", " ", "return", " ", "time"}], ",", " ", 
        
        RowBox[{
        "frequency", " ", "of", " ", "host", " ", "in", " ", "population", 
         " ", "1"}], ",", " ", 
        RowBox[{
        "frequency", " ", "of", " ", "parasite", " ", "in", " ", "population",
          " ", "2"}], ",", " ", 
        RowBox[{
        "frequency", " ", "of", " ", "host", " ", "in", " ", "population", 
         " ", "2"}], ",", " ", 
        RowBox[{
        "frequency", " ", "of", " ", "parasite", " ", "in", " ", "population",
          " ", "2"}], ",", " ", 
        RowBox[{"overall", " ", "host", " ", "heterozygosity"}], ",", 
        RowBox[{
        "host", " ", "heterozygosity", " ", "in", " ", "population", " ", 
         "1"}], ",", " ", 
        RowBox[{
        "host", " ", "heterozygosity", " ", "in", " ", "population", " ", 
         "2"}], ",", " ", 
        RowBox[{"overall", " ", "host", " ", "local", " ", "adaptation"}], 
        ",", 
        RowBox[{
        "host", " ", "local", " ", "adaptation", " ", "in", " ", "population",
          " ", "1"}], ",", " ", 
        RowBox[{
        "host", " ", "local", " ", "adaptation", " ", "in", " ", "population",
          " ", "2"}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      
      RowBox[{"out", "=", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{
           "0.5", ",", "0.5", ",", "0.5", ",", "0.5", ",", "0.5", ",", "0.5", 
            ",", "0.5", ",", "0.5", ",", "0.5", ",", "0.5", ",", "0.5", ",", 
            "0.5", ",", "0.5", ",", "0.5"}], "}"}]}], "}"}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"s", "=", "2"}], ",", 
        RowBox[{"s", "\[LessEqual]", " ", "sMax"}], ",", 
        RowBox[{"s", "++"}], ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"t", "=", 
          RowBox[{
           RowBox[{"sim", "[", 
            RowBox[{"pars", ",", "intG", ",", "\[Kappa]scale"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"s", ",", "1"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"pH1", "=", 
          RowBox[{"pHsim", "[", 
           RowBox[{"1", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"pP1", "=", 
          RowBox[{"pPsim", "[", 
           RowBox[{"1", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"pH2", "=", 
          RowBox[{"pHsim", "[", 
           RowBox[{"2", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"pP2", "=", 
          RowBox[{"pPsim", "[", 
           RowBox[{"2", ",", "s"}], "]"}]}], ";", "\n", 
         RowBox[{"pH1N", "=", 
          RowBox[{"pHsimN", "[", 
           RowBox[{"1", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"pP1N", "=", 
          RowBox[{"pPsimN", "[", 
           RowBox[{"1", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"pH2N", "=", 
          RowBox[{"pHsimN", "[", 
           RowBox[{"2", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"pP2N", "=", 
          RowBox[{"pPsimN", "[", 
           RowBox[{"2", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"overallHet", "=", 
          RowBox[{"2", "*", 
           FractionBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Kappa]", "*", 
               RowBox[{"\[Kappa]scale", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "*", "pH1"}], "+", 
              RowBox[{"\[Kappa]", "*", 
               RowBox[{"\[Kappa]scale", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "*", "pH2"}]}], ")"}], 
            RowBox[{"\[Kappa]", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Kappa]scale", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "+", 
               RowBox[{"\[Kappa]scale", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}]], "*", 
           FractionBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Kappa]", "*", 
               RowBox[{"\[Kappa]scale", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "*", 
               RowBox[{"(", 
                RowBox[{"1", "-", "pH1"}], ")"}]}], "+", 
              RowBox[{"\[Kappa]", "*", 
               RowBox[{"\[Kappa]scale", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "*", 
               RowBox[{"(", 
                RowBox[{"1", "-", "pH2"}], ")"}]}]}], ")"}], 
            RowBox[{"\[Kappa]", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Kappa]scale", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "+", 
               RowBox[{"\[Kappa]scale", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}]]}]}], ";", "\n", 
         RowBox[{"overallHetN", "=", 
          RowBox[{"2", "*", 
           FractionBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Kappa]", "*", 
               RowBox[{"\[Kappa]scale", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "*", "pH1N"}], "+", 
              RowBox[{"\[Kappa]", "*", 
               RowBox[{"\[Kappa]scale", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "*", "pH2N"}]}], ")"}], 
            RowBox[{"\[Kappa]", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Kappa]scale", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "+", 
               RowBox[{"\[Kappa]scale", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}]], "*", 
           FractionBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Kappa]", "*", 
               RowBox[{"\[Kappa]scale", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "*", 
               RowBox[{"(", 
                RowBox[{"1", "-", "pH1N"}], ")"}]}], "+", 
              RowBox[{"\[Kappa]", "*", 
               RowBox[{"\[Kappa]scale", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "*", 
               RowBox[{"(", 
                RowBox[{"1", "-", "pH2N"}], ")"}]}]}], ")"}], 
            RowBox[{"\[Kappa]", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Kappa]scale", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "+", 
               RowBox[{"\[Kappa]scale", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}]]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Het1", "=", 
          RowBox[{"2", "*", "pH1", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "pH1"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
         
         RowBox[{"Het2", "=", 
          RowBox[{"2", "*", "pH2", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "pH2"}], ")"}]}]}], ";", "\n", 
         RowBox[{"Het1N", "=", 
          RowBox[{"2", "*", "pH1N", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "pH1N"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"Het2N", "=", 
          RowBox[{"2", "*", "pH2N", "*", 
           RowBox[{"(", 
            RowBox[{"1", "-", "pH2N"}], ")"}]}]}], ";", "\[IndentingNewLine]",
          "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"out", ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", 
             RowBox[{"{", 
              RowBox[{
              "pH1", ",", "pP1", ",", "pH2", ",", "pP2", ",", "overallHet", 
               ",", "Het1", ",", "Het2", ",", "pH1N", ",", "pP1N", ",", 
               "pH2N", ",", "pP2N", ",", "overallHetN", ",", "Het1N", ",", 
               "Het2N"}], "}"}]}], "}"}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "out"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]}], "Code",
 CellChangeTimes->{{3.8176433227517138`*^9, 3.8176436745514793`*^9}, {
   3.817643768301881*^9, 3.817643768571197*^9}, {3.817643867302458*^9, 
   3.817643942458765*^9}, {3.817645067122465*^9, 3.8176451021145477`*^9}, {
   3.8176451791427402`*^9, 3.8176451933487587`*^9}, {3.817645321556904*^9, 
   3.8176454021917477`*^9}, {3.817645704546652*^9, 3.8176457048679247`*^9}, {
   3.817645740632338*^9, 3.8176457431553097`*^9}, {3.81764593739357*^9, 
   3.817645942144189*^9}, {3.817646000363265*^9, 3.8176460004492807`*^9}, {
   3.8182480247005787`*^9, 3.8182480672043447`*^9}, {3.818248436238508*^9, 
   3.818248436555393*^9}, {3.818249138698366*^9, 3.818249364552864*^9}, {
   3.818249473716482*^9, 3.818249476177484*^9}, {3.8182495645058317`*^9, 
   3.818249568748336*^9}, {3.8182496870452957`*^9, 3.818249687619335*^9}, {
   3.818249738737001*^9, 3.8182497593585587`*^9}, {3.818249871368203*^9, 
   3.818249877090679*^9}, {3.818249962180675*^9, 3.818249962966577*^9}, {
   3.818250181735304*^9, 3.8182501853808117`*^9}, {3.818250237436067*^9, 
   3.8182502615641747`*^9}, {3.8182503240931673`*^9, 3.818250329753729*^9}, {
   3.8182505429482613`*^9, 3.818250584335807*^9}, {3.818252575549559*^9, 
   3.818252575795102*^9}, {3.818252963235303*^9, 3.8182529636000147`*^9}, {
   3.818253397621181*^9, 3.8182533988056803`*^9}, {3.818260553444168*^9, 
   3.818260559250202*^9}, {3.8184212965718517`*^9, 3.818421349776429*^9}, {
   3.818421380299891*^9, 3.818421384971887*^9}, {3.81842328106112*^9, 
   3.818423287805193*^9}, {3.81842332461719*^9, 3.81842335630212*^9}, {
   3.8185226191549797`*^9, 3.818522670338872*^9}, 3.818781688920431*^9, {
   3.818782982081483*^9, 3.818782984420027*^9}, {3.819048148790155*^9, 
   3.819048149441897*^9}, {3.819048643128626*^9, 3.819048654116335*^9}, {
   3.819049175885826*^9, 3.819049176532998*^9}, {3.8191268864457197`*^9, 
   3.819126895165012*^9}, {3.819127569424951*^9, 3.819127603157199*^9}, 
   3.84425349328996*^9, {3.8442535821355886`*^9, 3.844253616709362*^9}, {
   3.84425365923481*^9, 3.8442536593473587`*^9}, 3.844253703628481*^9, {
   3.844253823170782*^9, 3.8442538251289682`*^9}, {3.8442558216040277`*^9, 
   3.844255831485633*^9}, {3.844255896432427*^9, 3.844255896546402*^9}, {
   3.844255927786042*^9, 3.844255928781331*^9}, {3.844256958601091*^9, 
   3.844256964277421*^9}, {3.844257351532114*^9, 3.8442573557640247`*^9}, {
   3.8442606261137037`*^9, 3.844260652520509*^9}, 3.844260851792569*^9, {
   3.844264736873929*^9, 3.844264748124008*^9}, {3.844342454457096*^9, 
   3.844342511967845*^9}, {3.844342569607862*^9, 3.8443425772475147`*^9}, 
   3.8443446678958063`*^9, {3.844351917235779*^9, 3.844351922947062*^9}, {
   3.844352407046978*^9, 3.844352451580374*^9}, {3.844528693998398*^9, 
   3.8445286942160187`*^9}, {3.8445297773296337`*^9, 3.844529788539955*^9}, {
   3.845034948635648*^9, 3.845034966912302*^9}, {3.845035020244256*^9, 
   3.8450350252831078`*^9}, {3.8450461935998383`*^9, 3.845046228491025*^9}, {
   3.8454752954158087`*^9, 3.845475297446822*^9}, {3.8454753373620443`*^9, 
   3.8454753947248*^9}, {3.8504899866188927`*^9, 3.8504899868562317`*^9}, {
   3.850822130569714*^9, 3.8508221374406843`*^9}, {3.850838696701643*^9, 
   3.850838699986177*^9}, {3.8586837667889223`*^9, 3.858683781169455*^9}, {
   3.85876942000417*^9, 3.858769432841092*^9}, {3.858803397256423*^9, 
   3.858803436494985*^9}, {3.8588034671582537`*^9, 3.858803680667705*^9}},
 ExpressionUUID -> "07001c0b-8850-4a57-acdf-e149e40f6b6e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotList", "[", 
  RowBox[{"pars2", ",", "1", ",", "\[Kappa]scale"}], "]"}]], "Input",
 CellChangeTimes->{{3.858803702792102*^9, 3.858803712456624*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.8588038419479113`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Run simulation", "Subsection",
 CellChangeTimes->{{3.814548231241057*^9, 3.814548235227971*^9}, {
  3.8182592752639837`*^9, 3.818259280575326*^9}, {3.8182594172192793`*^9, 
  3.8182594212096987`*^9}, {3.844254081886601*^9, 3.844254083515627*^9}, {
  3.844254186786998*^9, 3.844254187955442*^9}, {3.85048115336272*^9, 
  3.850481154136294*^9}, {3.850490003538465*^9, 3.8504900040026484`*^9}},
 ExpressionUUID -> "7d45dff8-535e-417c-a829-316230accc1f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nSims", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"n", "=", "1"}], ",", 
    RowBox[{"n", "\[LessEqual]", "nSims"}], ",", 
    RowBox[{"n", "++"}], ",", "\n", 
    RowBox[{
     RowBox[{"sim", "[", 
      RowBox[{"pars2N", ",", "n", ",", "\[Kappa]scale"}], "]"}], ";", "\n", 
     RowBox[{"plotList", "[", 
      RowBox[{"pars2N", ",", "n", ",", "\[Kappa]scale"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.8442540861496353`*^9, 3.844254099047955*^9}, {
   3.844256418450811*^9, 3.844256433176976*^9}, {3.844264044597818*^9, 
   3.844264044747344*^9}, {3.8442644011472893`*^9, 3.8442644012866793`*^9}, {
   3.844264464287189*^9, 3.8442644647503643`*^9}, {3.8442645019648247`*^9, 
   3.844264502341879*^9}, {3.84426499458254*^9, 3.844264994665181*^9}, {
   3.844272002779261*^9, 3.844272004889956*^9}, {3.844272111433487*^9, 
   3.844272117738118*^9}, {3.844344671550436*^9, 3.8443446726201277`*^9}, {
   3.844350864064425*^9, 3.8443508710532637`*^9}, 3.844351929995685*^9, {
   3.8443524167014103`*^9, 3.844352416799588*^9}, {3.8450350602690067`*^9, 
   3.845035062628827*^9}, {3.845035153868682*^9, 3.84503515464083*^9}, {
   3.845035363352734*^9, 3.845035373422819*^9}, {3.845046239545569*^9, 
   3.845046239699189*^9}, {3.845475426502294*^9, 3.845475428479845*^9}, {
   3.845477326434936*^9, 3.84547732740693*^9}, {3.8454779945221453`*^9, 
   3.84547799460929*^9}, {3.858688266685021*^9, 3.8586882671394367`*^9}, {
   3.858688581866377*^9, 3.8586885820657187`*^9}, {3.858688644987524*^9, 
   3.858688646067643*^9}, {3.858689185159792*^9, 3.858689199093952*^9}, {
   3.8586903513651543`*^9, 3.858690354539744*^9}, {3.8586916316479187`*^9, 
   3.858691631733617*^9}, {3.858691801249546*^9, 3.858691827243917*^9}, {
   3.8586961263219023`*^9, 3.858696127328855*^9}, {3.8587742068131657`*^9, 
   3.858774222661512*^9}, {3.85878538920618*^9, 3.8587854051337843`*^9}, {
   3.858791343197516*^9, 3.858791344748938*^9}, {3.858847535607974*^9, 
   3.858847551234127*^9}, {3.858871955967566*^9, 3.858871958179633*^9}},
 ExpressionUUID -> "edbbcf80-db91-43be-afdd-b58b93b2a47f"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.859559011007771*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "[", "interPlotList", "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"interPlotList", "[", 
    RowBox[{"parms_", ",", "intG_", ",", "i_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"interPlotList", "[", 
     RowBox[{"parms", ",", "intG", ",", "i"}], "]"}], "=", 
    RowBox[{"Interpolation", "[", 
     RowBox[{
      RowBox[{"Partition", "[", 
       RowBox[{
        RowBox[{"Riffle", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"plotList", "[", 
            RowBox[{"parms", ",", "intG", ",", "\[Kappa]scale"}], "]"}], "[", 
           
           RowBox[{"[", 
            RowBox[{";;", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"plotList", "[", 
            RowBox[{"parms", ",", "intG", ",", "\[Kappa]scale"}], "]"}], "[", 
           
           RowBox[{"[", 
            RowBox[{";;", ",", "2", ",", "i"}], "]"}], "]"}]}], "]"}], ",", 
        "2"}], "]"}], ",", 
      RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "]"}]}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.81842179728757*^9, 3.818421938377722*^9}, {
   3.8184220767024097`*^9, 3.81842208125107*^9}, {3.8184221532636013`*^9, 
   3.818422171585328*^9}, {3.818523029435063*^9, 3.818523049601581*^9}, {
   3.84425415698204*^9, 3.844254162268756*^9}, {3.844256335454811*^9, 
   3.844256353707549*^9}, {3.845035265894826*^9, 3.845035271217894*^9}, 
   3.845046159938842*^9, {3.845046268895109*^9, 3.8450462754606953`*^9}, {
   3.845476049813512*^9, 3.845476051032056*^9}, {3.845476089895999*^9, 
   3.8454760914009733`*^9}, {3.85048566262754*^9, 3.850485764211998*^9}, {
   3.858689303377323*^9, 3.858689307314115*^9}, {3.858689366609172*^9, 
   3.8586893670646477`*^9}, {3.858691413386201*^9, 3.858691415343768*^9}, {
   3.858773697183794*^9, 3.8587736984480667`*^9}, {3.8587741895438223`*^9, 
   3.8587741900939417`*^9}, {3.858866849328114*^9, 3.8588668621282682`*^9}},
 ExpressionUUID -> "ff48aefd-78da-4b9c-8750-9e5e197c125e"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "meanHInt", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meanHInt", "[", 
   RowBox[{"pars_", ",", "\[Tau]1_", ",", "j_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"meanHInt", "[", 
    RowBox[{"pars", ",", "\[Tau]1", ",", "j"}], "]"}], "=", 
   RowBox[{"Mean", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"interPlotList", "[", 
         RowBox[{"pars", ",", "i", ",", "j"}], "]"}], "[", "\[Tau]1", "]"}], "/.",
        "pars"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "nSims"}], "}"}]}], "]"}], 
    "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.8586894168134117`*^9, 3.858689425481125*^9}, {
  3.858691427809664*^9, 3.858691441664342*^9}, {3.858691852377087*^9, 
  3.8586918762815723`*^9}, {3.858774174270568*^9, 3.8587741782684927`*^9}, {
  3.858791189395673*^9, 3.8587911916898212`*^9}, {3.858791244611134*^9, 
  3.858791251283238*^9}, {3.8588668726178303`*^9, 3.8588669045047483`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "SEHInt", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SEHInt", "[", 
    RowBox[{"pars_", ",", "\[Tau]1_", ",", "j_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"SEHInt", "[", 
     RowBox[{"pars", ",", "\[Tau]1", ",", "j"}], "]"}], "=", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"Variance", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"interPlotList", "[", 
            RowBox[{"pars", ",", "i", ",", "j"}], "]"}], "[", "\[Tau]1", 
           "]"}], "/.", "pars"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "nSims"}], "}"}]}], "]"}], "]"}], "]"}],
      "/", 
     RowBox[{"Sqrt", "[", "nSims", "]"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.858890349356192*^9, 3.858890410446306*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"meanHInt", "[", 
      RowBox[{"pars2", ",", "\[Tau]", ",", "5"}], "]"}], ",", 
     RowBox[{"meanHInt", "[", 
      RowBox[{"pars2N", ",", "\[Tau]", ",", "5"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Tau]", ",", "0", ",", 
     RowBox[{"\[Tau]Max", "/.", "pars2"}]}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<Time\>\"", ",", "\"\<Overall host heterozygosity\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.858866781472322*^9, {3.858866910630328*^9, 3.858866934515077*^9}, {
   3.858867012571891*^9, 3.858867012750525*^9}, {3.858881415706259*^9, 
   3.8588814179882107`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
fxelfRPvM/AHuW/VdBBee3ZUFvHZqrXo1rtaOkz/9/4M+rOtC169oEO9qV7Z
KK7vjLvHe9hIB4vyLOukLMxv4xOHbzfTYUViQ9BJPM9zYMesSzw6JJyPW/MD
8Qq+uPr86XY6lLqs9BSgvrGsaZ2wD3TQ+u/7FMR3pqHmyGc67CAZrXpQgPgW
ZO107KUDUyyl9sU/fPd6DbP7MT52XFLcmov4LjKPNhuiA/e/v+9DfGtkl274
QYe+G3v1AtHfjb69BWrjdPjz0U/7INbf9hX3yTKTdJj49/PtGN89vJMdIn8x
v7a/6JrrjfiesPceE7YE6UrT68cCEF9DHbGe2ZZg8qVrlaQX4tv/92KruCW4
1hSsUDnKJ2QyXm+slbSE9TnHU1fi88sZV56XSlvCuYjfHTew/q3+47Pnhpwl
hN0qbPHC5w3uWPw8p2AJKScr4wvx+a17Fp+KXWYJme1BOpsCEd+FfSrHVC1h
Un/elw++iO+T8lLXFZYQNPF7+MkhxNc7nmG3yhJyHWenfcH7PNV3f6brWMLd
8HLlILwv+O3aAOP1lnAgyFYqGOXYaGEpbX08f4scfTPuTzVoyVHabAn+63eo
DeH9WV+ubpY0tYSKPx//0lwR3/N+TX/AEhy+ZX/cuBfxpVEPDJEsoe8jyXYU
76+eVJj6QMXnmedWMg7yiYZb35KaGJbwvnLbPAtcF+yq1HzMtoSZHrsSIXc+
0S2Z+LBgmyVcdFYenoP9YeSRIzd7hyWM25h5TOH69JENX5N3WULT7PXK3rgu
pioaGuFoCb/+129kmltlfPajHP1AoRLrxfLIGzedXCzh6Y1C+0QfxFfvGLHt
sCXk1/o6ULAeG/TQW0melqAht+V3GPp3a5rSIX1fSwi37rL9iP2QRRkS0gyw
BLtE6SIXrLc7J6rS5IMtYWjSLN8R6/X+m8nac8MtYUWs+KswjB9PO6fqX5GW
0DBcRV6H+SmV1f/JJNYSvhc8q7THepzf5TVzPB7vE1UxvYEyXev3srokSyC+
JYbV4/NfDoebSJy1hJj0/FnWyXwiqnCuPeeCJRieVl6dgPmnNn76WNpFS3Ab
dla5ifJjI/nz77ItoebifPVKjO/dYRdLVa5bQp5PV/blIsSrRqP1QJ4lqO8y
9Tt2F+uvWP5o3h3cP19/mewN5C/MjYtGiiyh2LuMqZPHJ1qTy9fpl1lCotqN
vzm3+IQ3z8wqsMISvlrpXl79APnb0ufuVVWWMDgnV08G99/Zw44XfWoJQgvj
Hh9CmXGVn0erR7xcvujNL8H++HX389OvEJ9rWr+ZmJ+xONa1vLYEydsz0tKo
j6a3+xyFVktoTH4U/RTrQU3pmMbuNkuI3BuVnY/57jgVZJ7z3hJUqydcO7B+
/CVE9n3ttATnubT4U4h/ZlRcuE4v4r10ZfQx7H9Gz6WzvPstwSgqkWGI/EAg
eaGybMgSVn+TDuEg3n5clY7pH5aw6ZON5Un0t+y5G5NmvyyBlv2+yjScTxS+
01U4MWUJHbltJSMos1RKN72awecLxceMUB7Yb2orLcqAI8yGiTfY/+JuPvW1
FWPAzMJXR3b5I78YsjyTIcGA463J6heRH9RuaCn8tJABV1t/EFSsD/v97V6v
kGNAyvObF/ciH5r1sHPITYEBqtsZnUkYz1lCrpIFyxiwSKrL3uIwnzCxGFnz
U5UBf0w23rmG8d9+0p9upMkAjXf6nq5YHwIa/7qErWbAv18HjnbmE/IyMSee
6jKgguf8LB/lku2S18U3MuDdhq0l1zyRb2SmPmVtYsCGV0rXVmD+jnxa2nXG
mAESNmeUZjA/E1bkCLcRDDjwfG3a9D7MF7fVKstJDLC33hg65ojzzJ3CLU5U
BqRliy7k7OETzqOGDrkMBojf3UQaxudFDR8HDbIZsOq6Hv8+7r8STEnfYMMA
7/9+PxH5wJPG+/47GTDP06xUG5//MNuW/9CBAWbqgvt/HfhEEP39T+F9DGgJ
/XRsPj6/JHG/LMWZAXsXWH2L3o/1peXbhng3BtQKV6SbHOAT25b4cN54MKB3
Xf/8Kjzvx67JI/I+DDgZ79m0FfcnZR8/be/PgGDZzT+V8XzdXrHbl4MYoOy8
9h3Lnk+8Wp30sieMAcy1Yp5rUHY7srh/dRQDQCSWrLUN60vJJTHPWAa8XaAp
G4X2XZ9YsfJePANE3pD8XLHekkxvW0wmMaA49d8fGPGJzuN6+4mziIe8oX8Y
+ktTXuq05wWMj5XLPKWwfrrlfSnLvsgA4cqqnFnID+9uedLZnM0AtytNFAX0
51hz+nzR6ww4c6HnWSbW980HffX18xiQfeu2YA/uD51i7nG+g/73z7Q+eAzz
JXHlyXNFDJh+XLbiCfInMQ3h4vpSBpRc3LJ/Dq4z77d3/C5ngPR/7+fwiRRG
yZw1VQzwuldzxwr14X1KWLerBuNP/2h4JvKppUcP2iXUMcBCUUtEEWVHcbOo
Ry8ZoNnQ1fkO5asXFe8MNzFgeCa1/jk+37d+jK/yFuPhg8/dnxjvurUNwlwB
A7giNrM/Yn742N1YE9nBgEQr0cft2E/vD4XblHxiQEjtnVUfMR+nI+zCeroZ
0P1254dR5Gtmi/Vuyvfh/RLG8TS8L+aWZAtlEO/f0iYeiva9IL5MB3xnwArn
rjuWiM+Ct481834yIOt//WqbSzr73W8GrH7vuSEK8bow7RMo8ZcB1meT1Cww
Pz8kMa+azmLC6NLB+50oq61Y2egxhwlFsgdfH0d9Dz4Qmsiax4Q5Ugo6L3He
yGe2q76RYsK79BOaTlhfRjqLLWfJMOG/cMD6rO+XcHTjYiYcicu+uxHrceC8
g1n7l6IcylvwFPlm1SV4flaZCQHHmGqtyIdFNyqO1qozYRsriN6I/YRaN6o0
sZIJ11+LGmdiv0mwbyCv0maC5N1viwewPjUPX/e0W8cEscFNVk9xXT4qPP2U
HhPU7/37gXU+Yb/E7ulDQybYcigBCnje5fyNQ4MmTCD/G0dwvQcklyibMUHm
v99nxXxu7TVjWzDBebdqzDrU/4jr40PHaUyYaT2+yQb9UfLnwtkiJhMuX3vO
rsV5oY4lZOq/mwmmvdmBSsinJLranHP3MWF655y7ntdwnvYvTmpzZsKKBXZe
vcinzs5PKJ93iAlLdv974QfrVZZzt/ERfH748gBg/VfWAyl3H3w+NSunDPvD
/noFw0v+TPD306+Pwf5xc9fo3qYgJpjlM5/NuoPz5sirU0LhTCjfdbRCDefv
jdHX762PYkL01827X6M+AQrhH/fFMkGjs8wzAvvVw9s7xVPjmaA9+GXlXeyH
wls3bnyWxIRfHZ+asvF8Mk/CYTyVCd09ewkrvD/OrTdm5QUmKAr99i28zyea
/lYV7LjIBE27pVlLKrA/nLnQfjKbCSERQi7j93A+bZV5430N42MtrU66HOf9
xafr7G8yQdX7/KjpEz4xvkPsEek2E1J0Ojd0PeQTg+kRJTqFTFhfe6LtZSny
m47pPPl7eN8c7QdxzxCf5f7ZM/eZ4LbXxLOikk+8dvx+7utD3G+TUrgK+23t
lUOn3zxmgpTMkTZPvO9hd09U+VMmkNp+bz2G+4s0HYNy6pkgeEjVbsf1XJd2
r/hXGB8J5IRDaE9W3jaXo6+ZMKWeFyRXxifSBhp3737LhKsqIqvL8fx4XZoN
RcCE4RGhU5a4HuFZY7mugwmT//s8JqDIdKvCJybUJzl9U6jmEx5jZYazulG/
jMI5xbi+32DD2m9fmHBH5Pzrr1V8wi4gf8Xbb0x4f/T8IRWUOeWaSpXDTLjo
4Z8egnhQpy8vuj6Kz/vc2NuD+m/ZslQ88RcTrLMtDm56xCf0ws/O+E8hHrH3
bu54jPFavWDccQbj32m5hBXeryIaN0ATYYFL2hWVVbi+mCzatWEuCyqvULtz
nyPfig1tWzqfBZv8l/Uq1mO+vZhoEl3AAuPw40emEe/J+T61g4tYMMgIcrjw
AvOZOfiQJ8+C//48+w3Or4kHi6sUWWCdmEbotvCJ9286b+YuZ4G6zqP3nQKc
/2R2XU5WY4HrzgjTp/j8CxteWqAmCwR/jgWX4X2Pz7ETnFazIOvbpn2JeF9p
24tIhi4LBqTkjeei/flLLQL1N7Ag9tm/H0DmEzkOVZ7LDVhw+3ifyJoa5GdZ
mw/ONUJ9o4/45qJ/kjqLHUZMWeD78frpMtQvRl13W5sZngeW1w83IH8/kEuv
tmDBBHNFSWQr8rUbama3aCxYMtG2+g/q79qXuSmVyQLFjQIDYVx3XLNYN4TD
gp6K17ec8Dxb92QNZ5v/v59xd/5Sq50sMLDTi2t+iXz4e7S0oQMLajZ9W3wR
7TXcKCSmupcFs8tWC3JRX92jgX/FD7Cg4WLV+IM6PqFRNjb2w4UFOa4nz75B
PJb+9vj27jALklODWaWvcR437ut86onrS7o/zkZ9xEKcBLd9WXBnSCkoFeW/
j943pgWwoF708So62jcmtONZWDALdLZ0XChH//Zvba5wCWeBTzM9cvErPvEp
ilHEiWLBtjOjgpso82prc41i8fkRo+1djThviJllqcezoPB864ByE594Sq84
K5HEgo6bYhcu433l8frxP8+wwOzpv3/YxCcKGu9GfDjHAq/Lln2b+NjvF64+
VpfBAntNX33Ttn/8YeeE6GUWxNXQcxLe8omyipP+W6+yQKU8YVSDh/wm+cF4
WC4LntD6pno+I19y7jtamc/63+/rYb00Ufg5WcAC0YyYioRPfKJNmuZreI8F
p+dSVUtxfd+XgNGjD1jw79u74i6092Gud3ElC6iRwl6kbvRviuD7yBMWHF5f
t81gik9MHRTz0q1lgbZ5g26OuICIMjUcOfSCBZotLt7r5wgICRmXIzcbWZD+
TXXuImEBkfr13FBvMws0QpmG68QEhNKjOncNPgskD71rjMD1q2d+Dex9x4K8
81XJV+YJCB3XlYezPrLAY5WkGoH7S7ds/9bRxQJa9a1mEQkBsUX2hJviVxa0
a7y34+N9tX2lfdsHMF+uTJpHzBcQrKpel7MjLIhWq/PNFxEQvFT5r81jmK8z
Vz44iwqIPW7kgwt/syAxnGyYOMMnvhJ+vcw/LDh5u+2F5V+cp+SuHzglbAX0
D/38vX/4xER/a3f9bCuQ4X/+HoDnH388e/+ceVYQu2BgYu1CATEvTb/LXMoK
to3VbL8oLSBSDh3Yd3yRFTA3b7Y1Qf0Vzc52PpK3gk/dNnu7UZ8c+WeO04pW
cGZzmn8rytoDYx83K1vBZR+Xtc7T2A+faOzxV7eCzMUnLex/IR8/t+1DyUor
aFqZdNHlJ594djjK4ccaK1CMepUrMY7zwtaSjrXrrKB8POfw1gmMx8Xd9u56
VrCJPepS+QPns0GZd3mGVpCjlKT/BP3XW21u99XECrLOyRnfR/s9zvu0rTCz
Au0/t9sUUN9f7jk7nCysYPsC7+8vUA43b+FfplnBkp+7HnxHf4kpiGz/wLQC
Rvoci1EhAZE0tIG3lGsFxw8V/QpHfJc83Wez09YKlo20vJyF65cvpLxNs7OC
x9xIWybiuepItfXb3VZwMujfC1zYT0g/mqWdrMCKHWc7NFtAGCmqca0OWoFL
dItKEuJRPcx5E3/ICoJU4ouS0T+Wz46zXxyxgvyCOXJbx7A+phc2zfW1AtfC
LL80jNddnp0siwAriDHbVLWoF/ufhXRjRLAVdA9DW9cXPuG+1Iz5ONwKdpBO
9ky8x/454vnqTxTK//2eGfLd2suWxietIPrCbJNrzXxiTubrFwEJVhAnv2ap
L9aHRC8hemmyFYhGzfTZ1OK8QFn3fPSsFeg1c48ZY7+4rORIXZ9uBR1/Ppzx
xXqr9SOxzuOSFUxOr9sagP2/oK6KnH8F8fyr9sIa+YzhxeFnfdetICD9c4vg
Np944q1ssfIWxpvr0rArOE9P/hxOUrprBW+OhoU7Iz/RO/a4Q7rYCgzCXaK2
Ij/wmE7SmltmBSkDdz/Pxvk2N2yv73S5FZxT6d8ihPzl86wNj78/sgKH2+36
qni+UswsiS/VViDhWPbzMepjK96yvaPWCnx2Mg5vwfOT4nNy3ryw+t/fi2C/
WeA7XNtoBUOrbeAAPi96hmT8sNkKpDUSztKQ/2yRlztRyLOCJzaF8xWuYP++
0NN8vR3xvrpu2Av5WZFS6fLMD1bALYme9ER+NpAV45b8Gf3321r5XDrOK+rb
S2N6rWDO3JEDojhfO15fOSu43wraU7d9Pon8MX3VBNNryAqWDiq6TuA8+za/
/oLzDyvI+N/nUVLrLvTYj1vB4tJj40dwnqEWu67nTFrBgSOnPCRw/oswMAoh
/7WC0ZcaGbR/89+u6O5lwmyQoG6S3oPzZtAl97glImxQsfEz2LgL/fnJZp3M
bDYM3l1fPcTiE/dUt/Ak57LhTPNOazIN51knzWAxcTZkdyVNCuh8YviqlJrI
fDb0OwVKN+H++N7xuj8SbDBQGc36zcR41/roPiHFBserppYhZORXrnUyowvZ
0H5ynXi9PtbfW3cfDC5ig+zwYKQC8ImZgXN7vsqy4QnsO1yFcqZu+OwueTY8
/O8FOowXT5db75ewwYdSsMDPmE+0FrI5AkU28OSFlOdvxHo9avirWYkNuV12
q6x1cV7RV73YsJwNGn7uR8o0kA/4iZvXq7ChKqZh0FKdT9Duf/9arcYG9abw
Nf6rsT78bjtdqYHnzwmrOq/DJyKNq/Xua7LhvNjSS7tXIR8KyWsv0mLD++Mr
FZPl+ETlo5Tw26vZUPnt19FQlO2EgjRztdnAv7q6aUKST/wyc3p1RZcNiXuI
p3Pm84nUSEvvi+vYEMVjWdSL8on1zzYuOb+BDQNlwmynOXyicY7SoxQ9XL/n
fvCJEJ84RBXdn2DABv+egwsl8DyxuAHxWEPE1+tOwVbcf+3l27sRRmx4bLNq
SF4C+YNkpU2ICT5v1/KwS5ZPfGRdm/LfwgYP9RJK9zzkL0kJ2d7AhuvZ3Reo
c/mEQvNRivtWNjzVlXtlMMUjSmV2Dx4kseH0hjPkJJStbchn9pHZMMfDJShl
hkeMpOludqCy4fhbmcjbKCcI5D9up7Oht6ZYVEEY+aPiTBSXwYbhDqKuRwTn
Gfsvq5ksNnzK+RsYPRv568Wm1xQ2G9KflIrnSuG88LHMbyuXDaJeTckqaN8l
lctKptvYQG591lSB9kvFra/XsWWDzk8F06v4fNhotc/yHajfcinfVX9Qn13b
lBfYoX6T8033jfEIx9qeFzP2bBCBNSnffvKI12v9/UYc2BBuLFtqis+bXRBT
69zDhtn3u13PTfKIolnpDW/2ssF17NVc63EeoXZ4zbFqJzbMHInjjo7yiJTW
hxrFBxBvTg0izCNECNbrnINsCCtL3KKG5/vmfgxKdWVD56N82eJpHtEt7bUy
+hAbVsd/oPzG86+XlbZSfPD5C/dtFiIe8qrU44ZH2eBu+CI6COUTcW3aq/zZ
MOQh33Aa9ZsYdRMoHGPDjyfjpKN/eYSLw3TkvCA23LGSSRLH+BHUJqydCmbD
5aybfJ1ZGL/rlN99C2VDsfP+pAox5FcXCmI6wjGess0qOnF9tcjWDQ0RGM8h
lTHJqF/64Zb3lVGI76rmDDlcn8/bf/JODBu2bQ7g+4tjfBDjelmxbBBbV6b9
ZwHWq9wTnxLj2FAeuufLdmnsL4sU4sPj2WC2zXy7F8ZbQ1DeJq/TbKA//PfG
CtbDHuOuvUls8A5wc9NazCfusBpOc1PYsGSmVugZysvv7zYyT8V4MSla+mM5
9hPVkZ6NaWwwfZR3OVEZ57tTx5M1zrNhwkF6+sgK5CNji0zl0tkQn53psl0V
+afD1a+zM9nwkeO09RWuc+r0U8cvYjzWkCJlTbBfrqsjvmShP2nuTQpb+MSG
9B3f+NlsUHyf49OA9eeKSH9afQ4bnN3/fSDDJ2Tcg7Y+uMaGxi8HMx5Y8oko
nsTQzRtsSI3IU3ExQz5MXLqQfpMNNH6/wU6zf58/r7U4dQvj0Xx82148r3XR
k5Gg22wQEkkyYWA9JAdzMw/fxXq5+4+sPN5f2tNFcSjE+riNav8G65em1dFR
ZjHGp10D8w7qe+7+nKwt99hgV3rC/jmB+a12nr62DO+vXq9oT8J+cmrVuPID
9I9HvbYLBfnaWHn2wgo2BJ33KJjC/Tt3M5jClWw4wuyytqJiv6p7P/H9ERss
jkXtXmfLJ4zWH7n6+THGf9Alwn0bn8hLF2K3VLOhx8A1OAPr81LRlKmap5g/
p3j7L1tg/XZXv1FSy4bAyvyVoaZ8YppXwr1Wj/E253ftHz0+cRjIf8++YMOr
OyMhLev4RMdN/s2YV4jv6L//MIbzjIyrjX8jG8ZPK8rsw/pbGTwp5PIa67PQ
tWwy+m/8bu9IRDMbvnsO+A8s+fd+QfOni28xn5bk9y1Zyifc5Kte3+dhf1BY
v18G6/VV2q3HLQLMr+odbh5Yrz8EnysYasd47rnYmYz1eHFB5GXx92zQHtXZ
9BzrNbvrSJLGR8S3/doRKU0+ESe/K5zoZIOm+g+p08twHqFRPe26sD6ZPZi/
A8/7E6zneLSHDUbSmsIPcL9BgQo76QsbKmZ17/ZBfT27JOBWHxtSalZepKK9
efK/19Z+Y0NGn2+EN/aLLlqPcucgG5SNjn16tgn5RcibBdPDGL9FdctL1iO/
KKickf+B8XlvuwQJ/Z3UdXN4/RjGs+sD8gcGn3gun/aRMc6GmAjt5d8xXmbR
I5oOTmA/Vjvn24X+NQnxqIqYxPq/U2Z+MPrHr8Du7sVpjC8TzRJV7Ld3u8hZ
9/+ywU/e/lU4B+NDfmNiixAH5hU+2iCJ62p05bChWRwg1Qgx9XF9V8j8I+Kz
ObCk90rPdy6fOFvwa7fGXA7M7BFKOYH9vbGri0WIc4D5yH8PGfNDbPHrLXbz
OXDcrnKvMxv7C/2h7lFJDqgMGJnF4nnBIbnLkxbgeuwkXdIO470gVeqWNAcy
mBPmvxyQH3SF/30mw4G96m8rB5BvaC12H/okx4HK/32ftY++88PUYg7keZdU
juD+zBCLRnlFDqyi2wzetkc+X7D+0XolDoiqyB7nY/wu7F52h7GcA1XhUayf
eD9t8bxLB1U4MG2bKXYd8zeCPp4QocaBbQvrDk1jfD8M+RxyUYMDf9Y1rBi1
xvgraHS/r8mB0+TSZD88b213uUOLFgc6MwXmUzv4hMviG8yh1RzwCR1wM8Pz
r9DPmIrrcGA4oSqgDO3vCAnT0VjLgRfGvgdl8Hy5wkPLiPUcCFDt1K4xx3mk
e7uk3UYOzPZaznI0+vf9NOmPrz4HuhfY2FX8q0/0dYOJmzigsbTlaZshzpMh
Su/zNnOgIT5UL3MD8ttCsYZnxhyItRypXoHx7dE99vCTKQfG1+dVaq5Ffru4
M3+K4ICq2EeHHMzHTnpDpvxWDtgNPdgcgfVJMfRB/HoSB7gb1xqq4vnbCq8F
M8gcUHSl6F9EvnS6O/nwQSoHnp/Z2n1tM/bnxaG7IugcMNhwpW4WykKWboyL
DA7EEG3jRaivUaityX0WB6bYrk9fYXz6Fm7VbmFzIHqzWYYSyne6dZWGuIiX
yMEDdMTj6+KlEuI2HHg6N0uNh/VL1XLutPp2Dig/eR6tjfVLr9W8WXEnBzzi
2zqlEV/ynvBcaXsOTCoErzDDerWj72GomAMH3r0fyV2OspvP720zuzlgFnXt
xj2Ug//orxl35ADtf98fJJ7wFh7cxwHt0l0Lrx5Af0nf5XftR/uMQrtX7MV5
MuPb7XZnDhxYdVghEuXaFVpRb1w40P9Ls7oV+bHg7n67ejcOEHrJDooYf/2b
s9dVHeZAh9Rk1ULky39q3s8p9eDABGnwU6Yjxh9L8X2+JweUPKvu5+B5agLb
4hxvDrhbbfsyjPGst+/MyXRfDrSsPpI2dhjtG2jak+zHgUHG+24FT7TPT8Ig
NoADVkte2230QPuEaBJhgRwwmZ+sv8cX7YuL/nw0GP098IDBRP6fKFt9/3Ao
BzS79T4nhKB9l/6edgpH/decG7ZB/l+iZXzALgLzUeTdn2PBaF+RvzEnigNl
GzrPTR5D+0xKpKkxHEipU7trHoX21Y582RLLAZbQSf4ZlKfZOo/04zhA7z10
M+0E8q13rqna8Yh/7dD+/Gj034HrbuqnOXB423jVeTxfb/gzKCZxYP+01A5G
GNp3THmxdAoH9F7rLLp0HO0T2TU4NxX1E0mgx6K+bgnna/6exXxuCTL1DkX7
Frde+HmOA5EHXVaRIzEes6U9By6gfQGdKakpOD+uYZG7MjjAr9Yu8cH5qPhe
nFL7RQ6kzY5904rrtUTdj9dZiJeJvn7qKbTvucjzumwO3Dxn9r0oFu2zhqxH
ORxg+PbIPU1E+94HH713jQMbfs7xdkpA+1weWObfwPO+eKsqnkb7fvxUzbnJ
gTetc9eN4Lpe8IaJC7c4UGw6qzMM8SXPOdKYdBvr5az1NxJxvtqRdOvqibsc
SIz5vtvZD+1T/BoYWsgBQW+cSAz6N/iqBudoMeavV7W+nDv6T3fvysP3OP/v
+/kr9y/+2VeG9aYq8dUe3F+ytb1l5wOMn3ZhzWZvtO+VfB67ggPbl/HpF1AW
2FqHUyoxvxzsaIGoT/+nRNstVRwwJoSdPsZhfLq90tZ/gvoUvLmTHIPx+VNM
RLuGA43/vt5AfNXCLNrUnnHgbvSuCXX0j554xF2FOg4U8oTvDGO8kc88il74
HOMV1q7x+xefy6bs577kwG3dQzLPjuD8cWPThr+vOLCpe/H0E7Q/dL2v2M9G
DvCiK2Wb/LGfVRR8+PaaA8/MQ2zpaO8Vi8GSz81Yz2y9KsNxf0nTqlNtbzEe
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
7/69D6eBVH43B2NtCr6sMjBy/91A+j+e3K//HwV2L9u+fEL98i2Vl3V1Ed8J
78JZEY4Y1ozlNNdQUHht2dBmKY7sfaQvtphQsN8uO6YC4yUu319rgR4FP+7W
ra5Fe0uuFDgprqPgUNqls6/QP5/jf8bNMqBght50FynEb/rJ5ZVTjSjQ9HVU
noXnrQ3cMzTJmIKbtWVynXgfJ89MdTETCryWvSG9k5A/nDqs/5hS8Ni3XmfD
NOS3bUqnBswo2OqcO+oPxmP7Jpvi3i2Ib3mSRQ7Gu4Re/LdP5hRMfr/BRw3z
Q0uzUek9RUGe9qSTaUocsVswlWqlKdg0pNT7CfMrTNbsGM9SsE5/z/kO5I+b
EmG3a7ZR4BIsMnbvSo60ipR/rLCiILRYvvvREo6M/T5q1iMbCv6LnNFqo8mR
XzlxJ9vtMN6mrHhoYoT3dVsyZvx2Cqx0Wx9uMeHI60Xlh9R2UJDQIz9LQsiR
5x+tesycKBBfcPjpSzPEK7Xf0d0Z49s9cdodC47csg9rPutKwb9fN1dBfs1Q
mLvlnhsFc6oneFvvw/xtuVPWupeCWztb3e+5Yz7EmemKuON9Gm4/voD1IkD4
IWeeJwXZUZ0z2HCOuE89rGLkRUFAvFugzGmOONZOTXDxRv8pi5ubJ3CEjrgq
ddKHgkoVpVV+SRwxNoaQ3MMUXH1Y3KmXwpHVY18Mc/4UFL8sXuoRw5HFj93c
fx2hgJlQUdmP9VDxyJhOuWAKFpWNnrUd9U1bc8GaHKNgo9dbOuUM4jW4rMEh
BPPn39fjzyJet59sOH6CgsPb5C0yr3Kky8O26Go4BWWzi7IvXOLIq6U/V1RH
Yr7W3K2/kop4fY242nuKAnlNCycNtKckc96c6dHoHz7U4yOel+9UEKMdQ8HJ
PUcNDFC+orx1omUsxlukYNWKOMTr7ccA/zgKGlcqzP5xAfFK9P9xKZ6CuQ5D
TlGJHOajtGtZAgVN5dvvuKH+/TOz3nQmUsDp+6ieRXsceX1a/BIFmRFnB7vT
EK/ol1VLUijY7dtuMoDnbdi8T0+Qhnj9+7odPq8rPu6O1xUKwLx2RQzqX/z0
onr8VQpSd9y5GoP9heJxzcuF1/B85Q+jSCFHpq6rknl7nYLrYjFSTx5zREzE
IXJMDuqLSfw0vxzxevBLVDWPgjQSfEP5CeJ16JS3ST7G+0OZC2m43qql0r3n
NvJVwMSrMlUcqe1/sD36LgVT2dXrxVBfSY7g5a0CjP9HN/wtKhAvty6zlw/Q
X0F/rzuinL4osHS4CPnZd+oCC9x//qOMjuIjCkRmF68Me4h4pWbfWPeYAmWD
8jaDR4iXvcF8pzIKVh8zfq3yFOuLQmt8WAXyxdzNaYeaObK9xV0y+ykFuwg5
ZPAK8YqbcLyuioKu+iHpmNeIlzB56Hs1xk+mwrrmlxzRmaq9f+ZzCrYJDI1X
oqxRW92hW09B1rKN4ls/Il4Rjla2HAWnmg9IFL1FvIyH6oIasb5cakjN+8KR
MWOjjdKbKMidZ332CO4fKFEtfNpMQU21lPgg9o9dAQ+Xf21FvsuVXRWJ9rWu
pjMk2yiY8O/rnTzi9fvLbM23FCyvHbqY+wbxuh18hnlPwcULcS63PiFeHrIT
fD9QUD1tmX0w6r+yNNc/8SMFWiufH67B++2R/vb7zieM391qy0+0Yv83uPRA
3Wfk30MSWqV43uDrfb1dXynQnWaz4lwbR4of57iO6aXAdum6mGo873hGb8fs
Pgr8xJzLL+N5ppFLHbS/U7B+eL5CUh/e133fqy0/KfjQcnbfEPbXTXQO6/KL
gu75ahsLxvAkUbe3IXiQAo9xB/SPz+KJo+LSzReHMV/m36hZpsiTRWL7Km//
wXjsC/jwbAFPej/dMHguIoTqT90nXuB8crump/iTqBDi+LA4M5xfDt9csnq0
mBBqmlZ+uL+cJ/pxe+/IjxNC+q594kmreDLe78ZyrQlCGK6XiQrT5UmNfc/1
zZOEMMdw/ZGV63gSY7hkobOEEJLdL9RrbeLJNrW9qUFThFA/8ahuC86DipI3
5iRICeHBqMs3glDu+N4df2uaEMxnzzuYIOBJ1svFM2qlhbC/826VPM6L7kV7
ojplhKDDxEwNEvJkVUq2uKisEO5TsyWzcF78E9IdIieP++e/zA7EebB09+LR
KxWEIKUYHWz2bz7dusffTFEIaV5Z5MYOnmzRyv7tpCSEMVccVdY68mSGXLdn
oLIQIlb9/ay2nyetfzV641WE0NQr+7YZ5+fL7W6u+apCOGkUe6/Dlye7nl7v
qF6E9nLHc8bhvL04+6v9R3UhGGxMzm7Bef17tMYrkSVCuKC+U2lpCE8KDrqx
ssuEMFJr1u8bypMjVtcbVqwQwqvJxoe3RPDEUO+r2aaVQvgZcqpU9jRPxFU0
KndqCyF2PPVXMZon9RPdDI78J4TInb0Ztedxnu7JKj6vKwTLbiZvVALOs9wX
3ZtrhHBGK6qz4gJPlO+p33lGhLBbcsOfG7jedXH38g49IUw4IoiJT+JJTlDW
9b/rhJD/n4XcqGSeeDl9UZ1lKITRprNWJafxZLWpeuryDUI4l3Ms6CTKost2
zzHdKATuzG+jtlSePJHOit9hKoSkrj4lhyyenBz8LB1ghvEztlpyNMpUm1pU
3BYhZBwEXXmUZUtdxfPMhbB6RVfs7kSevMm4FlJFIV4OdY0jeTxJj/ws+oEW
wrPiiOYLKTzZ7a7m/4fFeFvpHzAZz1vOuP6WsRTCnbb8fkm095fuNc9l1kLQ
6hMsqUd9RYqfezbaIl7Hplcsx/sfFVNzdbQXgs/VsupYxGtjl0uH33Yh6PYb
5z0Mw3m7NtP+3A4hfDvvWXj1HE8ab3a15jgJ4WHhlUexZ3iSELeIrXQWAnXx
vNRhXHfwc2l47yqE7sDorRWI30KHTLMRNyH8KlG9Z4/yk4s6OX17hbBmfYpu
6EWe7HxZKdW5Xwi5itWsJspi0pYerzwQ36ADrkOoP3XLZ67+gBCO+akWVRzn
yboIX60nB4XQPnHrYNRRnryrmBRXeEgI5f/7vVCeBI5O+J3nK4Su58PrvU9i
/hB1yww/IWiXzjBUO8uThz4PHlwMwHWRA73/4Xk2t00VzgSiP9J/pP6H9g1/
aw0IDRbC18V5L9+k8+SChttbv2NC8Mt2SifoHx3nEX2PECEUP3t5MAblptTI
1F0nhKCM09Hlazw5+Gb2WJtwjL92vVYp1D9DPttJECmEEzcbrjtc5sktZu3T
DaeEIL7QN/4H+oM6U7NobZQQQq0j5nSjP/pqbCJWnBGCfW5Ch0UcT6Im9nxV
PYv5eGXMtLe4vtQwYLPCOSFYR320Ksd4rQmckjvtvBBWjHh6M2i/W2HS1AkX
hDDw587S2HjMj99LPP8kYH7ldJ03Qf9c0yzm+xMRr6RoqRbEZ+O+LdqfkoXQ
kabibov503ntTdzry0LYLCSDLzC/Qj7uG2xIFUKwbfZPM5RV5o2yepouBEdx
7ShtxL/UJqqwKEMIAsW19gswv7fHz52Tn4n+y7i6w9UP86Ex98jVLCGU5eRU
3wzgySUp/XeJ2RgfiRUvp+I6bKpfF5OD9pc6uC9G/ngd6pB2Ik8IbO1IyUx/
nviV9o0NyMf9A81n64N4Ii8SvMvzthBaTg9smIz+LtCdVul8F/H83/uveWJx
MEXNtgDtvbBmT3A4xn/eikjqgRBk08WiAlE+1/2427hICC7n50Rr4n21FlFb
SLEQEt59WqGG/MLtaM/VLEF8i2WfbsN1j0ue0xaVIj+cLfl1F/0x9dWYA3PK
hcCcyoq/hnjmzDzbOP2JENbp/CtYPNlMzV81sVIIC3v/Bo4gf3WfunX+b5UQ
tiZQ9WZ4n8gqA6znQnjccDNIzpsn6uMarbpqhbBLpG78MReeVOrvLGqrw/X/
/b+UJ87+P+fwDUK4UeS6RxLl8QXHAyt5IUy7aG5iZ4d88GPG+4cv0N+rA5oz
zHhisOzK+lsvhdBamKy1wZQn7bu10zNbhKAuNVAQuJUnwRkV45JfYTwz31bI
oazUzjifbRPC/KUXG9228OTRnM7KsLdC+H6G4TZt5omdpbf6kfcYP4kXf5fg
/r+x408e+CCE2elyX/7gemJ9XI/LRyE8ySlXXbYe+XDywq12n4TQN7u4QZTw
pMX4Xp7wsxBIfO4uHax/+ptT2QNfheBZEq++COtpJnXqT0yPEBr63/t/Woj4
bvNJzf8mhOM3TrQtmMsTH9sdG7l+rL87/r1xC/PdcUtv/w/M39niImOxXm90
0Y2d9ksIQ8WzruvN40neXpXVKwaFQP9YrGEqh3x6QOqd+TDGx6kR9VglngT5
DIe4/8F4+t8LIpDvAz5qRIvQ8NAtXX/1VJ6YH6tvyBWl4YtI6H0faZ7cCys8
VDeGBqn//SGfnM6Y820sDdWj2fYXU3gSevZMmeQEGpZHDCy/OQn7hXh/16WT
aEgti0qLn8gTNtlZaosEDaUf//Y/lOBJcRp1Z+8UGvZThTaN03iieo1Yn5Ki
wfxw1Z9b+PzpnEWjb0yjQdfT53WkGMbvLemrNdI0+FiarNn2B+ex+yKbu2Vo
aH5zz1BjAvJp8efvErI0ZGWnPUjD9aXljfEa8jTM4QqsVP5y5FzVI9ikQMPW
9ecVR3D/n+dZHbsVabAfqBmrjPfd2XguIkKJhpnd7h470d6alqDlWco0lJuc
lyzB87XeujVVqdDw5P7IsxX4fGIH6/9ZlQbrlhaNp6N4MvbLOuVJajTIV93v
GtWP/d23xZWLNNDerfdtxbD/avw5a9/GJTQkbOzP//SDI2uHx8xwWUbDpnzj
Ce7d2E+P6r1/YgUNGcP+61Xw+cnjWuyvrqQhunJURu0QR7zEy8c91abB++vc
daNFkB+kcq93/kfD8aGIBxtFsR+QSRCMX01DYNzRSYewv8uWD/m9YC0NLmf+
zkwY4Yi0knuSEeD5RgtCEn9y5PACawMnfRq+L1Ekz4ZxHlbf8Pn4esTH7KT0
FNRnunxFVLohDV6XXKLfI3752gra5Rto8BB/YtOD+MqvmfDqw0YaGhMHwubg
/Y/qfw8S20SDVlxJvZIMT74YtanO30yDilGS7BuML2pTZc36rTSM7l6kf0CZ
Jw/Mb3k6CmhoffyJT5yN/QebLHtUSIP7tt7LN3B/hHV4cQpDw5q8NhHF6dgf
OXjtfGxBw7yKqfODZ/LEape9+HtLGq7aNuZqKyD/upnmidrQ4MhuefoC80fd
Q5tVsqNBb4bGNwU1npzxVvqj54DP28rvFcN+dtBPItXekYb1D0KfLsZ1h+Bf
xoE78fwHonVnsH+tDH3fk7yLhtubK7aPXYT9xMmas8UuNNTcocbdWsyT+DP3
dN/spsHUf3U0rYH8fj717d89NAj0Asuz8XyXxFMhc/bToGOvY0LhfepTfDSI
Bw0SBwxm0IjPVJHb93QO0HBJqn3tCN5HYPXNQOsgDSu4L8vjcX/MXfX6ZYdo
KJj0/vk51M9N32Wj4UtDQ4qm6STMX+n9KV2qfnjfe7PvnkSZrn7tpRxAw8Hx
c87vQ3xjF8qOVgykwVh61MVruP7imPCUXDDun7LDcDTaN/PdaTmZYzRYVYnm
zsb7sWufXZkagvF9T6qCRT46Hz9Oc/IJGjr7Vmp8RT5p/qlfPCGchmmLVj1Q
RH2yAn9TsUgafP+l6xKeWN641yRyCu9XqDNjjTr2Q5N+OA6fxngO+fcFL+yP
nZZ+G4imIXNKiVMC2idf6urXH0PDOnqWaO0cnlgrXpnQE4v563C5LQjjIfHw
u7NdcTTQb69u+yCP8d40W6kjnoaeyH0PDqI9Cistst8m0GA46nDletRnGxWj
8yqRBrOqo9np6N/kr7XlTck09Ln+cYf52D8aTxJwl2mI/yunroP6FdMN22pT
aWi5+uzKJcTbXjTItSqdhl/9/34RAPt3m8KB8gw8/zonnYHx967gV3BJJg0D
g24OljgvzZPRlCzKokHMX+1iMfKHo8fehHvZNAQ0zBYpRj5Lrc1UvZVDw/B5
sXB7XP+g1pGfk0fDMkOP8t3ob5XQuXpZ+TRML3a1NEB7drZbVV+5TcPm+48i
vPG8KxBnkXIX4yNm3sHPyK+dCQ0fEgtoeFAoPCAri3z5e7J7/AMaZlxvnfQM
+cpZuPHP2SLMp6qU8bGSWE9yj4VFFaM9ln8lGdTfJfFoRmQJxmsl2XtoMs53
LsOXQ0tpsLy9KukE2udarr3kaDn698zDVzXIz1lKHvcDntCg+G3tpVzkuy/+
2Ua+lehvdb/OoEGOqLd8avB6RsNgXfDZ2chnbtrz7dxraDjz+riPFq5nn7H7
4vYc11+3JRei3N1zwdu5HuvB9oCDt5EPF5u+GLODoyFFMulvLfLL3oypUXaN
NPy12R0rOxr7iTFms62aaGDK5M4bId/02p24yjQjf630tj2L9WFZYelKQSsN
3d7pme9Rdp8lUmL2moamGNFYCbQ374Cu2cY3NMz+5bTLG/msv86r2eAdDfnN
8zsykM81F+ft1Gun4VGBwMsY9XuGfe1b3UGDbZ/6Yl+051aHasCqThrq7TS2
Pke+/anvOEmziwaZmUk9Mf/+v5WUdG7JFxoKW8seHkH+PDjUPE+tm4a7wZu+
jEb9d5kZOSq96F/Hb6EDaM+vm1tXK/XRMPRk1cCPcdiPrtKqmfYd15+Epf1G
/lR8IGsn9hP5x+NJVADytyb8/fZzAPPjSObZArR/Q+n74M7fNPQfSL02tZcj
VhueSDcP4f34nLZpnzmy71nWlaoRtOevRkRaB0eObon6r/AvDZp1WnbPPnDk
PHegKnsUAz7vTFUC36B/2G3WyaMZmPKjxtergSMlrWt7osQYMBjotLpZh/XK
bl5g8DgGjoo6VdRVc6Srfdy0AxMYCG2Icx98ypE/u76k7pzEwNNFNZGryjky
9etzLVaCgfH3y/tsiziisv/WE+MpDEgZvtzw9y5HdH6c36YrxcAd1+pxl/M4
YnbI/4v6NAZWi9L1ujc54jDi4K8gzYDYwaee2rlY7wKNJCVlGGg+fjC9MJsj
YWLql0fNYkBFIa9wRw5HEk9IavbLMhDR9Pnk9hscyZP4UdYuz0DalH1yitc4
Uh71kmlUYGD5YFB+GK63SBd9qlBk4Oa99FNKVzCezl/2vafEwMNth3zWpXFk
jEKIxDVlBqadv1f8Ac+fedk1KUGFATv2z2FLPE9dZcuyk6qo707lgVP3OQKZ
mo8DFjHw4kNhOv2II9TiWcL96gxQSz44d9zmyK68kQ6HxQyM3Sn5XA7ve1jr
nTe1lIEoE/lDiiifLiifaLicgQyPCauUUjiSuvZagrYmA0T73wegOHK35NTi
hVoM+Mmetb2TzpFnhp7FsqvwvnKp1Ta4/00lay6uw0DSdBvFZ4kc+W62pn1E
l4FHxw2eG0dyZHzDXK+eNWiP7yab8hMcmc2MHf+WMCA3cDSn6iRHlrd0na/X
Y2DRk1rD7AscMbStVStdx8AOk3EnvBM4su39zcJbBgz02QfaqZ/DfsYpbvMV
IwYm17hepM9yJOjz4bdxxgxw26xiDp7nSOxee48wEwae3C70nYTPZ/YbiB3e
xMBPtbD1J+M5UnRw0Tm3zQxkN2TW7zjDkfqhyQtttzLQ5jUrwRTt7QjoL9gi
YGDrloPh11EeHN1kqi9k4Lj/mTNep7EfCn3wegXDwPsxZ8b74PlK4pf2zbdg
4AjvGikXhfl4+piojCXG9wefFtNjHNk43SVmvDUDu+5sa9ofwhGbODOVQRs8
Lyk/a+NRjrjLr7j72Y4B30DDxnEBHDmeLLPxlQMDiQYzff19OBKvPNxS48gA
491htOow5kvGG7finQyoNWU8tvDAfFEv+5u7i4FD19zNtfZhvuRcjUpxYaD/
+D65vU6YL5on553djeebHR0M3sORv3fdbx3fw8CEsrvMSheOtI7NC7+8D++b
+eyntR1HCqhv9kXumE99I1oiuH7u8tJVzZ4MrKv594PEyE+9eyf/9GIgOde1
8uAOjmxde6Nd6hDG73h4OtEV+TSiu0DDl4Ea+7oQPbRvUrNGlLEfAwuTvT4k
7+dI5wI3px0B6O9wuysTDnGk7EDWmsBABgzPG8974seRy48/T7sYzMCDTc4X
0o9w5IiUWtfdY3j+o+6cplCOWNu6FHMhqP9oqGR6GObz9auxvScwXzzVI+ch
vjOHOneLRzDgaLgjpxbj7ccG1XWqJxlQ7YnJMkN862OdZq0/zYBOnM4txUCO
3GhP77GNRnzqDo7di/6IWN5R5hvDwJym1zFtpzjicmR+wrlYBqz+S410j+aI
UY2j+804vE98tPU4lJXlUzfUxjPQffSodAzuF3V5r/A5gQG6rcPnCepvu6P0
Y2wSA9c7iyVHwjnyQMyhSukSxocG39eL8nnBpUtrUxgIM4/a3YWy16U3B7el
Ib84nzCURvsFPXPMvK4wMLVFvfhmBM4Ta2yVo6/iecrXr1YGcUQiPHHw+jXM
z2aL6Aq0v6vp1fOn11H/cFXLH1x/ojL7yocbDLB2Y1qFuJ7maeU3Kg/9OzPw
6w3EN6jkgmB2PgPD+eU9tWivnWTLwv9uM7A+WaKhDvevsZEVEd7FfJypWqGK
+2WzLBr3FTBQ1vX6iwnG98DvuKyIB8hneYvF5fF5zqgpKKOIgRPedpsvBnMk
96yMRWkxA7X65VQc2nPyPb3kTQkDpn4TFVzwPq7LYsWGSxmwnVK6xgjXNwTw
LTIVDHTKN4fPQn+pVE/PW/GUgRb7Lvch1DdajgrdXIX4365z2IHym11nbFyr
Mf+6/n3CGvP7dr1mSC0DrTgN3cd8vzBm6qSUOgYqFcNaO5I54m2+9W1RAwM9
k/iCQeQrYfLpO808A3q/7x/k4pCPumsjf75gINr7kA4TwxHJ1VMcpzYzIGLl
NE4C+enrCTOdxa0MDIndt2+5zJHKF5GSG18z4M1sUbPN5EjG/OqOHW8YKLDZ
PzzqOkeOeYgXBr5jwDjBUUKA6w6PTM5cbEd7tWel6iO/kynhzvc6kA/omR23
kN/lrSsJ38lAY2oEfQjr0e/MCTO+dTEw/+eVmXEoN/7a8EX8KwOe+ZbOr+5w
5KZhaIlqD9bDfx93x/XTMRVx678x4JwVaqKej3z5buxeu34GUncFv2hD/SZL
DQ0O/2BgxvTUV+eR30V4fpTnAAM7t1y1n4v16fahHUWuvxm48Nn6lyTWj90K
P3y2DzEARftJNcpKj49qW44gvy/d9Gc66m9ymv7d/C8D5vm2jj1YT06Kp+Zs
HMXC1jXavzwyOLI+d4Wb/mgWdkndbLDB+jEofLxQR4yF8jB6TQnWu5xB845l
41iQep5uux/9tTPp3eWFE1jo0NX0Fb2IeKx3t507iYUjM1aV6yKe9Z2j5GdJ
sDDnirKOBp4fGhnVJDmFBcrTQ0Cw3q9dPvfseCkWvrN1mUZY77835mwVmcZC
Zl3RszCsl5m+MPnXdBZOOD+TmlOG8a74vLJnBguBk/3PrC/gyIwy25CPM1m4
YXS/PboQ651zz7o2WRYmGolddH/07/MdASIv5FkIu/fGsgDPW3VzcmGNAgtj
I5X7hkqwv2QSD5UrsnBOs327KupPHdbQKlJiQWyH7KbF2J9su1TYd0uZhXh+
q3YE9jeShptuXFdhQTPU5NVAO/YLXa2uaaos/Fw6o+ReJ9brU7tVLy5iYfVM
EXHow/jUHG6PUWfh7o38RZuw/+tsCr8UsZgFZjDQ+Bb2h4l+cjZHl7Kw6d/X
k7Gfo5SuyR5ezkJBQK95KPanEyp0XnhosmBfpnl0FPbzRa6VZ1y1WPgy0S8n
AvttT8ltW7avYkFZOdinCOfDRbc+iVvqsPC/10fgvPHG4tBT89UsuO/XS7HH
eTf2z/jjG9ey4OxVeXoLziumKXH6+sAC8Q43GYvrohtU//6nj/r71XKa8by7
X+7cX7Ye/cGpegilebInysh7oSEL1kf0gj+jrKz1QnPuBhbmJp///AHl5uad
32ZuZOG405InwThvnA74eV3SlIXoeTmm9ajPUPm4y3gzFrpWzHwUhv3q8BPp
BSJbWBh9WNjngP1znlva+4GtLEz/97pdlHdNXZncI2Dh1SvzpUmIn8KdUquP
QhYWlvDbzw0gf1lSs9oYFk5+HWOt/R37PZF2vtGChRVJ2uVfsN+FNI/oGksW
Zt4aEh7p4chP49Gby61ZqHH79w9djmR1R08qsmWBezorTPc15vsZpSe37FlY
dzp46s5mrE+r8o5e3475cMympgbXa1r19NJ2sPC0/0131ivslwPrRhKcMB5f
U6klTVjfVOwLYpxZuCm0WmLXiv1iZa9XhCsLkY+VJcQxXtL3Hllx1I2FJd//
k9ZEfVbTJXt99yIeNjrF6f/+33gvKctjP8aLTfFdPTy/wnqJs6sHCy3qSroS
qG/q9l33Lx5g4a3nW+c9HPYnuy5JPD+I/i6bLeHagvni1mwr6sOC4fvtYabY
n/90n5aneZiFZzWXDy7C/l3f23SMkz8Li5/UN3bh/SP9jtHnj7DQ+nrDzQiU
m4KKMqqC0P97HH5H4TygHDowOHKUhTtLIk2vo/37IpduWhrCwk5JcYlc3H8/
2jnJ4QQLfooyds9R/9i4y99iwjHeok4eG0J7zC+2rKuIZMFOUc7yHcqJl6fH
/j7FwoMY+S8JTzjy6cqmTrVojO+IPZktmG+a14/r2MSwoF0yJrPmGfYTeQ8j
TseywK75XLWvAvP7zq/XJXEseBxTHdmA+StTuGzZj3gWDm6/fVOqFP1X4hK8
4CIL6mKpI1OQP7MrUniLJNRf3zdDCfli8FnrgohLLFS/9v3OIx8b1kv7FKWw
sPFa7OMtjzkS/cLsWW8a4mfbNnUZyq9aQxTmZbCgdz9NKgj3q74r3ifMZCEj
Yun7Zchnnh9/l4RkIR9Icfmrke+KvyyXLshmQWKvp8UI8rN4n6vTlxzky/rD
E2txnR1Ivadwk4XUf6+ru8qRlOFXk7beQj78f/7tHiVjE3yHhbb95QHvke91
xm3JuXWPBRj49wsE2G+KnxDtvM9CVs+qmNEo10mVULJFLJTO+9bnifOOvMxQ
umkxC3sMQmcmoLxLXvO3fwniXXQ9IBTnm/y5bia5pSwkLfd4HoLzgMiC9Ivv
y1mYfKHlnCHyval6W4/0UxY0Aucc/56E/eSymfobqliQaVujoY78/05ra4xP
NQtv/t++xavDOrJqWUiY6KxWgM/76D1e1VaH+eXbtO3Rv3nKcDhMimNh2ukC
s0f4/FTTla/WNSK/+R1ecg3rhfXWPUu8mrA+GO9NK8V6nUFfCcxoZiFg0/wd
Fdivf7d809DcykKozBm7DuwfwX6WikQb8vOCnXusUA7fae5N3rKwf4o+FGH/
0+gaXrn/PQtyY3dlnsB+XGl/qXzqB/Rvv7nDgb1YX71G9jR+ZMHI5EHFRuyX
C3y1Ho3vwvj5bs1PxH53bODeabpfWBC8Odjxyxf75eMZO9y6WYgQhPS8OMiR
hPC3d5J6ER9Tl1lG2L93npadWN/HwrZGU0V77N81YwVWY34gn9OW04zcMH4v
RGRrDWD8/vs5nO0Yv8llIs6/WXCz0k2u2Yrxm/7H/MIQ3l/+ZVDVFozfa9pp
1SMsbNg+2qRLgPGbs2/g718WrpSWbnC15Mj/AbGaNGs=
       "]]},
     Annotation[#, "Charting`Private`Tag$3886#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
BhzfXfGnFftnZMxvs1rUAMNbcY9+e2B9LMiG3myaMHusr8AfsD4/2+WOimqC
QWdc/2NzrM+dEt50NU3oOT85wmKI9XG9vHLPXBOaP/6o/aeL9dk48a1huyZk
Vu/LSMV21yr/j0P+muCnzzTxRAfrE2jz8scRTRj76PzuoQoVWfCrVzInaIKP
sqmttSLuf5NvT/9lTeiLs8syFaKigNkLn3PvacJ8XeSEPjcVzY02rO2r1oSV
HZb0aRYqShn8LqL2UhN4ivJ3b99ERcIvxPTnhjQhpVc66xYbFZVWOjo3fdaE
CyBR9IAD39eC+IMp85pAUnLQPc+H82WVJrqwaMF7u4Tn97E94CwxX1hYC37N
N0twceJ8Rzie0ZW1gJsBnbPA8VP2mL0tMdECn2C6UPsGBYm4HPp+zEELNKWf
udxfpaAyy5tMFru1oKPhJacYM86n2SPFHKYF9Yd0W1nZcT6Jfyb9J7XgwaGa
psu4/gAutR25F7Vg89/vwZsYcL5ln/B9t7VAZJPrzPgaBaVMpZ9XfaIFf7fG
t7TNUZAwqf7ebIsWhHJXHjf6RUGlPd8aGwe04Gn1p00VMxRk2SD6MZmuBbFK
91zaxilooMRhxvm3FtwZkxxeoVBQQF4ch/AmbdjozCw0H6OgubQSBfoWbfi+
qTfsMPZPiR2xKpHXhqHKVT9rbBcOYfc5ZqAN4oOlM08mKajE2zTK3FYbFPkq
f4j8pCAL+9BMpp3akL2Z0qIxgfMZ5RX1BWvD9DJLUyAZ51PqfnE9RhvM0atj
ox9xPsG/pL1p2nAh/aLoqw84H7PqgkqeNkT5X/rp9Abnm9+1ebZEG8rVCFLi
r3G+z2lqjQ3aUHJEqSq9g4LM3z+3Se7VhieDWoG+7RTU//LrHmeyNszWHfFa
bMP5akTihH5qwyfOVSliK85XuC2HtqoN8y/vcCm04HzZseXFPDqQrK9RkIux
8LnirkhpHejP6bSpe47zRQ6PmunowB2yUZtSNe4vgG2FEXTgS5ZTZ0QN7s/N
RKjPHeNXP4yXGnA+FKJzPVAHrhav7NfA5+e0bzjujdKBAocBF+dnOJ/06wMq
yTrQ4qzy89lTnI936czvqzrgm9b3Tr8W67emnNfwUAfYgTAd2oj1m/auSXqm
A9f28o161+F8lPN927t04Fv6G8+cTpyvr25ScFgHJnXqbwz911/TJAPtqw4k
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
fM+rXXrijRDrS/0P5SrWT5xGWdpvMd73/HlT5j3KD9pcOucN5uPB5mQlxJf+
8muj2VuMdzvfMQL1L5p//IdjM84H6eiTfWjfH79508PeYz92o3hexvPSyvvL
rrSiP6e/f1iC8vLUuLSyNgHcL9KxcsB8i93d7vShQwDnbwWlWb/BeJWH7B/X
hf1UL/eDrgj1qSif1fwkAIOTNfI/MN8Wembl0L4IwLiqetavf/lTtP6Fe68A
WsPrU5ww3lLFN+3H+wTwavm/D5xjfm73Gc34LgDvCRObkyswnx9OVHsxgPmy
Ycmi7lLUNzXF6PMg9r9ej/RzGE/6NmMr+V8C+AO6pVfw/sL7r3auGMZ8mRa0
6R7Gd0RuewTvD/aP/DOfgu6gPoeRy3tGkT/Km1eVjfrunHkYN8Ya1noxnidl
oD7Z5cK746yh8b/vR6C+zeW99eOtwXfAe/q0Sw2Edstu0sBEa6jWaVl6NqaB
LJD5pjFzsjXonFirGBmJ+jZErjOWt4ZJ7hcO2Cc0EEn6fLtNCtYQOPLPwAZy
bzjfP3i6NZBfZ1ut/+mz4sWcV7IG7Z9B42VzGsjOax0ZhTOswfTKXAUx2kv9
GVrxVsUavkafrvh8E/WxZ7wbmWUNnP/eT0J9l28OzZ1jDVN3tDw+jv5IvlOU
yVxr2O9y58f8W6iP3rjCeb41VJrQ71n+05fsyzi00BpmpATd+4P27OyVc72q
YQ3LVwhNnNA/KuXKgYrF1hA3+nUvQfsXJK5Oateyht4nrLjyMw1kuLvm3vhl
1lBzQ1ixJamBiM3dXy3RsYYbyRkT1yeivtN/PlrqWoN8k8HBtOsN5FRHwtid
K63h2f/1e6zRmRttYA3s38TEHOuTeqpi9U0ja+gKX/1AHettfqu9dbWxNfRX
bd/PxXj/Nvru1WNiDYX/fX8U9UVGHVcwtQZzpyunf2C87zUtuKpnbg3tDtE3
XxSjvpUFj/nEGrQGDx1WwfzxiLCS+K63hrDvbpoe2C+o0s5v8RbWcKA49v2y
u6hP56B8Hg3xvLZjXRLmy++wmVoiS2uoNedezUb8xA231g8yrWHTrZXvja82
kLtaVAdVjjWMsmebXMH8OBnyNtCEZw3GZ6bqrTmJ+mr9TtvxreGg8k+aXlwD
sdCYfGu/tTVYaY1V1D/eQOYFpVZe2GgN8bF9r6MPo74XJq2Pba1BVJNx7lpw
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
9Yk+Rojf/H2/xsZwf906ODS8kUf+B0hMKb4=
       "]]},
     Annotation[#, "Charting`Private`Tag$3886#2"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.25384377777777767`},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Overall host heterozygosity\"", TraditionalForm], None}, {
     FormBox["\"Time\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 100}, {0.25384377777777767`, 0.4999920000000004}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8587911836235523`*^9, {3.858791241444632*^9, 3.858791267015524*^9}, {
   3.8588667766750603`*^9, 3.858866803234131*^9}, 3.8588669218706713`*^9, 
   3.8588670259062233`*^9, 3.858890300684992*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"meanHInt", "[", 
         RowBox[{"pars2", ",", "\[Tau]", ",", "5"}], "]"}], "-", 
        RowBox[{"SEHInt", "[", 
         RowBox[{"pars2", ",", "\[Tau]", ",", "5"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"meanHInt", "[", 
         RowBox[{"pars2N", ",", "\[Tau]", ",", "5"}], "]"}], "-", 
        RowBox[{"SEHInt", "[", 
         RowBox[{"pars2N", ",", "\[Tau]", ",", "5"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0", ",", 
       RowBox[{"\[Tau]Max", "/.", "pars2"}]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<Time\>\"", ",", "\"\<Overall host heterozygosity\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Directive", "[", "Gray", "]"}], ",", 
        RowBox[{"Directive", "[", "Pink", "]"}]}], "}"}]}]}], "]"}], ",", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"meanHInt", "[", 
         RowBox[{"pars2", ",", "\[Tau]", ",", "5"}], "]"}], "+", 
        RowBox[{"SEHInt", "[", 
         RowBox[{"pars2", ",", "\[Tau]", ",", "5"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"meanHInt", "[", 
         RowBox[{"pars2N", ",", "\[Tau]", ",", "5"}], "]"}], "+", 
        RowBox[{"SEHInt", "[", 
         RowBox[{"pars2N", ",", "\[Tau]", ",", "5"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0", ",", 
       RowBox[{"\[Tau]Max", "/.", "pars2"}]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<Time\>\"", ",", "\"\<Overall host heterozygosity\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Directive", "[", "Gray", "]"}], ",", 
        RowBox[{"Directive", "[", "Pink", "]"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"meanHInt", "[", 
        RowBox[{"pars2", ",", "\[Tau]", ",", "5"}], "]"}], ",", 
       RowBox[{"meanHInt", "[", 
        RowBox[{"pars2N", ",", "\[Tau]", ",", "5"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "90", ",", 
       RowBox[{"\[Tau]Max", "/.", "pars2"}]}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<Time\>\"", ",", "\"\<Overall host heterozygosity\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Directive", "[", "Blue", "]"}], ",", 
        RowBox[{"Directive", "[", "Red", "]"}]}], "}"}]}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.858890454335641*^9, 3.8588904550241547`*^9}, {
  3.858890505360515*^9, 3.858890533664646*^9}, {3.858890568417651*^9, 
  3.858890774156048*^9}, {3.858891065051716*^9, 3.858891065945443*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
8pzfLMi2KvoXj/Xl4JPOfTPCAkJ7zXmG9p0dC4qQGWfBFqeExRqI3/sk9lUr
STZcnv7OkIr0Mg3Nev9pbGCOnVeejvZ7l0sMZ8xgw0THg5VH0Z5cdtvSBjk2
vKnT2eWF9n9vL2JKzmGDu2sd5R7291V7jocYK7HBoIHGU0nDfXGGd4bnQjaE
adjw3bG/V16EZ6eXsCHbYcGkf9ivphgr/6pRYwO/3XO/JtK02l8qw5psYNjL
vz+P7x/f/JKirceGl2+lBtVxvjQOXN+9yYANLl2XM1QQT8W4felHTdiwR4+5
Ygz5m+dvenzfjA2JKtpKb3BeXMo17v9myQbtUzKn5yK/G2TnL7FGWvPI2bL9
WM/CHmuuHRvma1aUxGM/3LW9ync/nQ1GOsHvWvF+Kv539vRtNhu6Q/JlM7Df
jpwMquzksWFStlJoC/qzdjn781xHNlRJyElko/+xd5fPoWxCe1O+Rv7/fS1H
wip0Cxuy1r6zGsL9Sqaz1SvLnQ0B3QrXBnDf5YYWJbV64Xu+q8kanEenZx6/
O8OXDTEB19ydUL4tw6vLYhcbVIWXx4dxn1tiAnJ+QWyobe/e0FSI/fPpArOL
oWyIbtJdFYrzI9v519ZXe9kg9WEk2+Um3qffXxyV2If+GuwSHED9xgevlxjG
YTzitEY9cD6FLdj3wT2BDRHRNhPDOI/u522UTjmG+H84E6RyVUQm2RgbP0li
4z7Py1+PfIpIxmUohQ0OBt/9U3D+HdnRE695lg3SVYl1uiUi8mq8smDDBTYs
7CElRXdwnpw623b4Mhv8rWZVGtzGe1Y4pyHwGhvsnizeXIzyEkqJtZuz2WAZ
2z9F476IDG2QqliXx4Z1XrclpuL339Jji1cUsmH5oc5r3fhe19uxHMUSNpg8
3amuWYX4LA69PFHGBrU/tc1tKP/a7ceZ3vuoT+jmJSjCeXPFN7Ghig2CMNei
mmL0r6s77u5jNoQqvDzdUCoit5e77c18yoarDqleJcjP8mkLOPaCDT3eKjlU
tDcjx8En5DUb/qQW5Dki3qlf67dsaWaDfHWUrBzKH9Onr6e2sEE2s3FqMfJj
dz9iGrxlQ+Op5LOfkR9228pmwUc2zP7r6hb4QET8B++YSXax4UBCjmM/+u9p
arSy7xMblsVv9lpxT0Q2heVqNPexIcUnjXemXER4d5erPBhgw7l4UfoW9I82
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
7s3E//3Bv8u1o5sHp1qp62SQ3lG9N2JyL/bzzMsVh5GmKM45rf6FB51/5Zc/
xP6wdEdOvt1X7J+mtnvO4XwYe2Bd59XPg9CDxcvX4H7ZotDadeg7D5oGA/33
4/dF23ZPZP3E/vzSzqsN+0di+XTlukGcD1HftP3Rnh2yGSZ9QzyIXpQnSMd5
Qtlqai8zgvg9XrnCGflLS15uXzGK+HNc3t/F98ektsVx/vFgmsGbS0y7//+/
Y+zirgmcXz7P5/CRLio4VZ40iQ++Z3QvFKG+xCm6zYWT+dCWluregfSODdX9
jVP5sHaGkSlnjYjY5W6UHpzOh0vSY9bjOL9UJX6ozZvBB8u4kvH9/78nSFhr
KsOHPvG3xZqoX3xjyUYnOT6su5ZnfhT3j9ujpUFh8nxgSZyTafr/PXtO4tnZ
fHj08KJro7mIbM/szro7lw9dTs1uJfj9uj+Rj94o8sFix7vNbJRXZc59Pzaf
D5raYaKl/7938ebwooV80G56XWWO+4P4p80csogPP/N8HsrgvL9NaVvhtoQP
tdK7aT0Y78T0ANr+pXw4n5IWKYvfb++X8riixgeFs+03NmL/XWdzKeqRBh/W
hL1fmo7zQjV1dVqXJh82BycHDWN8Rj/X356qw4eovwqvviJfZOX1crkeHxZ6
/3xohPbdPvnvE1WfD4uvzbnkhfzj3SmS2w344PXozxaLdbgPrNFbdMSID4Xh
PjmmXHzv+KPVN034sOjBMS4T58eS9k38F6Z8qCqsbQtG/l+Tnzu/mfFhb8KR
ECucR6KEw4fkLPgwVVIqT4z+3n6remWlFcZnXu2so/+/Z1B2n0v4kOw4V2sW
5pdPnL04wJoPo6Ybk/pwX1zX0vMj2Rb9tR7IkMV4LtGLlim2Q3/MT/cdR/7f
mHmaQiof1KUW90gY4HtNudZDdD68E6m9ksX9s1BznbMSiw9lCcPfEnFeH9v7
Zo8Zhw8t4mnyc3H/8HkVeHIjlw/LT9vsK1cXEVu1GbkRfD6cSlq6xB737cWh
l2vOOfAhq6/OWx33g791Zu33Hfkw22DnRxfUL1z8evTdBj7UtUV9Xon7c0Gg
t+LEJj4Y6q7nP8T771jNuIGqC8rbB3nlKYoIBPQYLnLlQ8Hrq9Ncl+J9tbDe
SHkrH+qnlq3wRvmsmhJjJQ8+rILBU0WozznggsncbXy4ENs8ZQHaK69ycJWC
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
        "]]},
      Annotation[#, "Charting`Private`Tag$8080#1"]& ], 
     TagBox[
      {RGBColor[1, 0.5, 0.5], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
cjV7kDeY0/X7r5S8feb7YUDLHiLl1woNB6Rk8Gtqr/F8e9j597lb6Xcp0dcW
jt+mZw9yxyKXZvdLCZ+rMDvB0B4c/b5//IHvi9CwlUZVizHfu2fRZU1SkvHA
22rEDOtdOHcFo0NKxJ+SeWYW9mABV+Kz8H0ybmb19h2W9hByYKVbYa2UmFD+
BV1caw9KGetzB2qkZFPQslNvwB5M/hVuXIl25J0dV/5R7YHy/oFg9WspyZZe
yDZn2kOeQXVZ+2MpaZj0smwn1x5u3Q4S1j/E99XqYfEVgT3cuzDrP8iVkuU+
Jp21G+zhmc5Xm6gnUuJ6xXVE3sUe9m1SH3AtlpLot/HKlq720Di5q8Mc31d5
f8sX7HG3h5U6UUNKQin5bPrb4rqXPYSF2YU5vJESZTdDhtjHHva4GMrC8f20
5pzz5sl+6C965XoG8XmVn9m7NtAePqSv6vaQSsm5n0XH/EPs4Zj2htcNVVKy
Vxi/fcthe7DNL0gPw/yc3B22jKP2wFNJ+eeL+BbFr1xgEWkPir8vjB7H991E
P8XxOlH2oGmScHslntfGbfw09Yw92Aw5VLPx+zKTB6V/Yu1hJvUeJbpMSq5N
jbjeet4ebvtVbCsqwv58XR9em2QPXuwIz5vl+F57ZehWmIzn333s8TVfSlZm
DJP0a9hPyd8Fq/D7WVHV8xNu2kOR6dne6gIp6fe8/i8szR4KdqoPT34kJTXU
wI8+mfbQMNVWmJUuJVl6tBKnbMT3Z6DN8raUnJbTTLV7aA9si29zJt1HPlq6
w0zz7CERjIbqM6WEWlrsqlVgD1Mc91sH4XkLUs/ZTCxGPt7mPhNnScnYEY95
P8rsof1ZTMRhPL9xy6qxpgp7UHnqPnNxmpQ8s5rS/OqVPZxWafxz/LqUJGk1
FT2ptodfZ46xfmbje3XowdUb7+1BLXtRWif2W1AXceSsxB668nxWnMN6TJ9u
2Hqw3h4WxPFO+mE+pSQja88me+Be/3n8JeLtChrRFrTYQ8L4xNKIl1JSua5m
dG27PTS9+dhn/UxKbi+/0WjUZQ9ntv2hy2G+YypBz2f1YL0b1Rpo91Bf32kp
4/rt4Vqamja1EH8v1GqGfvtlD9LCc6VXS6REM/vb5rpBe/j+rzsgDfkeiCmx
+m/UHs7t7nrGRT2Id5+fkzOOBuvUU5fsrZSSXJbnyBUFGvx7WzRPH+uLXWT5
IWoyDcp6H/HdsZ97Jk8tDFSiweO/89xmP5cS5pem5G0zaLAvy0ujBvu7sDLn
EHsWDZz2n3/Rg/EKdyJdVmnQ4MODy1s2PZWSlkinNXraNHD7MtugqRT3mfsi
rek6NNg+8PgxBfGm2I4ODevR4GGHZ+XmB1JyUKe2vsOQBo3DogUPcL6c/t14
JlxMg0u3bOfn4/xZNAddLjajgSulPfnQVSlRKaIfzDSngSevzeZPopT0XtFy
TlpFA2v5X7dmnsP9c6jHMsKKBotXMZtOHsHfK86lGnsJDSpVd0+Ui5CSk5YJ
g84UGuRQBOfOncffa+pedfZ0xKv0eUU/+m0HLPOXsWmwOvKkz9xIKZknmXpp
rgMN0pfIstzPSMnoo+YQxXU0UHBPfH72tJTUn8/d+NuJBqGmUaPWp3De9x1f
1eJCg5+q+3csQX8if6N6tSsNihLZX0qDpWSfmfGffHca9BwfcroUIiU85b/S
2140SKC7zX+B8SY9tXnxPjTg3/0q2R8nJYpvbyaF7kW8yixTvwtS0pEZvN87
gAbRM4+2uqcgX3PHmjP202Dwx3PBtDtSUhF3kt51iAZyd1KnZN5E/uSm5yw6
ivh7JxcbJKDegi5q+ETS4M2+2hO7YnE+v8w/lhlFg4LQhLOVMbgfnTO6vp6h
wQne+kx3rP/Hm6WOi+NpkPrpfee3o1LibvOsYHciDWaPvrqpsE9KhDm2elmX
aND8olV3I9q2eq/PfEuhgbqKFVffX0pyLjj+MrlBg411MZ4ytHUmf9jie4cG
M59mF3x2k5L4Qzsq7t+lQaHd1G9UXyn59617Se99GhjOuZY65yDut21BSaYP
UR+HZk7T24+/X9+Pju3No0GvpKN8RSjyRz2x80EBDfKVyZVszF+UN+1dXzEN
PKoT6vah32RRkuXSFzQQP10qmXAI9Xdl3g3/Ksx3Jvp0M/KvpJyumPuGBrtb
ldSDA6XkcLhZQH8tDY5dpnIU0P7642nDMjENSsxlH46jHlw8gRJQR4MDuo+e
X8L+vJa9vPewkQaiDsEE3XgpWc0SzPr5iQZruHtXayG/Gc/rQ83babBKGKXr
gf3VMHNvD+yiwXoP9tDtaCmJuvGV+7gH50k+X24B6ndANTDvVz/q3yS7YVMU
7ruTI/NWDGA/7AM2H0V9SgYjo4KHaTBl3IlPtxEfdbfS9ydjWP/Y0f3BJ6Tk
cVPipgE5Opz6/bZT6bCU6PHnlq2cRIdvno3blmG+8+V3FoVMpYNk3e8Fudhv
uRWm559Op8PAPU7sP9THvvS84T+qdOBEF86yviIlnzTJDksNOnCX/yeqP4v3
dUzVmwPadAhd+aTVGfGXjjlYPNOhQ1Z0kZPmJSkx21eXMqSP8bQKuWDU37VW
twlrFtHhYFqbxSjuc2WnLt9DS+jQxmjVXI37N+zlPmnBMjoMaYXcVrwlJT1r
hm1GVtCB1xPrZnlNSrbcj0i3WkOH5kgB2Y3z/3b+1BmhNnR4/N9x3pMbuA/P
Jxx4bkeHsJJBs8N4H9xT0G4ZpdFhseG19c9xX+OxTGs2HXJ+3urowP0T3WXy
8IgDHSaWKDWbVUjJ8OYnWsXr6FByIrRfHe/rXTXWkWMb6bAkZpH7wf+kpA4q
u2220OGORpu6C+5bxiPe+qNudJjbOqhrhvs230D2vMSDDoWu09aUom14aZvB
uF10iFh1K8UP92nSlM6z4EsH/w6TBzdxH0884j8Qvg/jKS1N+Xj+/r5B17Jg
OrheSNFIwvPbtx+rGn+IDuLVF04syJOS9WLFpXZhdNBbl71iOe7j/2jnL0VE
0KHLsq+RjXjavQqrD52kg7z+6sZwvP8mRrXJBUZjP129P9bhPjVMn2a5O5YO
X5RrXU8gH4yqlb47ztPBTHPq3LPYn11ftt3cnIT1LlpUP/su8jPptGxdMh18
z70Wd2E/7xk+VOJco8OJVMfsc6jnt/QPttSbdKAc2/QzDfXSs1MhZG0aHdRH
nT764b5QPrUkyyKTDh83GgxtwH1pluHUYpKN/WSW5hxBvfBfHlUzeEiHdXHB
am9xn+3rzGDPzaPDqvMLm8zx/POTheGzC+jwI2rOtUC0HxqNPJlWjPpwLy46
jvtexNDvnlBOh4XO8TaJl6XklzdXZ6yCDuF3YopdI////9j+DQOv6LBjeXlg
Bs7Pirup0b3V2M+e2bT/z4PTq5clHe/pYCxv5rEd5yekq/9Xs4QOY3KXtrPD
pOSS4hxjWT0dzth5xpag/WwRdVttEx0U5N4sXoTnNzB9E6ta6BD3/FEiLVxK
RnYlvSppp8MHfcqpqGNSoh1dMva0iw6Hav9Vh/tIiXVmp3lODx3GNRedrw3C
+/y1yq6MfjroxvQPrt4rJUe/rrl2/TcdbuwVWhkGSMn1KR6iS0P46+WveJsN
3l9lxmcnn/tLh/p3+355IJ7PrDzr0+MZsM182NEQ88nv/hhwbAIDpvhSbt/H
evTPTM44qMiA9YKkfWsOSIn9vWVN+6YxgGXTdu0Q3j9eb1xm+qgwYDIzzrQb
92lUdyTdfTYD9sgyeGroz5h6P9RFkwGNbkHUrX5S8mqxNNdxLgOupE9pWo3n
fWX/62AtYIBF2tvtEVj/1D1G2hQDBuRvTgpvw/1uEiMQWC1iQNZrJ02xu5Rw
sw6dNF+C51cW1mZvw33+9lbh4mUMSLfQWuW8RUrivr39rreCAYeiXk1qF+B9
oTRgoL0a6wurc/RC/3uT+ZtnWTNA1Fe7udQF7yMOI17JlgHfXuntkXOWElXf
fRUK9gwIH+/n7YDfW5xNHh5lMEBVzfNClYeUbLj/wuw3B/M3mu2N2orzVv3N
o4fPgN8aV0MMdkjJxZ7Zye3rGWAa7nr1Avrzp5Hapk0MqIm99sYC661f4q0g
3YJ4jh4LmIr1DXPPra5xY4DGyLvVvSwpmbO3YG+lBwNWTtIv9ePiPoptvVXs
zYCNb+Wd2Q5SsjVbqT5vDwM2Pwng8gH3Xc0K5Qf+DLh7MuCgEkNKUntdKelB
DNC2COEXM3GfKp86kHqAAeqFP7VZ9rh/TXPvXwxlgGZfb+B2tpSMd2j4HBeO
+EYjb52mS8nL4g16QccZ4OA//sQpO7xPTd/v2HSKAdWrntwv5uHvn2uc22tj
GOByhKFQi/etjvLLNp14xJu+0uwr4uk8QjGYkMiAm22znzRifTk9xZ5dFxkw
I05+y+o1UnJg65q06isM2Ln53rpuSymB6icduakM6Mw4c9PNXEomWy8zTLrF
gMX/rANfr5SSd1lZOw+lM0Ar5kx43GqcJ22jDNd7DCgb+xf3Cetzi7nVafeA
AcWLr1+8aCMlRqPzFhk+YsD4aKC6rJWS77uTd019yoC2wJjanVhf/ofZmX0F
DDASGcR6r5eScPa5r6JiBtgES+mLsV+MQqXF+eUMYNYtCQnfJCUzFp/anVLJ
gJ7RzNmfnHB/J8tnhb9mwIYF8dE2G/4/X0e/edQwYOkvxZkGu6XE+9CwCVPI
ALMthpf98P2x9Guw7xIp2n0HOJ/RP+jcf1+lgQFHNrEXnXXF/rza0/u7iQGn
h3avPbhZSk6t7jRtaGHApt8Jcm6od/7dHX7F7Qz4WmJrfQz9GpofH9zsYgD7
bwz/LJ7/6ZTL95M9DFi42rvnJs57xqBk6e5+7Nf1w2+p+B7x9xbsc/jNgBFN
gXoU7ivLure55kMMAFl/nQLuq3EMxg/1v3gerUrMwH3y8umL5aPjmJDj1q1a
i/XGG5LATwpMWO3bcDMe53PTxYJH/01mgnSJQcEdL+z/pJW/MpSYcI6VdNYL
6+3cn2txdgYTaP91zziE85PTYRK8bxYT7Lkzqv7hfB1wyniyQYMJ889ub2hC
/FCpN7Bamwm5Zz/znuL3k1emrpynwwTGY8nwduzPuztaIXL6TLjA6rzigfNw
aXbS0w5DJsj7RNX2ot/thMrg68VMaHTMOd2N5xn9jrF8YMYE4xn/reFjf757
TD6YYM6EG9RNEx+hfvPFkc9CVjFh0hctM13sbzj139BmKyYkHKoPSdyI/X98
aA0QJvAT39ybg3zP0B84pE9hwtdIgWoK4qtL2Fc4mc6EETfTNzSs97p8z8g3
FvJl7tp2DM/3DvRe+57HBIuIYDkvPva/tTX0iSMT4v/0PPDGeRx03FZ02YkJ
z56eUbuE815a3vD3iAsTSsTbtS7gPJ5a7mTj7soE23W+n8ussP8334fR3JlQ
Xp55wxPnSWMmt8TYiwnHlnvPcUP/p2Mv/yn7MCH584bbLjhfGf0U+OnLBOao
pX7pUuz/9pJw2T4mOITo9J5fhP1/v6asMJgJm52XhUaaYf9t88ZfP8iE7pr5
Vz1M8T1K/fK67ggTCtr6t+vo4vuPrpGoEsGEWS6azBp1vI/ZzK2sk0w4eOV8
73X0e/MOLYyMZsI+xZca342lpFxwr68wlglVaywPG6Ffe0Nj/q/zTNBZs/LX
F03cl5umRSy5iLagZOTnFNzHm23YXleYEJ02vOL2NNz32/xmpaYygcfZ+qEM
7ZPu15tkt5iQkWa6KWkq4vV8nzYjgwllz5clBKJ/zS45f2YWEwIdGVG2M/D3
0R7z1RE5TJixKs0iBL/v9fOQK3zMBN+VP2yjp2N/Ay+8+ZnPBL+IsqkMtG/u
r0w0KWLC9yCFidFa+Hvs4J+tnmVMOHOXM9FsDt7vR4wMr1Vgfw1YS3cgnpxw
5+/SV0xQ2rH7jIu+lEw5Hv1seg3qMYxyUoB+j6jCCIaQCTNv7nKiI9/F0d/Y
x6RMcC0pUmXjftOInTu7oIEJ27MXln3E/gSe4zX/aGbC/rW5CbWGUlKTeDR9
cSvm+6nWO4J+o0s5/h5fmDChpuhy7mIpibjSsvpqNxOeTz1297CelDRemykv
7WOC3b1VHe+1pWTlTcpb5V9M0Nhl/Ho31hd/J+gCfZAJ59evdyvSwPs2445r
+CgThlWkcjOxPmqW1PDZOBbodtL+XluC7+sHk/r7FVhQt706WBX37+BDywJj
RRbEaXx+eBH765i3K3LHNBYctXukdgn1k/UsmZOiwoLETIFSI9oTi97Mlsxm
QX/oVmMFA5zP0tHmaVosGImeUFgyV0oKXizJoM1jwaJ2De+valIyu8p131Fd
FlCnfd5fgP3wfx23Jn8hC06XF/ZrTsLfQ9Wl8v3GLNjbojyza0RC9N/3v11k
xoLqP/FmJxTx/hPrJrmbs6Dtwu7ddaiHOtm6bVdWsSB3gq9ePcYv/3DcSGzF
gm7fghdaqI+Y5if9SsCCV933q0oxX0dLR4E9lQVP57gnnEZ+oF39eBiDBfUH
r9v4oV6TOxncpxwW2J9VipuujO/D7oNq3/ks0FsQ1O6sgL8X+zI/Gm1ggbDJ
aUYe2hk/PmRsd2YBx2nvk7+jEiI3oBSQvJWF+0rzYaoc/v4YsrYSbWfBsavH
JpYg/qejexWUvNBvdfeD32QpmTnuejXVhwUew/p/Jv6TkD3y75OO7GXB0uln
2i/geZUT5dzyAlhQMfb6T1yvhOhMMV/Ut58FX6+uq6rokZBD0zx+GB5mQZmy
dtznHxIinnGh0O0oC7y0Xxg//CMhprMqj1+OxH5uMJKNfZWQU+p/uMIoFriz
3i2hYXziy5et5WdYkKdbTk4PSEjqweSDj+JYcDey4+V2eSnJNN4z/XYCC6xX
j70+rColeR+s7yReRD5lrDWHsL/lMdOtTlxhwe95rnsGUY811i3vglNZkKVh
8O828t/Q+9DL6xYLtrlfTbuPeNtTj486pbOg+cbHhIG/EvKd73Sefo8FPV9C
pDvHJGR0vJGR5QPk/5rv18CfEjL50VCR0SPU58rv2r1dEjLL4806zaeop0n5
cgH9yMfsq12KhSy4o1dYGP1bQhZX7j06XIzxpjq3n/+SkJUhMLu7HPvjWfZX
1ikhdkYz732oZEHtp49L7VskhFffCm9fsyBo5iRjdoOEOEc/kT6vYQFzx8Et
ps0S4mEVtee+kAWy9Wv1FPB7/2+b5K5JWTDHZmnQqhoJCb1qfCm2gQV/Os+a
1b1FfnmjS442s+DJBrZZTTXy+6/6hd9nFoxOnzWz6A3ym5Pq7NaB9TFf/ber
SkIyt+/r439lwb2VAaU5FRKSN5NywraXBen0vviZ+H35i1lzlv9gwdhq1zz3
FxJSE9SRozvAgnVFXzutyiSkwSCfpjrMgunVeX60dxLSLj3dKD/GAs1ro5vT
i5DfqM0Bv8az4dWqo3uUnyO/lksmt09gQ7O0WmXwPvL7deyqRJEN8x5P2bb6
noSoXnlnXjmNDWFeaxIXpEnIPM7NV3kqbGi75Zi457qEGP8N3JY+mw38q1lv
d99AfrPtf1/UZEPZlPapATeR323qZ07NZUNERtn1uXeQ3xldOgcXsGGv/tbq
sAzkt6wgb5cBG84cX3H/Jvo9AmI4LovY4KWnt6UIz/PXc/3MWsIGUcLZSfap
yK/Y7IDVMjYElfftI5eQ3xPjlU1WsOHyruyqgFvI70rRLe3VbFjs1gyLsd7U
L7dXT7Nmw5rq3+8TMT7z0v7av4D41xgHXTiP/DIZnr1UNlQMFd7+Ho/8DmuO
NDPYELsiJdg4WkKq73XH13LYUBdIcxuKkZC6LUULS/lsOBiZObczUULapsU9
z1nPBotZn5d8jER+i90cb2xiQ6abM8SfRH79lnee28IGiVtUZSnakxcohEW4
sUH18++Pnw8iv0KJaqAHG4Z3Lro6LxT5jUy/u8ObDbMe7Fxqdhj5tThI1u9h
A6F1Ru1Be2U7S0L1Z8ODAMn30mDkN0l794ogNkxiJN93xHgevXfcwgNs6CpN
X7bgCPI7WJKkFsqGC3ZOnbaY3+PuOZNJ4WyoGTPPXojf+7vsKP8TyYbs9pPL
DqJfOfXrp7Wn2FAf+MFiywUJyWrd9+9YDBu2pfYtqEW+WEZDc6vi2XDELkDx
aKyEfNkTvlbpAhtMBQuUYpGv47mTNgsusyHk3pvZl9HWHYg9mHSVDbubehqi
kd/SNWqXPtxgg3Z/ZlAinud69GqeThr2297ILRr5G32hL/HMZEOnwfV3MVh/
8uSsn5nZeD6DvVExUEIsueYzvz9kw8ftOQm+4RIiOVewdMVTNrT06tZfx/gA
qa3DoUI2HIhb8ETjmITMmPPKt6SEDU92DC3YhXizt/FjFP5jQ+lguV5oiIRw
bssymS/ZMO1DuMK1AxLytdP1VexbNhh0S0/q7UJ9Len4InrHhsPxDet3uUjI
wgDfiZoSNvzs2XqM7ywhL/J+6bvWs+H5BLPi91skxG3kMOVWExvs++RGFqI9
RuTdO1vYEP9f1V5bVwlJOR4dvqQD+ck6+WWnk4SseaWSGvCVDRODWaJhPupr
2uWip71sYFxnKU5H/35HncbRH2xIsHBKql2P++5i+rDtH9TzszOKMzdISO4H
U82oETZsap/wysAR+6+Tt+rtP5zXLs3xIwwJ+eZh7aSiwIH1v5bVhKE/+u5/
QU6TOVDZG/rcwVZCjHrZCVeUOGDkl7u7czHeL8tFuZ9mcCB60cjr9atQLyEu
7wxmc+B+0nrHCUZ4nz1v6fXR5MDfypaBK2injts1LWcuBww2C3xuG0vIWvvv
i38v4IDdSOacuEW4j06HsNYs5ICeUah0rqWEHKgZ8z5qzAGbGb4l1foSoqZ6
Muo/Uw6czt2Ty8XvH2+clqZozgHlJeGVJzQkxDEl8T/eKg5s1qq6dHoyzten
Oa0JVhzQfpGz9MM4CTlrcGt8PeHAjpalK5wm4rz4GOvMo3Kg9Nm3/QW/xeRl
dq7NDgYHlvRwFRr/ionXT8utGRwOVJN5U036xETBsvRwD58D2a6zQmd1i8nN
UHry8g0ccFtBe2HTLCZQVpMf4swBl3nUseEGMWme4CR7vpUDz5qt6y6i/zCr
6fd4dw6kpGpebES/RpzHLLoXB8YzVplcRztP1L08xocDH9P43tRGMVmvESh4
v5cDW5KOZDu/EZMfW4b91AI5UHHm6s71NWISf+NY7OYQDjTTeQZmEjEx7Zh8
//ph7F9xxUhcrZi8NY5/036UA1y98BkT34mJj5/6V+PjHPiQMhBp/kpMJj++
Ntn/FAfy6buuNLwWk7RBA8MnMRxY1FdtOr1ITKjW9+2H4zlwyiWasa9ETFqO
WXiQCxw4saqp2vyFmCxUU471v8wBk6bo707o98n88vTGVQ6Y88cFLn4kJg9s
ylqENzjgk8LZkfxQTH4Jk6cqpHFgTU+Bnxjt1TuDVqzI5EBCq9nwgxwxCRvh
bvPK5gCElriNKxSTF3GGpy8+5MAvvSOvbfKxXv3xj17mcaCF9zrZG/3c/IbG
oQIO/GDVOqdjvec5jycuLuHArpDv+n5Yn/TT2aVbXnDA4sTsZzNeismc4J0u
Z6s4MLYo6FHyf2Lipmh7vPgN9qNormlthZjcvqqV3VfLgRUH65V+VYpJ17Jf
Mh0xB1Scyy1UpchvZfV4xzoOyL8Hu1ciMQl0SV8c2ciBbW9GznxGPvN7wzc8
/sQBSkFC83TMNxrhcrS9jQMO7x+3pLwVE1t1i7tqXRyIMv/6Zj3Gn7w3TUTv
4cDRjxRh+icxeU2+jB7oRz63Pzzu0Skm08WlCzN/c2DC5RWBKh9QD97J/A9D
HLhZ+uhdR4eYXB4NPKQ0xoFUzz+vAz+i3uK5t63luHC/w7nqM9q6BoY1eydy
YVmOQuOlejHZ+WzcYOoULqT+fJKYhnrM4jYseK/MBesbK6/MlYnJ95ZHbDlV
LpRwNORiUU8r9p8NNlfnwu8+g/Rm1M+hKTtTPeZwYZOuzty9YjEpuQavLszn
QuF/N02/oj4VzLV+Vupxwam90S8GbUbVT+1BQy50qAk3/EN+z26upi0y4ULp
ih9bnJFfYV+av8tSLggGBPdWlYqJ2vHw5DMWXNgDUT8WYn82a7j899ySC6/P
vshnFYvJ9Szz3p61XGiO/n2w+4mYtMM0jfm2XOh6PePI8DMxMZZ02PLtuTDb
Z3nzn6di4rerdPcxJheSJpZu+ZstJo//Xr7wkMuFb4PXXd/eEZOhc4ElrQIu
zP8p+hqTJiY2C7lds5y48PHEAP/SfTGJKFioSnPhwqTKyJEQ1FsVb5x1iCsX
Hi7Om8HDfEqt9V4Z7lzoD3As7LkrJvyQR/H1Xly4ZnvT53uWmFyYerZgym4u
1Oumxp8qEJOGVK82Kz8ubNntS6pxXuZbgLJvIPYr9M5d5cdi4vFS0/JaCBci
K2aPzcwUk7tbfm6vPYx28zKTSVhf7/e3Z8aFc8FbPr1nNtZvfiLtybLjXIgP
0dF4jPUe0Az/6H6KC3mfBu9Mx/jn950VE2O48Gt+wlDfAzEZb2duXhHPheUP
f4Y0YT6aVGnrQCIXTr697nwc64/26ThpeJkLWktM3AWYr3asJGfTVS70jFzd
FhcjJrMSLjecvsEFFy0lE50EMZkiUX0fcIcL0c1PdpefE5Nx6rFVm+9ywURj
zZKOi2IysGlyMfU+Fz6PvLY4dElMepIjHi/J5QLjUfDp7Nti0tY4mqn2hAuW
fivu22O9DfNCbvzL54JzPCVODv3v3Povdj7ngkIO99Y1rK/y5u7Y96VckHXG
sW4g3udt7ccL/uOCg5YFpw3thwvdDt96yYVVss+aR3PFJMO7YV/MWy58nX+v
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
        "]]},
      Annotation[#, "Charting`Private`Tag$8080#2"]& ]}, {}, {}}, {{{}, {}, 
     TagBox[
      {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
BfWNt368rElg4eoTsaDCsTyRr1i06FsiC4ttd4W0437iUuMVOe8i4sM76h+D
fJJ3P53bdIkFv4WFLirIB78aO+bFpLIgUHrd2IN8YP5ULqQynQUVub27p47j
yalW68ahyyxMG++yPgDv7+yIVpmTzcLxvNsS1sgvml1VfoIcFv7s75/Zg/tN
YO/PmuhcFqrjFmbNQr6t+qgvV5bHAiu3rHHhEEekPnu7f8zH+yqnP5UY4Ag7
klGqcpOFcNv4VSrIv+mjnZIbi1i44vH0lif2g4Ex8o6Rt5D/nvpqivfivDTe
Nr+olIWo6fUSa9Gfw1JHRftuszD90p4Xv/D+J5NraMVK5MN2OZEz+L6y/O9M
qyoWnCu8rxeg7KFs8DO0hgW7DxOmjEX+L5zts76gloWQuELjZbhviczLvPj2
Hgt5jeNHM5CvrXReDco9ZCE3stV6NfaD84sUzCwaWHCNFtXSxn2ly3DjmZBH
eP6R5d//9yfd5cd6cpuRv3tfGQrx+xDTu0tfPWHht0JZUij6d8989NjkZyzY
1D0wisfvp1gt6VzFsyDtxVwtxX7isHHnwj1tLFhqx+s34/6TLcwKz25HfMXI
HkjBfvJ1y+uW9g4WRvPDhi/ifgNbZ2hIv2JhIML13hSUj7vZBZE3LBQ2v7M8
dhf7rffx+l1vWVBsHB/fhfOd2q5a5Yx3LJgciHtmhvvCzj1/dvK92L8m5RSt
wXmybJ9htUQ/C4cy7T+6ol483HeqyUcWdq/esGUSfr/xcPZ2nwEWOleLytfi
vJN0/M2tS0MsNKxQD3HD+bbvpOLEp5/RXqXG0F9pHDE4R9mP+8YC81074Bzu
Dwf/i8kzHEF8q7X9CE/G/pRSJ+L5E/m6y0ZvHc7f8pl/7f77zYLe2jp+ZgzO
G1eNLj/6g3wfJHMy+QTiN99v5N8/FjZ+fbbD5xxH/gcFHuh4
        "]]},
      Annotation[#, "Charting`Private`Tag$8121#1"]& ], 
     TagBox[
      {RGBColor[1, 0.5, 0.5], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJwUV3c81t8Xl7LVV/bee+/NPY+VrJQSUlSykpBIyYooEhFSVskoFUJSWSkp
KyWejYSIkFFCv/v763m9X2e8z3mfc+/9PFLHTu87wcjAwDDMwcDw/1/p6xv3
CsXbzDsXFRfG/tHRM1YliVP+Raha1yviwyYdtZ17XKro/wTdXPWr+bJOR281
Q/2Y/VtQn/NBDZE1OnqXNmC77NeH8oS3RG78oqMu40vPf/jRUYXj+buDk3T0
0JQnRu/JCDr5OMRB4RsdLZB9isIfjKLMzL+r0WN0ZHihofXp/TH0jv2VtCSd
jmKEWccWi7+iN1s/zv4k01HHc/et2nfGUa6Ixk0KkY7Y3R/KhuZ+QxbCfx+e
H6Qj59/r1tU3JpD4T+t5ngE6ys118vt5bRJ5WLNG/vxERzT94hT1K1NIMznj
ke9HOpL9slB5KvE7CrQd9IvCOPCs5Yeq2GkUcPqush72r+a9+WPm/Aya8n++
7NtPRytPJ7arRPxA+lqeC//HZi6GGoGhs2guleN0Vi8dJS5eca4MmkMFtNnR
bxi/zySHTvn9RLLvRrkyeugoJS+nK0trHk1XdIl7Yqzqjzx0nsyjBqvZit/Y
v89ganpAdQE1rRyzfofzh7FkXgh7sIC+PfjDy91HR3xDRpzciouIp3RgShX7
N5aN3am5v4iidfiobz/Q0aGIVLW9Mr/Q+dk+IRGMN611m+eLfyGbSOoEeycd
lfBRnTLEl1C8qRDDxbd0ZPUtia5xZwmFv7nDYtlBR1N16iF9QsvIw9inrwLj
1MQhhtO5y6iis7Vxs42O1PfHZe7gW0Hcxsmfz7fQ0YCMkvTjGytoeOTash7G
Z399rHXkWkWF4yuJKs/pSPD1ecvZa6vo1bZHpfJNdGT3isVpwu8fOrn69bxP
JR1p/Tu2zD//D9mWv2lwekBHaZJevTKmDNB0vmKA/TEdxbVxSpvGMcBG6xmu
zxiHH2s6u7+DAZo9p6cHH9GR/1b/riDWLfDCOKHGuZqOPEv5xJIctgBzzfId
O2x3tn4dUpCxBe5/dmHiwfmtJkI66j9vgb+ZB11pGBsmiwv2CjJCHRN7Y2M5
nodi98kJT0Z4Sc6mRBTTkWRXVMtmMSMw8p0bqSqhI55ABR6Bb4xQYtpc8biQ
jpg5Bn01lLZCz9udLN3Yf+1hQtOuU1tBIsXjzePbdDTnoLnDu2YrpNw4PS2X
T0djs9Sj55a3wiGGmqh9t+joS3pqfYbRNvizZK5+twDvi4YRW+XFbVBmKeUn
i/M39094trVtgwH+58bvcXxtaHY1kYkJjP3EQi1z6aiM22Lb4m4maGlP1bPL
pqP8pz8PsqczQXf7FlWxTDpK31/wUHqACc4G/1j3TKej+GW7f8b8zNASvAq3
k7GeOb/3uXgww/pnzxr3BKynQVnZyUJmOL3Xlr3gEtZz2GXt0hgzxChPHcrE
2Dlqi9MdeRbYPTH1ixVjK+EnJXWBLLBfvYCQlIT1fOG53P2YBZK2JJ5ySsF6
erLv/rbIAmMeThy+2F9y49mdDX1WcBZkuC6KMW/hiXm+C6zw74WzMCPGrIjH
Sr2FFUxd93xax/nW6a25NlvZwNZZpPJFHB39jAueObKLDd67EPTkorGeUqIo
MpUNQidmwnedw3q2d9243scGBRwME2aRWM/jkRPlPOyQP5p66VU41nObnHHr
QXZAUVvD1TGuvT9wbfg2O8zIBHw6eQbraRM3Ok9nh+O3FOQnzmI9J9X02GQ5
YOONNZ2M7ekp5BQpfw4Qrr4+JYHjE5SuUIyqOKCs/vU7/lA6inivr7lvngOO
zkm60IPp6DDnjaGEc5xwc97ljGQg1u8RUrn9khP0jQ6ApC/Wz2k25inDdsi8
lSMWewLrlWErP56yHbpZruxp9sZ6aa1ErXdvh83nZz8YemK9Bu718O7cAXw3
3vX+8cB6ndkrpXZgBzyo353E54b14vkXbn1rB4j2RRw0caWj+bqqd4epO0Aj
9NDnv850NH7AQzRC6j/I8Hco/+tAR8MrLCHpJ/4DsX6d6QWMP+TWvy6r/A/0
7IulO6ywXobHBVpm/wOfpPsTZIyJQSn1M4JccE9lyO0mxi5mXvRVYy7YdaGQ
R24XHfVs12fbdpgL/KMu0D9b4/vBnjuvN5oLUsVPcGXYYr4rc/K37nCBwVaR
m99wPK3zff3xl1x4v0pYzmP/caZyK3UKF3we4cx9ge3Tlpc+/f7LBSvLno4K
BNxPvNex1yI74dH17r/nzfF93GKycM1kJzRzUZe8TXD/GwJxbod2wmOz1i9c
RnTEaLq0Q+bCTmhaRTvZMGY9318wm78T6L9OlK9ivKOxSrWxaSfscUrKiTHE
53sl5UUCaSf82z/KcxNjQd0Tdo5rO6FlW0SHsRYdiYcRiALC3HC4iZ4lqIzf
j2ox/zEjbrgt0Wa5pkJHynN/VqrcuSFN2+3EV1U60lT9khQZxQ3crWq169hf
P7CW1+IWN/jtCUjpUKAj04r0e5zPuWFtg1GyXpaOLCYCtYeGuUG95fGkN7bb
yu5qK/nNDSfO+qpXy9CR0zEZ5yBBHrAWjRf4T4KO9hf/o+kb8kCFNLnOUJSO
3GnkU1vceEBOiFHxrhgdHRFtXP8QyQM6J76dZhKhIx+P7NScXB6gMSTAC2H8
3uWFCB99xgPi226VR4vTUcgXh0qVIR5YHvPJB+wfwatkuLLCAzc1LQuCJeko
eh9TZys/L8imlQiSMV9CxuiBVH1eyPOtUQ7B9aT0vho/4MoLMUmdWhXYns6Z
f0YyghfKWfa6v8X2bLsIxpmbvGDPXtnGK43PV8q+zPp6XpjyC/k3K0VHRW/V
JeMGeYFZQ3bKDOtRuo3jid0yL9xodJV6hPt5YDFpxsfHB9duZTps4vzVca+7
6bp88CTnlKAlLx01NBcderCfD/4EvnkexE9HL9cvTIeH80FapuYJcYzbjd2i
UDYfFIw7PfzGh79XzumystfxQfWxx3oCWI/eBq7cz5/4wHg/zboT489LP+SK
fvFBWSD35TqMSdpddQE8/JDt4hL1GOORkPuWujr8sPfdnXdG/9HRt8fxA5v7
+GHT8euWfWx4f38cPtoVxg9f64s9W7fi/VU2ns+6wQ+vNzUkGP/R0Io/f+yR
Wn5IqLxTHfmXhtbLFrcrDfDD7cMJ/a0YM37rvfNrgR92fzQKe7dEQ6wyD1Wa
dwpAkrTi17hfNLTjaHJTipYA+E7YPu7+SUO8Rcd3u+wVAA5KldjsHA0JU9Gw
WKgAXL/ibKmxQkOSIqJ+UxnY/uhlcfcyDcm7/16urRaAGIcFFqZFGlLJ/Zx4
sV8AAmUNj0iv0ZDmYDWP7bwAyHOJimlv0pA+z7W73FyCsJg32WmKseneAC2q
hiAoc+j+m8D+FtetW8v3YHtXC+X8bxqKs6urHAgWBL8tthVnMF8zk0zWxjVB
UDMoEbi3ivttzYxWfCQI5ao2vwTnacg4msHXpVsQ2Pc9uv4S93PO4PSemBlB
SNlK5xecpaGGRaphJbsQzH86m/x1moaWHjlIf1YSguq0uwXlkzSkE/CC45+t
EEjsimaY/kpDYbLKy0r+QqDuWT9ExbiankfbnywELlE8V52/0dBcPsu72DIh
MGG8Zuo0QUOqrhE1D94IQW3ijr0wTkOBO7/lD44LQY+kTjwR56/odklk2CYM
yhnP/a3HaGgiuf2UiowwOF/R4T1EpiFZS62DrhbCsJn/10of42ObRRB/VBha
L6t+eEikoeLnO5Sr4oTho6/rGhqiIVr4RZ6hImEQU8gZT/hMQ6KaP9a3tAjD
NvHSXw0DNOQx4zGhShMGmfObayJ9NJRX1tV3cEMYtoce8Yh9T0Nfjho+TxAV
AcKDkdbx1zTEJ1Z+95GJCJiT23j1XtHQ/mG+tGEPEei51P8zqImGbmQlnt16
XgSa2ti/M72goX6nX0fUb4kAj7iuoVwr3if2Y7bujSJQdE34nAbO5/CmXytx
SASkrQ+2vm2moatxSOTJigiUBKIb8XU09M7k8TYSnygQ28+Iqz6lIeZV0blt
eqLgzVn0NbuChqxqU4c09otC+buLBz5gnHBqrdXjjCjMZLwmej6goVbFgAdJ
N0TBcFpYcvtDGtr8OpRVXSMKY0VSmc9L8X4V2Vwk94uC5J+1fbMlNHTeo96X
eV4ULr2Ypdli3Mgn66z1nxj8ebL6weMODa323zDyVBeDD9vLuVnv4n1N2yKT
7CgG52yoSm73aCh8VwhnbZAYbAm4fpoDx9cy0pcpqWLwU+TyaYFiGpp/5Uhn
eSgGowdeukRjrB718p32ezGwGo+KullEQ0G6KrWHv4tBTIImXyDO9+Dnrdsp
rOKQHlr5qgHbpx6wJj1VEAfrEbuTVMwv7xsZTLMRh7cDtXAjn4Z8pCYOsvmK
g9fQ6xuncmjoLmU/QTdJHF5+GzFhzaOhkdzXyl6l4hCwNfS3fi4Nibto8159
LQ6dHWf532LsuaNko25MHLrjRr9UZ9BQftd/k/QtEtBw9K/1oXQaIibG9LNL
SQAt+PK2viwaEoTZ53ogAYev3NoxnE1Drn8P3fP2koA7TqlmP2/RUHbD+7TU
GAngIZ0Itcb9DoQaRTQUSEApI2GuFevPpVbhNfpSAp6OJiQk4n6cpvh3c1Ik
4PP3n8Ms2D/tXpK2wV8J4EbPS47jfCc01rZrbZeExZXfqxm4Pwdy8n1BcUng
CxtvuHiThnST+cwYNCShfPt7UwaMRXXufZ5EkvBm41+VDa5/G10zqM9ZEqqM
f+7gvEZDP642b312VBIKOS5HK2D7J32H24VhkuD3anrzPO6vaYyoffmSJOR+
9P+Zh/W5m+73/lS2JGQYDqOP1/G+Gi8fPXBfEp6wMfqfwfWFTiT8MW2QBJHB
yDl7jN1ucGXKdkrC8aqc11I4HswLFTmHJeFutyU39w0aUpxWaf01JQlbvCPj
Y7HeXDnPD5L/SIKE1hmHbsz/m7DrZzu7FKzuiow9mklD9NnPlx+ISIH/nzip
Wtzf21vHxG+oSoFwzH9eX7D/Y+v5+igzKVDZuOVCwfw5CxcdjzpJwaOocHZ9
PJ+YAo5vtl5S0Gez/w1zGg357r4VrRmCMfvc6uwVGnJclucVjJeCg0vpZj1X
sZ4ldQ//ZUpBi05c7BvsL+poYTl5VwrGg6NdNZOxnn/6SL1PpcCF7fMeCsYz
pYfDGjqk4O7Fd1yKON+A8wxb4aAUeDPorFrFYz3Xz5UkTUiBZX3nPs4YrGcF
s9GpVSlIPm8vdvMc1nN/dv9+Vmn4emimfOoCvl8ZpP1NhaSB6VeH3HXs7171
5J+MsjTkyZ8mXo3GerqZ5XKYSMPQFeOnS5FYz20f1H/ZS0N8SrTpbAjWs9rt
LclTGrTeH47nD8R6Hpo43H5KGpQtbY899sLngSV8uTJGGmxrrE41Y9z5dMu1
zOvS0Fmum37qGNbT67psVLE0zL45GFOE7TkcYi+9a6SBOuj/LNwb6/nsgYtt
uzRUNAqpeBzB+3nccEbjkzSY+Z+IP3oY7+d/bxMExqVh+sVw/OghrOcLF+F/
S9LAOmc0xO6G9fQbrZlgkoEbFU/cTQ9iPXlO7+7ll4FVLTVyyz68n83rI/UK
MjBcn/f9sAPez8Cr5woMZWBEKvhT7m6sJ78gV9JuGWi91me7ie132++XB3nI
QChh402UPdYzWAftPykD9NQtfmN2WE/hti8m0TIQYRs60ISxx1unYJlrMvDb
8oyTEIGGCGEUJo5CGfjBtpi/1xTrKR5YsPhYBixL9+7bZob1fL+qS2rB9RFu
fGXF/r/PJnW39csAi0Fr/T1zvJ9SPD6VozLwdcq2KBbwfvYU/81YlAEZdaZj
5dj/cZR61rmtsnC80l2lSx/rKfdS2ZtXFuyYgqoYVbCeH3e375KThRL5rSpP
DPF+Xhxy19CXBfFek+2JJng/lU4s8O+SBcqg6y7A+ddSz76gusrCudQrjcW4
voq5pKRSX1nwsMmhhuri+2hvzp6TEbLgNhV1yUEP61tXJqR9WRZIdyfk2GTw
/cz/7Ovvm7Kguifd3UqKhryiOh+13JeF6dO3/7uFMSdlKPJyvSz0TLNslghj
vc2nCI5vZGE+Nb1BX4CG/Et+c/AOysLTzvReAh9+H7exfSGNy4LMvTvkFUEa
avcVKi5ZkoWzRo47pDAO6VIK9N8mB3A49LYKN75/VY11NXjlIPqIfK8rFw19
SLfbXJaRgxhvg+Q0Hvx9suDx7qWOHHwcuWzQxIHv+/0nb1yylAMXieH+ju00
9Lnhgqedixw4DASyj3PSULxQmvzO43LgjD+urmO7evSd+aEwOVD6knXGGsdT
aFVNhQlyUK/HXurNgveD8CrxxA05UDBOHwxnpyHD0h4n1bu4nh+3o3Jw/AQz
TfBXjRzM61hvYcTxWQFzY8/b5OCNg8dUKzM+f92bVXEf5YBGfN/ZswN/76j/
F7lrVA66q4+GaOL672RKEHYsyIF4eV/BQV4aslvS4BhkkAdHb69Dcbjf364w
eJtLHhqlnf6m4vrvP3cuOiYpD2/bPp9fZaOhfaJHA5Q05cE6Obf90DYaYogN
1ZlH8pAdzDD/Ygvep9H4jYY98rBQbCRJZqChQ1Y3Oi96ycPd4+cZ05jw92z5
3Uyr0/JgX9drVID9G9ieHuKIlYdCmxuhBVvxexn0Wm4gXR5qq/tSruL6d/Z9
+plXKA/9k3ZEb9x/s9b4c6/H8pCyPd6JhPsPyl66JN8sD/ENx8d0N6hIeHWb
02yPPIRYXnSCv1TU6c4nWEeVB1nqR0f+P1QU/lJu7PysPMiP+bH8WKYiaQn9
KsKGPFz2t5nSw/b+eJsI1u0K8F6rw35tiYpixl2hT1QB1EzlknWxv+ouP/Yc
VQXoyynZErdARcTKyM+epgrQGr9bsH2Rii5zphTKOChA/tBkVfgKFemezvOf
PqQALn3r2WI4fuxjhXbNSQWI9FH21Z6mogzd5+uRFxTgNoFCaJmiIvPcrrfm
qQqQO17uvvmVimb+EDOYbitArLNQQTadivI8pz26HygAs8XuIM1hKrJpWZPN
alKAiKvjh+MxXpLi+On+XgHut4QxCH6kopJEkeeSJAXY+evXnsU+KnKaVLk0
+V0BxuRS3xVh+/puU8fHfxSAQclyOAbjB1UOAmfZFMGKQSnfbJCKDv53eNRE
SBFC073GwklUtC3s1ENGJUVYLbk7dwvnq/188WyXoSK0GJ5GSh+oqCLJ59jY
bkV4Vxvq3TxARYX69nv+eihC73BOmfpnKsqe1DLlDVKEzDSta+6Y72qeoJLa
RUX4/iioQvg9FcXt/sdnk475PFYuKb6jooi1b4xeRbiezB49ag8VBT3s/hlZ
rQjWcc1pfJjvuOdTSkabIlxozBJ600FFHtvzuyoHFEHke2h+z1sqcm6Oa2j/
qghdssU6/S+xXqf97pGXFEHs4W+l7noqMpV0ylhiUoKdG2/rZF9RkfZH3Yvb
BZTgyamB3lM4n2KCSKC8ohJYtIDUr3YqEtdhPIiMlODrxHC7fBsV8Y5PWbrZ
KUHqZX39xU4qYr/Zpxl6SAlSdrhtH+2iIgabBrGrQUrwav8umcleKlpZucN+
76ISBI01OT7B/fwov7T6Il0JYv/E3Xn1Ce+HW+D45yIlePaGTX2jG/+ZY9v7
cbZaCX6l3VO6ieN7mwyamduVIISzpvsc1ufNSfGHEp+U4P0XX7HjWI+Xokx5
huPY/uKmZCP2r+2ZSdy7rAScVnMNf7DeFTEDoYHMytCQ9e6CNuYr1Hh+5JKA
MoiftOyYwfmyR4rs7ygqQ74d+2F/XP/VzMuG9UbKcGl+9MHp/8/H4pRcr50y
oGVxiyHcb8QvF+7JQ8rA+YMOHVivoFLjf/+ClIFQpLER2kpFxw5I/RCMUQYf
5Xr/fVgvN2ZWotZ1ZRAr7ebgbcH7+GzujV2xMtTviApDzVRk5T9Ye7xGGVxR
a3jAayoyFnpZFN2uDPvctR1fPacizfd3025+Ugb2++vBRjVUpHDhStTjcWW4
nTZQ+vQRno9qiG/nsjLcYdhjcxfPl5fq6jLCrAKOTqw2do/xfNLN4I+ACixu
xrT11OL5IFk1biUVSCZF2rY14Pn8ZBdWMVaBFq/Ph8bq8HyKF5it7FWg38vi
k/ozPJ+9w788PVVAp/3EYngTng9jy8jZUyqwXOa4IY33p/fp/Z70GBWg+6vV
0jHu8ElrKr+uAsHzWekfcf4mvjPlrcUqUOzw68GPSiqqeeueTaxRgd1RflFS
uP6KSIhfbFcBe+Z2+gjGhYoKwRyfVcDhSqTMH+yfTdx+SPabCrz4/Yy4+BDP
5+rSLrMVFUjP9aw1xzjOhKzryqIKzgocPr638Xx+tEmdFlQFhRYb+8M38XwK
KnakKKlCz/muofTreD5O1/8WG6uC6VnBnMU0PJ9/Z6ee26vCpfQFszcZeD7V
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
I3jF58Te6hQRuQcX5ILiHaE8rX6LFdq/NrpYrzDREZbOfzZ9pkREHKzvUP4k
O4Lnf3e+F7SISMchM0+S5ggbTLujfd+JyBJ1xZNBZx3Bb6d0ew9+73vz88Oc
LIyvOOBLU72I5Nk862jKcYQ9sxbf+Yryz6bMGbLXHKFh+Oukcy9FZM2OPatW
3XSEmavU/UUvRCRqjL3F+64jrK3b9vZQk4hUJukdy7jnCB623GjbNxjvokn3
a4scQex3yVPlrYiwH7W++13iCLljnP9qm0XklOODKUvLHCFQjbLbu1VERB9O
GG+qRP7+e2f+7L2IzAnd4XqixhGMRfVDU1HvMc02tvQl1n+P+oJIzOdK1uy7
3944AiOSXXu7XUR6V/4U6zQ7whxbd+/APsS3+tUkgcQRtChhNT6I/27X60sP
v3MEN0pFlM5/IvJoIHr9gw+OEBpbb7QB7Y3HuB7s+oR8bjD4PNAhIrYaZjfU
exH/t6J1YZ9F5Ogthbe0fuTXp7VzIrH+deTzeNh3Rxg0yJU2GhWRmc3lS24O
O8KMiXqW7lfkw85MXttvR7CY0iJP+S0iZ8d3h8v/c4S0829djiGf3iezr1hL
syGN331gBfJPd7He64ApbHhRUelt+EVEdhRLjWZPZ8MC12GNMOTLbXbrgkZF
NnA7Y1J8u0VksOM+S1qFDVNXf2v/gvKqvSdCTTXYcGfhoX2WyJfw6TuyPeew
4fUH3fjJqC+7AC/S5rOhTDf+mQ3mK2s6+0f1QjZU/M62aUN86TU/tEf12BDx
+FbAVpGInHB7RTUwYkPAZeHM20IRafp2LcjVmA1ZA3cC5mF91WOjM4+b4Xs1
b5c7WH83TdfnTyzY8FXw+en9VyJy8bbpQL8VG6Z8Lq/7USUiXaCgOd+WDV90
tLeYIX8Mhd22PAobFNY/T1SpFZFAn/JdhxhsiPLzDjErF5EHf8+m3WOzYYnm
brtDD0Xkd8rusk4+G8413ulIfiQiNkvYvarOiM+9+4HzSkUkpmSJCtWVDbat
tRvT6kSkhiNlvc+dDcmyJnFs9Cff2eKdu40Namp+XM/HIsLbdz+5xZsNzLFZ
tjb4Pm3GiZLpu7AeXkZ72Pi+Ndv7k2Ug+s88n5TSICLzzUDRfzcbKlefOKtU
IyKetVoWF/axQUMlObb6iYjc2PRj65sDbCAmU/nmxSIyMFh/XCqaDaV6cp9u
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
IjwVNQ==
        "]]},
      Annotation[#, "Charting`Private`Tag$8121#2"]& ]}, {}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
fxelfRPvM/AHuW/VdBBee3ZUFvHZqrXo1rtaOkz/9/4M+rOtC169oEO9qV7Z
KK7vjLvHe9hIB4vyLOukLMxv4xOHbzfTYUViQ9BJPM9zYMesSzw6JJyPW/MD
8Qq+uPr86XY6lLqs9BSgvrGsaZ2wD3TQ+u/7FMR3pqHmyGc67CAZrXpQgPgW
ZO107KUDUyyl9sU/fPd6DbP7MT52XFLcmov4LjKPNhuiA/e/v+9DfGtkl274
QYe+G3v1AtHfjb69BWrjdPjz0U/7INbf9hX3yTKTdJj49/PtGN89vJMdIn8x
v7a/6JrrjfiesPceE7YE6UrT68cCEF9DHbGe2ZZg8qVrlaQX4tv/92KruCW4
1hSsUDnKJ2QyXm+slbSE9TnHU1fi88sZV56XSlvCuYjfHTew/q3+47Pnhpwl
hN0qbPHC5w3uWPw8p2AJKScr4wvx+a17Fp+KXWYJme1BOpsCEd+FfSrHVC1h
Un/elw++iO+T8lLXFZYQNPF7+MkhxNc7nmG3yhJyHWenfcH7PNV3f6brWMLd
8HLlILwv+O3aAOP1lnAgyFYqGOXYaGEpbX08f4scfTPuTzVoyVHabAn+63eo
DeH9WV+ubpY0tYSKPx//0lwR3/N+TX/AEhy+ZX/cuBfxpVEPDJEsoe8jyXYU
76+eVJj6QMXnmedWMg7yiYZb35KaGJbwvnLbPAtcF+yq1HzMtoSZHrsSIXc+
0S2Z+LBgmyVcdFYenoP9YeSRIzd7hyWM25h5TOH69JENX5N3WULT7PXK3rgu
pioaGuFoCb/+129kmltlfPajHP1AoRLrxfLIGzedXCzh6Y1C+0QfxFfvGLHt
sCXk1/o6ULAeG/TQW0melqAht+V3GPp3a5rSIX1fSwi37rL9iP2QRRkS0gyw
BLtE6SIXrLc7J6rS5IMtYWjSLN8R6/X+m8nac8MtYUWs+KswjB9PO6fqX5GW
0DBcRV6H+SmV1f/JJNYSvhc8q7THepzf5TVzPB7vE1UxvYEyXev3srokSyC+
JYbV4/NfDoebSJy1hJj0/FnWyXwiqnCuPeeCJRieVl6dgPmnNn76WNpFS3Ab
dla5ifJjI/nz77ItoebifPVKjO/dYRdLVa5bQp5PV/blIsSrRqP1QJ4lqO8y
9Tt2F+uvWP5o3h3cP19/mewN5C/MjYtGiiyh2LuMqZPHJ1qTy9fpl1lCotqN
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
2zqlEV/ynvBcaXsOTCoErzDDerWj72GomAMH3r0fyV2OspvP720zuzlgFnXt
xj2Ug//orxl35ADtf98fJJ7wFh7cxwHt0l0Lrx5Af0nf5XftR/uMQrtX7MV5
MuPb7XZnDhxYdVghEuXaFVpRb1w40P9Ls7oV+bHg7n67ejcOEHrJDooYf/2b
s9dVHeZAh9Rk1ULky39q3s8p9eDABGnwU6Yjxh9L8X2+JweUPKvu5+B5agLb
4hxvDrhbbfsyjPGst+/MyXRfDrSsPpI2dhjtG2jak+zHgUHG+24FT7TPT8Ig
NoADVkte2230QPuEaBJhgRwwmZ+sv8cX7YuL/nw0GP098IDBRP6fKFt9/3Ao
BzS79T4nhKB9l/6edgpH/decG7ZB/l+iZXzALgLzUeTdn2PBaF+RvzEnigNl
GzrPTR5D+0xKpKkxHEipU7trHoX21Y582RLLAZbQSf4ZlKfZOo/04zhA7z10
M+0E8q13rqna8Yh/7dD+/Gj034HrbuqnOXB423jVeTxfb/gzKCZxYP+01A5G
GNp3THmxdAoH9F7rLLp0HO0T2TU4NxX1E0mgx6K+bgnna/6exXxuCTL1DkX7
Frde+HmOA5EHXVaRIzEes6U9By6gfQGdKakpOD+uYZG7MjjAr9Yu8cH5qPhe
nFL7RQ6kzY5904rrtUTdj9dZiJeJvn7qKbTvucjzumwO3Dxn9r0oFu2zhqxH
ORxg+PbIPU1E+94HH713jQMbfs7xdkpA+1weWObfwPO+eKsqnkb7fvxUzbnJ
gTetc9eN4Lpe8IaJC7c4UGw6qzMM8SXPOdKYdBvr5az1NxJxvtqRdOvqibsc
SIz5vtvZD+1T/BoYWsgBQW+cSAz6N/iqBudoMeavV7W+nDv6T3fvysP3OP/v
+/kr9y/+2VeG9aYq8dUe3F+ytb1l5wOMn3ZhzWZvtO+VfB67ggPbl/HpF1AW
2FqHUyoxvxzsaIGoT/+nRNstVRwwJoSdPsZhfLq90tZ/gvoUvLmTHIPx+VNM
RLuGA43/vt5AfNXCLNrUnnHgbvSuCXX0j554xF2FOg4U8oTvDGO8kc88il74
HOMV1q7x+xefy6bs577kwG3dQzLPjuD8cWPThr+vOLCpe/H0E7Q/dL2v2M9G
DvCiK2Wb/LGfVRR8+PaaA8/MQ2zpaO8Vi8GSz81Yz2y9KsNxf0nTqlNtbzEe
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
7/69D6eBVH43B2NtCr6sMjBy/91A+j+e3K//HwV2L9u+fEL98i2Vl3V1Ed8J
78JZEY4Y1ozlNNdQUHht2dBmKY7sfaQvtphQsN8uO6YC4yUu319rgR4FP+7W
ra5Fe0uuFDgprqPgUNqls6/QP5/jf8bNMqBght50FynEb/rJ5ZVTjSjQ9HVU
noXnrQ3cMzTJmIKbtWVynXgfJ89MdTETCryWvSG9k5A/nDqs/5hS8Ni3XmfD
NOS3bUqnBswo2OqcO+oPxmP7Jpvi3i2Ib3mSRQ7Gu4Re/LdP5hRMfr/BRw3z
Q0uzUek9RUGe9qSTaUocsVswlWqlKdg0pNT7CfMrTNbsGM9SsE5/z/kO5I+b
EmG3a7ZR4BIsMnbvSo60ipR/rLCiILRYvvvREo6M/T5q1iMbCv6LnNFqo8mR
XzlxJ9vtMN6mrHhoYoT3dVsyZvx2Cqx0Wx9uMeHI60Xlh9R2UJDQIz9LQsiR
5x+tesycKBBfcPjpSzPEK7Xf0d0Z49s9cdodC47csg9rPutKwb9fN1dBfs1Q
mLvlnhsFc6oneFvvw/xtuVPWupeCWztb3e+5Yz7EmemKuON9Gm4/voD1IkD4
IWeeJwXZUZ0z2HCOuE89rGLkRUFAvFugzGmOONZOTXDxRv8pi5ubJ3CEjrgq
ddKHgkoVpVV+SRwxNoaQ3MMUXH1Y3KmXwpHVY18Mc/4UFL8sXuoRw5HFj93c
fx2hgJlQUdmP9VDxyJhOuWAKFpWNnrUd9U1bc8GaHKNgo9dbOuUM4jW4rMEh
BPPn39fjzyJet59sOH6CgsPb5C0yr3Kky8O26Go4BWWzi7IvXOLIq6U/V1RH
Yr7W3K2/kop4fY242nuKAnlNCycNtKckc96c6dHoHz7U4yOel+9UEKMdQ8HJ
PUcNDFC+orx1omUsxlukYNWKOMTr7ccA/zgKGlcqzP5xAfFK9P9xKZ6CuQ5D
TlGJHOajtGtZAgVN5dvvuKH+/TOz3nQmUsDp+6ieRXsceX1a/BIFmRFnB7vT
EK/ol1VLUijY7dtuMoDnbdi8T0+Qhnj9+7odPq8rPu6O1xUKwLx2RQzqX/z0
onr8VQpSd9y5GoP9heJxzcuF1/B85Q+jSCFHpq6rknl7nYLrYjFSTx5zREzE
IXJMDuqLSfw0vxzxevBLVDWPgjQSfEP5CeJ16JS3ST7G+0OZC2m43qql0r3n
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
        "]]},
      Annotation[#, "Charting`Private`Tag$8162#1"]& ], 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
BhzfXfGnFftnZMxvs1rUAMNbcY9+e2B9LMiG3myaMHusr8AfsD4/2+WOimqC
QWdc/2NzrM+dEt50NU3oOT85wmKI9XG9vHLPXBOaP/6o/aeL9dk48a1huyZk
Vu/LSMV21yr/j0P+muCnzzTxRAfrE2jz8scRTRj76PzuoQoVWfCrVzInaIKP
sqmttSLuf5NvT/9lTeiLs8syFaKigNkLn3PvacJ8XeSEPjcVzY02rO2r1oSV
HZb0aRYqShn8LqL2UhN4ivJ3b99ERcIvxPTnhjQhpVc66xYbFZVWOjo3fdaE
CyBR9IAD39eC+IMp85pAUnLQPc+H82WVJrqwaMF7u4Tn97E94CwxX1hYC37N
N0twceJ8Rzie0ZW1gJsBnbPA8VP2mL0tMdECn2C6UPsGBYm4HPp+zEELNKWf
udxfpaAyy5tMFru1oKPhJacYM86n2SPFHKYF9Yd0W1nZcT6Jfyb9J7XgwaGa
psu4/gAutR25F7Vg89/vwZsYcL5ln/B9t7VAZJPrzPgaBaVMpZ9XfaIFf7fG
t7TNUZAwqf7ebIsWhHJXHjf6RUGlPd8aGwe04Gn1p00VMxRk2SD6MZmuBbFK
91zaxilooMRhxvm3FtwZkxxeoVBQQF4ch/AmbdjozCw0H6OgubQSBfoWbfi+
qTfsMPZPiR2xKpHXhqHKVT9rbBcOYfc5ZqAN4oOlM08mKajE2zTK3FYbFPkq
f4j8pCAL+9BMpp3akL2Z0qIxgfMZ5RX1BWvD9DJLUyAZ51PqfnE9RhvM0atj
ox9xPsG/pL1p2nAh/aLoqw84H7PqgkqeNkT5X/rp9Abnm9+1ebZEG8rVCFLi
r3G+z2lqjQ3aUHJEqSq9g4LM3z+3Se7VhieDWoG+7RTU//LrHmeyNszWHfFa
bMP5akTihH5qwyfOVSliK85XuC2HtqoN8y/vcCm04HzZseXFPDqQrK9RkIux
8LnirkhpHejP6bSpe47zRQ6PmunowB2yUZtSNe4vgG2FEXTgS5ZTZ0QN7s/N
RKjPHeNXP4yXGnA+FKJzPVAHrhav7NfA5+e0bzjujdKBAocBF+dnOJ/06wMq
yTrQ4qzy89lTnI936czvqzrgm9b3Tr8W67emnNfwUAfYgTAd2oj1m/auSXqm
A9f28o161+F8lPN927t04Fv6G8+cTpyvr25ScFgHJnXqbwz911/TJAPtqw4k
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
fM+rXXrijRDrS/0P5SrWT5xGWdpvMd73/HlT5j3KD9pcOucN5uPB5mQlxJf+
8muj2VuMdzvfMQL1L5p//IdjM84H6eiTfWjfH79508PeYz92o3hexvPSyvvL
rrSiP6e/f1iC8vLUuLSyNgHcL9KxcsB8i93d7vShQwDnbwWlWb/BeJWH7B/X
hf1UL/eDrgj1qSif1fwkAIOTNfI/MN8Wembl0L4IwLiqetavf/lTtP6Fe68A
WsPrU5ww3lLFN+3H+wTwavm/D5xjfm73Gc34LgDvCRObkyswnx9OVHsxgPmy
Ycmi7lLUNzXF6PMg9r9ej/RzGE/6NmMr+V8C+AO6pVfw/sL7r3auGMZ8mRa0
6R7Gd0RuewTvD/aP/DOfgu6gPoeRy3tGkT/Km1eVjfrunHkYN8Ya1noxnidl
oD7Z5cK746yh8b/vR6C+zeW99eOtwXfAe/q0Sw2Edstu0sBEa6jWaVl6NqaB
LJD5pjFzsjXonFirGBmJ+jZErjOWt4ZJ7hcO2Cc0EEn6fLtNCtYQOPLPwAZy
bzjfP3i6NZBfZ1ut/+mz4sWcV7IG7Z9B42VzGsjOax0ZhTOswfTKXAUx2kv9
GVrxVsUavkafrvh8E/WxZ7wbmWUNnP/eT0J9l28OzZ1jDVN3tDw+jv5IvlOU
yVxr2O9y58f8W6iP3rjCeb41VJrQ71n+05fsyzi00BpmpATd+4P27OyVc72q
YQ3LVwhNnNA/KuXKgYrF1hA3+nUvQfsXJK5Oateyht4nrLjyMw1kuLvm3vhl
1lBzQ1ixJamBiM3dXy3RsYYbyRkT1yeivtN/PlrqWoN8k8HBtOsN5FRHwtid
K63h2f/1e6zRmRttYA3s38TEHOuTeqpi9U0ja+gKX/1AHettfqu9dbWxNfRX
bd/PxXj/Nvru1WNiDYX/fX8U9UVGHVcwtQZzpyunf2C87zUtuKpnbg3tDtE3
XxSjvpUFj/nEGrQGDx1WwfzxiLCS+K63hrDvbpoe2C+o0s5v8RbWcKA49v2y
u6hP56B8Hg3xvLZjXRLmy++wmVoiS2uoNedezUb8xA231g8yrWHTrZXvja82
kLtaVAdVjjWMsmebXMH8OBnyNtCEZw3GZ6bqrTmJ+mr9TtvxreGg8k+aXlwD
sdCYfGu/tTVYaY1V1D/eQOYFpVZe2GgN8bF9r6MPo74XJq2Pba1BVJNx7lpw
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
9Yk+Rojf/H2/xsZwf906ODS8kUf+B0hMKb4=
        "]]},
      Annotation[#, "Charting`Private`Tag$8162#2"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.2340560392843791},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Overall host heterozygosity\"", TraditionalForm], None}, {
     FormBox["\"Time\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 100}, {0.2340560392843791, 0.4999909279596641}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.858890542416925*^9, 3.8588906168857527`*^9}, {
   3.8588906485549717`*^9, 3.858890654744636*^9}, {3.858890691162339*^9, 
   3.858890728769518*^9}, 3.858890775122546*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RegionPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"meanHInt", "[", 
      RowBox[{"pars2", ",", "\[Tau]", ",", "5"}], "]"}], ",", 
     RowBox[{
      RowBox[{"meanHInt", "[", 
       RowBox[{"pars2", ",", "\[Tau]", ",", "5"}], "]"}], "+", 
      RowBox[{"SEHInt", "[", 
       RowBox[{"pars2", ",", "\[Tau]", ",", "5"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Tau]", ",", "0", ",", 
     RowBox[{"\[Tau]Max", "/.", "pars2"}]}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<Time\>\"", ",", "\"\<Overall host heterozygosity\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "50"}], ",", " ", 
   RowBox[{"Mesh", "\[Rule]", " ", "All"}], ",", " ", 
   RowBox[{"MaxRecursion", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8588908181476297`*^9, 3.858890818156316*^9}, {
   3.8588908486844063`*^9, 3.8588908896208353`*^9}, {3.858890978224588*^9, 
   3.858890978629601*^9}, {3.858891069447577*^9, 3.8588910733941383`*^9}, {
   3.858891181245369*^9, 3.8588911838169117`*^9}, 3.85889122406572*^9, {
   3.858891265411316*^9, 3.858891318070907*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.8588908187689037`*^9, 3.8588908686332703`*^9, {3.8588909657304573`*^9, 
   3.858890991109283*^9}, 3.858891086614264*^9, {3.858891219125173*^9, 
   3.858891233406255*^9}, {3.858891278351886*^9, 3.858891297064139*^9}, 
   3.858891348883773*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"names", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<t\>\"", ",", "\"\<meanHet\>\"", ",", "\"\<seHet\>\"", ",", 
     "\"\<meanHetN\>\"", ",", "\"\<seHetN\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vals", "=", 
   RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"\[Tau]", ",", 
        RowBox[{"{", 
         RowBox[{"\[Tau]", ",", "0", ",", 
          RowBox[{"\[Tau]Max", "/.", "pars2"}]}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"meanHInt", "[", 
         RowBox[{"pars2", ",", "\[Tau]", ",", "5"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Tau]", ",", "0", ",", 
          RowBox[{"\[Tau]Max", "/.", "pars2"}]}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"SEHInt", "[", 
         RowBox[{"pars2", ",", "\[Tau]", ",", "5"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Tau]", ",", "0", ",", 
          RowBox[{"\[Tau]Max", "/.", "pars2"}]}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"meanHInt", "[", 
         RowBox[{"pars2N", ",", "\[Tau]", ",", "5"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Tau]", ",", "0", ",", 
          RowBox[{"\[Tau]Max", "/.", "pars2N"}]}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"SEHInt", "[", 
         RowBox[{"pars2N", ",", "\[Tau]", ",", "5"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Tau]", ",", "0", ",", 
          RowBox[{"\[Tau]Max", "/.", "pars2N"}]}], "}"}]}], "]"}]}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"valList", "=", 
  RowBox[{
   RowBox[{"Prepend", "[", 
    RowBox[{"vals", ",", "names"}], "]"}], "//", "TableForm"}]}]}], "Input",
 CellChangeTimes->{{3.85889099505993*^9, 3.858891010163513*^9}, {
  3.858891040407085*^9, 3.8588910423685083`*^9}, {3.858891369643355*^9, 
  3.858891444495502*^9}, {3.858891498707283*^9, 3.858891586794511*^9}, {
  3.85889161705882*^9, 3.8588916198583393`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"t\"\>", "\<\"meanHet\"\>", "\<\"seHet\"\>", "\<\"meanHetN\"\>", "\<\
\"seHetN\"\>"},
    {"0", "0.4999920000000004`", "1.0720403362740688`*^-6", 
     "0.4999920000000004`", "1.072040336274292`*^-6"},
    {"1", "0.4967779999999999`", "0.0004175033718061562`", 
     "0.4964944444444443`", "0.00044737623088023266`"},
    {"2", "0.49287822222222205`", "0.0009871101661464848`", 
     "0.4937702222222222`", "0.0010604541879185069`"},
    {"3", "0.49016844444444446`", "0.0016208085773602148`", 
     "0.49098111111111103`", "0.001295957757621692`"},
    {"4", "0.4855428888888889`", "0.001901583702241504`", 
     "0.48665355555555573`", "0.0019516509865402428`"},
    {"5", "0.479899111111111`", "0.0023009420241021047`", 
     "0.48398866666666657`", "0.002235135957101162`"},
    {"6", "0.47687177777777784`", "0.0026274794235563725`", 
     "0.4818202222222223`", "0.0024029692339466563`"},
    {"7", "0.4728019999999998`", "0.0031654301970207785`", 
     "0.47648022222222247`", "0.003127328517013101`"},
    {"8", "0.4708908888888891`", "0.0038902481907853222`", 
     "0.47460511111111114`", "0.0034768372900294492`"},
    {"9", "0.46790222222222233`", "0.004554426555235937`", 
     "0.47250355555555557`", "0.0034158178916346774`"},
    {"10", "0.46577955555555534`", "0.00458745299117633`", 
     "0.4683202222222221`", "0.0037751905195347935`"},
    {"11", "0.4627695555555553`", "0.004254875385918427`", 
     "0.46566222222222214`", "0.0041589915993641416`"},
    {"12", "0.4599875555555556`", "0.004172643169900779`", 
     "0.4609953333333333`", "0.005014994762697569`"},
    {"13", "0.45997733333333335`", "0.004322805329176225`", 
     "0.4607568888888891`", "0.005227803010037733`"},
    {"14", "0.46084533333333333`", "0.00447238171127455`", 
     "0.4573357777777781`", "0.005514574668257925`"},
    {"15", "0.45649022222222213`", "0.004901981110971435`", 
     "0.45121733333333347`", "0.006433139994885061`"},
    {"16", "0.4524071111111112`", "0.006183864960250533`", 
     "0.4490684444444443`", "0.006417660784070312`"},
    {"17", "0.44923977777777774`", "0.006694283868926557`", 
     "0.44670466666666664`", "0.007027040472149822`"},
    {"18", "0.4440864444444445`", "0.00766849417471217`", 
     "0.44407422222222226`", "0.007363184024891137`"},
    {"19", "0.43767466666666666`", "0.008491606345590326`", 
     "0.44068066666666683`", "0.008098217636270316`"},
    {"20", "0.43480822222222215`", "0.009169440544316084`", 
     "0.441129111111111`", "0.008436692979005327`"},
    {"21", "0.4381826666666667`", "0.008451308124284516`", 
     "0.43569622222222226`", "0.008672679522587523`"},
    {"22", "0.43762955555555555`", "0.008102241178478256`", 
     "0.43338911111111117`", "0.009142080914448035`"},
    {"23", "0.43583044444444446`", "0.00755716811639082`", 
     "0.42932888888888904`", "0.0094583146582299`"},
    {"24", "0.43258622222222237`", "0.008112877810024878`", 
     "0.4261604444444444`", "0.009853347409736183`"},
    {"25", "0.43136844444444444`", "0.00845168128783239`", 
     "0.4225562222222222`", "0.010291229862935822`"},
    {"26", "0.42949799999999994`", "0.008488326058253821`", 
     "0.4145691111111111`", "0.010721661037494057`"},
    {"27", "0.428596`", "0.009150575751073356`", "0.4172157777777777`", 
     "0.01055110506589169`"},
    {"28", "0.42781311111111114`", "0.009691872109924718`", 
     "0.4164935555555557`", "0.010273380439687852`"},
    {"29", "0.4280428888888887`", "0.009425951770479148`", 
     "0.40858288888888905`", "0.010718902903133971`"},
    {"30", "0.42982577777777775`", "0.008579574596615217`", 
     "0.40355977777777796`", "0.011357385260024931`"},
    {"31", "0.4234573333333333`", "0.009144955520163497`", 
     "0.3990191111111109`", "0.011997258089789792`"},
    {"32", "0.4186951111111112`", "0.009740074405036027`", 
     "0.3986535555555556`", "0.01216476143355281`"},
    {"33", "0.4135548888888889`", "0.010100662128239738`", 
     "0.39618177777777785`", "0.012453037082299999`"},
    {"34", "0.40441266666666675`", "0.01086853135950106`", 
     "0.3931733333333332`", "0.012390569069681888`"},
    {"35", "0.40161977777777763`", "0.010874097862775475`", 
     "0.39104866666666666`", "0.01230732658363967`"},
    {"36", "0.3991677777777779`", "0.011513595160196788`", 
     "0.3853451111111109`", "0.012570138076558613`"},
    {"37", "0.39933711111111125`", "0.01195606032861031`", 
     "0.3752837777777778`", "0.013112330232483527`"},
    {"38", "0.40149422222222225`", "0.012003970707404799`", 
     "0.37089955555555554`", "0.013462921736254664`"},
    {"39", "0.39852377777777775`", "0.012285213155561883`", 
     "0.37664955555555574`", "0.013352267554407918`"},
    {"40", "0.39921622222222225`", "0.011912820081326719`", 
     "0.3777219999999999`", "0.013630312867134309`"},
    {"41", "0.40177422222222214`", "0.011607900233070808`", 
     "0.37541977777777774`", "0.014073749919694293`"},
    {"42", "0.40249311111111136`", "0.011372040503779586`", 
     "0.3749333333333334`", "0.014203293948847968`"},
    {"43", "0.3997862222222224`", "0.012199250477447281`", 
     "0.3710775555555557`", "0.01481243291119733`"},
    {"44", "0.4040762222222222`", "0.012714608861034161`", 
     "0.3703477777777778`", "0.014468547485147443`"},
    {"45", "0.4047091111111113`", "0.013086871931223957`", 
     "0.3673913333333332`", "0.014728313225371279`"},
    {"46", "0.40084644444444434`", "0.013387414656699882`", 
     "0.36619622222222226`", "0.014597110582808985`"},
    {"47", "0.39433222222222214`", "0.013679466889405868`", 
     "0.3697168888888887`", "0.014678493703057446`"},
    {"48", "0.3858148888888888`", "0.0139718642440146`", 
     "0.3665186666666665`", "0.01493749168233477`"},
    {"49", "0.37813999999999987`", "0.014428698006070849`", 
     "0.3636533333333333`", "0.015439467977164324`"},
    {"50", "0.3718817777777776`", "0.014891027847362204`", 
     "0.3652744444444443`", "0.015102000592157383`"},
    {"51", "0.367834`", "0.015107438813880781`", "0.360877111111111`", 
     "0.015397539816268225`"},
    {"52", "0.3665562222222222`", "0.015417496118935095`", 
     "0.3620071111111109`", "0.015355331577154878`"},
    {"53", "0.36893399999999993`", "0.015631115356818492`", 
     "0.3589188888888888`", "0.01592019267369046`"},
    {"54", "0.366463111111111`", "0.015924740830450652`", 
     "0.35577111111111104`", "0.01613043978374148`"},
    {"55", "0.3685368888888888`", "0.01618306171253819`", 
     "0.3516511111111111`", "0.015948529590819355`"},
    {"56", "0.3672288888888889`", "0.015972640995046906`", 
     "0.3486848888888887`", "0.016083232976563708`"},
    {"57", "0.3649775555555557`", "0.01554652009671604`", 
     "0.3414859999999999`", "0.016418485187673`"},
    {"58", "0.3665044444444444`", "0.015645240945250476`", 
     "0.34215466666666666`", "0.016136235175486513`"},
    {"59", "0.36969822222222215`", "0.015846110902836087`", 
     "0.3388446666666665`", "0.01618963781758017`"},
    {"60", "0.3712511111111112`", "0.015801184075309616`", 
     "0.33716266666666656`", "0.016343372301023024`"},
    {"61", "0.37172733333333335`", "0.015764658246142163`", 
     "0.33549511111111097`", "0.0166231197416994`"},
    {"62", "0.37470600000000004`", "0.015657468143108276`", 
     "0.33246422222222205`", "0.01698038457812426`"},
    {"63", "0.3728655555555555`", "0.015312156769810703`", 
     "0.3288915555555555`", "0.017149775534272157`"},
    {"64", "0.3649571111111112`", "0.01568549506968126`", 
     "0.3258833333333332`", "0.01719288677528556`"},
    {"65", "0.3600146666666666`", "0.015521119456813271`", 
     "0.32217977777777773`", "0.017487274692361457`"},
    {"66", "0.3597000000000001`", "0.01547598956123207`", 
     "0.31906399999999985`", "0.01777079168930008`"},
    {"67", "0.36492333333333316`", "0.015750929403275413`", 
     "0.3162424444444444`", "0.017842625736930597`"},
    {"68", "0.364208`", "0.016125447125433037`", "0.31542288888888886`", 
     "0.017981635459898938`"},
    {"69", "0.3625957777777778`", "0.016952055201436868`", 
     "0.3137084444444442`", "0.01793853953994132`"},
    {"70", "0.36671311111111105`", "0.017151365570263016`", 
     "0.3113293333333333`", "0.018079992173950215`"},
    {"71", "0.36777444444444446`", "0.01699600019955841`", 
     "0.3084039999999999`", "0.01814459220403299`"},
    {"72", "0.3649968888888889`", "0.016908165394760772`", 
     "0.3072555555555555`", "0.018166605312279482`"},
    {"73", "0.3639971111111111`", "0.01682853755186945`", 
     "0.30849155555555546`", "0.018199317134459155`"},
    {"74", "0.360282`", "0.017304651349953123`", "0.3059024444444443`", 
     "0.01823588212623153`"},
    {"75", "0.35536733333333337`", "0.017760141163203767`", 
     "0.3064024444444444`", "0.01816872070238002`"},
    {"76", "0.34721`", "0.01787367965555722`", "0.30187933333333306`", 
     "0.018304552542919027`"},
    {"77", "0.33334111111111125`", "0.017705579541872678`", 
     "0.3018131111111112`", "0.018397278327678478`"},
    {"78", "0.3274795555555554`", "0.017166149105568285`", 
     "0.2995002222222221`", "0.01824794806216199`"},
    {"79", "0.3187811111111111`", "0.01709508058505436`", 
     "0.294877111111111`", "0.018361843139979007`"},
    {"80", "0.3133133333333333`", "0.017341954805711844`", 
     "0.2958259999999999`", "0.018282030949769646`"},
    {"81", "0.3131095555555555`", "0.017802564603804354`", 
     "0.29569999999999996`", "0.018453319835310324`"},
    {"82", "0.32144666666666666`", "0.018273523330752776`", 
     "0.2941895555555555`", "0.018400811601935567`"},
    {"83", "0.32399999999999984`", "0.01834718002961986`", 
     "0.29417466666666664`", "0.01865119974368373`"},
    {"84", "0.33090577777777774`", "0.018358130089380042`", 
     "0.2940846666666667`", "0.01861574927131019`"},
    {"85", "0.33769422222222223`", "0.018074318702103413`", 
     "0.2873222222222219`", "0.018686397766262696`"},
    {"86", "0.3376562222222222`", "0.017761721951281857`", 
     "0.2896124444444444`", "0.01885239043324512`"},
    {"87", "0.33688622222222214`", "0.017729898762160867`", 
     "0.28837066666666655`", "0.019109156841274736`"},
    {"88", "0.3294026666666667`", "0.017743477885838015`", 
     "0.2896768888888888`", "0.019013581447960802`"},
    {"89", "0.32755399999999996`", "0.017922593132192605`", 
     "0.2886391111111111`", "0.018814421378001534`"},
    {"90", "0.3303648888888888`", "0.01839913499102627`", 
     "0.28693866666666656`", "0.018908640186748867`"},
    {"91", "0.32954200000000006`", "0.01822578728339365`", 
     "0.2786495555555555`", "0.019102865255393144`"},
    {"92", "0.3266188888888889`", "0.017876519225813417`", 
     "0.27761688888888886`", "0.019210421848087928`"},
    {"93", "0.32129622222222215`", "0.017645908931342092`", 
     "0.27277911111111103`", "0.019095701727062396`"},
    {"94", "0.31961266666666655`", "0.01772764867650124`", 
     "0.2695208888888889`", "0.019406043081352808`"},
    {"95", "0.32034311111111125`", "0.018542242151772383`", 
     "0.26601933333333333`", "0.019363571375433892`"},
    {"96", "0.323315111111111`", "0.019022199585089904`", 
     "0.2656066666666666`", "0.01962699137470504`"},
    {"97", "0.3299831111111111`", "0.01943705457295752`", 
     "0.26340044444444444`", "0.01978706410565844`"},
    {"98", "0.3265193333333333`", "0.01957929653078677`", 
     "0.2626384444444445`", "0.019990080445298427`"},
    {"99", "0.32301933333333355`", "0.019472978696891553`", 
     "0.25792600000000004`", "0.019778288289745358`"},
    {"100", "0.3180797777777777`", "0.019226584642405876`", 
     "0.25384377777777767`", "0.01978773849339857`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.858891620198724*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<~/Desktop/Mideo.lab2/Coevolution/Data sets/Data_2_List.csv\>\"", ",", 
    "valList", ",", "\"\<CSV\>\""}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.8588916310934*^9, 3.8588916688782463`*^9}, {
  3.858891780900391*^9, 3.858891782243368*^9}}],

Cell[CellGroupData[{

Cell[BoxData["valList"], "Input",
 CellChangeTimes->{{3.858891706088006*^9, 3.8588917077136717`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"t\"\>", "\<\"meanHet\"\>", "\<\"seHet\"\>", "\<\"meanHetN\"\>", "\<\
\"seHetN\"\>"},
    {"0", "0.4999920000000004`", "1.0720403362740688`*^-6", 
     "0.4999920000000004`", "1.072040336274292`*^-6"},
    {"1", "0.4967779999999999`", "0.0004175033718061562`", 
     "0.4964944444444443`", "0.00044737623088023266`"},
    {"2", "0.49287822222222205`", "0.0009871101661464848`", 
     "0.4937702222222222`", "0.0010604541879185069`"},
    {"3", "0.49016844444444446`", "0.0016208085773602148`", 
     "0.49098111111111103`", "0.001295957757621692`"},
    {"4", "0.4855428888888889`", "0.001901583702241504`", 
     "0.48665355555555573`", "0.0019516509865402428`"},
    {"5", "0.479899111111111`", "0.0023009420241021047`", 
     "0.48398866666666657`", "0.002235135957101162`"},
    {"6", "0.47687177777777784`", "0.0026274794235563725`", 
     "0.4818202222222223`", "0.0024029692339466563`"},
    {"7", "0.4728019999999998`", "0.0031654301970207785`", 
     "0.47648022222222247`", "0.003127328517013101`"},
    {"8", "0.4708908888888891`", "0.0038902481907853222`", 
     "0.47460511111111114`", "0.0034768372900294492`"},
    {"9", "0.46790222222222233`", "0.004554426555235937`", 
     "0.47250355555555557`", "0.0034158178916346774`"},
    {"10", "0.46577955555555534`", "0.00458745299117633`", 
     "0.4683202222222221`", "0.0037751905195347935`"},
    {"11", "0.4627695555555553`", "0.004254875385918427`", 
     "0.46566222222222214`", "0.0041589915993641416`"},
    {"12", "0.4599875555555556`", "0.004172643169900779`", 
     "0.4609953333333333`", "0.005014994762697569`"},
    {"13", "0.45997733333333335`", "0.004322805329176225`", 
     "0.4607568888888891`", "0.005227803010037733`"},
    {"14", "0.46084533333333333`", "0.00447238171127455`", 
     "0.4573357777777781`", "0.005514574668257925`"},
    {"15", "0.45649022222222213`", "0.004901981110971435`", 
     "0.45121733333333347`", "0.006433139994885061`"},
    {"16", "0.4524071111111112`", "0.006183864960250533`", 
     "0.4490684444444443`", "0.006417660784070312`"},
    {"17", "0.44923977777777774`", "0.006694283868926557`", 
     "0.44670466666666664`", "0.007027040472149822`"},
    {"18", "0.4440864444444445`", "0.00766849417471217`", 
     "0.44407422222222226`", "0.007363184024891137`"},
    {"19", "0.43767466666666666`", "0.008491606345590326`", 
     "0.44068066666666683`", "0.008098217636270316`"},
    {"20", "0.43480822222222215`", "0.009169440544316084`", 
     "0.441129111111111`", "0.008436692979005327`"},
    {"21", "0.4381826666666667`", "0.008451308124284516`", 
     "0.43569622222222226`", "0.008672679522587523`"},
    {"22", "0.43762955555555555`", "0.008102241178478256`", 
     "0.43338911111111117`", "0.009142080914448035`"},
    {"23", "0.43583044444444446`", "0.00755716811639082`", 
     "0.42932888888888904`", "0.0094583146582299`"},
    {"24", "0.43258622222222237`", "0.008112877810024878`", 
     "0.4261604444444444`", "0.009853347409736183`"},
    {"25", "0.43136844444444444`", "0.00845168128783239`", 
     "0.4225562222222222`", "0.010291229862935822`"},
    {"26", "0.42949799999999994`", "0.008488326058253821`", 
     "0.4145691111111111`", "0.010721661037494057`"},
    {"27", "0.428596`", "0.009150575751073356`", "0.4172157777777777`", 
     "0.01055110506589169`"},
    {"28", "0.42781311111111114`", "0.009691872109924718`", 
     "0.4164935555555557`", "0.010273380439687852`"},
    {"29", "0.4280428888888887`", "0.009425951770479148`", 
     "0.40858288888888905`", "0.010718902903133971`"},
    {"30", "0.42982577777777775`", "0.008579574596615217`", 
     "0.40355977777777796`", "0.011357385260024931`"},
    {"31", "0.4234573333333333`", "0.009144955520163497`", 
     "0.3990191111111109`", "0.011997258089789792`"},
    {"32", "0.4186951111111112`", "0.009740074405036027`", 
     "0.3986535555555556`", "0.01216476143355281`"},
    {"33", "0.4135548888888889`", "0.010100662128239738`", 
     "0.39618177777777785`", "0.012453037082299999`"},
    {"34", "0.40441266666666675`", "0.01086853135950106`", 
     "0.3931733333333332`", "0.012390569069681888`"},
    {"35", "0.40161977777777763`", "0.010874097862775475`", 
     "0.39104866666666666`", "0.01230732658363967`"},
    {"36", "0.3991677777777779`", "0.011513595160196788`", 
     "0.3853451111111109`", "0.012570138076558613`"},
    {"37", "0.39933711111111125`", "0.01195606032861031`", 
     "0.3752837777777778`", "0.013112330232483527`"},
    {"38", "0.40149422222222225`", "0.012003970707404799`", 
     "0.37089955555555554`", "0.013462921736254664`"},
    {"39", "0.39852377777777775`", "0.012285213155561883`", 
     "0.37664955555555574`", "0.013352267554407918`"},
    {"40", "0.39921622222222225`", "0.011912820081326719`", 
     "0.3777219999999999`", "0.013630312867134309`"},
    {"41", "0.40177422222222214`", "0.011607900233070808`", 
     "0.37541977777777774`", "0.014073749919694293`"},
    {"42", "0.40249311111111136`", "0.011372040503779586`", 
     "0.3749333333333334`", "0.014203293948847968`"},
    {"43", "0.3997862222222224`", "0.012199250477447281`", 
     "0.3710775555555557`", "0.01481243291119733`"},
    {"44", "0.4040762222222222`", "0.012714608861034161`", 
     "0.3703477777777778`", "0.014468547485147443`"},
    {"45", "0.4047091111111113`", "0.013086871931223957`", 
     "0.3673913333333332`", "0.014728313225371279`"},
    {"46", "0.40084644444444434`", "0.013387414656699882`", 
     "0.36619622222222226`", "0.014597110582808985`"},
    {"47", "0.39433222222222214`", "0.013679466889405868`", 
     "0.3697168888888887`", "0.014678493703057446`"},
    {"48", "0.3858148888888888`", "0.0139718642440146`", 
     "0.3665186666666665`", "0.01493749168233477`"},
    {"49", "0.37813999999999987`", "0.014428698006070849`", 
     "0.3636533333333333`", "0.015439467977164324`"},
    {"50", "0.3718817777777776`", "0.014891027847362204`", 
     "0.3652744444444443`", "0.015102000592157383`"},
    {"51", "0.367834`", "0.015107438813880781`", "0.360877111111111`", 
     "0.015397539816268225`"},
    {"52", "0.3665562222222222`", "0.015417496118935095`", 
     "0.3620071111111109`", "0.015355331577154878`"},
    {"53", "0.36893399999999993`", "0.015631115356818492`", 
     "0.3589188888888888`", "0.01592019267369046`"},
    {"54", "0.366463111111111`", "0.015924740830450652`", 
     "0.35577111111111104`", "0.01613043978374148`"},
    {"55", "0.3685368888888888`", "0.01618306171253819`", 
     "0.3516511111111111`", "0.015948529590819355`"},
    {"56", "0.3672288888888889`", "0.015972640995046906`", 
     "0.3486848888888887`", "0.016083232976563708`"},
    {"57", "0.3649775555555557`", "0.01554652009671604`", 
     "0.3414859999999999`", "0.016418485187673`"},
    {"58", "0.3665044444444444`", "0.015645240945250476`", 
     "0.34215466666666666`", "0.016136235175486513`"},
    {"59", "0.36969822222222215`", "0.015846110902836087`", 
     "0.3388446666666665`", "0.01618963781758017`"},
    {"60", "0.3712511111111112`", "0.015801184075309616`", 
     "0.33716266666666656`", "0.016343372301023024`"},
    {"61", "0.37172733333333335`", "0.015764658246142163`", 
     "0.33549511111111097`", "0.0166231197416994`"},
    {"62", "0.37470600000000004`", "0.015657468143108276`", 
     "0.33246422222222205`", "0.01698038457812426`"},
    {"63", "0.3728655555555555`", "0.015312156769810703`", 
     "0.3288915555555555`", "0.017149775534272157`"},
    {"64", "0.3649571111111112`", "0.01568549506968126`", 
     "0.3258833333333332`", "0.01719288677528556`"},
    {"65", "0.3600146666666666`", "0.015521119456813271`", 
     "0.32217977777777773`", "0.017487274692361457`"},
    {"66", "0.3597000000000001`", "0.01547598956123207`", 
     "0.31906399999999985`", "0.01777079168930008`"},
    {"67", "0.36492333333333316`", "0.015750929403275413`", 
     "0.3162424444444444`", "0.017842625736930597`"},
    {"68", "0.364208`", "0.016125447125433037`", "0.31542288888888886`", 
     "0.017981635459898938`"},
    {"69", "0.3625957777777778`", "0.016952055201436868`", 
     "0.3137084444444442`", "0.01793853953994132`"},
    {"70", "0.36671311111111105`", "0.017151365570263016`", 
     "0.3113293333333333`", "0.018079992173950215`"},
    {"71", "0.36777444444444446`", "0.01699600019955841`", 
     "0.3084039999999999`", "0.01814459220403299`"},
    {"72", "0.3649968888888889`", "0.016908165394760772`", 
     "0.3072555555555555`", "0.018166605312279482`"},
    {"73", "0.3639971111111111`", "0.01682853755186945`", 
     "0.30849155555555546`", "0.018199317134459155`"},
    {"74", "0.360282`", "0.017304651349953123`", "0.3059024444444443`", 
     "0.01823588212623153`"},
    {"75", "0.35536733333333337`", "0.017760141163203767`", 
     "0.3064024444444444`", "0.01816872070238002`"},
    {"76", "0.34721`", "0.01787367965555722`", "0.30187933333333306`", 
     "0.018304552542919027`"},
    {"77", "0.33334111111111125`", "0.017705579541872678`", 
     "0.3018131111111112`", "0.018397278327678478`"},
    {"78", "0.3274795555555554`", "0.017166149105568285`", 
     "0.2995002222222221`", "0.01824794806216199`"},
    {"79", "0.3187811111111111`", "0.01709508058505436`", 
     "0.294877111111111`", "0.018361843139979007`"},
    {"80", "0.3133133333333333`", "0.017341954805711844`", 
     "0.2958259999999999`", "0.018282030949769646`"},
    {"81", "0.3131095555555555`", "0.017802564603804354`", 
     "0.29569999999999996`", "0.018453319835310324`"},
    {"82", "0.32144666666666666`", "0.018273523330752776`", 
     "0.2941895555555555`", "0.018400811601935567`"},
    {"83", "0.32399999999999984`", "0.01834718002961986`", 
     "0.29417466666666664`", "0.01865119974368373`"},
    {"84", "0.33090577777777774`", "0.018358130089380042`", 
     "0.2940846666666667`", "0.01861574927131019`"},
    {"85", "0.33769422222222223`", "0.018074318702103413`", 
     "0.2873222222222219`", "0.018686397766262696`"},
    {"86", "0.3376562222222222`", "0.017761721951281857`", 
     "0.2896124444444444`", "0.01885239043324512`"},
    {"87", "0.33688622222222214`", "0.017729898762160867`", 
     "0.28837066666666655`", "0.019109156841274736`"},
    {"88", "0.3294026666666667`", "0.017743477885838015`", 
     "0.2896768888888888`", "0.019013581447960802`"},
    {"89", "0.32755399999999996`", "0.017922593132192605`", 
     "0.2886391111111111`", "0.018814421378001534`"},
    {"90", "0.3303648888888888`", "0.01839913499102627`", 
     "0.28693866666666656`", "0.018908640186748867`"},
    {"91", "0.32954200000000006`", "0.01822578728339365`", 
     "0.2786495555555555`", "0.019102865255393144`"},
    {"92", "0.3266188888888889`", "0.017876519225813417`", 
     "0.27761688888888886`", "0.019210421848087928`"},
    {"93", "0.32129622222222215`", "0.017645908931342092`", 
     "0.27277911111111103`", "0.019095701727062396`"},
    {"94", "0.31961266666666655`", "0.01772764867650124`", 
     "0.2695208888888889`", "0.019406043081352808`"},
    {"95", "0.32034311111111125`", "0.018542242151772383`", 
     "0.26601933333333333`", "0.019363571375433892`"},
    {"96", "0.323315111111111`", "0.019022199585089904`", 
     "0.2656066666666666`", "0.01962699137470504`"},
    {"97", "0.3299831111111111`", "0.01943705457295752`", 
     "0.26340044444444444`", "0.01978706410565844`"},
    {"98", "0.3265193333333333`", "0.01957929653078677`", 
     "0.2626384444444445`", "0.019990080445298427`"},
    {"99", "0.32301933333333355`", "0.019472978696891553`", 
     "0.25792600000000004`", "0.019778288289745358`"},
    {"100", "0.3180797777777777`", "0.019226584642405876`", 
     "0.25384377777777767`", "0.01978773849339857`"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.85889170812971*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowSize->{1300, 755},
WindowMargins->{{70, Automatic}, {Automatic, 0}},
Magnification:>1.25 Inherited,
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 167, 3, 39, "Input"],
Cell[CellGroupData[{
Cell[750, 27, 222, 4, 183, "Title"],
Cell[CellGroupData[{
Cell[997, 35, 104, 1, 80, "Section"],
Cell[CellGroupData[{
Cell[1126, 40, 111, 1, 54, "Subsection"],
Cell[CellGroupData[{
Cell[1262, 45, 104, 1, 43, "Subsubsection"],
Cell[1369, 48, 154, 3, 37, "Text"],
Cell[1526, 53, 4735, 136, 233, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[6298, 194, 153, 2, 43, "Subsubsection"],
Cell[6454, 198, 823, 26, 47, "Text"],
Cell[7280, 226, 5366, 120, 250, "Input",
 InitializationCell->True],
Cell[12649, 348, 2091, 57, 86, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[14765, 409, 889, 26, 42, "Input"],
Cell[15657, 437, 1909, 60, 67, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17615, 503, 208, 3, 43, "Subsubsection"],
Cell[17826, 508, 723, 23, 47, "Text"],
Cell[18552, 533, 5186, 116, 250, "Input",
 InitializationCell->True],
Cell[23741, 651, 1677, 51, 86, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[25443, 706, 122, 2, 39, "Input"],
Cell[25568, 710, 1800, 56, 56, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[27429, 773, 400, 5, 54, "Subsection"],
Cell[27832, 780, 13633, 281, 612, "Input"],
Cell[CellGroupData[{
Cell[41490, 1065, 1764, 36, 144, "Input"],
Cell[43257, 1103, 72743, 1213, 318, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[116049, 2322, 222, 3, 54, "Subsection"],
Cell[116274, 2327, 510, 15, 51, "Input",
 InitializationCell->True],
Cell[116787, 2344, 251, 5, 37, "Text"],
Cell[CellGroupData[{
Cell[117063, 2353, 300, 8, 48, "Input"],
Cell[117366, 2363, 833, 16, 40, "Output"]
}, Open  ]],
Cell[118214, 2382, 2988, 79, 164, "Input",
 InitializationCell->True],
Cell[121205, 2463, 232, 3, 37, "Text"],
Cell[CellGroupData[{
Cell[121462, 2470, 1338, 36, 86, "Input",
 InitializationCell->True],
Cell[122803, 2508, 10693, 290, 660, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133533, 2803, 372, 5, 53, "Subsubsection"],
Cell[CellGroupData[{
Cell[133930, 2812, 201, 4, 39, "Input"],
Cell[134134, 2818, 1227, 23, 39, "Output"]
}, Open  ]],
Cell[135376, 2844, 201, 4, 37, "Text"],
Cell[135580, 2850, 435, 11, 39, "Input"],
Cell[CellGroupData[{
Cell[136040, 2865, 823, 22, 39, "Input"],
Cell[136866, 2889, 1112, 21, 39, "Output"]
}, Open  ]],
Cell[137993, 2913, 353, 11, 39, "Input"],
Cell[CellGroupData[{
Cell[138371, 2928, 1201, 31, 92, "Input"],
Cell[139575, 2961, 1317, 24, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140929, 2990, 628, 17, 39, "Input"],
Cell[141560, 3009, 953, 14, 39, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[142562, 3029, 463, 7, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[143050, 3040, 250, 5, 5851, "Input"],
Cell[143303, 3047, 1271, 23, 327, "Output"]
}, Open  ]],
Cell[144589, 3073, 201, 4, 5557, "Text"],
Cell[144793, 3079, 435, 11, 5851, "Input"],
Cell[CellGroupData[{
Cell[145253, 3094, 872, 23, 9753, "Input"],
Cell[146128, 3119, 1158, 22, 327, "Output"]
}, Open  ]],
Cell[147301, 3144, 353, 11, 5851, "Input"],
Cell[CellGroupData[{
Cell[147679, 3159, 1143, 29, 13476, "Input"],
Cell[148825, 3190, 1341, 24, 327, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150203, 3219, 676, 17, 5851, "Input"],
Cell[150882, 3238, 1005, 15, 327, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[151936, 3259, 316, 4, 34, "Subsubsection"],
Cell[CellGroupData[{
Cell[152277, 3267, 153, 3, 5851, "Input"],
Cell[152433, 3272, 1252, 26, 327, "Output"]
}, Open  ]],
Cell[153700, 3301, 370, 6, 5557, "Text"],
Cell[CellGroupData[{
Cell[154095, 3311, 391, 11, 5851, "Input"],
Cell[154489, 3324, 2571, 64, 327, "Output"]
}, Open  ]],
Cell[157075, 3391, 539, 9, 9266, "Text"],
Cell[CellGroupData[{
Cell[157639, 3404, 962, 26, 13476, "Input"],
Cell[158604, 3432, 1181, 22, 327, "Output"]
}, Open  ]],
Cell[159800, 3457, 463, 8, 9266, "Text"],
Cell[CellGroupData[{
Cell[160288, 3469, 1048, 28, 13476, "Input"],
Cell[161339, 3499, 1221, 23, 327, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162597, 3527, 629, 17, 9753, "Input"],
Cell[163229, 3546, 932, 14, 327, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[164210, 3566, 420, 7, 34, "Subsubsection"],
Cell[CellGroupData[{
Cell[164655, 3577, 204, 4, 1302688, "Input"],
Cell[164862, 3583, 1147, 22, 327, "Output"]
}, Open  ]],
Cell[166024, 3608, 370, 6, 962797, "Text"],
Cell[CellGroupData[{
Cell[166419, 3618, 439, 12, 1302688, "Input"],
Cell[166861, 3632, 2298, 56, 327, "Output"]
}, Open  ]],
Cell[169174, 3691, 539, 9, 1603566, "Text"],
Cell[CellGroupData[{
Cell[169738, 3704, 1011, 27, 2630432, "Input"],
Cell[170752, 3733, 1181, 22, 327, "Output"]
}, Open  ]],
Cell[171948, 3758, 463, 8, 1603566, "Text"],
Cell[CellGroupData[{
Cell[172436, 3770, 1099, 29, 2630432, "Input"],
Cell[173538, 3801, 1227, 23, 327, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174802, 3829, 674, 17, 1302688, "Input"],
Cell[175479, 3848, 931, 14, 327, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[176459, 3868, 379, 5, 34, "Subsubsection"],
Cell[CellGroupData[{
Cell[176863, 3877, 204, 4, 1302688, "Input"],
Cell[177070, 3883, 1150, 22, 327, "Output"]
}, Open  ]],
Cell[178235, 3908, 370, 6, 962797, "Text"],
Cell[CellGroupData[{
Cell[178630, 3918, 442, 12, 1302688, "Input"],
Cell[179075, 3932, 2295, 56, 327, "Output"]
}, Open  ]],
Cell[181385, 3991, 539, 9, 1603566, "Text"],
Cell[CellGroupData[{
Cell[181949, 4004, 1013, 27, 2630432, "Input"],
Cell[182965, 4033, 1187, 22, 327, "Output"]
}, Open  ]],
Cell[184167, 4058, 463, 8, 1603566, "Text"],
Cell[CellGroupData[{
Cell[184655, 4070, 1098, 29, 2630432, "Input"],
Cell[185756, 4101, 1248, 23, 327, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[187041, 4129, 677, 17, 1302688, "Input"],
Cell[187721, 4148, 964, 14, 327, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[188746, 4169, 267, 3, 43, "Subsection"],
Cell[189016, 4174, 561, 12, 156, "Text"],
Cell[189580, 4188, 2878, 83, 144, "Input"],
Cell[192461, 4273, 292, 6, 37, "Text"],
Cell[192756, 4281, 2808, 77, 118, "Input"],
Cell[195567, 4360, 376, 6, 37, "Text"],
Cell[195946, 4368, 3516, 97, 170, "Input"],
Cell[199465, 4467, 791, 22, 48, "Input"],
Cell[200259, 4491, 2630, 68, 212, "Input"],
Cell[CellGroupData[{
Cell[202914, 4563, 473, 6, 53, "Subsubsection"],
Cell[CellGroupData[{
Cell[203412, 4573, 376, 7, 522, "Input"],
Cell[203791, 4582, 1035, 21, 226, "Output"],
Cell[204829, 4605, 1037, 21, 226, "Output"],
Cell[205869, 4628, 1035, 21, 226, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[206941, 4654, 648, 11, 226, "Input"],
Cell[207592, 4667, 1359, 33, 293, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[208988, 4705, 453, 9, 378, "Input"],
Cell[209444, 4716, 790, 17, 293, "Output"],
Cell[210237, 4735, 813, 18, 293, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211087, 4758, 471, 8, 378, "Input"],
Cell[211561, 4768, 9309, 246, 2063, "Output"],
Cell[220873, 5016, 57225, 1331, 7876, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[278135, 6352, 1211, 31, 378, "Input"],
Cell[279349, 6385, 940, 22, 293, "Output"],
Cell[280292, 6409, 942, 22, 293, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[281283, 6437, 569, 9, 42, "Subsubsection"],
Cell[CellGroupData[{
Cell[281877, 6450, 378, 7, 522, "Input"],
Cell[282258, 6459, 955, 19, 226, "Output"],
Cell[283216, 6480, 953, 19, 226, "Output"],
Cell[284172, 6501, 953, 19, 226, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[285162, 6525, 650, 11, 226, "Input"],
Cell[285815, 6538, 1286, 32, 293, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[287138, 6575, 503, 10, 378, "Input"],
Cell[287644, 6587, 744, 16, 293, "Output"],
Cell[288391, 6605, 765, 17, 293, "Output"]
}, Open  ]],
Cell[289171, 6625, 580, 11, 378, "Input"],
Cell[CellGroupData[{
Cell[289776, 6640, 600, 13, 378, "Input"],
Cell[290379, 6655, 819, 20, 293, "Output"],
Cell[291201, 6677, 815, 20, 293, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[292065, 6703, 807, 11, 42, "Subsubsection"],
Cell[CellGroupData[{
Cell[292897, 6718, 283, 5, 522, "Input"],
Cell[293183, 6725, 996, 22, 291, "Output"],
Cell[294182, 6749, 904, 18, 226, "Output"],
Cell[295089, 6769, 904, 18, 226, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[296030, 6792, 577, 10, 226, "Input"],
Cell[296610, 6804, 1607, 41, 378, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[298254, 6850, 409, 9, 378, "Input"],
Cell[298666, 6861, 896, 23, 378, "Output"],
Cell[299565, 6886, 864, 21, 378, "Output"]
}, Open  ]],
Cell[300444, 6910, 487, 10, 378, "Input"],
Cell[CellGroupData[{
Cell[300956, 6924, 551, 12, 378, "Input"],
Cell[301510, 6938, 937, 23, 293, "Output"],
Cell[302450, 6963, 939, 23, 293, "Output"]
}, Open  ]],
Cell[303404, 6989, 2540, 65, 722, "Text"],
Cell[305947, 7056, 278, 9, 332, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[306262, 7070, 568, 9, 42, "Subsubsection"],
Cell[CellGroupData[{
Cell[306855, 7083, 425, 7, 522, "Input"],
Cell[307283, 7092, 1056, 21, 226, "Output"],
Cell[308342, 7115, 1057, 21, 226, "Output"],
Cell[309402, 7138, 1056, 21, 226, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[310495, 7164, 695, 11, 226, "Input"],
Cell[311193, 7177, 1381, 33, 293, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[312611, 7215, 504, 10, 378, "Input"],
Cell[313118, 7227, 812, 17, 293, "Output"],
Cell[313933, 7246, 835, 18, 293, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[314805, 7269, 561, 11, 378, "Input"],
Cell[315369, 7282, 9309, 246, 2063, "Output"],
Cell[324681, 7530, 57225, 1331, 7876, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[381943, 8866, 861, 18, 378, "Input"],
Cell[382807, 8886, 964, 22, 293, "Output"],
Cell[383774, 8910, 962, 22, 457, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[384785, 8938, 575, 7, 42, "Subsubsection"],
Cell[CellGroupData[{
Cell[385385, 8949, 429, 7, 115, "Input"],
Cell[385817, 8958, 979, 19, 48, "Output"],
Cell[386799, 8979, 979, 19, 48, "Output"],
Cell[387781, 9000, 977, 19, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[388795, 9024, 696, 11, 48, "Input"],
Cell[389494, 9037, 1308, 32, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[390839, 9074, 554, 11, 82, "Input"],
Cell[391396, 9087, 772, 17, 66, "Output"],
Cell[392171, 9106, 793, 18, 66, "Output"]
}, Open  ]],
Cell[392979, 9127, 631, 12, 82, "Input"],
Cell[CellGroupData[{
Cell[393635, 9143, 647, 13, 82, "Input"],
Cell[394285, 9158, 841, 20, 66, "Output"],
Cell[395129, 9180, 841, 20, 66, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[396031, 9207, 270, 3, 43, "Subsection"],
Cell[396304, 9212, 510, 15, 59, "Input",
 InitializationCell->True],
Cell[396817, 9229, 251, 5, 37, "Text"],
Cell[CellGroupData[{
Cell[397093, 9238, 300, 8, 48, "Input"],
Cell[397396, 9248, 833, 16, 40, "Output"]
}, Open  ]],
Cell[398244, 9267, 3062, 80, 164, "Input",
 InitializationCell->True],
Cell[401309, 9349, 232, 3, 37, "Text"],
Cell[CellGroupData[{
Cell[401566, 9356, 1338, 36, 86, "Input",
 InitializationCell->True],
Cell[402907, 9394, 77, 1, 39, "Output"],
Cell[402987, 9397, 79, 1, 39, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[403127, 9405, 208, 3, 80, "Section"],
Cell[403338, 9410, 12035, 246, 445, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[415398, 9660, 161, 2, 54, "Subsection"],
Cell[415562, 9664, 177, 2, 37, "Text"],
Cell[415742, 9668, 35672, 902, 1793, "Code"],
Cell[CellGroupData[{
Cell[451439, 10574, 212, 3, 48, "Input"],
Cell[451654, 10579, 195, 3, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[451886, 10587, 285, 7, 48, "Input"],
Cell[452174, 10596, 221, 5, 48, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[452444, 10607, 156, 2, 67, "Subsection"],
Cell[452603, 10611, 18198, 429, 1240, "Code"],
Cell[470804, 11042, 3019, 57, 80, "Code"],
Cell[473826, 11101, 214, 4, 46, "Text"],
Cell[CellGroupData[{
Cell[474065, 11109, 1183, 28, 48, "Input"],
Cell[475251, 11139, 921, 13, 48, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[476221, 11158, 395, 9, 67, "Subsection"],
Cell[476619, 11169, 9398, 190, 591, "Code"],
Cell[CellGroupData[{
Cell[486042, 11363, 172, 3, 48, "Input"],
Cell[486217, 11368, 8822, 224, 183, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[495088, 11598, 569, 11, 67, "Subsection"],
Cell[495660, 11611, 16226, 354, 1542, "Code"],
Cell[CellGroupData[{
Cell[511911, 11969, 176, 3, 48, "Input"],
Cell[512090, 11974, 79, 1, 48, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[512218, 11981, 456, 6, 67, "Subsection"],
Cell[CellGroupData[{
Cell[512699, 11991, 2213, 37, 201, "Code"],
Cell[514915, 12030, 77, 1, 48, "Output"]
}, Open  ]],
Cell[515007, 12034, 1976, 42, 111, "Code"],
Cell[516986, 12078, 1001, 23, 147, "Input"],
Cell[517990, 12103, 851, 23, 180, "Input"],
Cell[CellGroupData[{
Cell[518866, 12130, 802, 20, 115, "Input"],
Cell[519671, 12152, 124429, 2056, 381, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[644137, 14213, 3271, 82, 245, "Input"],
Cell[647411, 14297, 365256, 6013, 381, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1012704, 20315, 1230, 27, 82, "Input"],
Cell[1013937, 20344, 302, 5, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1014276, 20354, 2256, 58, 222, "Input"],
Cell[1016535, 20414, 12145, 219, 2262, "Output"]
}, Open  ]],
Cell[1028695, 20636, 316, 7, 39, "Input"],
Cell[CellGroupData[{
Cell[1029036, 20647, 101, 1, 39, "Input"],
Cell[1029140, 20650, 12144, 219, 2262, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

