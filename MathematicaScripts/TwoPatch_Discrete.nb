(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    741672,      15395]
NotebookOptionsPosition[    733856,      15145]
NotebookOutlinePosition[    734304,      15163]
CellTagsIndexPosition[    734261,      15160]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8146282641437674`*^9, 3.814628284248445*^9}, 
   3.814628315878787*^9, {3.858166127700123*^9, 3.8581661283117*^9}}],

Cell[CellGroupData[{

Cell["\<\
Discrete-time matching alleles coevolution with two-patch model\
\>", "Title",
 CellChangeTimes->{{3.857405818873501*^9, 3.857405821613557*^9}, {
  3.857819971255435*^9, 3.8578199900471992`*^9}, {3.85842336721793*^9, 
  3.858423369166744*^9}},
 ExpressionUUID -> "f739e324-17a7-49e7-b7ac-11ca208124b1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"WH1", "[", 
   RowBox[{"1", ",", "u_", ",", "t_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"pP", "[", 
     RowBox[{"u", ",", "t"}], "]"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", "V"}], ")"}]}], " ", "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"pP", "[", 
       RowBox[{"u", ",", "t"}], "]"}]}], ")"}], "S"}], " ", "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"pP", "[", 
       RowBox[{"u", ",", "t"}], "]"}]}], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", "S"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", "V"}], ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"WH1", "[", 
    RowBox[{"2", ",", "u_", ",", "t_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"pP", "[", 
        RowBox[{"u", ",", "t"}], "]"}]}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "V"}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"pP", "[", 
      RowBox[{"u", ",", "t"}], "]"}], "S"}], " ", "+", 
    RowBox[{
     RowBox[{"pP", "[", 
      RowBox[{"u", ",", "t"}], "]"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "S"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "V"}], ")"}]}]}]}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WP1", "[", 
   RowBox[{"1", ",", "u_", ",", "t_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"pH", "[", 
    RowBox[{"u", ",", "t"}], "]"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"pH", "[", 
       RowBox[{"u", ",", "t"}], "]"}]}], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", "S"}], ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WP1", "[", 
   RowBox[{"2", ",", "u_", ",", "t_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"pH", "[", 
      RowBox[{"u", ",", "t"}], "]"}]}], ")"}], "+", 
   RowBox[{
    RowBox[{"pH", "[", 
     RowBox[{"u", ",", "t"}], "]"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", "S"}], ")"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.857405828196187*^9, 3.857405989662332*^9}, {
  3.857406053943595*^9, 3.857406086712336*^9}, {3.857406295964834*^9, 
  3.85740631020522*^9}, {3.857406391851985*^9, 3.857406502099152*^9}, {
  3.8574065741138067`*^9, 3.8574065978156557`*^9}, {3.857406636306747*^9, 
  3.857406667927128*^9}, {3.8574067075906677`*^9, 3.8574067323623533`*^9}, {
  3.8574069808161097`*^9, 3.857406982762761*^9}, {3.857819784474679*^9, 
  3.857819790356007*^9}, {3.857819937215465*^9, 3.857819957937851*^9}, {
  3.857819997677753*^9, 3.857820021776445*^9}, {3.857825420255735*^9, 
  3.857825473379045*^9}, {3.857826353649768*^9, 3.857826358709796*^9}},
 ExpressionUUID -> "d8ddd628-2d7d-4038-bc48-d29d1f62e1b9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pH1", "[", 
   RowBox[{"u_", ",", "t_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{"pH", "[", 
     RowBox[{"u", ",", "t"}], "]"}], " ", 
    RowBox[{"WH1", "[", 
     RowBox[{"1", ",", "u", ",", "t"}], "]"}]}], 
   RowBox[{
    RowBox[{
     RowBox[{"pH", "[", 
      RowBox[{"u", ",", "t"}], "]"}], 
     RowBox[{"WH1", "[", 
      RowBox[{"1", ",", "u", ",", "t"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"pH", "[", 
        RowBox[{"u", ",", "t"}], "]"}]}], ")"}], 
     RowBox[{"WH1", "[", 
      RowBox[{"2", ",", "u", ",", "t"}], 
      "]"}]}]}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pP1", "[", 
   RowBox[{"u_", ",", "t_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{"pP", "[", 
     RowBox[{"u", ",", "t"}], "]"}], " ", 
    RowBox[{"WP1", "[", 
     RowBox[{"1", ",", "u", ",", "t"}], "]"}]}], 
   RowBox[{
    RowBox[{
     RowBox[{"pP", "[", 
      RowBox[{"u", ",", "t"}], "]"}], 
     RowBox[{"WP1", "[", 
      RowBox[{"1", ",", "u", ",", "t"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"pP", "[", 
        RowBox[{"u", ",", "t"}], "]"}]}], ")"}], 
     RowBox[{"WP1", "[", 
      RowBox[{"2", ",", "u", ",", "t"}], 
      "]"}]}]}]]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.857406100561563*^9, 3.8574062262945623`*^9}, 
   3.857819833039071*^9, {3.8578200513091097`*^9, 3.857820096292759*^9}, {
   3.857820141847295*^9, 3.857820209078825*^9}, {3.8578254818050947`*^9, 
   3.8578255524135*^9}, {3.857825590386343*^9, 3.857825593796907*^9}},
 ExpressionUUID -> "de46af48-a30c-4b5a-bfce-81380151cb42"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pH2", "[", 
   RowBox[{"u_", ",", "t_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"pH1", "[", 
     RowBox[{"u", ",", "t"}], "]"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", "mH"}], " ", ")"}]}], "+", 
   RowBox[{"mH", "*", 
    RowBox[{"pH1", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"u", ",", "2"}], "]"}], "+", "1"}], ",", "t"}], 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pP2", "[", 
   RowBox[{"u_", ",", "t_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"pP1", "[", 
     RowBox[{"u", ",", "t"}], "]"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", "mP"}], ")"}]}], "+", 
   RowBox[{"mP", "*", 
    RowBox[{"pP1", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"u", ",", "2"}], "]"}], "+", "1"}], ",", "t"}], 
     "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.8574062419584627`*^9, 3.85740627878509*^9}, {
   3.8574063125609703`*^9, 3.857406313077402*^9}, 3.857406354127656*^9, {
   3.857408016973433*^9, 3.857408031559566*^9}, {3.857820229770954*^9, 
   3.857820280577223*^9}, {3.8578256211373453`*^9, 3.857825645342783*^9}, {
   3.857825706579915*^9, 3.857825724564752*^9}, {3.857833258311439*^9, 
   3.857833259456764*^9}},
 ExpressionUUID -> "1ebd11dc-d84f-4aa6-bb38-b39e9f08b4ee"],

Cell[CellGroupData[{

Cell["Numerical time series ", "Subsection",
 CellChangeTimes->{{3.8574096507298813`*^9, 3.857409665242929*^9}, {
  3.858161969998419*^9, 3.858161976493547*^9}},
 ExpressionUUID -> "d5e022f9-042d-42da-bf68-ab11b3c188c3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"inits1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"i1", "\[Rule]", " ", "0.495"}], ",", 
     RowBox[{"i2", "\[Rule]", " ", "0.5"}], ",", 
     RowBox[{"i3", "\[Rule]", " ", "0.5"}], ",", 
     RowBox[{"i4", "\[Rule]", " ", "0.5"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pars1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"p1", "\[Rule]", " ", "0.4117647058823529`"}], ",", 
     RowBox[{"p2", "\[Rule]", " ", "0.2200911052505395`"}], ",", 
     RowBox[{"p3", "\[Rule]", " ", "0.01"}], ",", 
     RowBox[{"p4", "\[Rule]", " ", "0.01"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"pars2", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"p1", "\[Rule]", " ", "0.3939393939393939`"}], ",", 
     RowBox[{"p2", "\[Rule]", " ", "0.4368677407268642`"}], ",", 
     RowBox[{"p3", "\[Rule]", "0.01"}], ",", 
     RowBox[{"p4", "\[Rule]", " ", "0.01"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"pars3", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"p1", "\[Rule]", " ", "0.37500000000000006`"}], ",", 
     RowBox[{"p2", "\[Rule]", " ", "0.9004329004329`"}], ",", 
     RowBox[{"p3", "\[Rule]", " ", "0.01"}], ",", 
     RowBox[{"p4", "\[Rule]", " ", "0.01"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8581621482504797`*^9, 3.8581621739614067`*^9}, {
   3.858162332023149*^9, 3.858162348037448*^9}, {3.8581623949372883`*^9, 
   3.8581624073737097`*^9}, {3.858162674595199*^9, 3.858162715572319*^9}, {
   3.858163487673395*^9, 3.858163498626274*^9}, {3.858163542354513*^9, 
   3.858163542466462*^9}, {3.85816396877068*^9, 3.8581639747059813`*^9}, {
   3.858164094036561*^9, 3.8581640941400747`*^9}, {3.8581641955899897`*^9, 
   3.858164229279207*^9}, {3.858164333728698*^9, 3.8581643524804697`*^9}, {
   3.85816539462722*^9, 3.858165404956283*^9}, {3.8581655584490147`*^9, 
   3.85816556004732*^9}, {3.8581656163367357`*^9, 3.858165626207377*^9}, {
   3.858165671290386*^9, 3.858165671631407*^9}, {3.858165743554099*^9, 
   3.858165745146161*^9}, {3.8581658205089293`*^9, 3.8581658334347143`*^9}, {
   3.858165948599053*^9, 3.858165950726095*^9}, {3.8581660485450287`*^9, 
   3.858166058127633*^9}, {3.858166703731504*^9, 3.858166703962277*^9}, {
   3.8581667568056507`*^9, 3.8581667603952513`*^9}, 3.858340729323941*^9, {
   3.861283942112878*^9, 3.861284006273212*^9}, {3.861284048340301*^9, 
   3.861284049178233*^9}, 3.861284111658058*^9, {3.8620800104917*^9, 
   3.862080035309259*^9}, {3.8620801283847*^9, 3.8620801564154*^9}, {
   3.8620808990750093`*^9, 3.862080904506217*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "timeSeries", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"timeSeries", "[", 
   RowBox[{"pars_", ",", "inits_", ",", "tmax_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"timeSeries", "[", 
    RowBox[{"pars", ",", "inits", ",", "tmax"}], "]"}], "=", 
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "WH1", ",", "WP1", ",", "pH1", ",", "pP1", ",", "pH2", ",", "pP2", ",", 
       "S", ",", "V", ",", "mH", ",", "mP", ",", "pP", ",", "pH", ",", "i1", 
       ",", "i2", ",", "i3", ",", "i4", ",", "p1", ",", "p2", ",", "p3", ",", 
       "p4", ",", "out"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"S", "=", 
       RowBox[{"p1", "/.", "pars"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"V", "=", 
       RowBox[{"p2", "/.", "pars"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"mH", "=", 
       RowBox[{"p3", "/.", "pars"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"mP", "=", 
       RowBox[{"p4", "/.", "pars"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"WH1", "[", 
        RowBox[{"1", ",", "u_", ",", "t_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"pP", "[", 
          RowBox[{"u", ",", "t"}], "]"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "V"}], ")"}]}], " ", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"pP", "[", 
            RowBox[{"u", ",", "t"}], "]"}]}], ")"}], "S"}], " ", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"pP", "[", 
            RowBox[{"u", ",", "t"}], "]"}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "S"}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "V"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"WH1", "[", 
        RowBox[{"2", ",", "u_", ",", "t_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"pP", "[", 
            RowBox[{"u", ",", "t"}], "]"}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "V"}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"pP", "[", 
          RowBox[{"u", ",", "t"}], "]"}], "S"}], " ", "+", 
        RowBox[{
         RowBox[{"pP", "[", 
          RowBox[{"u", ",", "t"}], "]"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "S"}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "V"}], ")"}]}]}]}], " ", ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"WP1", "[", 
        RowBox[{"1", ",", "u_", ",", "t_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"pH", "[", 
         RowBox[{"u", ",", "t"}], "]"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"pH", "[", 
            RowBox[{"u", ",", "t"}], "]"}]}], ")"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "S"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"WP1", "[", 
        RowBox[{"2", ",", "u_", ",", "t_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"pH", "[", 
           RowBox[{"u", ",", "t"}], "]"}]}], ")"}], "+", 
        RowBox[{
         RowBox[{"pH", "[", 
          RowBox[{"u", ",", "t"}], "]"}], 
         RowBox[{"(", 
          RowBox[{"1", "-", "S"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      "\n", 
      RowBox[{
       RowBox[{"pH1", "[", 
        RowBox[{"u_", ",", "t_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"pH1", "[", 
         RowBox[{"u", ",", "t"}], "]"}], "=", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"pH", "[", 
             RowBox[{"u", ",", "t"}], "]"}], " ", 
            RowBox[{"WH1", "[", 
             RowBox[{"1", ",", "u", ",", "t"}], "]"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"pH", "[", 
              RowBox[{"u", ",", "t"}], "]"}], 
             RowBox[{"WH1", "[", 
              RowBox[{"1", ",", "u", ",", "t"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"pH", "[", 
                RowBox[{"u", ",", "t"}], "]"}]}], ")"}], 
             RowBox[{"WH1", "[", 
              RowBox[{"2", ",", "u", ",", "t"}], "]"}]}]}], ")"}]}], 
         ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pP1", "[", 
        RowBox[{"u_", ",", "t_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"pP1", "[", 
         RowBox[{"u", ",", "t"}], "]"}], "=", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"pP", "[", 
             RowBox[{"u", ",", "t"}], "]"}], " ", 
            RowBox[{"WP1", "[", 
             RowBox[{"1", ",", "u", ",", "t"}], "]"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"pP", "[", 
              RowBox[{"u", ",", "t"}], "]"}], 
             RowBox[{"WP1", "[", 
              RowBox[{"1", ",", "u", ",", "t"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"pP", "[", 
                RowBox[{"u", ",", "t"}], "]"}]}], ")"}], 
             RowBox[{"WP1", "[", 
              RowBox[{"2", ",", "u", ",", "t"}], "]"}]}]}], ")"}]}], 
         ")"}]}]}], ";", "\[IndentingNewLine]", "\n", 
      RowBox[{
       RowBox[{"pH2", "[", 
        RowBox[{"u_", ",", "t_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"pH2", "[", 
         RowBox[{"u", ",", "t"}], "]"}], "=", 
        RowBox[{
         RowBox[{
          RowBox[{"pH1", "[", 
           RowBox[{"u", ",", "t"}], "]"}], 
          RowBox[{"(", 
           RowBox[{"1", "-", "mH"}], " ", ")"}]}], "+", 
         RowBox[{"mH", "*", 
          RowBox[{"pH1", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{"u", ",", "2"}], "]"}], "+", "1"}], ",", "t"}], 
           "]"}]}]}]}]}], ";", 
      RowBox[{
       RowBox[{"pP2", "[", 
        RowBox[{"u_", ",", "t_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"pP2", "[", 
         RowBox[{"u", ",", "t"}], "]"}], "=", 
        RowBox[{
         RowBox[{
          RowBox[{"pP1", "[", 
           RowBox[{"u", ",", "t"}], "]"}], 
          RowBox[{"(", 
           RowBox[{"1", "-", "mP"}], ")"}]}], "+", 
         RowBox[{"mP", "*", 
          RowBox[{"pP1", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{"u", ",", "2"}], "]"}], "+", "1"}], ",", "t"}], 
           "]"}]}]}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pH", "[", 
        RowBox[{"u_", ",", "t_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"pH", "[", 
         RowBox[{"u", ",", "t"}], "]"}], "=", 
        RowBox[{"pH2", "[", 
         RowBox[{"u", ",", 
          RowBox[{"t", "-", "1"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pP", "[", 
        RowBox[{"u_", ",", "t_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"pP", "[", 
         RowBox[{"u", ",", "t"}], "]"}], "=", 
        RowBox[{"pP2", "[", 
         RowBox[{"u", ",", 
          RowBox[{"t", "-", "1"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pH", "[", 
        RowBox[{"1", ",", "0"}], "]"}], "=", 
       RowBox[{"i1", "/.", "inits"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pH", "[", 
        RowBox[{"2", ",", "0"}], "]"}], "=", 
       RowBox[{"i2", "/.", "inits"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pP", "[", 
        RowBox[{"1", ",", "0"}], "]"}], "=", 
       RowBox[{"i3", "/.", "inits"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pP", "[", 
        RowBox[{"2", ",", "0"}], "]"}], "=", 
       RowBox[{"i4", "/.", "inits"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"out", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{"j", ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "0", ",", "tmax"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"pH", "[", 
            RowBox[{"1", ",", "j"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "0", ",", "tmax"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"pH", "[", 
            RowBox[{"2", ",", "j"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "0", ",", "tmax"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"pP", "[", 
            RowBox[{"1", ",", "j"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "0", ",", "tmax"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"pP", "[", 
            RowBox[{"2", ",", "j"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "0", ",", "tmax"}], "}"}]}], "]"}]}], 
        "}"}]}]}]}], "\[IndentingNewLine]", "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.858161981150495*^9, 3.858162059417266*^9}, {
  3.8581620920414352`*^9, 3.858162132506092*^9}, {3.858162178242031*^9, 
  3.858162319822557*^9}, {3.85816235978388*^9, 3.85816237975879*^9}, {
  3.858162569187427*^9, 3.8581626704604263`*^9}, {3.8581627239832563`*^9, 
  3.8581628015820923`*^9}, {3.8581628643468227`*^9, 3.858162952538213*^9}, {
  3.858163181715629*^9, 3.858163221944693*^9}, {3.858163719839778*^9, 
  3.858163726059153*^9}, {3.858165680333869*^9, 3.858165685210919*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"maxT", "=", "1000"}]], "Input",
 CellChangeTimes->{{3.862080837722803*^9, 3.862080839499791*^9}, {
   3.862080879965163*^9, 3.862080909365284*^9}, 3.862080939965111*^9, 
   3.862081426460215*^9}],

Cell[BoxData["1000"], "Output",
 CellChangeTimes->{3.8620809403682404`*^9, 3.8620814273386173`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"timeSeries", "[", 
     RowBox[{"pars3", ",", "inits1", ",", "maxT"}], "]"}], "[", 
    RowBox[{"[", "4", "]"}], "]"}], "+", 
   RowBox[{
    RowBox[{"timeSeries", "[", 
     RowBox[{"pars3", ",", "inits1", ",", "maxT"}], "]"}], "[", 
    RowBox[{"[", "5", "]"}], "]"}]}], "//", "Length"}]], "Input",
 CellChangeTimes->{{3.8620809788064537`*^9, 3.862080988397129*^9}}],

Cell[BoxData["101"], "Output",
 CellChangeTimes->{{3.862080971733346*^9, 3.862080989944428*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"Partition", "[", 
       RowBox[{
        RowBox[{"Riffle", "[", "\[IndentingNewLine]", 
         RowBox[{
          FractionBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"timeSeries", "[", 
               RowBox[{"pars1", ",", "inits1", ",", "maxT"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "+", 
             RowBox[{
              RowBox[{"timeSeries", "[", 
               RowBox[{"pars1", ",", "inits1", ",", "maxT"}], "]"}], "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "2"], ",", 
          FractionBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"timeSeries", "[", 
               RowBox[{"pars1", ",", "inits1", ",", "maxT"}], "]"}], "[", 
              RowBox[{"[", "4", "]"}], "]"}], "+", 
             RowBox[{
              RowBox[{"timeSeries", "[", 
               RowBox[{"pars1", ",", "inits1", ",", "maxT"}], "]"}], "[", 
              RowBox[{"[", "5", "]"}], "]"}]}], ")"}], "2"]}], "]"}], ",", 
        "2"}], "]"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", " ", "1"}], ",", 
      RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(p\), \(H\)]\)\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(p\), \(P\)]\)\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", " ", "Red"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"Partition", "[", 
       RowBox[{
        RowBox[{"Riffle", "[", "\[IndentingNewLine]", 
         RowBox[{
          FractionBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"timeSeries", "[", 
               RowBox[{"pars2", ",", "inits1", ",", "maxT"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "+", 
             RowBox[{
              RowBox[{"timeSeries", "[", 
               RowBox[{"pars2", ",", "inits1", ",", "maxT"}], "]"}], "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "2"], ",", 
          FractionBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"timeSeries", "[", 
               RowBox[{"pars2", ",", "inits1", ",", "maxT"}], "]"}], "[", 
              RowBox[{"[", "4", "]"}], "]"}], "+", 
             RowBox[{
              RowBox[{"timeSeries", "[", 
               RowBox[{"pars2", ",", "inits1", ",", "maxT"}], "]"}], "[", 
              RowBox[{"[", "5", "]"}], "]"}]}], ")"}], "2"]}], "]"}], ",", 
        "2"}], "]"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", " ", "1"}], ",", 
      RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(p\), \(H\)]\)\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(p\), \(P\)]\)\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", " ", "Blue"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"Partition", "[", 
       RowBox[{
        RowBox[{"Riffle", "[", "\[IndentingNewLine]", 
         RowBox[{
          FractionBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"timeSeries", "[", 
               RowBox[{"pars3", ",", "inits1", ",", "maxT"}], "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "+", 
             RowBox[{
              RowBox[{"timeSeries", "[", 
               RowBox[{"pars3", ",", "inits1", ",", "maxT"}], "]"}], "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "2"], ",", 
          FractionBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"timeSeries", "[", 
               RowBox[{"pars3", ",", "inits1", ",", "maxT"}], "]"}], "[", 
              RowBox[{"[", "4", "]"}], "]"}], "+", 
             RowBox[{
              RowBox[{"timeSeries", "[", 
               RowBox[{"pars3", ",", "inits1", ",", "maxT"}], "]"}], "[", 
              RowBox[{"[", "5", "]"}], "]"}]}], ")"}], "2"]}], "]"}], ",", 
        "2"}], "]"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", " ", "1"}], ",", 
      RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(p\), \(H\)]\)\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(p\), \(P\)]\)\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", " ", "Orange"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8614689520545397`*^9, 3.861469129542404*^9}, {
  3.8614691646165037`*^9, 3.8614691928877497`*^9}, {3.8614692877272577`*^9, 
  3.861469308553939*^9}, {3.8620794352819757`*^9, 3.862079497678587*^9}, {
  3.862079586189502*^9, 3.862079586482669*^9}, {3.862079815928833*^9, 
  3.862079830021433*^9}, {3.8620801972959146`*^9, 3.8620802343447027`*^9}, {
  3.862080306023458*^9, 3.862080343697091*^9}, {3.862080648900741*^9, 
  3.8620808011475554`*^9}, {3.862080924707972*^9, 3.8620809604283037`*^9}, {
  3.862081016907536*^9, 3.862081091592527*^9}, {3.8620811445007877`*^9, 
  3.862081224791913*^9}, {3.862081385049429*^9, 3.862081417286996*^9}, {
  3.8620814586064243`*^9, 3.8620814814043007`*^9}, {3.862081584772107*^9, 
  3.86208158512438*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[1, 0, 0], PointSize[0.008333333333333333], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1: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
xRA8jJ9l3nUgOLl331luKeHLhjuW+jcukJwSEr/stD/5/YFn9XxjMhck8m8t
iSfX7081aRyncCbrdX9rNuGHOY/XLvK9OzJKq42+UfC9QaMtIrnmx7XQ/j10
CoXnAj16ybxLvWLloj5MfON4P98o4Re7yWvv6mmCP+HSrGPEF8WKT3hFcrHg
R4/KUSF+gSOm1/iEj4XvOnrqH0hOdOWhZY7ys5AhrK7dQuaPpYa4XCgvC25c
TG5V4r8E70iLesxRaA/QuHIogomvxr6xGRNEpxYZeloSX74pZ6+obh85h+2+
A/MsyPPD2GHdSnJh6AcLdz3S5xMeyRolRD/muM7IqxDfcrhrjjeF+Mte4duX
NpC8Ifm0i+8Rhfz112/eFCH552u96RMy/5Zop+ekzmdi8f4XwsuNiE/ln4e9
RFfPV/zH6Sb9fv7sbY7BNAOaI/0x7iSHNvidDhOZZGBQSZoRQXJd6ftTF54Q
HOyTKzF7Q+aKRrr7AQaZE65zymISxI+ZGbjmDPAxoS9rrPF7FfFzJ76ZvlxO
fm/f3K/UxoAIn8uaESnCLxtvw9JIBiL/RNo8ITx7FW+87jHB655FJzouEn6W
0CQLvBUY0LrAm7iQ8O+AwoDq+Tk6zrHL0tTJ/Lxw2kmX1UrH+QnX/6KeE902
MEhNz6ZjTTXNoYjktKztMXTjWDoqllstV+km/UlfI60XTEeVWZB2JfHn9q1V
Pyk/OsyciqU3k+88frA8Qj+AjrsNgbneMsQHV4VJZIfSEVWU3xNC9HhIaEPI
4ld00JKa0lYS373NbJP1zhI6Os+ekmolfdzkOv86p5cO9YylO8IIPuvfnftc
JMyA2q+YZyJOxHep7L6y9zAD3vcFSzb8R/LF1vO7vvgwoD/6+UZoIMHviNSh
0K8MXBq1+rI9lOBckovTKMhE/ZXal7QIgoMrL5c9MWai8b59olMM8W0/1kY3
Ed1NXtxmzyC6KyLJne5KfFHZVPZhQYL7zcvVPLYSfdReaGM2Qe7/uKn9XzLh
geex+LXhkWR9X9U7EW4ULBf7b50h67ldsjx1njxn9PR17JZ7FN6ZFHtfKSP+
v6D9hS7Z713v90skBwlPDnywcnIkPBm9tpt7EQsCo46Z1ZcIzySHfQPlWZi/
7+lZP5Jjjn1/7bdfi4Vjyt41LfuIv7S/71l2moW5J/L7J7dSsIpKysqxZCFH
Mk5InvgiyWGeqG/OLGjUHvicRnL720SR8jIPFup9OM7J5Pw4fGUFnrdZaB7Z
7fqVzB8b2arAzpssDJnlfdUOYeJTcKlxkz0LjZpe2pUEL+6ub6udzVnEV35z
pjRJnXpdl36MBaXy2N2SYkwY79okpqHMguK5nV0rfjMgcGzcqGs1CxZu0b2H
uhj49SklctEU8cMn7m3bRnT91t5LN1QaSI6tCO7VSCI+6HC5f/trojMbr9W2
hzNQILFPxY34z3qmc4R+IAOw+LEoleS1ufDv1wfuMHCypzJRnPjg0oubC5tv
MxBY/vdtfzMTFhsuS24n1+0jD3ZW2zNxW27k04IABnrr7gUbL2biydYj3049
YUDcJObOHNHnRtEhk+nXDPyVZShtOcbAjzfiocWfGMjyHZ4+/IsO87vzJKxp
DOKD89ReJdARfDDnR8ws8WHVrea+p+noPz6t/5Pwj03v1Fuwgo6X5dfFv+sy
sYQ1ZbWXRsPqxfevCrkxsc0w7r5AKg2vq3ZtySM5v1EuQnvbfRomn5gdPUby
6KK2pQx9Zxr2CD9tCCV+wlot/W6PFQ3jK82fl5O8/SZwlHuvDQ1rOJ6WQ4Q/
vt59Nrc9aMgx/DyVQHBobp0rm/CUhnt1HqZhJBfY82r3uxeT9a18xC55Er9y
8Rlvyi/y/P0Br4IwMg+8tn1/o0yHpypP/RHS9+afDaofvek4VcTlVZxL/KbC
e16BDjoYM8JO7eUklxQlWrmpMiCf5jP/ZDMFzcLdL9vjGDC8/H3LJNH5w3yX
LapJf8Vknxk95ZBzTPiu2nqH5IIu+0PL+8n83CO98hzx45R7R/kxUleZ5Nh2
qBBf6fdup2YP0VG50MbFRE8Pu1+s7WEQnd1c3mBN/JFT6KNJnRbiswZWhS4d
oPC6TUXav4JCweYytQ2SLCjLbs0oIvutYnglNRmwEH9u/I74K1JXrq0y9mFh
186aK1QIyfnZYm5/37Ew6Vhkr0NyzGX1L4zVTSxIOlJ8SWTeaSjGGa/9wYLx
g9WcE8TP3mJadt1dyIayuzNXgtz//r3TgW98LRvZ8vOO/yW5z8hVpW++LBvt
rszhEHJ+icsqXobKs/E18lsvO4qJf61V822l2fg8mXm+gviv518fiQStZCOF
M7ZWjMyTDf/0Uma52XghEtOfPcSA0dITOwd6CL8Lz0XaZBOfo+WnFVLCwiBt
4YoFdxkwlmPIHY9gwcj3zqWjxgxY291RjrnKwp4jM9+GFYkv+ZmUJLidhdg5
huA9IQbOzapMH/lF/CPHL/f9BB0zB6yd1hA/GhKQ96WXokNfp2zlGQfSf51+
A+9mOu4/j/GcJvmqeKNuV10dHYF6/GKDX5nolIoJ+dtIR8T53V/ek7z+Y3va
MVEGHc+EX/3n+JKBCzcf94h+p2N7xdC9Q6sY2HGD3d28iPg2jvhm3Yd0bG5P
7py3leSMoO6X/kvoELtdvebAacKn+cvV+sJpWHrPrHeVPwOnHoQFb99Eg9Lv
gsX9hQx8sfn3greqC4OPeUb4yPxsHU2+Xu/ahfy8sqJ3ZD4H3jnU06TUhVKz
tG0LPEie1HLbupanC/MGvfbsIPPKRZCT4Ul1ImDae3k04dPbQgefhPpOcNmy
9QU3Uoi+cpv2q7ET1wO3Bl87SvL18CfdzL5OiNyh8yuTvlSXi1h2LunCFZdL
OwcIX3alrZ9QOdyFNHuWNy/po+fx7QEmYV2okNkvuojwwVk999/DsS7w5vx6
cHecQjadEhw2peFxefDreQtZeE8FOKi30XD46SOhdQS300retovN6Gh2WTvt
uoPouP/+70nknK4E1KQUaxLdjHUQkggj8/3s3Nx7HRamjLfO7dvNBOv46QhJ
fRYca18X5RL/4D6Ry88k9TETzUhvkodaf3+OoumxwM9YKl5J5o9ncNqflQdY
OBSzkYs1SUGG29Uhhuj09fJqE0/y3tXcn6mQDSw8fnHc8EIUC1xTQW7SS1gI
eP7e/yTBY+rpCyIRPylwxcsfUt/ERt9QnPE+wse8AefENZZsLFk7EnKH5JpI
awcVgVhS5900KQ2mcHvKI3DvNzaM52bF/IkeGfB1JiwbY+PhA2v7oxoUFsxt
q58R6EZv+APDl8T/jV/YsyJwdTeu0NsrNIi/MzjzIea6eDdePe0ZfEf083lu
o4f7qm6YO/41qV7PhN/aX2Nh/N2Q39S+prGa6FJJnmnpIBvJ/e+mJtwZ0DEJ
4ewsZYP9y8vTYgvB0xG7JIUwNjzW7Zk42ENH6Q+rY+LGbKS/lNVMf0F8jpuw
T7QwGzxKla2vreiQ2iK47EoZC5ZyimlrVOlwNlk0cdmBBZHzwgY0ITrq7dz/
vVvBwmHXcxIJ32momlRJcXtPcHTYoO4fnYZ9iz0qpYkut/NkXbdooUHE3kPT
sJbg9Op426p2Gqjuif3KxOeNtcR8Ve2lQWt2u4/UZgaax36mF/yjoT3it+Tx
83RY+MdaWW+gI0BqYzcjgoaWESMvjgHxUY/aTtXSu+BbGfZf/AM60vO1uTnb
unCpmL9+pJ7cPxYU/fJRJwz5R05NiTEQ5OT4VJevE4zFOwLL7BmIXnuwrzyo
Ay7VF7m0vzHAY65zonBjB5pEtXV1NjNxNiXc1JveDu6vx/mCHjLxJ9ng5dak
dlwRTF+UPcmE5P1mhycP2pF/18MicxvJ7X9zzx273462kW9lK0h+uZT2TDE7
oR0/L6y9WU1y9bagyCOjTe1wFL2SIF5F8LFJaF/Hug5oqcL75G/iq9KWtIj4
dICyD8zNlSN9dRF7/P1fB46dpiJenmBhXmyOtNXjTtgPcwKdXIkvyv1kLoIu
pF/4ahtMdPFM9Z4pqbkuWHK5LLZ5z8K653+4jepouD7p4RFWxYKVdfKrf2l0
hHHbnY/tZOHVQ+qrQAzJj7s3Ce3hsEDP6Xg7G0py7Zv5zlv7WDgSKNK8lPhS
HoUvXqe6Cb8CT+w+8JXM5d+Lj75qZyHXVaxKlPgx9Xe+zxTLWbA7OhUcUcDC
jsyf38XTWHBusXKlbWMjUUtpYUYICz98D36XimFDw+tC1wEbFvbG1zg3c3eD
4jGW1CXvUb1de/Pe2W5EKZff1RFmoWhBYeWyt91gxEs/pDEptJ2OeGo11o0f
cXI6KW8onPx1bV2xDAc/9uRz7EjeG4+zz7c9xoGT1+ldQ9spiGea3Bmz5KBZ
19O7s4+JG99+abOdOVjN5f7gkTXJQyZBf+ccODjjeysqZYQBqd68ltVmHGiv
phxojgw8llbkiIODcJeNea1/6DAxs5BcI8TB2PNHvNr36Hh4UatHvb4bG1jP
ymoliG/31b9BeRM+u9YL/SsiviZXpTVUrht/VKVXGlyhofRo1u91n9gYUt1/
d9MaGu78XDXwWIcN+6wlr750duHe8P3zx7+Rc3zx3mNXUhfE6/0cfpG+FMr8
5LP268JfMbk/LkRnHust6Fvt1IXeP1vF50mQ+ZXc/aHkOuGB7CPBH0JMRCSV
HHp3qwvTxgKzr1l0/DqkosCK7AIt4+7Ojbk0+EgOxcmXd+G026EfJyO6IDMU
1i/ES8OoxLkD7/06sdq8X6nvOA0adfY7bPw7MFl7q/xrEvFhhvcuC8e2Q+/t
293BS+lorFU6nFnThl971z38SXzTePNAT8nqNriZfKv3/Ecn8ybntLpXK4yf
Pht+7MuANnN+ykuBVpTI8724tZQJvcVylEx6C5wZhaYWJG8NeDWWJri1INDk
QU/WGvJdeRJUhXkL9HRt03VI/nFc5acifr0FQ40yX24SX2TtOKDHE9sCu0kD
hhbJ0Ue9RI9kj7UgPVmv840GCyUb5bsOW7RiQ1yJRqYXCylKOX8C/rRioq56
8loxyc2LOoOH3reBMdWtODzDwlmDsE6bh+3wGC93ObWFDaMg56HrgR0wHtHk
6TRho8fuoVx8fCfOVokd+eRJzk2JtrOzoQvso2veXYxmo0JoWdh6UTreLdi6
RTWNDY7c8aTXDsSndx3sa8tj49xHVXbv//6/wrX8bVP5bLivud7VT3JW53Nl
bvtMNnYcv94dYMhC8MeVD/fFs6GTGP/vNR95j6FgS4gvG3/TRi5rpLPxPfP5
yjcXiM/S3BPuf6Ib+QU3TX9tZyNa5ssr0b5uMEdeCQr8ZUFh77DyDzsOVGfa
+x58ZEHt3aNitz4Odq/e5nvcncy9arFnrsd7YFx5LUFBkQWPnWnrl7zqgXWI
2s3VLOK3L7SWxw724KX6gfUryTxTqmteXCjWCxY4yrtUKQjyCYWvVO8FTW3d
DXHiNyYqCo/YHe7F7vUNZ33J+aqtF+r039cLtYyA2h6SwyXNTgXKyfVicOc3
7vvv6fi44kPHspkeMC7ZFucvpuNIx9c7y3N6MC95u+F7O+KDalpzFlzsgUL5
cpnkji6MHOF5/G+SA9lIqdoC/S4UHsy9qn6Tg5DKK85jLZ3IFOXWtOjvhvgp
yT2brnXibzuPbejBbhRs3FMrt7wT2Ser++1D2VC98EXWoboD2y3v5x9qYMG6
NYV9MroDt8SVY6Z5ydznO1fc9F8Hnm299GRakeiKsP3vFPcOqObdjdLOZIC9
SPekBpkblhbmItLz6Jjftd8v7H0Hsp+dpjLPdsH78t0c458daI7KGcws64CY
cdQopd0JC099JYHDZF5wNgZvzOhEz+ZP2z16WzE6pafI2tKF9Rqc7vBXLXhW
F7fLvrALuX8qN7693wydxXZ7eYiPeuRo3/PjaROCQ+/XP5xPh/xs/e5P1Y2o
STyc0feJjlcvyryLNzXC/NMb5xwv4oeby39rZjZAfcVi1TAdJvKn83QuXGrA
gdOLlecWUVi6TvTpXo0GqM1wcbKcKGxqWuEgvb8B4knvDqzvovB3ZfOmR44N
mHZfH/GH+DG7JnuP/TUNUPzrNz39ggWz4XdmsoaNWB3w8WEjDxveWdfFlQWa
cEUg7vuhs2xs9f3me3SwCTZ8VhVihA9C05N9rN/NyC+nzZP9zQbX5O8Labtb
cXR4Jme/ejfaFES+mya24X37iypr5254hh6pE9vTAdNgAeek592Iu/Y623ay
Ez/yz9ls+UJ09rN833A9DUGq/XY67d0ojv740qaEgQNbWwLuUN1QKrtf99yM
QseCHYFeXd2YdVF0srnIQu/rJT1Kld34uOlxksJ5NsL9Tf3zkroRkLDuVCHh
k/PZZp3Lt7tR9lveM1iFg12JEztLDnTDn3NLc3hRDyb54hsCubpx8bNv6LLq
HhCzeyEug40nRy8Kb3LpRbr5u9MLiF5EbborrbSgD6LGydxDU0TXd5ekN/n2
QfWJ4y3PhyzEhPgeXjfQh46c205C61mQv/tig6VyP9S/9cRMviO+SVNj7yrb
fsx+dJl9QnJizzOZ754P+mH8/eyDFE8mhvU3rPr6tB9KYl9e73/AQNGZ/67W
3+/HSQu9BXUxRJ9/lS/QtOoHD621WS6LBg+LVa422/rh9S9Bc0N9F5TrWwId
6X244iapEzbVCf0UWVUdxz6IH+2Zt1uhE176LwsGh3tRrRg5VWnfgSj+Nea3
9Xohdqt2llPejtJ1ka6xIT3gGg3pX6jUjtRnN0+9yeNgovfKrbCcNlRW7Cv/
V9GN15+K/eIM2xBsff+dwWc21ij52AksbsM6naDtH1+xwPD9bXiM3Yqz/tWl
2SSn04OpCL+WVjxoSDj4lORrSuS/BUf7WpG6TWr9MS0a3DTqRPJXtcEw9qxg
P+FZ7fuoqAtX2vAtJCnD63MbBEpUR/Ua26Dhkrjt34cWNBYqaoueaYezlAPd
uaMJnYYX2n/8aUfArFQj3/ZGzGqNaKd/6ECcuNE++U/12K284jzbtxPKlcFb
TQXqcCZcTJdzpQsvRS/U1M9WQ5bbIWrAmIZ3LjMqCWe+weBozoMFxnRo5Lxn
bV5ThSv6PYKHLzIwmuJ1eq1qJXL1XR89c2DiIx+PmmhGBS78pD7+0aKQ7JTf
p+FTAQXWTckXNRRGHzdLXUytwKE2d+09p1k48fLCF2WlSpR45V1XZ5Cc/uHv
63Orq8BwNdi+/iIbk0tjv+02+4aQFdtPXWWw8b5o6MOL5TW4d+LFhxDDbjwb
X1B0SqUONXt+um0o6caC++ZePEP1aNwVL5xBfNPDvzcT7rs3QvmpT1TdbQ6s
WpRmfus2Y+6nw0/5Sg6CuxbdCD7fiob2ppO3+Xtgd6NMdlVqO2ye5YmnKvUg
xUciW3NHF2zVuXMqT/bg0bkzPWdJLl7dmLVwtVkPNAo+HpjUp+Aa/UFQ9mwP
WjM6AmeILy39mLG+9lAPfnzXvmO/rBup9bUleyR7cGql+xHDcxyIzf2OHOjn
IHb55hGNRz3w11gbEPWcA54nkUrfX/fC+2OK4HFdDqTdgoLsYvuIP2Pz7iZz
j9bnNvDRqR8LG82j0ly6odmfsuum/AB2cVu/2/CHjRHLuRm1jwNYx+gyEnNh
g394rEVeZRB3LX8Fyg6wQPs5Fu73ZBBpMglenadY6Jw4T7PuGoTrpWU+TUUU
Dli4W99fOIS3O9z9UqUolAlMmottGEKAzET/UkEmCh/NnSmUH8Kei0lhM410
2Fyj7liuHoLifAnpIzE0+D5aP3zjxyBGFyy232zXhXLp4GsPPwwiXviu+9fD
nQiKvxqZd2EQm1Mz/9ul2AFDH3rmxdEBKCSkuITJtcMqxtTP8/wAJCqn9L5v
b4Pulnzlmrf9yJZO/2pyshVta0w0lFr7sK6ky6L6fgs29F36atDeC66/628r
sZpxlvNmm2YmmefycQEmp5oR8cpG9MRlDjQfRheUE53e5L/lcesv4mO0Cm0y
XjRBeSwqx/EaC8v93p+t9moCb/PU61Ti0+79aL2o6NeEE/psrojLNNyjHzyp
kdEEo7JHOw/s7UDr5RUyT3iawfnv8YkpzVbYTGjzrr7ZjOJ3P8w/+zThvVJY
/DzhFvB6PEiYXtYAp6Fch8W1LViifXSpMbsG8Yfqxf1et+KLTli0vVYV6CuW
bLv5rA1n49LWMfaU4/b+uSdlJIcly3PxPP1citB/SyaVyDwvLm4++KW0BLwv
xO/f5uqC+U7Gqwblz4gc9jE22E+D5e3dg9ULi+GioHj96iM6Bh2H7HbbfMS9
LQeLr/Ux4BcmWl5xsQilgtzZC9dTcPOiKRkNFyK9f/0toToKDzekX+6cX4RB
h8cqMrdYCJk79upUdhGmQ6wfZsiyYXv10JU//z6CKk45LFHDhvmEhkj2zWJU
RZdvZth2Y+GDk7YTjZ/BFDyrbD6fg/Q3w+OvI7/AUdpLViqCg5Wb7WorGF9R
ws2b+mRdDx5nhReGfKhAYgPfxM7IHsi6Z+awt1cTn2fj5MTfi7m4278rdtRj
eCboVbVFL4KS2n9uS21E46e4dZ8ze8EbH2DhTnDgvO25cf9oL5riN1v3lLQj
RCD2Ic/qPhy+vAQ9RE8PJidxhLb04flXTseJcSai1HJHrpJawLNG7F4zOX+H
1M3V5P4I62Nx/73sRnyH/EH7sV4IBiUlZJ8m81BkScivjF4k7u1k9LB6kbDf
19T0Yi/sCtcZc/b0I0HsXHj/XA9op1vH3S8NQPjgd2uRoB7cvqWkYnhmEEEn
ddUcF5I5IlS/8inhE3HiUi88OFAq8eqPLh8C7/ZpmaOsbqw2fB758/Awlnod
KV+5txuuwbKNle+GQfsS7poYwobcov1hj34Pw+uu/KUYOgvaiU+PcXaMYHUY
5fdchoXkjBUtt01GwBP747qBNYVCbNx50H4EivqLm16eYaI0+rGUsdsItoce
O+pM0aF8yWl8ueMIBG2vntCyokHktID/snMj4O8Nur11uhNR9cob5VVH4Nv/
TuBISAd2Ku/+bsA9ArV229uhZB6eTF4w9fLDMNjXX3yZJfOLNiDbI3tiGI8F
TN87v2sB4462f0PtEAr0344y/Jvx+53IzlCiHy6JmsyN7k3YvEcoOuD0ICI4
k8zj/o3InYn/F2U4gNUJsUKmxNc9jlY95S/aD6fp80cvzNWDx7RBziehF5t3
ih27YlePc8ehtn+cA4bmrJQOXz1eFk269Szohr7i68jZe3Ww2aRlSpsl+f6m
DW/ixTrUPt+x8ednOnK/vV5xNaQOqmWlkRnhHaA5JRx4sKgeXEs9//G8acF8
mY1mFTfr4bbxUuRn0UYkuv6VHF3agFgRrfwdPLXw3mVz0Ly2AWlvli34U1GB
sjX6w+vTGqFikxb04XYprMQDv02nNaH6o43kPIHPkM1qvJVY0wytkzEXk0IL
8X6eYNEwbytiRa9VHz2Yi+6GNy/iTrbhvIjU+aSx92jz8VsQldUOnoshy6XM
M1Fqn5FRtKETx+9uMnVwSYdhUrbtSEIXpOZSfDetS0WVieeahZvp8OF3qotU
eIsj0q5qP/IYuLTT/8ba38lwnuRdoSVLgTrLq2TgnIyPvKM7G8YoXB7cdeq/
sGQoxlx8IJbLwlZRyW6+Mylo/k4NPr/NRtCety05zW8R65J3aECjG7+rV/+r
X5sG8Uuy5/1+d6OwQ+uJ6aYMsE8N9K9O46D0iYe28pksGEvySOia9kCsrmSt
1r5sbOUbP18724M3uavcFi3JhwofY77Rk148HrxX0/D7I1SLZLgeSfZh/LK0
l8urErTbCs9IkbkXNc9jif+bMnBdZxjGCfbj2K5y6fVJ36ClpREUYN2PH34X
Il3Z9TB28kg7nd0P58SqEknvZgiI7zjzcLQfkr8MVu173Y5RKxWxrmVkTqpE
Jf9VpEPv/kE3FYkBcPnbdsX9In3xsItfvXIANTk9vaG63ZiQVuj3nuyH6NLq
10K3erD8krHuos/9yJX385S274PlsjOtn1z6YcS7/LLV2gEs/9N9mpvgNHWL
yd9kj0FI/7H0Mk3qg+E7m1PrwocQDZ8Hlzf2YU2V8Cpe52EIdNGt06J6YfRL
TYcpMQI+gUGjfKIfzZoBqRkvRuD3IfPyjFEPeAs2hkoIjCLVpmpn60sOqI6n
PVsNR8F1d35D9gDJA8aWl888GMWmikf/eOS6IZboOV6eQ+436P8qR3y/WWDs
Fr/WUURQ4z8jQlhILahbWTo0Cr8nf17Uf6Ig2zlfe3Z6FHb3JedFdTLx6Ubg
d9F/o3A8oPtAdBcDBukFv73nRqFzbNHQilAaPAX2Dm2aGsVVHZePzhOdcDvk
IhLUPwpVs1eL510gc/FW89PohlGUCX5osWtuw+b1G06kp4/C+sDJS/tPt8Jk
NlDmrM8olMaFDg0MNGNp3VYD5UOjUGBk+SQHNyFdUJYePjECS4WldgXajeDZ
XRikHTACoQKNlYdXNaBdPilZdWYYeY0Spxb9q0NvV02Ryd5hJDheq73PVws2
+4xn0+EhGKXE05dpV2N4+1LdeUKD8P4Vm7Kksgrnc6o2p/j2Y/Qs+5fRo0r8
fciz5umLXvw8pOJCJVaAnZ9jrn6dg0+negr2ClZgVHrvm7BpFmaysk53V5Sj
/WuqJKeQgYoletwWjHJY/BPdO0x08Y9gufegXgXumVY7ORQ0Q/DM9R0KyysR
eGFYQMm1HvE/ffw7N1ZB3fT1/dkvlUiNW84xC/4G/qMfV9/5+wUh9WIfEnfX
QOTv69Yzo4QPVP/HSJk6zEhcKtHhyQXfrLiq1qt6LA6vUbCqyAR/qELE/eYG
JCvblI8UvoNuavPyrWubsGG9kLpC72uEXls5WunajG7qvNi8By+QashVP7+/
BWoD1c/H9ONR1mhyLsCqDWJaPue2tERD5+MzvfaZduSJ8qtt0YvAy3SZOKvw
Tnx3Usx/WPgEFvlVw4/UaYhQUC2U+RGGoIG/ex4M0BEh+qTErzIU0cZvn/lG
MZGuFZB3QSEUtcozFbqvKIg4T1uJCYVCSvNBrJMnC8WdPSuyrodCTjto9QlD
NlbrdCY4nQrD2pjgIX/ZbkQsecHd1vAY85ttt9T87MZ06JK8qzxPofHtycqh
fA7uvp5hzghHQez4aZkv7j0wVx876qcdi6J8Jd1jO4gfiOIzu/f3OZZHMehR
VC9oM30vHzUnIuOwsGgFyaW539fOu8ibgoOatqL/xPtRqP/rwRR3BiafZ121
SulHlk/tFC33AxxTzANlFAbg92t3tfOiQkibbC1UixtAwV9qzRvVEqj2zmwP
njcIT/PzLgXvy1Hy1qmDTubYNpuaKr70Wox7Pr5bFjWIYOMfnm/jm+A3URnb
VTUIN0ouf+2LdmxYfHCwsXcQHSentxbJM6CR15tUNDKIA4ffjA0Ps7Ah7ulT
deYg1j1oNmp/w0FfYHje04JBlET+VeMS70NZJa3znc8gtF5nvPHbNoASh7Xz
SlUHYf8z4XxqxyBSJZfo6NIGIPtQOnat9DBem8ikZVwfgIWm/cTImhFkrpiT
0Z7oh1nuOkuxxhGE8P913HWtH9tOmnkoGI9iZ3XxC9+WPmzrSBSh8kaRXSNb
LaPUh8wjq1SFuMdIrl3m8c+/FzwCuZTArjEYWdlqzjT0YAk9ji1qOkby6LkZ
XuEeONysMBN0HUPI2X8WMnocXHDX4Aq5Pwbf8efjDp7dsG8I4A6MGsMtzhS1
KoUNvvDNuUcSx5B7eO9akyaiV513FxW8HUNUaDknYJqCx8otam4ZY4jtkf3H
L0ZB0lJDnpU1hkEFX3knTwasi5cGyrwfw+Z5ikzBchou1paa6GSOIcGVJRgh
0gVOy7XLm1LH8LJqc+wHqw4o2QpRDq/HoHqXUcSoaIPSIi73xzFjyC9VcDJV
akXwXqMHhQ/HsDZb0UA9tRllWu1SGbfG0HovqfG0ahMOPvFzTTMfw7naxhe6
hI/u64dcdmIM+p5Jjt4+9ThZbPk4ackYllz6+N+t4FqcH3Ww5a0ehUn42NLj
+6ohp6KZt9N+FAK/JO6UrK+CX21SsO/3ESSLLnLU2lEBixH1V4L7R6DpXaj4
9EYZulZtdrphOIxopyHG2rFSHOB+NFuzfAgJy85p9iZ8wfFP8t/Nrg1gc+NJ
0conJdDxump260QfXlyzXSdc8xm9ht8cWso40OoqmP5x9DMeDit7HOpm4dbI
67Z7Yp+hN7tu/8sUOgQM17lOq30G/9eOo3Pv23BRxfZq8ZvPeLcqfvmYPvHf
+3fbjZiXYMn1U9oX73/DnEubUpPFF9SeCQjiP1EK1RGpSqGkUiTvFhnPTyhC
MZUqe2lTGf78+lOm5P8BC0SC3m3ilCM9WqXg+uk0bK412Xi3sRIn2XYVajOv
YPaf3JD6j2+46B9nL8P/HL6Z+UVPNGsxapaoqxoeCf6FJlGB5+qhHPv8cFFQ
GGJ/R+g9T2vAsnW5iur2wXApMy09tKIJSvXxGp3bAmCd/sNr0YNmNAvkGgwl
+kCj/v6jEyta0RsjeKjW6A56VybePfC2DXWL9d9VdXigdsp0X9vxDjAUbmiO
mrjBef5txbLZTkgfoxXept1AV7qwS0wWDam5GeIym5zhsjjYs8SOAcE/a1XT
1jkhKzt8veZKCq2HZtZ4vnREzzO7nIXEZ9xo6X7CyXBEyB3VTxcbWfDZqafy
R9sJ2jI7JkffsrFDVvZAqaMzlp56qGHj042VFnGpL3VcYKawfzDJkINMydaS
a1NuUGkdrQ2T6IHzorQ9Zh9uQSvZo0upm+SpDmPzoNE7mJo//Dc3thfZ25+N
vXH1xaB7zQ5bgoPD0ov59xsEInxZ1Oei333g3+kkuZM3BIN6B9x2RPXjsbmw
rvG7x2Drfpq1JLpSFTVdeWtHNFodlq5cnD8A44NzU87bElDxVrq6dvcgVCT1
JyOS3uCZQcN/RqmD+LG+uqOnLx2ZymWSKquGEH77R/NZoxz8U+SNYjoNIX/U
aPci6WLkPjg7/ODLEKhryn2DymXwe3SCdphvGG9a2b+u7qqF4FrF+j6VYZj5
5y61E2+Ganfkqu1nhrFySZttEE8ntn8u6F16bRi7zJft3KxCYXVZihnNahjb
+OR85my6UWZ7a8jHaBhr+CX435zvxV4Lg5SI7cM4w+lifqf1473U83vr/w4h
mxOzN7R1EPNMLhga5xDfcM1px5+Tw8jlH+C1sxiC8sn9T7uvjMBQSejAVd4h
hAYs3ae7aRTexxM3LYsYhMjyGvPaTKKPBy7q8UsOQkrv+q7IZWPYYTWaWPBs
AJmGX+TNDcZguOto2cMlA9inkqug6DUG2YK2PR03+sFlArmDz4me9lYs+NnY
By35MomBnDFMsH2rD8mSev2zKL6KMZSJfXhgaN+LqgPtS580jWFWm3YxN6MH
d6by5Ma7xjB+ULN/yxAH9V+OS/GwxyB67UvxI3EOml8biNv0jkG67NlC1pFu
nMHKp88GiJ56RPCpOLAxcmveSubQGKpEJWcrHrNw/Ged15WRMYQu9simPlBQ
4PfpNhgdAyVQfj4lhQkO7eqrfFKvWlOwatEwHbR5jgtekNp551mNiG00LFdP
27CI1LSDKvOm3DqRbjaV0js8htUxRw4kVbUj+CrbQpysZ7//igO3XBuen+Be
FtA/Bn7F7LZVIS1Y+b1fb4hD+nc7prZkfjN+RRs/GGOOYarFalnow0bEPQjr
FekYw4E5+8s18g0w2BAYGl83hmMnactH3tQhNPHMOq+SMUxK7Ux5JlsDi/6P
SRvSx6DEMGPkfatCiM3+OLXwMdgeSp6diajA38WFrNMOY2h5sWiwKbgMtZNv
jzuqj4G959CKF+9Ksdxdekh+fBSKCT1eDb9KsGO61q/VaxQWarncCyw/QyRu
RWQgewSDz9SDrPmKCW86vu6bG4azn2P+g7giaHAX8Z8pHEJvbua5iLACLFX9
U1zEM4gVjqtoUqN5ELBmPK0r6sOwfLtBbk4uwu1NHTeOcPC3UeQa70wOXiU+
eymVzsL5z0u9mbk5eBMuci4imIbauJhA3d85GC4cajbnb4XLokd1dgW5+K9U
xFhavx56pR792yfz4GZWtuX3lXLUsm8or0soAOt959CAVTFEeq1HHLKL8JO9
9v6h3Gw4j5gJfFtRjPdTUkdYB9OgU5Myzrz9GZ21sl6vAhIxWrIw0m3ZFwTf
fJ5+tC4GMdxlB0/UleLyczmNlvrHiDipf/V1dhk2RNNE91o9wIvJi0f/lVUg
NrPCsGrZXZT8zJ4//q8Kw9bnmOkpnigsGJCZMqtBqEtEm3SuCzQZl7YYDpDz
+7fun7mcA/4Te/H4l24Dss1PNr6wt8YWym84/EMjol4t6jzdZIGbsccT7yo2
w9rIM3e0wgwdzJcTjgUt0Ejz3nQ5xxQ2e0NFKgzbIHpATkPc9TRcuoqnXv9u
h6MkuFIuGaLUabXxRHInAlQmk+13nMSX0xdnTl2i4dDfM+DO0Ife2tu12usZ
CLA91HT31nFwWKLeG9hMaF0NT5cNOgaz0GFaVAMFdW/hS1duH4PY9EUZNjkn
zZFO4dXHjyOlS07r8QM2DtrP7xMP1MfJw/ZdNle6YR5DWS2bPAGj8okVGmoc
LDH+oxu92BDr9BSdJuf3QPJDb++Tf0Z4vXXWKLG2BxUlqz9zCZviZfIdQc8H
vbhoefsBt7EZFGW+qXfs78NvRb31kSoWOKAmxFT63oegt7XC1yKs8Oi+a/6O
J/1Y6Bo5uDrEHn1XaqOeED0/3qQ0/oZ9A569V8/sLR7AmuP/iYvcuo3BhC+0
9dqDeClycIOzqi/Uh3z5j5YOIuKXdXOSYhDmsxclN6kM4cyn2nmfxsJQJhWn
XfN8CBumAlIVg57hU+4SWx2eYdguE+pe9uIlpCLn+x0xGYbuRSeurfyp6M+P
2Zn8ahga/jJRTqwPyG9bKyQ5OAwr3nb/D18+oWVgmauc9Ah+POqufltVhlen
f3O4T4ygInN5qRlvPRrftZiVOI5gh+3+at2mFmzQLTZx9B+Bx083rmsPaQh4
fyf8aPAIotSdxNKaWfhYvSyYi1xv462Ka1PuwSi/xo8yhxEc1jygXSvdj+Gm
1DVGx0fgK6qSvM11EGpWj12fS47AXZiPW2rHMEodO85F95L5YfqX2mdD/LGC
/ppFCcN42cZ4Of/AKD5G7264ZUDuY5y6YdkyCna348P9f4agV7hQ/KLyGP4P
9QPjZA==
       "]]}}, {}, {}, {{}, {}}}, {{}, {{}, {}, 
     {RGBColor[0, 0, 1], PointSize[0.006944444444444445], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1: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
/A+qUASG
       "]]}}, {}, {}, {{}, {}}}, {{}, {{}, {}, 
     {RGBColor[1, 0.5, 0], PointSize[0.008333333333333333], AbsoluteThickness[
      1.6], LineBox[CompressedData["
1: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
npaZwzO1e8zu4YRT6GjZ4w3b3vom2649HjNOsLf7MbjHUaee3yEPH/nf8ZXt
OCmmxveYTI1dQCRpau/6cKSl5WYFM3vXL1HwSM3g5Bws/uPxywlbdifx0PaP
+3jIxnLa8aD5/379Pm/ff3IEUPjXb56KOBBp7of2TYu77PCd6favQgIMNu3y
JW6nl73N6Hhml7WxUT9dhtH+w3N3/VG3JOmAN1rHhVfP73DykESq3SI677y+
7rDUWoH19xUCfNzXv1NfMZB+I3FDfVCTgnLnfYjDf38+iaB++77k+DSRqWtP
jl1A561nx8mEnXrjr77lGMqiRywNiP0kWZj/rf/QcS0u9wfRx579rI8KQUel
6sO6OHRcunKN5POOn66uO6Hj9fGZwXZ0tP3iVx+Lniey3IVuDOXEuhD7QLSP
EnVeEySgLKCi98usFfWNP15Of1HOi2+6So5F+/vfm7eI71GF5OT4DbZmIZDr
byXRb9WpRI+LZoyDQlEbJ7Eu6FC38XlzpxtsBYojiHy2tmDB7XUFmPSUXyTy
JQ+bK8wjSfDII4eVmGdrcryCF3BeQCt1Yo54/Adnv+dTGBrDneJh/SWUmzkm
mWveAwjx6UYQ83T9KKdP2DAXGGXe0J9AWS99YDZTfQ3JV18I7kLZrOX575mV
TmRev3O8jFjHKcrEZncUIVlDYXTRKAe5Nd4wGHuFpLxScb2JcpvsmfFSXgdE
V63z1SYa38ViUXEGb3UEmf0YZIKyXhJl+s8joshZn8ZXVmjc9LqZDxXfp0OE
KCh/96PPb0vjknPv/imsnqVRuinan8pWCZLCWDVWNyI16y4aV+bTy784FpOx
9Byd7hwE9LkYWw8JXHiKHf1u+H0L7U9pG03y+T4bY03Oa54bRkXONzdoovqB
LNY48OII8pkAF6dxsfEL3Nhf7B9NwkLR8xff/U0bv4lZWhE1tdBEn3dYcoLH
6X7Mf1Exwfg5PDjIi7ZSs5RiinT8SV5p4oHZ1OaPYWQC5qnmD/qB23PQWjnM
43PxGUb68OCGEt0slKZNfLT0scGoKd2stueZBibWtOBsXT2MYfeJ06eDJmDt
14jbOXsVzHzM6OVzt0YhKVLCq4ROHiPkxKeYVIWDzNf8FLNRchgubu/VfuEe
YL/PUwApSphn291NFMZtUGEtMrsvTQejJOLxjuZOPchYU3oNXb6D+UW6Fvg3
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
KNxjDjL+riHlb3v87BuvTZlGzR67dbs6TDY377Et2+8797CdexxRIVH6zndg
j+PIDY7MbwzvsVo2U6+2xf/WK37cu1c/g53aq0/6Wgqtkixn9uLx7JVEturK
7F59F0MfH65Jg4fxf0zBdH7KuhTV238c0HBFiEySAK7/6hVJ21SXq48JULz6
bz1CnUqNNZcAbmO7rM5gW4NtJIBN0C4z+tvkSuBQvT+0Ox+o4jqH2GdR/0tf
3uFrBVdSAv+g/4/u3V1f4dCsOrdCgIgGox1ubZirPYrWCUqRijv1SgTzkd+L
aF785GVcJPKrFg1KDtTf/Asj64mcVu0X04TyIxMKTiInXT/17SI6xk07MhJ9
2mPiHutz4n1e7MrFE+/PLzy7CB09M4s2CojzpwMTSPxus5SuTDUfPU7QtNby
MNF/N7S7L6O+OIzp6iZ+N/4GK/NhZRyNC9WZVGLeTTQZCxW8IsANkafDxD4h
+U22orcsHsq8fnsQ1yuiao2PVXRNQarcPmpiXiast/JkteHgjpdROZGVRyve
6nA0QtSI01ciy1+mNA3geQ9jCZSbxOu22Vf61fTbSxCKobEhHo9jRf7jZep7
sFFMV0U8H85pbcnX6AqEMj5wJl6PR617+JHBE4AznQsgXu8kiXq8Wug+oKt9
70q8n+SaLDnOh2NI3mxPVfM28XsuQY784ErkenicbSHK5Ce5T9C2vkXUnMTZ
fYl57xhy9jrGEzE6RBdM/I5VRSR42CLiBuL1TPdpHRonCi/9LzTLMkid6/MB
JpT36Q3riISzIwHW+6cn0Of14JHiMW6bJew4/6U1evR5prqy1S4/aMcyJ1GF
HEKf9zyFwNzHonxsKLNO2TV0PvTFTn504g/Bpi3HN1WhdeFS4+mRG0/uYfP6
51/kDBLgInOr2ZcjV7GTjJ9EbBoI0LF93u27wEls3A9OxaZsAhyKD8p1ekeD
3WKwdNB9RIBTl72VX9ZNYup6t7MZzqB5IBzFLV9Xi4lJU4vnK8FDRUz9bCNf
BmZGg3vEmRyt/82+iWV0vsAotW2o0P6eha3jfRLm/I4YsrqGstMmM6C4KHSf
r98Qw77NOMd3fgpk6yfE6OdUME+TvR8UWo6DAH5Ry01VFoNpE1xspR2BfNUf
BV3uMhgQss2L+TIAB3/yla6qYTH+z+qdfz7tBIkY7voDfQqYgY3/ONkPt4BC
POahvbYORrz9ka5ARw0Qcj+wZh+0wrS6fftayVAGzKfu2nVRP8V0uW49es9W
BI9fGtM9LYzHmDVa8L3AZELEPcNNqq0vmGYuCerPxm/hi/bR6adyfZjrmR0P
rSkiwJGqOjD86wbmMqUKVJUFADX9M/JBem4sXduJ79P3nkDkUV1JoQ3Afnuj
6ac34AzjyuzC/lLG2I/zjRZ3zKzBm8zyzp1ML2x7ogqLjYAxzEwsLBjpJmNZ
zonk/7XXgZvtiU97paqxpfunPk+1qIDdllycoMYktuzaR93AKlngzSFRX0mm
RZS4Uxq+LklCZc55vKjUKaRlNPia7FlhWFWtWb5KpY4sam7GRBnzwiC+JNIl
3B5BznNHX3RlAdO6oojrV14hiSsCGhRvaICe8pRogmgRMm/txXd3exsxo108
eFO2E8nxNiEp2v6DrIYcnqfyWUVmXRKtPmxPIg5M36OEKLjAm1InugcGEU8R
1dKtrwic9yF03fFrQ4J/H2Ey7zQCc5l0b4m7tUjC83gaRh0v8Hpuk4Z9XYqI
j84e+WCZBMdzftsuKBYgothPwopeFWB7R6nOZvEd8qZP6eucRg8UqDkztHS9
RchUSBTscifgu3Z17hnHBCRxI8fePnAOCg/kD3oXJyPfHMIDvG6jeXVS151i
NgcZ/Um5ad9HgAVRo7QtjWKk9AX90cFlVG9NWjuFjSsRO3/PD4Jonp2yvHQl
e+0nwnfmycorNC/vbLBxSNV0IUX4GnPiOqUQ03NL9dYRJIAn15zYlxg+exRR
9YGARLlc/0Tsa/riJI7N31xFvFOii3bWHzrtuwdUKaDKk5Gw877aw3c6EsME
VWQCG0Q2bhzIu7rGgfZz3Dv6LOMfHT9TIwDOHxp22OtonLBPvBiw/Le4w3Qq
DVW1r2VAT2f3e1fXglqeoUsKIGC26w9hBmYnRMk0wLBvlxuTqDqUxA2gfXmX
QxUZ6CS/mAPvP/9RqrzcetrQHl7+8yeIlsuxKnSD/wMZde7Q
       
       "]]}}, {}, {}, {{}, {}}}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(P\\)]\\)\"", TraditionalForm], 
     None}, {
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(H\\)]\\)\"", TraditionalForm], 
     None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.862081146322818*^9, 3.862081154961773*^9}, {
   3.8620811897819443`*^9, 3.862081225210155*^9}, {3.862081405639654*^9, 
   3.862081431531062*^9}, 3.8620814828993263`*^9, 3.862081585777999*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<~/Desktop/Mideo.lab2/Coevolution/Data \
sets/FIgures/TwoPatch_Discrete_Phase.png\>\"", ",", "g", ",", 
   RowBox[{"ImageResolution", "\[Rule]", " ", "300"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.862079579961355*^9, 3.862079629399541*^9}, {
  3.8620815567475977`*^9, 3.862081557884943*^9}}],

Cell[BoxData["\<\"~/Desktop/Mideo.lab2/Coevolution/Data \
sets/FIgures/TwoPatch_Discrete_Phase.png\"\>"], "Output",
 CellChangeTimes->{3.862081589286663*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Equilibria", "Subsection",
 CellChangeTimes->{{3.8574096507298813`*^9, 3.857409665242929*^9}, {
  3.8583333159890137`*^9, 3.858333318546309*^9}, {3.858346738570636*^9, 
  3.8583467404820147`*^9}},
 ExpressionUUID -> "d5e022f9-042d-42da-bf68-ab11b3c188c3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"equs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"pH2", "[", 
      RowBox[{"1", ",", "t"}], "]"}], ",", 
     RowBox[{"pH2", "[", 
      RowBox[{"2", ",", "t"}], "]"}], ",", 
     RowBox[{"pP2", "[", 
      RowBox[{"1", ",", "t"}], "]"}], ",", 
     RowBox[{"pP2", "[", 
      RowBox[{"2", ",", "t"}], "]"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.85782922289158*^9, 3.857829277676098*^9}, {
   3.857829432520854*^9, 3.857829433795545*^9}, 3.8578307607332363`*^9, {
   3.857833353524515*^9, 3.857833414135724*^9}, {3.8583322983663692`*^9, 
   3.858332324716455*^9}, {3.8583326415226097`*^9, 3.858332651328141*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"equs3", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Simplify", "[", 
       RowBox[{
        RowBox[{"Series", "[", 
         RowBox[{
          RowBox[{"#", "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"mH", "\[Rule]", 
              RowBox[{"\[Epsilon]", " ", "\[Mu]H"}]}], ",", 
             RowBox[{"mP", "\[Rule]", 
              RowBox[{"\[Epsilon]", " ", "\[Mu]P"}]}]}], "}"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Epsilon]", ",", "0", ",", "2"}], "}"}]}], "]"}], ",", 
        RowBox[{"Assumptions", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"S", ">", "0"}], ",", 
           RowBox[{"V", ">", "0"}], ",", 
           RowBox[{"\[Mu]H", ">", "0"}], ",", 
           RowBox[{"\[Mu]P", ">", "0"}], ",", 
           RowBox[{"\[Epsilon]", ">", "0"}]}], "}"}]}]}], "]"}], "&"}], ",", 
     "equs"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.858332981250043*^9, 3.8583331548154573`*^9}, {
  3.858333196295615*^9, 3.858333223962055*^9}, {3.858334409430399*^9, 
  3.858334409507326*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"equi", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"equs3", "==", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"pH", "[", 
        RowBox[{"1", ",", "t"}], "]"}], ",", 
       RowBox[{"pH", "[", 
        RowBox[{"2", ",", "t"}], "]"}], ",", 
       RowBox[{"pP", "[", 
        RowBox[{"1", ",", "t"}], "]"}], ",", 
       RowBox[{"pP", "[", 
        RowBox[{"2", ",", "t"}], "]"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"pH", "[", 
       RowBox[{"1", ",", "t"}], "]"}], ",", 
      RowBox[{"pH", "[", 
       RowBox[{"2", ",", "t"}], "]"}], ",", 
      RowBox[{"pP", "[", 
       RowBox[{"1", ",", "t"}], "]"}], ",", 
      RowBox[{"pP", "[", 
       RowBox[{"2", ",", "t"}], "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8583331619961042`*^9, 3.858333177669509*^9}, {
  3.858333635352109*^9, 3.858333637272093*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pH", "[", 
       RowBox[{"1", ",", "t"}], "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"pH", "[", 
       RowBox[{"2", ",", "t"}], "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"pP", "[", 
       RowBox[{"1", ",", "t"}], "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"pP", "[", 
       RowBox[{"2", ",", "t"}], "]"}], "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pH", "[", 
       RowBox[{"1", ",", "t"}], "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"pH", "[", 
       RowBox[{"2", ",", "t"}], "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"pP", "[", 
       RowBox[{"1", ",", "t"}], "]"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"pP", "[", 
       RowBox[{"2", ",", "t"}], "]"}], "\[Rule]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pH", "[", 
       RowBox[{"1", ",", "t"}], "]"}], "\[Rule]", 
      FractionBox["1", "2"]}], ",", 
     RowBox[{
      RowBox[{"pH", "[", 
       RowBox[{"2", ",", "t"}], "]"}], "\[Rule]", 
      FractionBox["1", "2"]}], ",", 
     RowBox[{
      RowBox[{"pP", "[", 
       RowBox[{"1", ",", "t"}], "]"}], "\[Rule]", 
      FractionBox["1", "2"]}], ",", 
     RowBox[{
      RowBox[{"pP", "[", 
       RowBox[{"2", ",", "t"}], "]"}], "\[Rule]", 
      FractionBox["1", "2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pH", "[", 
       RowBox[{"1", ",", "t"}], "]"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"pH", "[", 
       RowBox[{"2", ",", "t"}], "]"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"pP", "[", 
       RowBox[{"1", ",", "t"}], "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{"pP", "[", 
       RowBox[{"2", ",", "t"}], "]"}], "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"pH", "[", 
       RowBox[{"1", ",", "t"}], "]"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"pH", "[", 
       RowBox[{"2", ",", "t"}], "]"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"pP", "[", 
       RowBox[{"1", ",", "t"}], "]"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"pP", "[", 
       RowBox[{"2", ",", "t"}], "]"}], "\[Rule]", "1"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.858333181930704*^9, 3.8583336444295187`*^9, 
  3.858334418290506*^9, 3.860497838640409*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Stability", "Subsection",
 CellChangeTimes->{{3.857409660119225*^9, 3.8574096617965508`*^9}, {
   3.858333804883809*^9, 3.858333806201715*^9}, 3.8583467435139236`*^9},
 ExpressionUUID -> "2cdad697-3923-47d5-b4e7-f3dc647dc1a3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"JMtrx", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"pH2", "[", 
          RowBox[{"1", ",", "t"}], "]"}], ",", 
         RowBox[{"pH", "[", 
          RowBox[{"1", ",", "t"}], "]"}]}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"pH2", "[", 
          RowBox[{"1", ",", "t"}], "]"}], ",", 
         RowBox[{"pH", "[", 
          RowBox[{"2", ",", "t"}], "]"}]}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"pH2", "[", 
          RowBox[{"1", ",", "t"}], "]"}], ",", 
         RowBox[{"pP", "[", 
          RowBox[{"1", ",", "t"}], "]"}]}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"pH2", "[", 
          RowBox[{"1", ",", "t"}], "]"}], ",", 
         RowBox[{"pP", "[", 
          RowBox[{"2", ",", "t"}], "]"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"pH2", "[", 
          RowBox[{"2", ",", "t"}], "]"}], ",", 
         RowBox[{"pH", "[", 
          RowBox[{"1", ",", "t"}], "]"}]}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"pH2", "[", 
          RowBox[{"2", ",", "t"}], "]"}], ",", 
         RowBox[{"pH", "[", 
          RowBox[{"2", ",", "t"}], "]"}]}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"pH2", "[", 
          RowBox[{"2", ",", "t"}], "]"}], ",", 
         RowBox[{"pP", "[", 
          RowBox[{"1", ",", "t"}], "]"}]}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"pH2", "[", 
          RowBox[{"2", ",", "t"}], "]"}], ",", 
         RowBox[{"pP", "[", 
          RowBox[{"2", ",", "t"}], "]"}]}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"pP2", "[", 
          RowBox[{"1", ",", "t"}], "]"}], ",", 
         RowBox[{"pH", "[", 
          RowBox[{"1", ",", "t"}], "]"}]}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"pP2", "[", 
          RowBox[{"1", ",", "t"}], "]"}], ",", 
         RowBox[{"pH", "[", 
          RowBox[{"2", ",", "t"}], "]"}]}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"pP2", "[", 
          RowBox[{"1", ",", "t"}], "]"}], ",", 
         RowBox[{"pP", "[", 
          RowBox[{"1", ",", "t"}], "]"}]}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"pP2", "[", 
          RowBox[{"1", ",", "t"}], "]"}], ",", 
         RowBox[{"pP", "[", 
          RowBox[{"2", ",", "t"}], "]"}]}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"pP2", "[", 
          RowBox[{"2", ",", "t"}], "]"}], ",", 
         RowBox[{"pH", "[", 
          RowBox[{"1", ",", "t"}], "]"}]}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"pP2", "[", 
          RowBox[{"2", ",", "t"}], "]"}], ",", 
         RowBox[{"pH", "[", 
          RowBox[{"2", ",", "t"}], "]"}]}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"pP2", "[", 
          RowBox[{"2", ",", "t"}], "]"}], ",", 
         RowBox[{"pP", "[", 
          RowBox[{"1", ",", "t"}], "]"}]}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"pP2", "[", 
          RowBox[{"2", ",", "t"}], "]"}], ",", 
         RowBox[{"pP", "[", 
          RowBox[{"2", ",", "t"}], "]"}]}], "]"}]}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.85740967407294*^9, 3.857409728350925*^9}, {
  3.857409760883854*^9, 3.857409768335066*^9}, {3.858333483623685*^9, 
  3.858333615024991*^9}},
 ExpressionUUID -> "66ef1d00-1540-4f70-be8a-2832c613b35e"],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"JMtrxEqui", ",", "\[Lambda]List"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"JMtrxEqui", "[", "e_", "]"}], ":=", 
   RowBox[{
    RowBox[{"JMtrx", "/.", 
     RowBox[{"equi", "[", 
      RowBox[{"[", "e", "]"}], "]"}]}], "//", "Simplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Lambda]List", "[", "e_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"JMtrxEqui", "[", "e", "]"}], "//", "Eigenvalues"}], "//", 
    "FullSimplify"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.857409729221571*^9, 3.857409745575058*^9}, {
  3.8583337091226*^9, 3.858333784417861*^9}},
 ExpressionUUID -> "6e24f8d3-a437-4198-8806-4aae995c8275"],

Cell[CellGroupData[{

Cell["Equilibrium 1 \[Dash] all fixed for WT allele", "Subsubsection",
 CellChangeTimes->{{3.857409660119225*^9, 3.8574096617965508`*^9}, {
  3.8583338190915403`*^9, 3.858333830170309*^9}},
 ExpressionUUID -> "2cdad697-3923-47d5-b4e7-f3dc647dc1a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"JMtrxEqui", "[", "1", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.858333840411471*^9, 3.858333858082859*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "mH"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}]}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", "V"}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"mH", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}]}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", "V"}]]}], "0", "0"},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"mH", " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}]}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", "V"}]]}], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "mH"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}]}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", "V"}]], "0", "0"},
     {"0", "0", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "mP"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "S"}], ")"}]}], 
      RowBox[{"mP", "-", 
       RowBox[{"mP", " ", "S"}]}]},
     {"0", "0", 
      RowBox[{"mP", "-", 
       RowBox[{"mP", " ", "S"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "mP"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "S"}], ")"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.858333850590744*^9, 3.858333858346916*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Lambda]List", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.858333883411302*^9, 3.858333887644109*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", "mP"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "S"}], ")"}]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", "V", "-", 
     RowBox[{"S", " ", "V"}]}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", "V"}]], ",", 
   RowBox[{"1", "-", "S"}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "mH"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}]}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", "V"}]]}], "}"}]], "Output",
 CellChangeTimes->{3.858333888228365*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"Assumptions", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"mH", ">", "0"}], ",", 
         RowBox[{"mP", ">", "0"}], ",", 
         RowBox[{"1", ">", "S", ">", "0"}], ",", 
         RowBox[{"0", "<", "V", "<", "1"}]}], "}"}]}]}], "]"}], "&"}], ",", 
   RowBox[{"\[Lambda]List", "[", "1", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.858333912412408*^9, 3.858333933267214*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", "mP"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "S"}], ")"}]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", "V", "-", 
     RowBox[{"S", " ", "V"}]}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", "V"}]], ",", 
   RowBox[{"1", "-", "S"}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "mH"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}]}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", "V"}]]}], "}"}]], "Output",
 CellChangeTimes->{3.85833393486454*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Reduce", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"#", ">", "1"}], ",", 
        RowBox[{"1", "\[GreaterEqual]", " ", "mP", "\[GreaterEqual]", "0"}], 
        ",", 
        RowBox[{"1", "\[GreaterEqual]", " ", "mH", "\[GreaterEqual]", "0"}], 
        ",", 
        RowBox[{"1", ">", "S", ">", "0"}], ",", 
        RowBox[{"0", "<", "V", "<", "1"}]}], "}"}], "]"}], "&"}], ",", 
    RowBox[{"\[Lambda]List", "[", "1", "]"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8583339919141607`*^9, 3.8583340937747602`*^9}, {
  3.858334238595757*^9, 3.85833427520109*^9}, {3.858334960576268*^9, 
  3.858334965836275*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"False"},
      {
       RowBox[{
        RowBox[{"0", "\[LessEqual]", "mP", "\[LessEqual]", "1"}], "&&", 
        RowBox[{"0", "<", "V", "<", "1"}], "&&", 
        RowBox[{"0", "<", "S", "<", "1"}], "&&", 
        RowBox[{"0", "\[LessEqual]", "mH", "\[LessEqual]", "1"}]}]},
      {"False"},
      {
       RowBox[{
        RowBox[{"0", "\[LessEqual]", "mP", "\[LessEqual]", "1"}], "&&", 
        RowBox[{"0", "<", "S", "<", "1"}], "&&", 
        RowBox[{"0", "\[LessEqual]", "mH", "<", 
         FractionBox["1", "2"]}], "&&", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"2", " ", "mH"}], 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "mH"}], "-", "S", "+", 
            RowBox[{"2", " ", "mH", " ", "S"}]}]]}], "<", "V", "<", "1"}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8583340178110323`*^9, 3.858334094053042*^9}, 
   3.858334239071583*^9, 3.85833427727184*^9, 3.858334966577116*^9}]
}, Open  ]],

Cell["\<\
With some degree of virulence and specificity, always unstable.\
\>", "Text",
 CellChangeTimes->{{3.8583343259827337`*^9, 3.858334335137814*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Reduce", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"#", "<", 
         RowBox[{"-", "1"}]}], ",", 
        RowBox[{"1", "\[GreaterEqual]", " ", "mP", "\[GreaterEqual]", "0"}], 
        ",", 
        RowBox[{"1", "\[GreaterEqual]", " ", "mH", "\[GreaterEqual]", "0"}], 
        ",", 
        RowBox[{"1", ">", "S", ">", "0"}], ",", 
        RowBox[{"0", "<", "V", "<", "1"}]}], "}"}], "]"}], "&"}], ",", 
    RowBox[{"\[Lambda]List", "[", "1", "]"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.858334830746929*^9, 3.858334868802031*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"False"},
      {"False"},
      {"False"},
      {
       RowBox[{
        RowBox[{"0", "\[LessEqual]", "mP", "\[LessEqual]", "1"}], "&&", 
        RowBox[{"0", "<", "S", "<", "1"}], "&&", 
        RowBox[{
         FractionBox["1", "2"], "<", "mH", "\[LessEqual]", "1"}], "&&", 
        RowBox[{
         FractionBox[
          RowBox[{"2", "-", 
           RowBox[{"2", " ", "mH"}]}], 
          RowBox[{"2", "-", 
           RowBox[{"2", " ", "mH"}], "-", "S", "+", 
           RowBox[{"2", " ", "mH", " ", "S"}]}]], "<", "V", "<", "1"}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.858334833149761*^9, 3.858334869596883*^9, 
  3.858334969719256*^9, 3.8583358470056257`*^9}]
}, Open  ]],

Cell[BoxData[GridBox[{
   {"Eigenvalue", "Conditions", 
    RowBox[{"Unique", " ", "conditions"}]},
   {
    FractionBox[
     RowBox[{
      RowBox[{"-", "1"}], "+", "V", "-", 
      RowBox[{"S", " ", "V"}]}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", "V"}]], 
    RowBox[{
     RowBox[{"0", "\[LessEqual]", "mP", "\[LessEqual]", "1"}], "&&", 
     RowBox[{"0", "<", "V", "<", "1"}], "&&", 
     RowBox[{"0", "<", "S", "<", "1"}], "&&", 
     RowBox[{"0", "\[LessEqual]", "mH", "\[LessEqual]", "1"}]}], 
    RowBox[{
     RowBox[{"0", "\[LessEqual]", "mH", "\[LessEqual]", "1"}], ",", 
     RowBox[{"0", "<", "V", "<", "1"}]}]},
   {
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "mH"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}]}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", "V"}]], 
    RowBox[{
     RowBox[{"0", "\[LessEqual]", "mP", "\[LessEqual]", "1"}], "&&", 
     RowBox[{"0", "<", "S", "<", "1"}], "&&", 
     RowBox[{
      FractionBox["1", "2"], "<", "mH", "\[LessEqual]", "1"}], "&&", 
     RowBox[{
      FractionBox[
       RowBox[{"2", "-", 
        RowBox[{"2", " ", "mH"}]}], 
       RowBox[{"2", "-", 
        RowBox[{"2", " ", "mH"}], "-", "S", "+", 
        RowBox[{"2", " ", "mH", " ", "S"}]}]], "<", "V", "<", "1"}]}], 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], "<", "mH", "\[LessEqual]", "1"}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{"2", "-", 
        RowBox[{"2", " ", "mH"}]}], 
       RowBox[{"2", "-", 
        RowBox[{"2", " ", "mH"}], "-", "S", "+", 
        RowBox[{"2", " ", "mH", " ", "S"}]}]], "<", "V", "<", "1"}]}]}
  },
  GridBoxDividers->{
   "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
    "RowsIndexed" -> {}}]], "Input",
 CellChangeTimes->{{3.858335031553721*^9, 3.858335172689101*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"-", "1"}], "+", "V", "-", 
          RowBox[{"S", " ", "V"}]}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", "V"}]], "]"}], "/.", 
       RowBox[{"mH", "\[Rule]", " ", "0.05"}]}], "/.", 
      RowBox[{"S", "\[Rule]", " ", "0.5"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "mH"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}]}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", "V"}]], "]"}], "/.", 
       RowBox[{"mH", "\[Rule]", " ", "0.05"}]}], "/.", 
      RowBox[{"S", "\[Rule]", " ", "0.5"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"V", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8583357259321747`*^9, 3.858335814036869*^9}, {
  3.858335856031415*^9, 3.8583359085988007`*^9}, {3.8604977083128633`*^9, 
  3.8604977260702*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$2244#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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

       "]]},
     Annotation[#, "Charting`Private`Tag$2244#2"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.9000000091836736},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0.9000000091836736, 6.414288081197801}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.85833575721531*^9, 3.8583358144221582`*^9}, {
  3.858335857024313*^9, 3.858335909113509*^9}, {3.860497711503543*^9, 
  3.860497729694517*^9}}]
}, Open  ]],

Cell["Leading eigenvalue always independent of migration. ", "Text",
 CellChangeTimes->{{3.8583343259827337`*^9, 3.858334335137814*^9}, {
  3.858335938269775*^9, 3.8583359446768627`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Equilibrium 2 \[Dash] hosts fixed for WT allele, parasites fixed for mutant \
allele\
\>", "Subsubsection",
 CellChangeTimes->{{3.857409660119225*^9, 3.8574096617965508`*^9}, {
  3.8583338190915403`*^9, 3.858333830170309*^9}, {3.858334733231748*^9, 
  3.858334764864205*^9}},
 ExpressionUUID -> "2cdad697-3923-47d5-b4e7-f3dc647dc1a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"equi", "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.858334745303958*^9, 3.858334747072978*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"pH", "[", 
     RowBox[{"1", ",", "t"}], "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pH", "[", 
     RowBox[{"2", ",", "t"}], "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP", "[", 
     RowBox[{"1", ",", "t"}], "]"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"pP", "[", 
     RowBox[{"2", ",", "t"}], "]"}], "\[Rule]", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{3.858334747407024*^9, 3.858339026358914*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"JMtrxEqui", "[", "2", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.858333840411471*^9, 3.858333858082859*^9}, {
  3.85833474027319*^9, 3.8583347403764153`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "mH"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "V"}], ")"}]}], 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "S"}], ")"}], " ", "V"}]}]], 
      FractionBox[
       RowBox[{"mH", "-", 
        RowBox[{"mH", " ", "V"}]}], 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "S"}], ")"}], " ", "V"}]}]], "0", "0"},
     {
      FractionBox[
       RowBox[{"mH", "-", 
        RowBox[{"mH", " ", "V"}]}], 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "S"}], ")"}], " ", "V"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "mH"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "V"}], ")"}]}], 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "S"}], ")"}], " ", "V"}]}]], "0", "0"},
     {"0", "0", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "mP"}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", "S"}]], 
      FractionBox["mP", 
       RowBox[{"1", "-", "S"}]]},
     {"0", "0", 
      FractionBox["mP", 
       RowBox[{"1", "-", "S"}]], 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "mP"}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", "S"}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.858333850590744*^9, 3.858333858346916*^9}, 
   3.858334741073605*^9, 3.8583390277497587`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Lambda]List", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.858333883411302*^9, 3.858333887644109*^9}, {
  3.858334768937125*^9, 3.8583347690084457`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "mH"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "V"}], ")"}]}], 
    RowBox[{"1", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "S"}], ")"}], " ", "V"}]}]], ",", 
   FractionBox["1", 
    RowBox[{"1", "-", "S"}]], ",", 
   FractionBox[
    RowBox[{"1", "-", "V"}], 
    RowBox[{"1", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "S"}], ")"}], " ", "V"}]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"2", " ", "mP"}]}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", "S"}]]}], "}"}]], "Output",
 CellChangeTimes->{3.858333888228365*^9, 3.858334769371352*^9, 
  3.8583390290457487`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"Assumptions", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"mH", ">", "0"}], ",", 
         RowBox[{"mP", ">", "0"}], ",", 
         RowBox[{"1", ">", "S", ">", "0"}], ",", 
         RowBox[{"0", "<", "V", "<", "1"}]}], "}"}]}]}], "]"}], "&"}], ",", 
   RowBox[{"\[Lambda]List", "[", "2", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.858333912412408*^9, 3.858333933267214*^9}, {
  3.858334774824692*^9, 3.858334774887639*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "mH"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "V"}], ")"}]}], 
    RowBox[{"1", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "S"}], ")"}], " ", "V"}]}]], ",", 
   FractionBox["1", 
    RowBox[{"1", "-", "S"}]], ",", 
   FractionBox[
    RowBox[{"1", "-", "V"}], 
    RowBox[{"1", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "S"}], ")"}], " ", "V"}]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"2", " ", "mP"}]}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", "S"}]]}], "}"}]], "Output",
 CellChangeTimes->{3.85833393486454*^9, 3.858334775285913*^9, 
  3.858339035350203*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Reduce", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"#", ">", "1"}], ",", 
        RowBox[{"mP", "\[GreaterEqual]", "0"}], ",", 
        RowBox[{"mH", "\[GreaterEqual]", "0"}], ",", 
        RowBox[{"1", ">", "S", ">", "0"}], ",", 
        RowBox[{"0", "<", "V", "<", "1"}]}], "}"}], "]"}], "&"}], ",", 
    RowBox[{"\[Lambda]List", "[", "2", "]"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8583339919141607`*^9, 3.8583340937747602`*^9}, {
  3.858334238595757*^9, 3.85833427520109*^9}, {3.8583348013873587`*^9, 
  3.858334801465836*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"False"},
      {
       RowBox[{
        RowBox[{"0", "<", "S", "<", "1"}], "&&", 
        RowBox[{"mP", "\[GreaterEqual]", "0"}], "&&", 
        RowBox[{"0", "<", "V", "<", "1"}], "&&", 
        RowBox[{"mH", "\[GreaterEqual]", "0"}]}]},
      {"False"},
      {
       RowBox[{
        RowBox[{"0", "\[LessEqual]", "mP", "<", 
         FractionBox["1", "2"]}], "&&", 
        RowBox[{
         RowBox[{"2", " ", "mP"}], "<", "S", "<", "1"}], "&&", 
        RowBox[{"0", "<", "V", "<", "1"}], "&&", 
        RowBox[{"mH", "\[GreaterEqual]", "0"}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8583340178110323`*^9, 3.858334094053042*^9}, 
   3.858334239071583*^9, 3.85833427727184*^9, 3.858334802066555*^9, 
   3.858339039780511*^9}]
}, Open  ]],

Cell["\<\
With some degree of virulence and specificity, always unstable.\
\>", "Text",
 CellChangeTimes->{{3.8583343259827337`*^9, 3.858334335137814*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      RowBox[{"1", "-", "S"}]], "\[LessEqual]", " ", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "mP"}]}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", "S"}]]}], ",", 
    RowBox[{"mH", "\[GreaterEqual]", "0"}], ",", 
    RowBox[{"1", ">", "S", ">", "0"}], ",", 
    RowBox[{"0", "<", "V", "<", "1"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.858334481572248*^9, 3.858334521478539*^9}, {
  3.858334569913075*^9, 3.8583345756800756`*^9}, {3.858339085028665*^9, 
  3.858339106810996*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"mP", "\[LessEqual]", "0"}], "&&", 
  RowBox[{"0", "<", "S", "<", "1"}], "&&", 
  RowBox[{"0", "<", "V", "<", "1"}], "&&", 
  RowBox[{"mH", "\[GreaterEqual]", "0"}]}]], "Output",
 CellChangeTimes->{
  3.858334521837789*^9, {3.858334571078005*^9, 3.858334576006138*^9}, {
   3.858339090730659*^9, 3.858339107258131*^9}}]
}, Open  ]],

Cell["\<\
Leading eigenvalue never contains term for migration. Migration decreases \
size of second eigenvalue.\
\>", "Text",
 CellChangeTimes->{{3.8583343259827337`*^9, 3.858334335137814*^9}, {
  3.858334602061511*^9, 3.858334618566278*^9}, {3.8583392159080267`*^9, 
  3.858339218421836*^9}, {3.858339252582597*^9, 3.858339260876688*^9}}],

Cell[BoxData[{
 FractionBox["1", 
  RowBox[{"1", "-", "S"}]], "\[IndentingNewLine]", 
 RowBox[{
  FractionBox["1", 
   RowBox[{"1", "-", "S"}]], "-", 
  FractionBox[
   RowBox[{"2", " ", "mP"}], 
   RowBox[{"1", "-", "S"}]]}]}], "Input",
 CellChangeTimes->{{3.858339149908207*^9, 3.858339189987274*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Equilibrium 3 \[Dash] all polymorphic", "Subsubsection",
 CellChangeTimes->{{3.857409660119225*^9, 3.8574096617965508`*^9}, {
  3.8583338190915403`*^9, 3.858333830170309*^9}, {3.858334733231748*^9, 
  3.858334764864205*^9}, {3.8583392713094387`*^9, 3.858339281716786*^9}},
 ExpressionUUID -> "2cdad697-3923-47d5-b4e7-f3dc647dc1a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"equi", "[", 
  RowBox[{"[", "3", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.858334745303958*^9, 3.858334747072978*^9}, {
  3.858339276038495*^9, 3.858339276149049*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"pH", "[", 
     RowBox[{"1", ",", "t"}], "]"}], "\[Rule]", 
    FractionBox["1", "2"]}], ",", 
   RowBox[{
    RowBox[{"pH", "[", 
     RowBox[{"2", ",", "t"}], "]"}], "\[Rule]", 
    FractionBox["1", "2"]}], ",", 
   RowBox[{
    RowBox[{"pP", "[", 
     RowBox[{"1", ",", "t"}], "]"}], "\[Rule]", 
    FractionBox["1", "2"]}], ",", 
   RowBox[{
    RowBox[{"pP", "[", 
     RowBox[{"2", ",", "t"}], "]"}], "\[Rule]", 
    FractionBox["1", "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.858334747407024*^9, 3.858339026358914*^9, 
  3.858339276952648*^9, 3.860497847456256*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"JMtrxEqui", "[", "3", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.858333840411471*^9, 3.858333858082859*^9}, {
  3.85833474027319*^9, 3.8583347403764153`*^9}, {3.858339285893197*^9, 
  3.858339285945738*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"1", "-", "mH"}], "mH", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "mH"}], ")"}], " ", "S", " ", "V"}], 
       RowBox[{"2", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"mH", " ", "S", " ", "V"}], 
        RowBox[{"2", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}]]}]},
     {"mH", 
      RowBox[{"1", "-", "mH"}], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"mH", " ", "S", " ", "V"}], 
        RowBox[{"2", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}]]}], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "mH"}], ")"}], " ", "S", " ", "V"}], 
       RowBox[{"2", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}]]},
     {
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "mP"}], ")"}], " ", "S"}], 
       RowBox[{
        RowBox[{"-", "2"}], "+", "S"}]], 
      FractionBox[
       RowBox[{"mP", " ", "S"}], 
       RowBox[{"2", "-", "S"}]], 
      RowBox[{"1", "-", "mP"}], "mP"},
     {
      FractionBox[
       RowBox[{"mP", " ", "S"}], 
       RowBox[{"2", "-", "S"}]], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "mP"}], ")"}], " ", "S"}], 
       RowBox[{
        RowBox[{"-", "2"}], "+", "S"}]], "mP", 
      RowBox[{"1", "-", "mP"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.858333850590744*^9, 3.858333858346916*^9}, 
   3.858334741073605*^9, 3.8583390277497587`*^9, 3.858339286352162*^9, 
   3.860497848523082*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"Assumptions", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"mH", ">", "0"}], ",", 
         RowBox[{"mP", ">", "0"}], ",", 
         RowBox[{"1", ">", "S", ">", "0"}], ",", 
         RowBox[{"0", "<", "V", "<", "1"}]}], "}"}]}]}], "]"}], "&"}], ",", 
   RowBox[{"\[Lambda]List", "[", "3", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.858333912412408*^9, 3.858333933267214*^9}, {
  3.858334774824692*^9, 3.858334774887639*^9}, {3.8583393022712517`*^9, 
  3.858339302333405*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"-", "4"}], "+", 
     RowBox[{"4", " ", "V"}], "+", 
     RowBox[{"S", " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}]}], "-", 
     
     RowBox[{"S", " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V", " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}], 
         ")"}]}]]}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}]}]], ",", 
   
   FractionBox[
    RowBox[{
     RowBox[{"-", "4"}], "+", 
     RowBox[{"4", " ", "V"}], "+", 
     RowBox[{"S", " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}]}], "+", 
     
     RowBox[{"S", " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V", " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}], 
         ")"}]}]]}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}]}]], ",", 
   
   RowBox[{"-", 
    RowBox[{
     FractionBox["1", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}]}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "mH", "+", "mP"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "V"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "mH", "+", "mP"}], ")"}], " ", 
        SuperscriptBox["S", "2"], " ", "V"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "mH", "+", "mP"}], ")"}], " ", "S", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "V"}]}], ")"}]}], "+", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"mH", "-", "mP"}], ")"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "S"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"mH", "-", "mP"}], ")"}], "2"]}], "-", 
              RowBox[{"4", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"mH", "-", "mP"}], ")"}], "2"], " ", "S"}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "mH", "+", "mP"}], ")"}], "2"], 
               " ", 
               SuperscriptBox["S", "2"]}]}], ")"}], " ", "V"}]}], ")"}]}]]}], 
      ")"}]}]}], ",", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "mH", "+", "mP"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "V"}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "mH", "+", "mP"}], ")"}], " ", 
       SuperscriptBox["S", "2"], " ", "V"}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "mH", "+", "mP"}], ")"}], " ", "S", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", "V"}]}], ")"}]}], "+", 
      SqrtBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}], " ", 
        
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"mH", "-", "mP"}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "S"}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"mH", "-", "mP"}], ")"}], "2"]}], "-", 
             RowBox[{"4", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"mH", "-", "mP"}], ")"}], "2"], " ", "S"}], "+", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "mH", "+", "mP"}], ")"}], "2"], " ", 
              SuperscriptBox["S", "2"]}]}], ")"}], " ", "V"}]}], ")"}]}]]}], 
     ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.85833393486454*^9, 3.858334775285913*^9, 
  3.858339035350203*^9, 3.85833930342206*^9, 3.858343242865226*^9, 
  3.8604978659386263`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"re", "=", 
   RowBox[{"Re", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Lambda]List", "[", "3", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"S", "\[Rule]", "0.1"}], ",", 
       RowBox[{"V", "\[Rule]", "0.3"}], ",", 
       RowBox[{"mH", "\[Rule]", "0.0001"}], ",", 
       RowBox[{"mP", "\[Rule]", "0.0001"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"im", "=", 
   RowBox[{"Im", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Lambda]List", "[", "3", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"S", "\[Rule]", "0.1"}], ",", 
       RowBox[{"V", "\[Rule]", "0.3"}], ",", 
       RowBox[{"mH", "\[Rule]", "0.0001"}], ",", 
       RowBox[{"mP", "\[Rule]", "0.0001"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Sqrt", "[", 
   RowBox[{
    SuperscriptBox["re", "2"], "+", 
    SuperscriptBox["im", "2"]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"re", "=", 
   RowBox[{"Re", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Lambda]List", "[", "3", "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"S", "\[Rule]", "0.1"}], ",", 
       RowBox[{"V", "\[Rule]", "0.3"}], ",", 
       RowBox[{"mH", "\[Rule]", "0.0001"}], ",", 
       RowBox[{"mP", "\[Rule]", "0.0001"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"im", "=", 
   RowBox[{"Im", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Lambda]List", "[", "3", "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"S", "\[Rule]", "0.1"}], ",", 
       RowBox[{"V", "\[Rule]", "0.3"}], ",", 
       RowBox[{"mH", "\[Rule]", "0.0001"}], ",", 
       RowBox[{"mP", "\[Rule]", "0.0001"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Sqrt", "[", 
  RowBox[{
   SuperscriptBox["re", "2"], "+", 
   SuperscriptBox["im", "2"]}], "]"}]}], "Input",
 CellChangeTimes->{{3.858339550489889*^9, 3.858339617995515*^9}, {
  3.858340239801277*^9, 3.858340264968012*^9}, {3.8583405996141367`*^9, 
  3.858340611910386*^9}, {3.858341214085578*^9, 3.85834124012422*^9}, {
  3.858341282495192*^9, 3.8583413547749643`*^9}, {3.858341390975429*^9, 
  3.858341409054668*^9}, {3.858341486618463*^9, 3.858341520936763*^9}, {
  3.858341762887858*^9, 3.858341802693343*^9}, {3.858341978806097*^9, 
  3.8583419853931513`*^9}, {3.858343188735395*^9, 3.858343209260828*^9}, {
  3.85834376157778*^9, 3.858343802078529*^9}, {3.858343837787691*^9, 
  3.858343841646394*^9}, {3.858343919395743*^9, 3.858343926089691*^9}, {
  3.860497867968725*^9, 3.86049792503294*^9}, {3.860498490333645*^9, 
  3.860498579412366*^9}}],

Cell[BoxData["1.0005519271876375`"], "Output",
 CellChangeTimes->{{3.85833957771327*^9, 3.858339619460144*^9}, {
   3.8583402450347233`*^9, 3.8583402653118258`*^9}, 3.85834061700628*^9, 
   3.8583412486879253`*^9, {3.8583412903271723`*^9, 3.858341355242086*^9}, {
   3.858341393683867*^9, 3.8583414095197153`*^9}, {3.858341494253793*^9, 
   3.858341521330503*^9}, {3.858341768581874*^9, 3.8583418031754723`*^9}, 
   3.8583419858642263`*^9, {3.858343199129064*^9, 3.858343210018182*^9}, {
   3.858343770397451*^9, 3.8583438024315577`*^9}, 3.858343842240366*^9, 
   3.858343926588976*^9, {3.8604978700815372`*^9, 3.860497925545599*^9}, {
   3.8604985096926737`*^9, 3.860498581559971*^9}}],

Cell[BoxData["1.0003518168021999`"], "Output",
 CellChangeTimes->{{3.85833957771327*^9, 3.858339619460144*^9}, {
   3.8583402450347233`*^9, 3.8583402653118258`*^9}, 3.85834061700628*^9, 
   3.8583412486879253`*^9, {3.8583412903271723`*^9, 3.858341355242086*^9}, {
   3.858341393683867*^9, 3.8583414095197153`*^9}, {3.858341494253793*^9, 
   3.858341521330503*^9}, {3.858341768581874*^9, 3.8583418031754723`*^9}, 
   3.8583419858642263`*^9, {3.858343199129064*^9, 3.858343210018182*^9}, {
   3.858343770397451*^9, 3.8583438024315577`*^9}, 3.858343842240366*^9, 
   3.858343926588976*^9, {3.8604978700815372`*^9, 3.860497925545599*^9}, {
   3.8604985096926737`*^9, 3.860498581628942*^9}}]
}, Open  ]],

Cell["Unstable.", "Text",
 CellChangeTimes->{{3.8583343259827337`*^9, 3.858334335137814*^9}, {
  3.858341270500663*^9, 3.8583412717788877`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Reduce", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}], 
           ")"}]}]]}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "mH", "+", "mP"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "V"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "mH", "+", "mP"}], ")"}], " ", 
          SuperscriptBox["S", "2"], " ", "V"}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "mH", "+", "mP"}], ")"}], " ", "S", " ", 
          
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "V"}]}], ")"}]}], "+", 
         SqrtBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}], 
           " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"mH", "-", "mP"}], ")"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "S"}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"4", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"mH", "-", "mP"}], ")"}], "2"]}], "-", 
                RowBox[{"4", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"mH", "-", "mP"}], ")"}], "2"], " ", "S"}], "+", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "mH", "+", "mP"}], ")"}], "2"], 
                 " ", 
                 SuperscriptBox["S", "2"]}]}], ")"}], " ", "V"}]}], 
            ")"}]}]]}], ")"}]}], ">", "1"}], ",", 
     RowBox[{"1", ">", "mH", ">", "0"}], ",", 
     RowBox[{"1", ">", "mP", ">", "0"}], ",", 
     RowBox[{"1", ">", "S", ">", "0"}], ",", 
     RowBox[{"0", "<", "V", "<", "1"}]}], "}"}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.860498141883836*^9, 3.8604981752072906`*^9}, {
  3.860498340729115*^9, 3.860498392018084*^9}, {3.8604984295396357`*^9, 
  3.8604984625706453`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{"8", " ", "mH", " ", "mP"}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"2", " ", "mH"}], "+", 
     RowBox[{"2", " ", "mP"}]}]], "<", "S", "<", "1"}], "&&", 
  RowBox[{
   FractionBox[
    RowBox[{"8", " ", "mH", " ", "mP", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "S"}], ")"}]}], 
    RowBox[{
     RowBox[{
      RowBox[{"-", "16"}], " ", "mH", " ", "mP"}], "+", 
     RowBox[{"16", " ", "mH", " ", "mP", " ", "S"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"2", " ", "mH"}], "-", 
        RowBox[{"2", " ", "mP"}]}], ")"}], " ", 
      SuperscriptBox["S", "2"]}]}]], "<", "V", "<", "1"}], "&&", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"0", "<", "mH", "<", 
       FractionBox[
        RowBox[{"1", "-", 
         RowBox[{"2", " ", "mP"}]}], 
        RowBox[{"2", "-", 
         RowBox[{"8", " ", "mP"}]}]]}], "&&", 
      RowBox[{
       FractionBox["1", "2"], "<", "mP", "<", "1"}]}], ")"}], "||", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"0", "<", "mP", "<", 
       FractionBox["1", "6"]}], "&&", 
      RowBox[{
       FractionBox[
        RowBox[{"1", "-", 
         RowBox[{"2", " ", "mP"}]}], 
        RowBox[{"2", "-", 
         RowBox[{"8", " ", "mP"}]}]], "<", "mH", "<", "1"}]}], ")"}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{
  3.8604981452539988`*^9, 3.860498175739504*^9, {3.860498364149921*^9, 
   3.860498393762599*^9}, {3.8604984378815317`*^9, 3.860498463989539*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}]}]]}], 
     
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "mH", "+", "mP"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "V"}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "mH", "+", "mP"}], ")"}], " ", 
        SuperscriptBox["S", "2"], " ", "V"}], "-", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "mH", "+", "mP"}], ")"}], " ", "S", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "V"}]}], ")"}]}], "+", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"mH", "-", "mP"}], ")"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "S"}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"mH", "-", "mP"}], ")"}], "2"]}], "-", 
              RowBox[{"4", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{"mH", "-", "mP"}], ")"}], "2"], " ", "S"}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "mH", "+", "mP"}], ")"}], "2"], 
               " ", 
               SuperscriptBox["S", "2"]}]}], ")"}], " ", "V"}]}], ")"}]}]]}], 
      ")"}]}], ",", "mH"}], "]"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.860498195744935*^9, 3.860498206182623*^9}, {
  3.8604982413226843`*^9, 3.860498256615698*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"S", " ", 
     RowBox[{"(", 
      RowBox[{"2", "-", 
       RowBox[{"4", " ", "V"}]}], ")"}]}], "+", 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "V"}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["S", "2"], " ", "V"}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["S", "2"]}], " ", "V"}], "+", 
        RowBox[{"mH", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}]}], 
        "+", 
        RowBox[{"mP", " ", 
         RowBox[{"(", 
          RowBox[{"4", "-", 
           RowBox[{"2", " ", "S"}], "-", 
           RowBox[{"4", " ", "V"}], "+", 
           RowBox[{"4", " ", "S", " ", "V"}], "+", 
           RowBox[{
            SuperscriptBox["S", "2"], " ", "V"}]}], ")"}]}]}], ")"}]}], 
     SqrtBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"mH", "-", "mP"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "S"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"mH", "-", "mP"}], ")"}], "2"]}], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"mH", "-", "mP"}], ")"}], "2"], " ", "S"}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "mH", "+", "mP"}], ")"}], "2"], " ", 
             
             SuperscriptBox["S", "2"]}]}], ")"}], " ", "V"}]}], ")"}]}]]]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}], 
     ")"}]}]]}]], "Output",
 CellChangeTimes->{
  3.860498199875125*^9, {3.8604982389401417`*^9, 3.860498257219037*^9}, 
   3.860498609170294*^9, 3.860498658175995*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"S", " ", 
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{"4", " ", "V"}]}], ")"}]}], "+", 
        RowBox[{"4", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "V"}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["S", "2"], " ", "V"}], "+", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}], 
          " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["S", "2"]}], " ", "V"}], "+", 
            RowBox[{"mH", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}], 
              ")"}]}], "+", 
            RowBox[{"mP", " ", 
             RowBox[{"(", 
              RowBox[{"4", "-", 
               RowBox[{"2", " ", "S"}], "-", 
               RowBox[{"4", " ", "V"}], "+", 
               RowBox[{"4", " ", "S", " ", "V"}], "+", 
               RowBox[{
                SuperscriptBox["S", "2"], " ", "V"}]}], ")"}]}]}], ")"}]}], 
         SqrtBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}], 
           " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"mH", "-", "mP"}], ")"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "S"}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"4", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"mH", "-", "mP"}], ")"}], "2"]}], "-", 
                RowBox[{"4", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"mH", "-", "mP"}], ")"}], "2"], " ", "S"}], "+", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "mH", "+", "mP"}], ")"}], "2"], 
                 " ", 
                 SuperscriptBox["S", "2"]}]}], ")"}], " ", "V"}]}], 
            ")"}]}]]]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}]}]]}], 
     "/.", 
     RowBox[{"mH", "\[Rule]", " ", 
      RowBox[{"\[Epsilon]", " ", "mH"}]}]}], "/.", 
    RowBox[{"mP", "\[Rule]", " ", 
     RowBox[{"mP", " ", "\[Epsilon]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.86049826808921*^9, 3.86049830123195*^9}, {
  3.860498647701692*^9, 3.860498665208675*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{
      SuperscriptBox["S", "2"], " ", "V"}], "-", 
     SqrtBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", 
       SuperscriptBox["S", "2"], " ", "V", " ", 
       RowBox[{"(", 
        RowBox[{"2", "-", 
         RowBox[{"2", " ", "V"}], "+", 
         RowBox[{"S", " ", "V"}]}], ")"}]}]]}], 
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", 
      SuperscriptBox["S", "2"], " ", "V", " ", 
      RowBox[{"(", 
       RowBox[{"2", "-", 
        RowBox[{"2", " ", "V"}], "+", 
        RowBox[{"S", " ", "V"}]}], ")"}]}]]], "+", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "mH"}], "-", 
       RowBox[{"2", " ", "mP"}], "-", 
       RowBox[{"mH", " ", "S"}], "+", 
       RowBox[{"mP", " ", "S"}], "-", 
       RowBox[{"2", " ", "mH", " ", "V"}], "+", 
       RowBox[{"2", " ", "mP", " ", "V"}], "+", 
       RowBox[{"2", " ", "mH", " ", "S", " ", "V"}], "-", 
       RowBox[{"2", " ", "mP", " ", "S", " ", "V"}]}], ")"}], " ", 
     "\[Epsilon]"}], 
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", 
      SuperscriptBox["S", "2"], " ", "V", " ", 
      RowBox[{"(", 
       RowBox[{"2", "-", 
        RowBox[{"2", " ", "V"}], "+", 
        RowBox[{"S", " ", "V"}]}], ")"}]}]]], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "\[Epsilon]", "]"}], "2"],
    SeriesData[$CellContext`\[Epsilon], 0, {}, 0, 2, 1],
    Editable->False]}],
  SeriesData[$CellContext`\[Epsilon], 
   0, {((-2 + $CellContext`S) $CellContext`S^2 $CellContext`V (2 - 
       2 $CellContext`V + $CellContext`S $CellContext`V))^
     Rational[-1, 
       2] ($CellContext`S^2 $CellContext`V - ((-2 + $CellContext`S) \
$CellContext`S^2 $CellContext`V (2 - 
       2 $CellContext`V + $CellContext`S $CellContext`V))^Rational[1, 2]), 
    2 ((-2 + $CellContext`S) $CellContext`S^2 $CellContext`V (2 - 
       2 $CellContext`V + $CellContext`S $CellContext`V))^Rational[-1, 2] (
     2 $CellContext`mH - 
     2 $CellContext`mP - $CellContext`mH $CellContext`S + $CellContext`mP \
$CellContext`S - 2 $CellContext`mH $CellContext`V + 
     2 $CellContext`mP $CellContext`V + 
     2 $CellContext`mH $CellContext`S $CellContext`V - 
     2 $CellContext`mP $CellContext`S $CellContext`V)}, 0, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.860498301565483*^9, 3.86049861037182*^9, {3.8604986485526*^9, 
   3.8604987049339247`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{
         SuperscriptBox["S", "2"], " ", "V"}], "-", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", 
          SuperscriptBox["S", "2"], " ", "V", " ", 
          RowBox[{"(", 
           RowBox[{"2", "-", 
            RowBox[{"2", " ", "V"}], "+", 
            RowBox[{"S", " ", "V"}]}], ")"}]}]]}], 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", 
         SuperscriptBox["S", "2"], " ", "V", " ", 
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{"2", " ", "V"}], "+", 
           RowBox[{"S", " ", "V"}]}], ")"}]}]]], "+", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "mH"}], "-", 
          RowBox[{"2", " ", "mP"}], "-", 
          RowBox[{"mH", " ", "S"}], "+", 
          RowBox[{"mP", " ", "S"}], "-", 
          RowBox[{"2", " ", "mH", " ", "V"}], "+", 
          RowBox[{"2", " ", "mP", " ", "V"}], "+", 
          RowBox[{"2", " ", "mH", " ", "S", " ", "V"}], "-", 
          RowBox[{"2", " ", "mP", " ", "S", " ", "V"}]}], ")"}]}], 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", 
         SuperscriptBox["S", "2"], " ", "V", " ", 
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{"2", " ", "V"}], "+", 
           RowBox[{"S", " ", "V"}]}], ")"}]}]]]}], ">", "0"}], ",", 
    RowBox[{"0", "<", "S", "<", "1"}], ",", 
    RowBox[{"0", "<", "V", "<", "1"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8604983168487864`*^9, 3.86049832856087*^9}, {
  3.860498602597803*^9, 3.860498630293254*^9}, {3.860498675142912*^9, 
  3.860498781247854*^9}, {3.860498911420013*^9, 3.860498941170197*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{{3.8604987789693727`*^9, 3.860498781810137*^9}, {
  3.860498912681244*^9, 3.860498941605475*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{
         SuperscriptBox["S", "2"], " ", "V"}], "-", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", 
          SuperscriptBox["S", "2"], " ", "V", " ", 
          RowBox[{"(", 
           RowBox[{"2", "-", 
            RowBox[{"2", " ", "V"}], "+", 
            RowBox[{"S", " ", "V"}]}], ")"}]}]]}], 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", 
         SuperscriptBox["S", "2"], " ", "V", " ", 
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{"2", " ", "V"}], "+", 
           RowBox[{"S", " ", "V"}]}], ")"}]}]]], "+", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "mH"}], "-", 
          RowBox[{"2", " ", "mP"}], "-", 
          RowBox[{"mH", " ", "S"}], "+", 
          RowBox[{"mP", " ", "S"}], "-", 
          RowBox[{"2", " ", "mH", " ", "V"}], "+", 
          RowBox[{"2", " ", "mP", " ", "V"}], "+", 
          RowBox[{"2", " ", "mH", " ", "S", " ", "V"}], "-", 
          RowBox[{"2", " ", "mP", " ", "S", " ", "V"}]}], ")"}]}], 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "S"}], ")"}], " ", 
         SuperscriptBox["S", "2"], " ", "V", " ", 
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{"2", " ", "V"}], "+", 
           RowBox[{"S", " ", "V"}]}], ")"}]}]]]}], "/.", 
     RowBox[{"mH", "\[Rule]", " ", "0.01"}]}], "/.", 
    RowBox[{"mP", "\[Rule]", " ", "0.01"}]}], "/.", 
   RowBox[{"S", "\[Rule]", " ", "0.1"}]}], "/.", 
  RowBox[{"V", "\[Rule]", " ", "0.3"}]}]], "Input",
 CellChangeTimes->{{3.860498969434992*^9, 3.860498981970223*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1.`"}], "-", 
  RowBox[{"0.03322888801774506`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.860498982397613*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Equilibrium 4 \[Dash] hosts fixed for mutant allele, parasites fixed for WT \
allele\
\>", "Subsubsection",
 CellChangeTimes->{{3.857409660119225*^9, 3.8574096617965508`*^9}, {
  3.8583338190915403`*^9, 3.858333830170309*^9}, {3.858343269646824*^9, 
  3.8583432917012577`*^9}},
 ExpressionUUID -> "2cdad697-3923-47d5-b4e7-f3dc647dc1a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"equi", "[", 
  RowBox[{"[", "4", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.858343277550049*^9, 3.85834327938198*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"pH", "[", 
     RowBox[{"1", ",", "t"}], "]"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"pH", "[", 
     RowBox[{"2", ",", "t"}], "]"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"pP", "[", 
     RowBox[{"1", ",", "t"}], "]"}], "\[Rule]", "0"}], ",", 
   RowBox[{
    RowBox[{"pP", "[", 
     RowBox[{"2", ",", "t"}], "]"}], "\[Rule]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8583432809390697`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"JMtrxEqui", "[", "4", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.858333840411471*^9, 3.858333858082859*^9}, {
  3.8583432738460712`*^9, 3.85834327398925*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "mH"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "V"}], ")"}]}], 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "S"}], ")"}], " ", "V"}]}]], 
      FractionBox[
       RowBox[{"mH", "-", 
        RowBox[{"mH", " ", "V"}]}], 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "S"}], ")"}], " ", "V"}]}]], "0", "0"},
     {
      FractionBox[
       RowBox[{"mH", "-", 
        RowBox[{"mH", " ", "V"}]}], 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "S"}], ")"}], " ", "V"}]}]], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "mH"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "V"}], ")"}]}], 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "S"}], ")"}], " ", "V"}]}]], "0", "0"},
     {"0", "0", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "mP"}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", "S"}]], 
      FractionBox["mP", 
       RowBox[{"1", "-", "S"}]]},
     {"0", "0", 
      FractionBox["mP", 
       RowBox[{"1", "-", "S"}]], 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "mP"}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", "S"}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.858333850590744*^9, 3.858333858346916*^9}, 
   3.858343274518512*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Lambda]List", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.858333883411302*^9, 3.858333887644109*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", "mP"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "S"}], ")"}]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", "V", "-", 
     RowBox[{"S", " ", "V"}]}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", "V"}]], ",", 
   RowBox[{"1", "-", "S"}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "mH"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}]}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", "V"}]]}], "}"}]], "Output",
 CellChangeTimes->{3.858333888228365*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"Assumptions", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"mH", ">", "0"}], ",", 
         RowBox[{"mP", ">", "0"}], ",", 
         RowBox[{"1", ">", "S", ">", "0"}], ",", 
         RowBox[{"0", "<", "V", "<", "1"}]}], "}"}]}]}], "]"}], "&"}], ",", 
   RowBox[{"\[Lambda]List", "[", "1", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.858333912412408*^9, 3.858333933267214*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", "mP"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "S"}], ")"}]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "1"}], "+", "V", "-", 
     RowBox[{"S", " ", "V"}]}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", "V"}]], ",", 
   RowBox[{"1", "-", "S"}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "mH"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}]}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", "V"}]]}], "}"}]], "Output",
 CellChangeTimes->{3.85833393486454*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Reduce", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"#", ">", "1"}], ",", 
        RowBox[{"1", "\[GreaterEqual]", " ", "mP", "\[GreaterEqual]", "0"}], 
        ",", 
        RowBox[{"1", "\[GreaterEqual]", " ", "mH", "\[GreaterEqual]", "0"}], 
        ",", 
        RowBox[{"1", ">", "S", ">", "0"}], ",", 
        RowBox[{"0", "<", "V", "<", "1"}]}], "}"}], "]"}], "&"}], ",", 
    RowBox[{"\[Lambda]List", "[", "1", "]"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8583339919141607`*^9, 3.8583340937747602`*^9}, {
  3.858334238595757*^9, 3.85833427520109*^9}, {3.858334960576268*^9, 
  3.858334965836275*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"False"},
      {
       RowBox[{
        RowBox[{"0", "\[LessEqual]", "mP", "\[LessEqual]", "1"}], "&&", 
        RowBox[{"0", "<", "V", "<", "1"}], "&&", 
        RowBox[{"0", "<", "S", "<", "1"}], "&&", 
        RowBox[{"0", "\[LessEqual]", "mH", "\[LessEqual]", "1"}]}]},
      {"False"},
      {
       RowBox[{
        RowBox[{"0", "\[LessEqual]", "mP", "\[LessEqual]", "1"}], "&&", 
        RowBox[{"0", "<", "S", "<", "1"}], "&&", 
        RowBox[{"0", "\[LessEqual]", "mH", "<", 
         FractionBox["1", "2"]}], "&&", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"2", " ", "mH"}], 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "mH"}], "-", "S", "+", 
            RowBox[{"2", " ", "mH", " ", "S"}]}]]}], "<", "V", "<", "1"}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.8583340178110323`*^9, 3.858334094053042*^9}, 
   3.858334239071583*^9, 3.85833427727184*^9, 3.858334966577116*^9}]
}, Open  ]],

Cell["\<\
With some degree of virulence and specificity, always unstable.\
\>", "Text",
 CellChangeTimes->{{3.8583343259827337`*^9, 3.858334335137814*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Reduce", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"#", "<", 
         RowBox[{"-", "1"}]}], ",", 
        RowBox[{"1", "\[GreaterEqual]", " ", "mP", "\[GreaterEqual]", "0"}], 
        ",", 
        RowBox[{"1", "\[GreaterEqual]", " ", "mH", "\[GreaterEqual]", "0"}], 
        ",", 
        RowBox[{"1", ">", "S", ">", "0"}], ",", 
        RowBox[{"0", "<", "V", "<", "1"}]}], "}"}], "]"}], "&"}], ",", 
    RowBox[{"\[Lambda]List", "[", "1", "]"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.858334830746929*^9, 3.858334868802031*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"False"},
      {"False"},
      {"False"},
      {
       RowBox[{
        RowBox[{"0", "\[LessEqual]", "mP", "\[LessEqual]", "1"}], "&&", 
        RowBox[{"0", "<", "S", "<", "1"}], "&&", 
        RowBox[{
         FractionBox["1", "2"], "<", "mH", "\[LessEqual]", "1"}], "&&", 
        RowBox[{
         FractionBox[
          RowBox[{"2", "-", 
           RowBox[{"2", " ", "mH"}]}], 
          RowBox[{"2", "-", 
           RowBox[{"2", " ", "mH"}], "-", "S", "+", 
           RowBox[{"2", " ", "mH", " ", "S"}]}]], "<", "V", "<", "1"}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.858334833149761*^9, 3.858334869596883*^9, 
  3.858334969719256*^9, 3.8583358470056257`*^9}]
}, Open  ]],

Cell[BoxData[GridBox[{
   {"Eigenvalue", "Conditions", 
    RowBox[{"Unique", " ", "conditions"}]},
   {
    FractionBox[
     RowBox[{
      RowBox[{"-", "1"}], "+", "V", "-", 
      RowBox[{"S", " ", "V"}]}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", "V"}]], 
    RowBox[{
     RowBox[{"0", "\[LessEqual]", "mP", "\[LessEqual]", "1"}], "&&", 
     RowBox[{"0", "<", "V", "<", "1"}], "&&", 
     RowBox[{"0", "<", "S", "<", "1"}], "&&", 
     RowBox[{"0", "\[LessEqual]", "mH", "\[LessEqual]", "1"}]}], 
    RowBox[{
     RowBox[{"0", "\[LessEqual]", "mH", "\[LessEqual]", "1"}], ",", 
     RowBox[{"0", "<", "V", "<", "1"}]}]},
   {
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"2", " ", "mH"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}]}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", "V"}]], 
    RowBox[{
     RowBox[{"0", "\[LessEqual]", "mP", "\[LessEqual]", "1"}], "&&", 
     RowBox[{"0", "<", "S", "<", "1"}], "&&", 
     RowBox[{
      FractionBox["1", "2"], "<", "mH", "\[LessEqual]", "1"}], "&&", 
     RowBox[{
      FractionBox[
       RowBox[{"2", "-", 
        RowBox[{"2", " ", "mH"}]}], 
       RowBox[{"2", "-", 
        RowBox[{"2", " ", "mH"}], "-", "S", "+", 
        RowBox[{"2", " ", "mH", " ", "S"}]}]], "<", "V", "<", "1"}]}], 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], "<", "mH", "\[LessEqual]", "1"}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{"2", "-", 
        RowBox[{"2", " ", "mH"}]}], 
       RowBox[{"2", "-", 
        RowBox[{"2", " ", "mH"}], "-", "S", "+", 
        RowBox[{"2", " ", "mH", " ", "S"}]}]], "<", "V", "<", "1"}]}]}
  },
  GridBoxDividers->{
   "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
    "RowsIndexed" -> {}}]], "Input",
 CellChangeTimes->{{3.858335031553721*^9, 3.858335172689101*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"-", "1"}], "+", "V", "-", 
          RowBox[{"S", " ", "V"}]}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", "V"}]], "]"}], "/.", 
       RowBox[{"mH", "\[Rule]", " ", "0.6"}]}], "/.", 
      RowBox[{"S", "\[Rule]", " ", "0.5"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"2", " ", "mH"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "S"}], ")"}], " ", "V"}]}], ")"}]}], 
         RowBox[{
          RowBox[{"-", "1"}], "+", "V"}]], "]"}], "/.", 
       RowBox[{"mH", "\[Rule]", " ", "0.6"}]}], "/.", 
      RowBox[{"S", "\[Rule]", " ", "0.5"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"V", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8583357259321747`*^9, 3.858335814036869*^9}, {
  3.858335856031415*^9, 3.8583359085988007`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$40932#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
guONqQvZFQrE/wBHSAG1
       "]]},
     Annotation[#, "Charting`Private`Tag$40932#2"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0., 4.929311885998075}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.85833575721531*^9, 3.8583358144221582`*^9}, {
  3.858335857024313*^9, 3.858335909113509*^9}}]
}, Open  ]],

Cell["Leading eigenvalue always independent of migration. ", "Text",
 CellChangeTimes->{{3.8583343259827337`*^9, 3.858334335137814*^9}, {
  3.858335938269775*^9, 3.8583359446768627`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{
  "WH", ",", "WP", ",", "pH1", ",", "pP1", ",", "pH2", ",", "pP2", ",", 
   "equs", ",", "equs2", ",", "equi"}], "]"}]], "Input",
 CellChangeTimes->{{3.858263160122512*^9, 3.85826316963247*^9}, {
  3.8582634455236464`*^9, 3.858263455814239*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"WH", "[", 
    RowBox[{"1", ",", "u_", ",", "t_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"1", "-", 
     RowBox[{"V", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"X", " ", 
         RowBox[{"pP", "[", 
          RowBox[{"u", ",", "t"}], "]"}]}], "+", 
        RowBox[{"Y", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"pP", "[", 
            RowBox[{"u", ",", "t"}], "]"}]}], ")"}]}]}], ")"}]}]}], "/.", 
    RowBox[{"Y", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"1", "-", "X"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"WH", "[", 
    RowBox[{"2", ",", "u_", ",", "t_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"1", "-", 
     RowBox[{"V", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Y", " ", 
         RowBox[{"pP", "[", 
          RowBox[{"u", ",", "t"}], "]"}]}], "+", 
        RowBox[{"X", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"pP", "[", 
            RowBox[{"u", ",", "t"}], "]"}]}], ")"}]}]}], ")"}]}]}], "/.", 
    RowBox[{"Y", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"1", "-", "X"}], ")"}]}]}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"WP", "[", 
    RowBox[{"1", ",", "u_", ",", "t_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"1", "+", 
     RowBox[{"a", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"X", " ", 
         RowBox[{"pH", "[", 
          RowBox[{"u", ",", "t"}], "]"}]}], "+", 
        RowBox[{"Y", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"pH", "[", 
            RowBox[{"u", ",", "t"}], "]"}]}], ")"}]}]}], ")"}]}]}], "/.", 
    RowBox[{"Y", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"1", "-", "X"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"WP", "[", 
    RowBox[{"2", ",", "u_", ",", "t_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"1", "+", 
     RowBox[{"a", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Y", " ", 
         RowBox[{"pH", "[", 
          RowBox[{"u", ",", "t"}], "]"}]}], "+", 
        RowBox[{"X", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"pH", "[", 
            RowBox[{"u", ",", "t"}], "]"}]}], ")"}]}]}], ")"}]}]}], "/.", 
    RowBox[{"Y", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"1", "-", "X"}], ")"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.857405828196187*^9, 3.857405989662332*^9}, {
   3.857406053943595*^9, 3.857406086712336*^9}, {3.857406295964834*^9, 
   3.85740631020522*^9}, {3.857406391851985*^9, 3.857406502099152*^9}, {
   3.8574065741138067`*^9, 3.8574065978156557`*^9}, {3.857406636306747*^9, 
   3.857406667927128*^9}, {3.8574067075906677`*^9, 3.8574067323623533`*^9}, {
   3.8574069808161097`*^9, 3.857406982762761*^9}, {3.857819784474679*^9, 
   3.857819790356007*^9}, {3.857819937215465*^9, 3.857819957937851*^9}, {
   3.857819997677753*^9, 3.857820021776445*^9}, {3.857825420255735*^9, 
   3.857825473379045*^9}, {3.857826353649768*^9, 3.857826358709796*^9}, 
   3.8582631583943443`*^9, {3.8582631888900547`*^9, 3.858263304512779*^9}},
 ExpressionUUID -> "d8ddd628-2d7d-4038-bc48-d29d1f62e1b9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pH1", "[", 
   RowBox[{"u_", ",", "t_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{"pH", "[", 
     RowBox[{"u", ",", "t"}], "]"}], " ", 
    RowBox[{"WH1", "[", 
     RowBox[{"1", ",", "u", ",", "t"}], "]"}]}], 
   RowBox[{
    RowBox[{
     RowBox[{"pH", "[", 
      RowBox[{"u", ",", "t"}], "]"}], 
     RowBox[{"WH1", "[", 
      RowBox[{"1", ",", "u", ",", "t"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"pH", "[", 
        RowBox[{"u", ",", "t"}], "]"}]}], ")"}], 
     RowBox[{"WH1", "[", 
      RowBox[{"2", ",", "u", ",", "t"}], 
      "]"}]}]}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pP1", "[", 
   RowBox[{"u_", ",", "t_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{"pP", "[", 
     RowBox[{"u", ",", "t"}], "]"}], " ", 
    RowBox[{"WP1", "[", 
     RowBox[{"1", ",", "u", ",", "t"}], "]"}]}], 
   RowBox[{
    RowBox[{
     RowBox[{"pP", "[", 
      RowBox[{"u", ",", "t"}], "]"}], 
     RowBox[{"WP1", "[", 
      RowBox[{"1", ",", "u", ",", "t"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"pP", "[", 
        RowBox[{"u", ",", "t"}], "]"}]}], ")"}], 
     RowBox[{"WP1", "[", 
      RowBox[{"2", ",", "u", ",", "t"}], 
      "]"}]}]}]]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.857406100561563*^9, 3.8574062262945623`*^9}, 
   3.857819833039071*^9, {3.8578200513091097`*^9, 3.857820096292759*^9}, {
   3.857820141847295*^9, 3.857820209078825*^9}, {3.8578254818050947`*^9, 
   3.8578255524135*^9}, {3.857825590386343*^9, 3.857825593796907*^9}},
 ExpressionUUID -> "de46af48-a30c-4b5a-bfce-81380151cb42"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pH2", "[", 
   RowBox[{"u_", ",", "t_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"pH1", "[", 
     RowBox[{"u", ",", "t"}], "]"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", "mH"}], " ", ")"}]}], "+", 
   RowBox[{"mH", "*", 
    RowBox[{"pH1", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"u", ",", "2"}], "]"}], "+", "1"}], ",", "t"}], 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pP2", "[", 
   RowBox[{"u_", ",", "t_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"pP1", "[", 
     RowBox[{"u", ",", "t"}], "]"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", "mP"}], ")"}]}], "+", 
   RowBox[{"mP", "*", 
    RowBox[{"pP1", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{"u", ",", "2"}], "]"}], "+", "1"}], ",", "t"}], 
     "]"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.8574062419584627`*^9, 3.85740627878509*^9}, {
   3.8574063125609703`*^9, 3.857406313077402*^9}, 3.857406354127656*^9, {
   3.857408016973433*^9, 3.857408031559566*^9}, {3.857820229770954*^9, 
   3.857820280577223*^9}, {3.8578256211373453`*^9, 3.857825645342783*^9}, {
   3.857825706579915*^9, 3.857825724564752*^9}, {3.857833258311439*^9, 
   3.857833259456764*^9}},
 ExpressionUUID -> "1ebd11dc-d84f-4aa6-bb38-b39e9f08b4ee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"pH2", "[", 
       RowBox[{"2", ",", "t"}], "]"}], "/.", 
      RowBox[{
       RowBox[{"pH2", "[", 
        RowBox[{"1", ",", "t"}], "]"}], "\[Rule]", " ", "0.5"}]}], "/.", 
     RowBox[{
      RowBox[{"pP2", "[", 
       RowBox[{"1", ",", "t"}], "]"}], "\[Rule]", " ", "0.5"}]}], "/.", 
    RowBox[{
     RowBox[{"pP2", "[", 
      RowBox[{"2", ",", "t"}], "]"}], "\[Rule]", " ", "0.5"}]}], "/.", 
   RowBox[{
    RowBox[{"pH2", "[", 
     RowBox[{"2", ",", "t"}], "]"}], "\[Rule]", " ", "0.5"}]}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.8582635332333097`*^9, 3.858263590325541*^9}, {
  3.858263820947956*^9, 3.858263829593261*^9}}],

Cell[BoxData["0.5`"], "Output",
 CellChangeTimes->{
  3.858263537133997*^9, {3.858263569783682*^9, 3.858263590716819*^9}, {
   3.858263807312055*^9, 3.858263829951025*^9}}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Individual-Based Simulations", "Subsection",
 CellChangeTimes->{{3.857557941023484*^9, 3.857557949892543*^9}},
 ExpressionUUID -> "864ecb67-c151-40d8-bead-a0e89b7d60cd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"parsN", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"S", "\[Rule]", " ", "0"}], ",", 
     RowBox[{"V", "\[Rule]", "0.2"}], ",", 
     RowBox[{"mH", "\[Rule]", "0.01"}], ",", 
     RowBox[{"mP", "\[Rule]", "0.01"}], ",", 
     RowBox[{"\[Kappa]H", "\[Rule]", "150"}], ",", 
     RowBox[{"\[Kappa]P", "\[Rule]", "150"}], ",", 
     RowBox[{"tMax", "\[Rule]", "300"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"parsN2", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"S", "\[Rule]", " ", "0"}], ",", 
     RowBox[{"V", "\[Rule]", "0.2"}], ",", 
     RowBox[{"mH", "\[Rule]", "0.05"}], ",", 
     RowBox[{"mP", "\[Rule]", "0.05"}], ",", 
     RowBox[{"\[Kappa]H", "\[Rule]", "150"}], ",", 
     RowBox[{"\[Kappa]P", "\[Rule]", "150"}], ",", 
     RowBox[{"tMax", "\[Rule]", "300"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"parsN3", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"S", "\[Rule]", " ", "0"}], ",", 
     RowBox[{"V", "\[Rule]", "0.2"}], ",", 
     RowBox[{"mH", "\[Rule]", "0.001"}], ",", 
     RowBox[{"mP", "\[Rule]", "0.001"}], ",", 
     RowBox[{"\[Kappa]H", "\[Rule]", "300"}], ",", 
     RowBox[{"\[Kappa]P", "\[Rule]", "150"}], ",", 
     RowBox[{"tMax", "\[Rule]", "300"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"parsN4", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"S", "\[Rule]", "0"}], ",", 
     RowBox[{"V", "\[Rule]", "0.5"}], ",", 
     RowBox[{"a", "\[Rule]", "0.1"}], ",", 
     RowBox[{"mH", "\[Rule]", "0.05"}], ",", 
     RowBox[{"mP", "\[Rule]", "0.05"}], ",", 
     RowBox[{"\[Kappa]H", "\[Rule]", "150"}], ",", 
     RowBox[{"\[Kappa]P", "\[Rule]", "150"}], ",", 
     RowBox[{"tMax", "\[Rule]", "300"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pars1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"S", "\[Rule]", " ", "0.8"}], ",", 
     RowBox[{"V", "\[Rule]", "0.2"}], ",", 
     RowBox[{"a", "\[Rule]", "0.1"}], ",", 
     RowBox[{"mH", "\[Rule]", "0.01"}], ",", 
     RowBox[{"mP", "\[Rule]", "0.01"}], ",", 
     RowBox[{"\[Kappa]H", "\[Rule]", "150"}], ",", 
     RowBox[{"\[Kappa]P", "\[Rule]", "150"}], ",", 
     RowBox[{"tMax", "\[Rule]", "300"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pars2", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"S", "\[Rule]", "0.8"}], ",", 
     RowBox[{"V", "\[Rule]", "0.2"}], ",", 
     RowBox[{"a", "\[Rule]", "0.1"}], ",", 
     RowBox[{"mH", "\[Rule]", "0.05"}], ",", 
     RowBox[{"mP", "\[Rule]", "0.05"}], ",", 
     RowBox[{"\[Kappa]H", "\[Rule]", "150"}], ",", 
     RowBox[{"\[Kappa]P", "\[Rule]", "150"}], ",", 
     RowBox[{"tMax", "\[Rule]", "300"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pars3", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"S", "\[Rule]", "0.8"}], ",", 
     RowBox[{"V", "\[Rule]", "0.2"}], ",", 
     RowBox[{"a", "\[Rule]", "0.1"}], ",", 
     RowBox[{"mH", "\[Rule]", "0.001"}], ",", 
     RowBox[{"mP", "\[Rule]", "0.001"}], ",", 
     RowBox[{"\[Kappa]H", "\[Rule]", "150"}], ",", 
     RowBox[{"\[Kappa]P", "\[Rule]", "150"}], ",", 
     RowBox[{"tMax", "\[Rule]", "300"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pars4", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"S", "\[Rule]", "0.8"}], ",", 
     RowBox[{"V", "\[Rule]", "0.5"}], ",", 
     RowBox[{"a", "\[Rule]", "0.1"}], ",", 
     RowBox[{"mH", "\[Rule]", "0.05"}], ",", 
     RowBox[{"mP", "\[Rule]", "0.05"}], ",", 
     RowBox[{"\[Kappa]H", "\[Rule]", "150"}], ",", 
     RowBox[{"\[Kappa]P", "\[Rule]", "150"}], ",", 
     RowBox[{"tMax", "\[Rule]", "300"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pars5", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"S", "\[Rule]", "0.65"}], ",", 
     RowBox[{"V", "\[Rule]", "0.2"}], ",", 
     RowBox[{"a", "\[Rule]", "0.1"}], ",", 
     RowBox[{"mH", "\[Rule]", "0.05"}], ",", 
     RowBox[{"mP", "\[Rule]", "0.05"}], ",", 
     RowBox[{"\[Kappa]H", "\[Rule]", "150"}], ",", 
     RowBox[{"\[Kappa]P", "\[Rule]", "150"}], ",", 
     RowBox[{"tMax", "\[Rule]", "300"}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8575533415610533`*^9, 3.8575533795180063`*^9}, {
   3.857553659354643*^9, 3.857553662661491*^9}, {3.857554488973598*^9, 
   3.8575544929959373`*^9}, {3.8575554146383457`*^9, 
   3.8575554278372593`*^9}, {3.857555595101903*^9, 3.857555628954989*^9}, {
   3.857557269500041*^9, 3.857557276823497*^9}, {3.858254445565592*^9, 
   3.858254452292457*^9}, {3.8582577100571957`*^9, 3.85825771527242*^9}, {
   3.858259041302885*^9, 3.858259043389798*^9}, {3.858259151513358*^9, 
   3.858259154247508*^9}, {3.858346783307948*^9, 3.8583467920975447`*^9}, {
   3.858347517585367*^9, 3.85834753590551*^9}, {3.8583482054042177`*^9, 
   3.858348208644257*^9}, {3.858348386702422*^9, 3.85834839226198*^9}, {
   3.858348713093059*^9, 3.858348768075746*^9}, {3.858350762359455*^9, 
   3.8583507624444723`*^9}, {3.8583531133685217`*^9, 3.858353134196247*^9}, {
   3.8583535286138783`*^9, 3.858353543164029*^9}, {3.858353924814992*^9, 
   3.858353928925055*^9}, {3.85842285318427*^9, 3.858422891823572*^9}, {
   3.858429559847604*^9, 3.8584295731118107`*^9}, {3.85937142359835*^9, 
   3.859371460686233*^9}, {3.859375182028872*^9, 3.8593752061880627`*^9}, {
   3.8593785664366198`*^9, 3.859378597445241*^9}, {3.859379148949317*^9, 
   3.85937915871773*^9}, {3.86187177247575*^9, 3.861871776131571*^9}, {
   3.86187593658928*^9, 3.861875949259877*^9}, {3.861877409599533*^9, 
   3.861877458807775*^9}, 3.861877593514593*^9, {3.861878653663662*^9, 
   3.86187866178856*^9}},
 ExpressionUUID -> "4f4f5a23-3616-476a-bf2e-d9de7d3a1e3d"],

Cell["Absolute fitness values", "Text",
 CellChangeTimes->{{3.8575539651645308`*^9, 3.857553967571971*^9}, {
  3.858254864820229*^9, 3.85825486667502*^9}},
 ExpressionUUID -> "f808cc4a-7e20-49b1-9224-5172eff507e4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"WH", "[", 
    RowBox[{"1", ",", "u_", ",", "pVec_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"pVec", "[", 
      RowBox[{"[", 
       RowBox[{"4", "-", 
        RowBox[{"Mod", "[", 
         RowBox[{"u", ",", "2"}], "]"}]}], "]"}], "]"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "V"}], ")"}]}], " ", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"pVec", "[", 
        RowBox[{"[", 
         RowBox[{"4", "-", 
          RowBox[{"Mod", "[", 
           RowBox[{"u", ",", "2"}], "]"}]}], "]"}], "]"}]}], ")"}], "S"}], 
    " ", "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"pVec", "[", 
        RowBox[{"[", 
         RowBox[{"4", "-", 
          RowBox[{"Mod", "[", 
           RowBox[{"u", ",", "2"}], "]"}]}], "]"}], "]"}]}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "S"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "V"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"WH", "[", 
    RowBox[{"2", ",", "u_", ",", "pVec_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"pVec", "[", 
        RowBox[{"[", 
         RowBox[{"4", "-", 
          RowBox[{"Mod", "[", 
           RowBox[{"u", ",", "2"}], "]"}]}], "]"}], "]"}]}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "V"}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"pVec", "[", 
      RowBox[{"[", 
       RowBox[{"4", "-", 
        RowBox[{"Mod", "[", 
         RowBox[{"u", ",", "2"}], "]"}]}], "]"}], "]"}], "S"}], " ", "+", 
    RowBox[{
     RowBox[{"pVec", "[", 
      RowBox[{"[", 
       RowBox[{"4", "-", 
        RowBox[{"Mod", "[", 
         RowBox[{"u", ",", "2"}], "]"}]}], "]"}], "]"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "S"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "V"}], ")"}]}]}]}], " ", " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"WP", "[", 
    RowBox[{"1", ",", "u_", ",", "pVec_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"pVec", "[", 
     RowBox[{"[", "u", "]"}], "]"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"pVec", "[", 
        RowBox[{"[", "u", "]"}], "]"}]}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "S"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"WP", "[", 
    RowBox[{"2", ",", "u_", ",", "pVec_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"pVec", "[", 
       RowBox[{"[", "u", "]"}], "]"}]}], ")"}], "+", 
    RowBox[{
     RowBox[{"pVec", "[", 
      RowBox[{"[", "u", "]"}], "]"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", "S"}], ")"}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.857553688648953*^9, 3.857553747488077*^9}, {
   3.8575537806278887`*^9, 3.857553881738371*^9}, {3.8575547294084673`*^9, 
   3.857554750958584*^9}, {3.8582545658470583`*^9, 3.858254575846238*^9}, {
   3.8582546064799232`*^9, 3.858254700073872*^9}, {3.85825491914996*^9, 
   3.858254922005704*^9}, {3.8582551344325933`*^9, 3.8582551487279387`*^9}, {
   3.8582553539811907`*^9, 3.858255373964965*^9}, {3.858255495911234*^9, 
   3.858255521117662*^9}, {3.858346810643413*^9, 3.858346810987135*^9}, {
   3.8583474717806177`*^9, 3.858347507323225*^9}, {3.8583475530853643`*^9, 
   3.858347584892568*^9}, 3.8583479556441*^9},
 ExpressionUUID -> "dc7c901b-01c2-4c34-a313-69f523e16dd3"],

Cell["Relative fitness values", "Text",
 CellChangeTimes->{{3.8575539337092667`*^9, 3.857553962216299*^9}, {
  3.858254707424376*^9, 3.858254709080665*^9}},
 ExpressionUUID -> "45f54a61-675e-472a-94a7-2eb4c4fac408"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"wH", "[", 
    RowBox[{"u_", ",", "pVec_"}], "]"}], ":=", 
   FractionBox[
    RowBox[{"WH", "[", 
     RowBox[{"1", ",", "u", ",", "pVec"}], "]"}], 
    RowBox[{
     RowBox[{
      RowBox[{"pVec", "[", 
       RowBox[{"[", "u", "]"}], "]"}], " ", 
      RowBox[{"WH", "[", 
       RowBox[{"1", ",", "u", ",", "pVec"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"pVec", "[", 
         RowBox[{"[", "u", "]"}], "]"}]}], ")"}], 
      RowBox[{"WH", "[", 
       RowBox[{"2", ",", "u", ",", "pVec"}], "]"}]}]}]]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"wP", "[", 
    RowBox[{"u_", ",", "pVec_"}], "]"}], ":=", 
   FractionBox[
    RowBox[{"WP", "[", 
     RowBox[{"1", ",", "u", ",", "pVec"}], "]"}], 
    RowBox[{
     RowBox[{
      RowBox[{"pVec", "[", 
       RowBox[{"[", 
        RowBox[{"4", "-", 
         RowBox[{"Mod", "[", 
          RowBox[{"u", ",", "2"}], "]"}]}], "]"}], "]"}], " ", 
      RowBox[{"WP", "[", 
       RowBox[{"1", ",", "u", ",", "pVec"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"pVec", "[", 
         RowBox[{"[", 
          RowBox[{"4", "-", 
           RowBox[{"Mod", "[", 
            RowBox[{"u", ",", "2"}], "]"}]}], "]"}], "]"}]}], ")"}], 
      RowBox[{"WP", "[", 
       RowBox[{"2", ",", "u", ",", "pVec"}], "]"}]}]}]]}], " ", 
  ";"}]}], "Input",
 CellChangeTimes->{{3.85755389473662*^9, 3.857553955939641*^9}, {
   3.8575547319284887`*^9, 3.857554755837936*^9}, {3.8582547128023663`*^9, 
   3.8582547600208187`*^9}, {3.8582547988044453`*^9, 3.85825482049142*^9}, 
   3.858254935718587*^9, {3.858255297419609*^9, 3.858255299403585*^9}, {
   3.858255343341501*^9, 3.858255345668758*^9}, {3.858255442637382*^9, 
   3.858255457252624*^9}},
 ExpressionUUID -> "94cb3869-e995-47d3-a241-168f7b718825"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "Sim2", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Sim2", "[", 
   RowBox[{"pars_", ",", "intS_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Sim2", "[", 
    RowBox[{"pars", ",", "intS"}], "]"}], "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "out", ",", "g", ",", "nH1s", ",", "nP1s", ",", "nH2s", ",", "nP2s", 
       ",", "nMH1", ",", "nMH2", ",", "nMP1", ",", "nMP2", ",", "nMH11", ",", 
       "nMH12", ",", "nMH21", ",", "nMH22", ",", "nMP11", ",", "nMP12", ",", 
       "nMP21", ",", "nMP22", ",", "nH1sm", ",", "nH2sm", ",", "nP1sm", ",", 
       "nP2sm", ",", "nH11sm", ",", "nH21sm", ",", "nH12sm", ",", "nH22sm", 
       ",", "nP11sm", ",", "nP12sm", ",", "nP21sm", ",", "nP22sm", ",", 
       "nH1prime", ",", "nH2prime", ",", "nP1prime", ",", "nP2prime"}], "}"}],
      ",", 
     RowBox[{
      RowBox[{"out", "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", "2"], ",", 
           FractionBox["1", "2"], ",", 
           FractionBox["1", "2"], ",", 
           FractionBox["1", "2"]}], "}"}], "}"}], "//", "N"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"g", "=", "1"}], ",", 
        RowBox[{"g", "\[LessEqual]", 
         RowBox[{"(", 
          RowBox[{"tMax", "/.", "pars"}], ")"}]}], ",", 
        RowBox[{"g", "++"}], ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", "Selection", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"nH1s", "=", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{"BinomialDistribution", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Kappa]H", "/.", "pars"}], ")"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"wH", "[", 
                RowBox[{"1", ",", 
                 RowBox[{"out", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], 
               RowBox[{"out", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}]}], "/.", 
              "pars"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"nP1s", "=", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{"BinomialDistribution", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Kappa]P", "/.", "pars"}], ")"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"wP", "[", 
                RowBox[{"1", ",", 
                 RowBox[{"out", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], 
               RowBox[{"out", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "3"}], "]"}], "]"}]}], "/.", 
              "pars"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"nH2s", "=", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{"BinomialDistribution", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Kappa]H", "/.", "pars"}], ")"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"wH", "[", 
                RowBox[{"2", ",", 
                 RowBox[{"out", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], 
               RowBox[{"out", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "/.", 
              "pars"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"nP2s", "=", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{"BinomialDistribution", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[Kappa]P", "/.", "pars"}], ")"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"wP", "[", 
                RowBox[{"2", ",", 
                 RowBox[{"out", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], 
               RowBox[{"out", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "4"}], "]"}], "]"}]}], "/.", 
              "pars"}]}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "Number", " ", "of", " ", "type", " ", "1", " ", "host", " ", 
           "migrants", " ", "out", " ", "of", " ", "population", " ", "1"}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"nMH11", "=", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{"BinomialDistribution", "[", 
            RowBox[{"nH1s", ",", 
             RowBox[{"mH", "/.", "pars"}]}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"nMH21", "=", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{"BinomialDistribution", "[", 
            RowBox[{"nH2s", ",", 
             RowBox[{"mH", "/.", "pars"}]}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "Number", " ", "of", " ", "type", " ", "2", " ", "host", " ", 
           "migrants", " ", "out", " ", "of", " ", "population", " ", "1"}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"nMH12", "=", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{"BinomialDistribution", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"\[Kappa]H", "-", "nH1s"}], "/.", "pars"}], ",", 
             RowBox[{"mH", "/.", "pars"}]}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"nMH22", "=", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{"BinomialDistribution", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"\[Kappa]H", "-", "nH2s"}], "/.", "pars"}], ",", 
             RowBox[{"mH", "/.", "pars"}]}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "Number", " ", "of", " ", "type", " ", "1", " ", "hosts", " ", 
           "after", " ", "migration"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"nH11sm", "=", 
          RowBox[{"nH1s", "-", "nMH11", "+", "nMH21"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"nH21sm", "=", 
          RowBox[{"nH2s", "-", "nMH21", "+", "nMH11"}]}], ";", 
         "\[IndentingNewLine]", " ", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "Number", " ", "of", " ", "type", " ", "2", " ", "hosts", " ", 
           "after", " ", "migration"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"nH12sm", "=", 
          RowBox[{
           RowBox[{"\[Kappa]H", "-", "nH1s", "-", "nMH12", "+", "nMH22"}], "/.",
            "pars"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"nH22sm", "=", 
          RowBox[{
           RowBox[{"\[Kappa]H", "-", "nH2s", "-", "nMH22", "+", "nMH12"}], "/.",
            "pars"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "Number", " ", "of", " ", "type", " ", "1", " ", "parasite", " ", 
           "migrants", " ", "out", " ", "of", " ", "population", " ", "1"}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"nMP11", "=", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{"BinomialDistribution", "[", 
            RowBox[{"nP1s", ",", 
             RowBox[{"mP", "/.", "pars"}]}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"nMP21", "=", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{"BinomialDistribution", "[", 
            RowBox[{"nP2s", ",", 
             RowBox[{"mP", "/.", "pars"}]}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "Number", " ", "of", " ", "type", " ", "2", " ", "parasite", " ", 
           "migrants", " ", "out", " ", "of", " ", "population", " ", "1"}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"nMP12", "=", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{"BinomialDistribution", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"\[Kappa]P", "-", "nP1s"}], "/.", "pars"}], ",", 
             RowBox[{"mP", "/.", "pars"}]}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"nMP22", "=", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{"BinomialDistribution", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"\[Kappa]P", "-", "nP2s"}], "/.", "pars"}], ",", 
             RowBox[{"mP", "/.", "pars"}]}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "Number", " ", "of", " ", "type", " ", "1", " ", "parasites", " ", 
           "after", " ", "migration"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"nP11sm", "=", 
          RowBox[{"nP1s", "-", "nMP11", "+", "nMP21"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"nP21sm", "=", 
          RowBox[{"nP2s", "-", "nMP21", "+", "nMP11"}]}], ";", 
         "\[IndentingNewLine]", " ", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "Number", " ", "of", " ", "type", " ", "2", " ", "hosts", " ", 
           "after", " ", "migration"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"nP12sm", "=", 
          RowBox[{
           RowBox[{"\[Kappa]P", "-", "nP1s", "-", "nMP12", "+", "nMP22"}], "/.",
            "pars"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"nP22sm", "=", 
          RowBox[{
           RowBox[{"\[Kappa]P", "-", "nP2s", "-", "nMP22", "+", "nMP12"}], "/.",
            "pars"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"out", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               FractionBox["nH11sm", 
                RowBox[{"nH11sm", "+", "nH12sm"}]], ",", 
               FractionBox["nH21sm", 
                RowBox[{"nH21sm", "+", "nH22sm"}]], ",", 
               FractionBox["nP11sm", 
                RowBox[{"nP11sm", "+", "nP12sm"}]], ",", 
               FractionBox["nP21sm", 
                RowBox[{"nP21sm", "+", "nP22sm"}]]}], "}"}], "/.", "pars"}], "//",
             "N"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "out"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.857553336931319*^9, 3.857553339760133*^9}, {
   3.8575533844199467`*^9, 3.857553386467256*^9}, {3.8575536077052927`*^9, 
   3.857553686736424*^9}, {3.8575540240938463`*^9, 3.85755415758674*^9}, {
   3.857554204959188*^9, 3.8575542565896387`*^9}, {3.857554324066854*^9, 
   3.8575546681866713`*^9}, {3.8575549229555387`*^9, 
   3.8575550330454893`*^9}, {3.8575554614764423`*^9, 3.857555477954821*^9}, {
   3.858255638832817*^9, 3.858255752532222*^9}, {3.85825578467452*^9, 
   3.858255925229875*^9}, {3.858255956598247*^9, 3.858255988389636*^9}, {
   3.858256069760268*^9, 3.858256072735312*^9}, {3.8582562740023947`*^9, 
   3.8582563294516163`*^9}, {3.8582564282367887`*^9, 3.858256430010532*^9}, {
   3.858256590199576*^9, 3.858256634461961*^9}, {3.85825667680853*^9, 
   3.858256692015005*^9}, {3.8582567641721067`*^9, 3.858256803987989*^9}, {
   3.8582568374306917`*^9, 3.858256840892125*^9}, {3.8582570289357758`*^9, 
   3.858257353494149*^9}, {3.858257562320201*^9, 3.858257668746155*^9}, {
   3.858258024641522*^9, 3.858258024816195*^9}, {3.858258287197348*^9, 
   3.858258346268889*^9}, {3.8582610911361427`*^9, 3.858261091338608*^9}, {
   3.8582623586932783`*^9, 3.858262385611355*^9}, {3.858347618208322*^9, 
   3.858347659530373*^9}, 3.858351976131401*^9, {3.858422917203207*^9, 
   3.8584229653087997`*^9}, {3.858426473026128*^9, 3.858426563441745*^9}, {
   3.8584280454173393`*^9, 3.858428047897088*^9}, {3.858428084577124*^9, 
   3.858428313380003*^9}, {3.858430660598712*^9, 3.858430662732905*^9}, {
   3.858700695928475*^9, 3.858700735968174*^9}, {3.858700771978318*^9, 
   3.858700788598731*^9}, {3.8587008407989264`*^9, 3.858701058821001*^9}, {
   3.85937263316026*^9, 3.859372710163218*^9}, {3.8593727549358*^9, 
   3.859372798262986*^9}, {3.859373003962969*^9, 3.859373018477561*^9}, {
   3.859373056064587*^9, 3.859373362728355*^9}, 3.8593749068814793`*^9, {
   3.8593759782155333`*^9, 3.8593760144302683`*^9}},
 ExpressionUUID -> "3d8ced04-d6d8-493e-a0f8-537dd834b908"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"mean", "[", "pars_", "]"}], ":=", 
   RowBox[{
    RowBox[{"mean", "[", "pars", "]"}], "=", 
    RowBox[{"Mean", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"(", 
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"Sim2", "[", 
             RowBox[{"pars", ",", "j"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", "1"}], "]"}], "]"}], "+", 
           RowBox[{
            RowBox[{"Sim2", "[", 
             RowBox[{"pars", ",", "j"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "2"], ")"}], 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{
            RowBox[{
             RowBox[{"Sim2", "[", 
              RowBox[{"pars", ",", "j"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", "1"}], "]"}], "]"}], "+", 
            RowBox[{
             RowBox[{"Sim2", "[", 
              RowBox[{"pars", ",", "j"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "2"]}], ")"}]}], ",", 
       
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "2000"}], "}"}]}], "]"}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8612874513424187`*^9, 3.8612874574964647`*^9}, {
  3.861287700921672*^9, 3.861287707860168*^9}, {3.861287740507516*^9, 
  3.861287761006909*^9}, {3.8614564108247967`*^9, 3.861456431710244*^9}, {
  3.861456505075779*^9, 3.861456505315605*^9}, {3.8615685003153887`*^9, 
  3.861568505115698*^9}, {3.8618718919258947`*^9, 3.8618718970300503`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "SD", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SD", "[", "pars_", "]"}], ":=", 
   RowBox[{
    RowBox[{"SD", "[", "pars", "]"}], "=", 
    RowBox[{
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"(", 
             FractionBox[
              RowBox[{
               RowBox[{
                RowBox[{"Sim2", "[", 
                 RowBox[{"pars", ",", "j"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", "1"}], "]"}], "]"}], "+", 
               RowBox[{
                RowBox[{"Sim2", "[", 
                 RowBox[{"pars", ",", "j"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "2"], ")"}], 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              FractionBox[
               RowBox[{
                RowBox[{
                 RowBox[{"Sim2", "[", 
                  RowBox[{"pars", ",", "j"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{";;", ",", "1"}], "]"}], "]"}], "+", 
                RowBox[{
                 RowBox[{"Sim2", "[", 
                  RowBox[{"pars", ",", "j"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "2"]}], ")"}]}], 
           "-", 
           RowBox[{"mean", "[", "pars", "]"}]}], ")"}], "2"], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "2000"}], "}"}]}], "]"}], "]"}], "//", 
     "Sqrt"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.861287696740488*^9, 3.861287697764039*^9}, {
   3.86128777398377*^9, 3.8612878846884327`*^9}, 3.86145668494636*^9, {
   3.861871908884398*^9, 3.861871918172323*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.8612874513424187`*^9, 3.8612874574964647`*^9}, {
   3.861287700921672*^9, 3.861287707860168*^9}, {3.861287740507516*^9, 
   3.861287761006909*^9}, {3.8614564108247967`*^9, 3.861456431710244*^9}, {
   3.861456505075779*^9, 3.861456505315605*^9}, {3.8615685003153887`*^9, 
   3.861568505115698*^9}, {3.8618718919258947`*^9, 3.8618718970300503`*^9}, {
   3.861874879672768*^9, 3.8618749087280483`*^9}, 3.8618749744903927`*^9}],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"pHDiff", ",", "pHDiffSD"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pHDiff", "[", "pars_", "]"}], ":=", 
  RowBox[{
   RowBox[{"pHDiff", "[", "pars", "]"}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"mH", "/.", "pars"}], ")"}], "*", 
    RowBox[{"Mean", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Sim2", "[", 
             RowBox[{"pars", ",", "j"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", "1"}], "]"}], "]"}], "-", 
           RowBox[{
            RowBox[{"Sim2", "[", 
             RowBox[{"pars", ",", "j"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", "2"}], "]"}], "]"}]}], ")"}], "2"], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "2000"}], "}"}]}], "]"}], 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pHDiffSD", "[", "pars_", "]"}], ":=", 
   RowBox[{
    RowBox[{"pHDiffSD", "[", "pars", "]"}], "=", 
    RowBox[{
     RowBox[{"Mean", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Sqrt", "[", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"mH", "/.", "pars"}], ")"}], "*", 
                RowBox[{
                 RowBox[{"Sim2", "[", 
                  RowBox[{"pars", ",", "j"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{";;", ",", "1"}], "]"}], "]"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"mH", "/.", "pars"}], ")"}], "*", 
                RowBox[{
                 RowBox[{"Sim2", "[", 
                  RowBox[{"pars", ",", "j"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{";;", ",", "2"}], "]"}], "]"}]}]}], ")"}], "2"], 
            "]"}], "-", 
           RowBox[{"pHDiff", "[", "pars", "]"}]}], ")"}], "2"], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "2000"}], "}"}]}], "]"}], "]"}], "//", 
     "Sqrt"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.861287696740488*^9, 3.861287697764039*^9}, {
   3.86128777398377*^9, 3.8612878846884327`*^9}, 3.86145668494636*^9, {
   3.861871908884398*^9, 3.861871918172323*^9}, {3.861874968145458*^9, 
   3.861875011722086*^9}, {3.861875340819583*^9, 3.861875343241168*^9}, {
   3.861875403020382*^9, 3.861875451251029*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"leg", "=", 
   RowBox[{"LineLegend", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Directive", "[", 
        RowBox[{"Orange", ",", 
         RowBox[{"Opacity", "[", "0.3", "]"}]}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{"Red", ",", 
         RowBox[{"Opacity", "[", "0.3", "]"}]}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{"Blue", ",", 
         RowBox[{"Opacity", "[", "0.3", "]"}]}], "]"}], ",", 
       RowBox[{"Directive", "[", "Orange", "]"}], ",", 
       RowBox[{"Directive", "[", "Red", "]"}], ",", 
       RowBox[{"Directive", "[", "Blue", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Neutral, \!\(\*SubscriptBox[\(m\), \(i\)]\)=0.001\>\"", ",", 
       "\"\<Neutral, \!\(\*SubscriptBox[\(m\), \(i\)]\)=0.01\>\"", ",", 
       "\"\<Neutral, \!\(\*SubscriptBox[\(m\), \(i\)]\)=0.05\>\"", ",", 
       "\"\<Coevolutionary, \!\(\*SubscriptBox[\(m\), \(i\)]\)=0.001\>\"", 
       ",", "\"\<Coevolutionary, \!\(\*SubscriptBox[\(m\), \(i\)]\)=0.01\>\"",
        ",", "\"\<Coevolutionary, \!\(\*SubscriptBox[\(m\), \
\(i\)]\)=0.05\>\""}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.857557659235034*^9, 3.857557706354966*^9}, {
  3.8575578672099323`*^9, 3.857557870916712*^9}, {3.858348355414452*^9, 
  3.858348370636924*^9}, {3.858348402869893*^9, 3.858348410190549*^9}, {
  3.858422980802874*^9, 3.858423056476487*^9}, {3.8592883937080708`*^9, 
  3.859288560670891*^9}, {3.859378315105134*^9, 3.8593783319926357`*^9}, {
  3.861872126606793*^9, 3.8618721286610317`*^9}, {3.86187597574012*^9, 
  3.861876039318095*^9}},
 ExpressionUUID -> "86983290-4148-4dc9-b4a3-ca238cada277"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"mean", "[", "parsN", "]"}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "parsN", "]"}], "+", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "parsN", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "parsN", "]"}], "-", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "parsN", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Red", ",", 
          RowBox[{"Opacity", "[", "0.2", "]"}], ",", "Dashed"}], "]"}]}], ",", 
       RowBox[{"Filling", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "3", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Directive", "[", 
              RowBox[{"Red", ",", 
               RowBox[{"Opacity", "[", "0.1", "]"}]}], "]"}], "}"}]}], 
           "}"}]}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"mean", "[", "parsN2", "]"}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "parsN2", "]"}], "+", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "parsN2", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "parsN2", "]"}], "-", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "parsN2", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Blue", ",", 
          RowBox[{"Opacity", "[", "0.2", "]"}], ",", "Dashed"}], "]"}]}], ",", 
       RowBox[{"Filling", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "3", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Directive", "[", 
              RowBox[{"Blue", ",", 
               RowBox[{"Opacity", "[", "0.1", "]"}]}], "]"}], "}"}]}], 
           "}"}]}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"mean", "[", "parsN3", "]"}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "parsN3", "]"}], "+", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "parsN3", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "parsN3", "]"}], "-", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "parsN3", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Orange", ",", 
          RowBox[{"Opacity", "[", "0.2", "]"}], ",", "Dashed"}], "]"}]}], ",", 
       RowBox[{"Filling", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "3", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Directive", "[", 
              RowBox[{"Orange", ",", 
               RowBox[{"Opacity", "[", "0.1", "]"}]}], "]"}], "}"}]}], 
           "}"}]}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"mean", "[", "pars1", "]"}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "pars1", "]"}], "+", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "pars1", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "pars1", "]"}], "-", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "pars1", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", "Red", "]"}]}], ",", 
       RowBox[{"Filling", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "3", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Directive", "[", 
              RowBox[{"Red", ",", 
               RowBox[{"Opacity", "[", "0.2", "]"}]}], "]"}], "}"}]}], 
           "}"}]}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"mean", "[", "pars2", "]"}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "pars2", "]"}], "+", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "pars2", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "pars2", "]"}], "-", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "pars2", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", "Blue", "]"}]}], ",", 
       RowBox[{"Filling", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "3", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Directive", "[", 
              RowBox[{"Blue", ",", 
               RowBox[{"Opacity", "[", "0.2", "]"}]}], "]"}], "}"}]}], 
           "}"}]}], "}"}]}]}], "]"}], ",", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"mean", "[", "pars3", "]"}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "pars3", "]"}], "+", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "pars3", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "pars3", "]"}], "-", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "pars3", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", "Orange", "]"}]}], ",", 
       RowBox[{"Filling", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "3", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Directive", "[", 
              RowBox[{"Orange", ",", 
               RowBox[{"Opacity", "[", "0.2", "]"}]}], "]"}], "}"}]}], 
           "}"}]}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.5"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Host generations\>\"", ",", "\"\<Host heterozygosity\>\""}], 
       "}"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "False"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.86145683329067*^9, 3.861456861210498*^9}, {
   3.861456909188425*^9, 3.8614569189049883`*^9}, {3.861562315117729*^9, 
   3.861562315589868*^9}, {3.861563881500381*^9, 3.861563907389617*^9}, {
   3.86156409485008*^9, 3.861564121435046*^9}, {3.861564196978087*^9, 
   3.861564197148779*^9}, {3.861568694846723*^9, 3.861568714983533*^9}, {
   3.861568860917595*^9, 3.861568861042571*^9}, {3.8617349845956287`*^9, 
   3.8617349847909527`*^9}, {3.861788946981429*^9, 3.861789023660462*^9}, {
   3.8617890543059883`*^9, 3.861789054868122*^9}, {3.861789486410318*^9, 
   3.8617894967863483`*^9}, {3.861789603096192*^9, 3.8617896432989264`*^9}, {
   3.861789779624332*^9, 3.8617897799313107`*^9}, {3.861871986751754*^9, 
   3.861872082714913*^9}, {3.861874587368305*^9, 3.861874607311573*^9}, {
   3.86187494010723*^9, 3.861874946410017*^9}, {3.86187530466019*^9, 
   3.861875307724032*^9}, {3.8618760469671373`*^9, 3.861876098527257*^9}, {
   3.8618770165559196`*^9, 3.861877031891321*^9}, 3.8618770907740507`*^9, 
   3.861877329954924*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gLegend", "=", 
  RowBox[{"Legended", "[", 
   RowBox[{"g", ",", "leg"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8618770949414186`*^9, 3.8618771248494587`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, 
      GraphicsComplexBox[CompressedData["
1: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
eZNWkKwrhOYJl9+KLUkGIUzI7V7PnUeykxByiwX2R5RJZgrhrXOv9Jo/d8n3
F0Kh350Hi9+RLBZCfKDPsq6XJB8QAjdlUMUQc4YQDKWqEtwbSS4SwoKzsUrT
bpBcLYQ1gTNWsFNIbhKCeqr2+c+HSe4UwvMXmhfaIkkeEMK567aa5wJJZohg
hMG6C4+WkiwrgvUl3Hly2iSriqBw81GdCE2SdUUQyLQa06xOMohAeN1RnjmR
ZCcR1PdcWFz77Q75/iKYlDjG9P07kgUiMLNYZipxi2SxCH7428rOLSL5gAja
eGC0Lo3kDBHMKFiQYp9AcpEIev1ZewwEJFeLQGu8SWapB8lNIigP+3NMC/P/
41kjKrMtxvZSz1Iv0vleVk89a8djfvHii9SzxN4TZM4dp57lqZpz+tg26lnd
5j41PyOoZ0mVXVU95kY9Kyxmy5c7ptSzLq7oNjFXp57Fsd3+SVIa8xzYofZ0
xozP1LPqTX+tPf+YelbfD50dxyupZzF3SxpYnaSe9eNGwoBJHPUsf+vbcxW4
1LOiJi9YvtmDetZHjfu+UyyoZ70Lbm/00qCepSFq6fCUw2wIm1XFh+1+U89q
HrwjPb2XelZ9Useuhc3Us7p0OwpeVVDPSq9tEE/OpZ71++GEtou7qWd17kmb
NUVIPetaR5E5y4V6liIj9273EupZWZtO3EycjRlgf/nr+WmyJIsBqn6zOHG/
qGeNv69V0v+Meta+Hauygm5Qz0oM3xXYk0s962PhjVtp6dSzlBLd9h2Kpp61
QW/U191rqGdVnBl3M9yeelbCn3sm102oZ5WtOv6sYC6+W0MmxyvHfTK+28DY
wUc23UPUs5qSG+VV3lPPss7y2KnZQj3rS8PZ+IZL1LNOjYpmhGZSz7r1nul6
5gD1rPUPb0r5xlDPklNQl7rAp571fLmgNsudetbecI9KNyt8t4P3R8J0x+vi
ux08nDWxc8wMfF8F0YnVWyT/62GrYOr6mPvJY/DdHm7P2Nqx7Bv1rMRYZ876
TupZR9KnZnreoZ7F8dqZLllMPeug0etRuunUs7bNzCxdLaaedSxVRV+NTT3r
3Pq3XC9v6lkyE/gF5U7Us9ydT/t8A7x3BpD4k1imhvfOUHO4aqyNHN47g0QR
3+w6A++dgXXGq+tsN/WsMQqfbz1uoZ4lb9LY8ek29SzpmCgNp8vUszTLzxqP
yqSe1dkQfUs2hXqW0s787I9bqWe9Opjbw2VRz/qTtzLVzRPvXSFHvuXqDHO8
dwUX4aq5UVp47woeZd98RivivStMmjCh/uUovHeDb5+ra9gfqWcpJgm/tTyh
nlXIPGSQeId61ss1FcXzblPPEjRyXnkWUM/6JON4clI29azZS8dUVqVQzwq1
2llgGE0969AOH9FdFvWsq1uGJeQ98d4DnnxZO+v1Srz3gPNuaxKvWeG9J6yb
JZlohV4GnvCYv1dZRwPvPeH81q3K3yXx3hPGPq7fp/KHepaxfY7hkxfUs5I1
p9i63aWe5Wh0retvPvWskws+DuzIpp5VlNJ9sDGFepb9Kc+tjZupZ501fmve
w6ee9Tnznp2UF957Q7TOg3kznPHeG4KOSaaEAN57w8XfzUeatfDeG970HK+x
mYH3PmCvM+ghrYD3PmC169no2mHqWe38+Asj+6ln5f2OevGkkXpWl8Ua122X
qGdF+ccsm5VDPeuZubVEaSr1LJPzSs8WJVLPYl9M0uwTUc+KlAnaNCoC7/1A
p+Tn6xwvvPcDWem48ERHvPeHY1k3LPsM8N4fVvacM5Wciff/5oT5o5LH4L0/
LJpo7jAF/YzBBLUO5ZzwfupZs1u4BhEvqWe5XzY+EH2PelaKKHzDs1LqWdOP
WHzaVUg9y7cx84HtEepZ1XVn/Ho3U8/6Ibtc5XEYeloAWNek+0i4Yn8AxKvP
vllqjf0BUDZO43T1MuwPgFuaLUtiDLA/ADruN55Mnov9ASDdE5//WgH7AyC2
LyLMb5h6lkOVvOybj9Szioue32t7Qj2LabOpobuOelbu60X6+pepZy0890H+
dBb1LGVRhehPKvWstbJmcm/iqGclRnmd/8HG/kC4Fqp2aVQY9gfB4/vhSfMd
sT8IVpXdmt27CPuDYPtqdf5CdewPgoqMogXFctgfBLJ+6fkfpLA/CKrdzHt+
DFLP2t2SdDWig3rWSYZrYGId9SzYzjlYUUU9y+/NbqfdhdSzDqw+MsE0k3pW
+9YtTxL3Uc9qZefKVG9ATwuG3Efi+9HB2B8MH4Mvj9Z1x/5gqNQPjHcC7A+B
lqG4XG8d7A8BNfV3pr9nY38I/FrH3vhBBvtDIClc0+7sb+pZWRP3VDPeUs/y
dLw7+eVD6lnjWE9uvW+gnnW6iw3HrlHPip/zfNzhC9Szeq/LMccdop6VGv+k
Mk+MnhYK8jYur77wsD8UTmn5BXf7YX8onPj1bbnIEftDYf6q5RJDxtgfCn8S
+peWz8b+MDhzqpFhroD9YTBjzrUb3tLYHwZ/5Z7F7v9DPcvz9RsRDFLPUhtY
sFH8lnrWsKdMkvoL6lkysUeZEk3Us16PGtT/WEU96/DKYx3VxdSzDs/anb7k
LPWsS+WvjqgcpJ7Fud63fe927A+HDxeizrdFYn849Nof+vE7BPvD4euyFqVA
9LXOcBA0JJf/NsL+CNjlFl6WpI39EZBk2FjroYL9EZDz6XXt17HYHwEOv94+
OzFAPau/fimvsp96lssX3/iyp9SzbOdvm1fzgHqWhWUNNF6lnpU44XB2XCH1
LIlvUnoHM6hniWyv1Y5PoZ619dWvxsKd2M+CiQavREUi7GfBvm+9UspM7GdB
9/SfCY7u2M+COtaqmSsxM9ig+OZI2cmV2M+G42azF1UYYD8bVFPMjws1sJ8N
c6LivHIVsZ8NHXsbhyvlsZ8N428/y/3wFz2NDU8vybB+taKnsWHqOvNH2nXo
aRyY1D5xos4F9DQOlI79xZ11AD2NAxNaT50ZIUBP48B3gYqPIhc9jQNrJbrG
nPFCT+PApXu5Mkr62M+Bh9W+nm2LsJ8DCzTj10lJYD8Xcr5LFnFfoadxoXJI
R6OjGT2NCynJEktbT6GncQE4o5h1e9DTuLDhKbdq10b0NC5Ebvy7/2AEehoX
umdNqaszQ0/jwi3JjqQfSuh5PDB1+/f/QxOxnwfv1FXG/hpET+OB/T9C7X1v
0dN4MLDC5VzCI/Q0HiwcM8tDrRI9jQer2j/VZhSgp/HgyVBZueER9DQe9N9x
j1q4DT2PD4bj790YwUHP48OmIDHvgyP284G3dujWekPs50NG++MueW3s50Or
r2KHYDL280G5amWFkiT28yF/rEPpnEH0ND6s/vb2Xl8LepoAiqP1rGPukywr
gINB3baTr6KvCeDePd17o/NI1hWAr0n7XoMT6G0CqPj1s/ZrGslOAnh8hmfs
vBb9TQCSZ7yfXkavEwhAvHLQqdYSPU4A+Ue6GpqB5AMCSLC+HVOggT4ogI1H
feT3oecVCWCsxPNF4z6j1wnAXf/M5PR6kpsEkKXpmZhZi34nAKf9TdKH8kke
EED/k/SXn/aj5wlh5/7Yhk4xep4QhlP/MH+h16kKYUNTvV8wGz1PCH1jZf7u
C0HPE8L0ihUliU7oeUIw0D3WNN8SPU8Imvwv1w+qoOcJ4apHTO7pCeh5QlDI
Vt0g/w96nhD0ogIPFY1CzxPCnTKb85pf0POEEH/6/HuVt+h5QtjUdy5yfwV6
nhCMrtz0s6pCzxPCzBcHvp1OQ88TgodRzKldCeh5InB5sbJxaxh6ngiecltk
vzqg54lgRUrP2Ad26HkieOU49t2Gleh5IjjzMLn1miF6nggu+yS+t1RCzxPB
8Kgiv0Y5kgUigEZOMbcfPU8ERxaemlLeip4nghcTQmo3X0XPE8HHdbvSrArQ
80T//nuobr3rEHqeCKb2FM1ZvRk9TwTvvsn+dsL8/3hWemTh/vYu6lmOyp9O
NN+knvWi4fpp+XzqWa4mD1Xf7qeexRvQ1igUUc9a82t6+E836lnLK0wzFC2o
Z82PfHXkoDr1rA9Z528GSlHPclFcHVbaR/dZ+euNlNWaqGcVFQyefniBetZd
bUXj4wepZ+20dIg4GEk9a6BykulmZ+pZlhnR31VNqGc5yxdEdKpRz1p8pffG
TynqWcnz5qxd+BZ9yACWTSmMutRK91ms9CHG7krqWfMVl2/Vy6Se5eXgyZRO
pJ410t0A1kZSzxqx/o7WMSb1rI6NXMMN5tSz1rN3rmerUc/aJGE0KY5BPevS
dkVe+Gv0HwuI7f59cnoz3WdVFPeaB5XTfVZED6ek9AT1rKWLS/U7t1DPenH3
mc+pIOpZJ4uO1WVbU88yC8oLYepRz0oxyFeXl6OedTbMfwvvv960DHy7BqdO
7EDPWQarH0967FmP79ZwbUrNkYlX6D6r6ODOZwZn6D7r737/qakJ1LO++B4u
M1tHPav4/ijZPA/qWYrzXceNNaOeJT/yScdBTepZkkZGw09kqWctEfTPLfqN
PrMS9O/nfKrCvRXDFqaKx1x93oTvtnDd0e1Pz2W6zxpZc2tE1Vm6zypybf28
6iDdZ6X9LWH9SKD7LIP8Kyd2xtB9lnp5kapuOPUsbn1Gwjgn6lmvD2u/SjKg
nrVk54STs5WoZyXMHVL7NIJ6lmMge9PSXvQYJxjd0OvV3oie4wTu3yYLt1xD
z3GCm3dW978vQc9xgr1XT96Zd5rus8QyjWdmxdF9lrTOJvsRArrP+pwWr/DJ
h+6zvv3VK7psQT1LLsjIdu9c6lmza2ITpqlQz+o+O7lopSz1rO2saJV339Fj
VoPrp9DIYz3oMavhV9Y1m7wH6DGr4eGDjYK3l9BjVsMkDf6wXBbdZ82ZXDDz
5E66z/oz4suGGBHdZx0+At8e+tN91vYN+lkDdnSfdb5nW6CBPvWsJfUjPnRP
o55lJ/l9gC1NPSuIeVw8aTT1rCJXRvy49+gp7lB7aIGHBO6pxO7AT/AdjG9C
j3GH9UtY3MOl6DEeEHcnacPTM3jvAUs0quLKD9B91hjdJK26OLrP8jtcdmtJ
NN1ndV9sKm4Ko/us5UZpUhZr6D7LZ20Ox3sJ3WcV2Dktc9OhnpXWMHKINYF6
1jvpkGT+D/SUNbB8zvIP4qfoKWtAq3Xce7uH6Cle4Dm5PzqvGj3GC/wH9vjb
ZeO9F7yQc90dno73XuD098KVjVvpPuvDgwCr1A10n8U+sHHaP2F0n3V1S2a5
CvpPtTfweEYFaUvpPqssPurpIyO6z7LsNNvNnUk9q8Cx+ueZcdSzZm3+fSLx
I3qML3ztzG/b/Bj9xReGBrP22dxCb/GFve6fRbtL0Fd8wU5jQHZrLt77Ade/
Tyc6Ee/9wH/r1rYjW+k+q35iy6U9kXSftTk1ZsSzULrPWrbJ31fSnu6zIp12
Th+9mO6zLF/65Zmq0H1W6v77mYJJdJ91Kc8myRe9R5UJAYoFursH0VOYUL/5
Uvuhp+gpTLjXv9K+vRY9hQnFD0ac21iFnsKE94d66xZno+cwYcUEnbGcXeg5
TJAIOrFNFEn3WQaPTvfl+NF9luXQz+Sb6DsQAGuUvE7wHeg+qyX6r5yROd1n
zVrF1F+hR/dZXHZOoooK3WcdHWifViZJPUvfPs4q9it6SiB81XCv7HiOnhII
4bcUWe2N6CmBUHtLctGjK+gpgVC4MMpxTTZ6TiAkyW9cKJGOnhMIv8pVmxds
Q88JhKruOSbVbLrPmjzeO6A5hO6z9jRaaTEc6D5rn5bJlVhdus8y93/i0qZC
91nNi5e9jh5P91kxJz10tEbSfVbgoASn6QN6ShCkGA6U57WhpwRBACPwqPtN
9JRgOAeBG25dRE8JBtlTsW/ss9FTguEK30Uw8xh6TjC8N9NUl92BnhMMvQq5
/tJ8us96H+tSVelF91m1oq5i5VV0n8U9Emvz0oDus2A48p2iOt1nMQInHt+o
RPdZiyav+mInQfdZrR2szxEf0VNCINv0e/aD5+gpIRAdm96a8t99VAhIXFm8
p+8aekoI/OPJu7IK/YYRCnyNtDGSmegpoZBrvPBSWzx6SijUzzMpuC6g+6wG
25DhED+6z3rQOcsr0YHus6aZLzP6aE73WS+t/QYbtOg+i2PBnxc0me6ztlW7
JvVJ0n3W2fbc49Hf0DPCgP+2ZOND3D8xw0CfvcdkZAd6Rhjcabk4Y8Ej9Iww
GFe6d7v8XfSUMBjrfCXc9jJ6Shh0JjXUeOWgp4SDvOfZR9uOoqeEQ7zOF82e
/dgfDvd1viglbcb+cPC0LtvZw6X7rLcZQS9kff/PPktFd6Dzv/uocHhQ2/VS
35Tus6JNlB0L1eg+y3qBZtwlObrPkmE0iOSk6D7LI26HTV4PekoERK3j344s
Rk+JgBGZG9X3Z6OnRECTg7zxy3j0lAjILLWwjohCT4mAJIOzdm726CksmO2T
a1egg57DgnljhUcHZdFzWFCaJ5y55wd6CguYud1XP71ET2GB0YcNgZPL0FNY
kLjVxnn0AfQUFuiWh6mGb0JPYQGvaWVWcjR6Chsuz388OiQAPYUNfw7FX/cz
Qs9hg5fd/tg9uHdissGTddhq11/0DDbo6JumS35Fz2DDOxet9Ycb0DPYoM8K
ms/PRE9hQ92qTdtN09FTOAAKhYpbYtFTOPC0Y4WNnw96CgfWLZsfwjRBT+FA
UkjBg5LF2M+BztDQuZM0sJ8DJ6Dfs/437pM44Jca3rzjF3oKB9b0eq72uoue
woWHJWtDPXPRT7hwVP2my+fD6CVcaDIqq18Yhj7ChXPnN+wPdUIP4YLOd13h
dVP0Dy5MVru83nge9nMh78Dq+m8M7OfCqhqledCJnsGDaR6NL+oeoF/w4KLK
CuNJ5egVPFBh7W2txP0Skwfftjyf6puOHsEDO50F2sox6A88uCp5f5aOAL2F
B/eWTmEzfdBXeNDOitp73Qr7+fDn77TCy/Ownw9si8HwRvQO4MPb0ac3/fqK
PsCHaVNMTh99Q7KYD1X3j97PeUhyBh9iPZ5Kz6lF7+CDOG7HI6kL6Bt8aDMN
3LslCT1DAMf3RAw934ueIYBa3ge1M5vRMwRw6Uk8oygCPUMAiTGtlXHe6BkC
WLgt13uaG3qGACIkndY4LsDfVwA39r28OU8aPUMAb4/nOx8fRs8QwGX34zkO
v9EzBDAU+DTi8Qv0DAHUzOn1XtiEniGAMph30i8PPePfz7Ot0grdgZ4hAKvB
rF+7t+A+SQCsvY9GJofiPkkAI97MCj65Er1DCD5mhvx1xrhPEkK1RreCpiHu
k4QgEa0fc0MD90lCqJAPeyRSxn2SEEambzW2H437JCEo61nf++cX7pOEcF7/
qdOMNtwnCSEjRG64/g7uk4QwqJwmW1KF+yQhZBdvP1d5BfdJQsj01AvYcQ73
SUJoy3Wym3QC90lCWNyepLScj/skIcgI9g+dEpHcKYT0jitcWUeSB4QwZKeQ
d88M90siKNqTcUh7BsmyIpD7OXrFglEkq4pgSoiT818Gyf/rWYJNc7SGb5Pv
LwKLonHOjHckO4ngheBJ3LJmkpki0J4UMnXsbZIFIjAunH47NYNksQjc9w1K
n9xN8gERPGyYXsgVkZwhAvvXrfs9AkguEkFjfnHzS1uSq0VgZHhTZYoeyU0i
2Pqk11xi0W2L/wFCe7oL
       
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[1, 0, 0], 
           Opacity[0.1]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl1UO0GAYQBdA0P2ls27Zt2/aP+WObTdrYtu02tm23sW22N6eLe86sZvXe
TJLAoKodggcLFuwX6hrqUZ8GNKQRjWlCIE1pRnNa0JJWtKYNbWlHe34uDqIj
nehMF7rSje70oCe96E0f+tKP/gxgIIMYzBCGMozhjOA3RjKK3/mD0YxhLOMY
zwQmMonJTGEq05jODGYyi9nMYS7zmM8CFrKIxSxhKctYzgpWsorVrGEt61jP
Bjayic1sYSt/8hfb2M4OdrKL3exhL/vYzwEOcojDHOEoxzjOCU5yitOc4Szn
OM8FLnKJy1zhKte4zg1ucou/+Yfb3OEu97jPAx7yiMc84SnPeM4LXvKK17zh
Le94zwc+8onPfOEr3/jOD/4lWIB8EpwAQhCSXwlFaMIQlnCEJwIRiURkohCV
aEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVs
ZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpU
pwY1qUVt6lCXetSnAQ1pRGOaEEhTmtGcFrSkFa1pQ1va0Z4OBNGRTnSmC13p
Rnd60JNe9KYPfelHfwYwkEEMZghDGcZwRgT8f7fqUJta1KQG1alGVapQmUpU
pALlKUdZylCaUpSkBMUpRlGKUJhCFKQA+clHXvKQm1zkJAfZyUZWspCZTGQk
A+lJR1rSkJpUpCQFyUlGUpKQmEQkJAHxiUdc4hCbWMQkBtGJRlSiEJlIRCQC
4QlHWMIQmlD8SkhCEEBwfvnZw5999Ch+8J1vfOULn/nERz7wnne85Q2vecVL
XvCcZzzlCY95xEMecJ973OUOt/mHv7nFTW5wnWtc5QqXucRFLnCec5zlDKc5
xUlOcJxjHOUIhznEQQ6wn33sZQ+72cVOdrCdbfzFn2xlC5vZxEY2sJ51rGUN
q1nFSlawnGUsZQmLWcRCFjCfecxlDrOZxUxmMJ1pTGUKk5nERCYwnnGMZQyj
+YPfGcVIfmMEwxnGUIYwmEEMZAD96Udf+tCbXvSkB93pRle60JlOdCSIDrSn
HW1pQ2ta0ZIWNKcZTQmkCY1pREMaUJ961KUOtalFTWpQnWpUpQqVqURFKlCe
cpSlDKUpRUlKUJxiFKUIhSlEQQqQn3zkJQ+5yUVOcpCdbGQlC5nJREb+A402
JVw=
             "]]}]}, {}, {}}, {{}, {}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwl1FO4EAYYBuBzsm2dTtYyl81l17Jt27Zbts0t2225LZurtrDF9zxdvN9/
+918f3CTjlU7BAYEBPwgQm4oQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jE
Iz4JSEgiEpOEpCQjiOQEk4KUpCI1aUhLOtKTgYxkCulMZrKQlWxkJwc5yUVu
8pCXfPxIfgpQkEIUpghFKUZxSlCSUpSmDGUpR3kq8BMVqURlqlCValSnBjWp
RW3qUJd61OdnGtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCT
XvSmD33pR38GMJBBDGYIQxnGcEYwklGMZgxjGcd4JjCRSUxmClOZxnRmMJNZ
zGYOc/mFecxnAQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZ
xW5+5Tf2sJd97OcABznEYY5wlGMc5wQnOcVpznCWc5znd/7gAhe5xGWucJVr
XOdP/uIGN7nFbe5wl3vc5wEPecRjnvCUZzznBS/5m1e85g3/8C9vecd7PvAf
//ORT3zmC18JGX8goQhNGMISjvBEICKRiEwUohKN6MQgJrGITRziEo/4JCAh
iUhMEpKSjCCSE0wKUpKK1KQhLelITwYykinw+8/6BlnShZs=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwV0FVjFgQAQNGPkFK6lBBG90Z3j1zANrpDkBIkJUQpgw4FBZTu7u5GUkpC
UrqlQer4cO4PuEGtukR3jhUIBPJLAYIJoSCFKEwRilKM4pSgJKUoTRnKUo7y
VKAilahMKFWoSjWqU4OahBFOBJHUojZRRBNDHepSj/o0oCGNaEwTmtKM5rSg
Ja1ozWe0oS2f0472dKAjnfiC/0d04Uu60o3u9KAnvfiK3vShL/34mv58w7cM
YCCDGMwQvuN7fuBHhjKM4YxgJKMYzRjGMo6f+JnxTOAXfmUik5jMb/zOFKYy
jenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAlq1jNGtayjvVsYCOb2MwWtrKN
7exgJ7vYzR72so/9/MEBDnKIwxzhKH9yjOOc4CSn+IvTnOEs5/ib81zgIpe4
zBX+4SrXuM4NbnKL29zhLve4zwMe8i+PeMwTnvKM57zgJa/4j9e84S3vCMQO
BGIRmzjE5QPiEZ8EJCQRH/IRiUlCUpKRnBSkJBWpSUNaPuYT0pGeDGTkUzKR
mSCykJVsZCcHOclFbvKQl3zkpwDBhFCQQhSmCEUpRnFKUJJSlKYMZSlHeSpQ
kUpUJpQqVKUa1alBTcIIJ4JIalGbKKKJoQ51qUd9GtCQRrwHpYWO3g==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwNxFVgFQQAAMA3Qlq6ke6STkUJ6U6pwTbYYION7m5QKaU7DBqkG6RBSaVL
6VYapO7jLltoTMPooEAgUEgtYwUCrWhNMG1oSwihhNGO9oQTQQc6EkkUnehM
NDF0oSvd6E4PetKL3vShL/3ozwAGMojBDGEowxjOCEYyitGMYSzj+IZv+Y7x
TGAik5jM9/zAFKYyjenMYCazmM0c5jKP+SxgIYtYzI/8xM/8whKWsozlrGAl
q1jNGn5lLetYzwY2sonNbGEr29jODnayi938xh72so/9HOAghzjMEX7nD45y
jOOc4CSn+JO/OM0ZznKO81zgIpe4zBWu8jf/cI3r3OAmt7jNHe5yj/s84CGP
+Jf/eMwTnvKM57zgJa94zf+84S3veE8gdiAQRCxiE4e4fEQ84pOAhCQiMUn4
mKQkIzkpSEkqUpOGtKQjPRnISCY+ITNZyEo2spODnOQiN3nISz7yU4CCFKIw
n1KEohSjOCUoSSlKU4aylKM8n/E5FfiCL6lIJSpTha+oSjWqU4Oa1KI2dahL
PerTgIY0ojFNaEozvqY5LWhJK1oTTBvaEkIoYbSjPeFE0IGORBJFJzoTTQxd
6Eo3utODnvSiN33oSz/6M4CBDGIwQxjKMIYzgpGMYjQfAGsLmCE=
           
           "]]}}}], {}, {}, {{}, {}}}, {{}, 
      GraphicsComplexBox[CompressedData["
1:eJxt2nk0FWzYLvBNJd4kiYhCiIqQpCLcReYp8xC2edz2UJKKdqkkKYXSTCFR
MtUbTSg0KCSVBlQaiGiQEJ2+9T33+5y1zukf61qP22X/pfVb11x/tmOQIIPB
SJzAYPzP1//9N2D8v187yVcGxHx42P3lfQfJwrCMa3v11j3M4lBbtSFh6kXM
khD9ccDBIB2zDMS6/bK7H4N5NgxdqTuYwcSsCKmrw2vULDArQc3nwGV+izGr
wK7w0oNrJDCrwsr1d055/mwneT4oTBMRhZeYF0KNzMZ42VrMGmCf1aJ5qQCz
JoxdWNnwKA2zNlQcdGQrx2FeDIIL9BPsfTHrQN9eoVENM8xLYF/rC94Zdcy6
kHvv5CLGTMxLIY21prXk52uS9cBob75GaCvmZWActEtK7Drm5dBxWS+n8wTm
FVArOtJ6LB6zPsieKnjgFInZALrs9MWH7TGvBAeJ6JfzdDEbgpr6ZX15ScxG
UOs4bBg4/IpkY7AI+7X78jvMANEhyz9mNJHMB1BdOd0qrhzfV8GOowmLbfLw
fRXMrVMNNcnA99WgNeSdO42P76vhytf38fFR+G4CCU5DG4ft8d0EBE+5SXoZ
4Lsp7BZsfKmsgu+moH2wrnSnOL6vgTzZ40eYn1+S9zUgm1KS3PeUZIYZ5G++
zt1Siu9mEF1fGKN0BN/NobsyI69hK76bQ+gHlSaPSHy3AEmFM+k5nvhuAeGX
1r25tBLfLaH2cmp/gTK+WwJzLOjJlWn4bgW/S1WUG/pekHcraM68Lvn9CckM
a4jUnLmUVYvv1iC/RZxlchXfbWDdZNtkweP4bgOZi71+z92J77bgkJh0bYCH
77bQ05/gqOuN73bwUzvGSc4M3+0g/fKadutF+G4PHS0dT05L4bs9yAQdvf19
uI28O0B3lkjbl08kgwNkyjZs+dlIMt8BmI9LeTuqSa5yAN72kaHgPLxfC3Yf
ZDNWnsD7tTB5e+36jFS8XwtjsWUh2/bg/VpwFTbeF7YF7x3B9NBEkTEfvHeE
N+tDny5wxHtHCJM7K/nDAO8dQW5Et+WgJt47QdruSePflfHeCXZpbXzVNQPv
nYDzWeimuCjeO8GH+Un/zBl5Tu6dQSfo5vWaTySDMxSp3UwPf0Ey3xl2dySZ
WlWSXOUMR59MHnHKw3sXkJRlWsw5iPcuUDQwdoy1G+9d4JxItZ0PH+9dQLfd
NvZaCN67Ql/Ra76ZFd67guXQIvXBxXjvCtu3TJRPmof3rlB+JP9FphTeu0FT
avi0H0PPyL0buGV81o7rI5nvBqLLpOYFvyC5yg3yX0k/07lDMsMdGos2PI2v
wHt32HpSOI55Hu/d4aGX7YSPSXjvDnqvin4qROG9B1TasPu8HfHeA2R+C00Y
1sd7D1j3LkkyZDHee4B0HBQWLsR7T2D7yTzqVcB7T8gT++52djree0Jsi8N+
vfGn5N4TtpZJVdj3kczwgqlTZJ/2N5MMXlD/wNu/spJkvhew9Cx3ns/Bey+I
59cp7zyG9+tg41WRAycS8X4d/JZSWLV6A96vA6Edh/qCPPF+HUQOlVtvXIr3
3lCdfTUXVPHeG5pm+N+5PRvvvaEtsdlsqhjee0PpVvUnfYOt5N4H3neofr73
iWTwgaLhHp/LdSTzfWA04+INbhnJVT7wYZ6xhtZRvPcFS9/uT382470vGG5+
WOzjhfe+wCq/InLBEu99ITRz+ZewZXjPhN93uHUn5pOsyIQtE8/F/ZDEn8cE
Cc5O4y1fn/xvZjJhVvnkokNvSOYz4Q6rUVSpneQsJoRrnLuk30RyFRN+bn/s
suQ6yZ1MeFTut/pUCckMP5Dw03ApukCyoh/oPxOOGDhNMvhBffWRlmu7sN8P
9H5NZc1dj/1+cKd24u6sYOz3g8H2aiOpddjvB60yO5YeNMV+PzDWCNDSNsB+
f/iaxH6/RRv7/WFURVtdUxn7/UEyeObgESXs94ego7+2RYtivz+YbpyhPft7
C+n3hx36Ap2nPpBc5Q//rlgtx3xEcqc/zL266oZBNcmMAFgaDWPV5SQrBsCq
JsUv3jkkQwCcDr77pWMPycwAMDgkIXB/A8n8AMh+tH5UNAT7A2B4Z5ywhy32
B4DYpoX3NI2xPwDcuncZFi3G/kCInLqvP0oT+wNBNGLi1w1y2B8I58WEzdeI
Y38gJKoMnp796zHpDwQh5uZgu36SswKh11RvXUUnyVWB4M4JhyMPSe4MhIVx
kb8/XyGZEQTn6tU+XT5FsmIQKLmNxfWlkQxBwGE6V3zbTDIzCMznWLRGs7A/
CPhzl/Idg7E/CKyDJ7+XNcH+IFgmOFspYQn2B8FgW8Gny/OwPxiO+QVWWE3D
/mDoVerzcP7WTPqDoZVhGaTWTjIzGEJzPyfebSKZHwyNc/45Pu8OyVnBsGxw
64TBqyRXBUNidbraljSSO4Nhe4yMgOc2khkhsNdojvShEJIVQ8A+SUn8nQ/2
h4De0qNC1z2xPwSEDr8ZZVtjfwjcqxlTuLwK+0NA/kHPxR262B8CRdWWL4/O
x/4Q8GK+PNwnhf2h0HREXllXCPtDYeuricLvx5pIfyjoeJfN+TBIMjMU2roT
lg98JJkfCoeXCV9e0E5yVij4axX+mfWY5KpQYLfkKptdJbkzFDpnnXpxOZtk
RhgYJqlFS6WRrBgGZplf/N8nYH8Y7O+ZozAlBvvDoFpq9fdbmPlhMLpufMZp
f+wPgz3LTZ6Z+GB/GPw8ctNxrw32h0GMuSBYrsH+cLDPu93DWIn94WAWr7pj
4RLsDweW0tuqDfLYHw6qlk4SUlLYHw6GAjEmdULYHw7KjTN/7fnWSPrDIX9I
uT6xgeTOcNCtUWyaWUEyIwLihN7cDD1OsmIEtHNlZ93cRzJEwFnLUmfzQJKZ
EXDjWGKNrx3J/AjIPpt7JFef5KwISG+ryV80CfsjYHyndMWjgUekPwImci/U
e7SRzIgEV4UczYEikhUjgd85s1RwP8kQCZWx0w9F+5PMjIT9R/xGZliSzI8E
d+MF/Qt1SM6KBOf4I66yUiRXRYK8/CKXsV8PSX8kFJTneS0fJJnBgtYLWeWW
fSQrsuCcko6tyjOSgQUuH3632FSSzGRBZ1PLbpUSkvkseHhasDnwNMlZLKgP
zD1hvpHkKhZo3rS5dTMI+//2Ka844WGP/VGwCDao3zTC/ii4ekb6faE29kdB
T+gP5XFJ7P/7/YeD5D9PxP4oYDT9urGrv4H0R0GdGVua+5jkqihon3A5Rbqc
5M4oiJlbNW6SQTKDDT8+dMdYJJGsyIYm69ht4VtJBjb0xikfFuSQzGTDridJ
mUvcSOazoVG7pKTYCfvZwPXyjSxei/1sEJ/ayC0zwn42sGbVnTCWw34O5B5a
VG8kQrI4B2RiO5Wfv35Afh8OBPjm9T65TbI2B14Y/XvS8yTJwIHk08I7n20k
2YEDA/p7nh/0IpnJgfP3ThQfXEsyhwNnPRNipIBkPgfaZle1bl9IcioH/iSb
N6oKkZzFgZhDppqa3+7/by7++/M+sJ5Xvye5igMWZ9N1ah6S3PT399NQzfG4
SnInB7o3C7ZrHCd5gANDJrsilTNJZnBh99Pj0Rd3kyzOBU2FVInR9SQrcmGD
onunijvJ2lwovriusGE5ycCFOK6Ufe0Mkh248P6tkkzs0D3y+blw851ntX0v
yRwu6Gav1z7cQjKfCwUKfXtXlZKcyoUWyeBt7ftJzuJCsH+6hyub5GIuWD1r
NrrnQHIVF9Ibl/hP1ya5iQuvlYW/haqR3MmFM1N0Gn7KkzzABe1NeZWvZ5DM
4MEF0a0wf+Au+fw8mOXivVmjiWRFHpQ6q6uFFZOszQMhFZuJzFSSgQf7RWJ+
5sSS7MCDgd8N5mciSWbyoGvTyljjIJI5PNi0SuDvfztI5vOgMkDMwdOV5FQe
2AY8ZF82ITmLBxsDjhzQw1zMA2dT4eZlyiRX8eBisNmlg7NIbuLB/E+qZcoT
Sf7/eJaAc9ZAykfqWXWWS9fMfkg9q3n01C7VUupZFWNhdwePUc86ISscu4BP
PSteKHCvSjj1LEef6BKWE/Us0y9OsZ8NqWd5qPSZjSlSz9rnZ5lVKYR5PlyR
lh4W6KOexZz4bnDWc+pZR2smhtrdop4ltYVz9s556lkb/TdmHkqnnrV89HPs
xU3Usw4LRIaa+VHPMl40p9nNgnrWjwmLwuboUs9qsVApSP3Pt/TA5U3Jli8/
qWfV9QqXTe2gnvVCbo1SdzX1LPvOHSODOdSzHrYeuVKTRj3L2tz/T/Im6lni
MSbPnntTzxq/b2Q2YkQ9ixex0aRtHmZj2GS+yNhrOmaApOjGoxF/qGf1fUms
U++inlU3d+jb0FPqWZuzbaIm1FPPWjUz2ZNfSj0r+aRxVEc29Sy5uh+C5Tup
Z7W9npGhwqWedaN6ybVRT+pZpxXMcrdaUM9iGpQo//jPu9aAp9GeA4+m47sZ
XHBssH3TTz3LbUX7Bb9W6lmtTieb1K9Tz7Iue2taf4F6VozqwdawE9Szjs/9
ITSdTz1LOyXgvUEo9SzD+kmB2i7Us9qON/2W0MV3K0iX2Sh0cDa+W4ObrKaE
1FR8t4YvxosVzvyhnjUlTmlJ3DvqWXvMOg+MPqSe5ZurbPLkBvWs49867sqe
p571O0fVRTONeha/XfrmzC3Us6pOHmg3DaSe9UFcN+WwJb47QNWUXwv9V5AM
DrD8yLd1OnPx+x1g5qxrzS4zSK5yAEOfiS7ThqlnFR/1ueXaTz1L9+vWXrEu
6lkKORJTu15Rz5LY1iPl30Q965D765a8cupZ69RGAuPyqWctXL/jUt8h6lkh
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
IUO3YcGfbeh5XLg2WJh4iYmexwWhoWOVuwzQ87ggvkhakSePnscFq8a6HM0Z
6HlcuHezdSB1hPgXnwuRrMRhvTaSU7lwuGL4xbHLJGdx4YyUb8mfDPQ8Llxk
nBGXiUHP40L1+k4hTVf0PC6UftSbaGKLnseFl6Me/RWm6HlcCFb9KLBIHz2P
B+Ijd/vsZ6Ln8WBeS4/n00HiXYo8KM+sa3/WSrI2Dz7meL8euUwy8CBzkWpN
wymSHXjAMSiMOnkQPY8Hm7o7fTz2oufxIE9h4qKmJPQ8HgiXubFmb0XP44Hv
ysDKb2HoeTx4GmbulI25mAd65tIlKZboeTyojfjQ4AvoeTx4oXlWXUYdve7/
9ay+TaNv7buoZ+VnBqkH1FHPqthltf3HOepZi5tj2vgp1LNc0z+pRLCpZ3FC
FhwVcqOe9UjVt+XNSupZ0B09+FSFelZJccyrlAnUs3p3Gp8ceU/3WXuERuXj
71HPUlkkMlmulHrWpPgzg9MOU8963y48+DyOetbvKk2z8iDqWQ2ue/Z9XUM9
y1QyO2WGOvWstrhMyT4x6lmuB8S+vR1CH1oKToeCGS1P6T5Lbcnp12/KqGdd
fS2wSewo9awu+/mqz2OoZxms4JYYu1PPCgm+0dllSj0rzlVibrAa9azUi3kd
vH+oZzkkq2ut7kbvMQIZ/a3L+xvoPksm+fajaVfoPsvPI1u3Kpt6lm/SsYeP
dlLPMpouzsmKpp51t4fhnxBAPWvOc+2BU7bUs96s2XdgjgH1rM+dwz1GctSz
1H2Opx2cRD3L3iT8t3Ufeo8pVAuaV+17jh60BnqHd055WEL3WS9evkgUPUH3
WTlnLmRIRVPPSnOJXf3OnXrW2Nz9W1mG1LN2zQrx6lWnnlUiXebUIUM9a4Vh
7TW7YfQeS/BsvzE8qwN9xxISltSZGt7HdytQuL/Jctc5us8SmzVB2SWF7rO2
rx53q42j+yy7K/2VXRzqWRcPxrxLdKSelT/7aaiFPvWsVWH9S6bOp561ok/t
le106lkD1+vXCqMv8e0gf9/6cX4Heos9jItoPxipw3d7sKoYH3YooPssCT25
xC2ZdJ/162Tuscp4us8qSC6YcYlN91nncgaO3XSintWr8yxcyZJ61gtxsVE5
Q+pZL+2da2R1qWcdO5gmyFWlnvXzgbqRkwj1rOCqp+ZPR9FTHCH/9u3YEfSh
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
       
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[0, 0, 1], 
           Opacity[0.1]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl1UO0GAYQBdA0P2ls27Zt2/aP+WObTdrYtu02tm23sW22N6eLe86sZvXe
TJLAoKodggcLFuwX6hrqUZ8GNKQRjWlCIE1pRnNa0JJWtKYNbWlHe34uDqIj
nehMF7rSje70oCe96E0f+tKP/gxgIIMYzBCGMozhjOA3RjKK3/mD0YxhLOMY
zwQmMonJTGEq05jODGYyi9nMYS7zmM8CFrKIxSxhKctYzgpWsorVrGEt61jP
Bjayic1sYSt/8hfb2M4OdrKL3exhL/vYzwEOcojDHOEoxzjOCU5yitOc4Szn
OM8FLnKJy1zhKte4zg1ucou/+Yfb3OEu97jPAx7yiMc84SnPeM4LXvKK17zh
Le94zwc+8onPfOEr3/jOD/4lWIB8EpwAQhCSXwlFaMIQlnCEJwIRiURkohCV
aEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVs
ZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpU
pwY1qUVt6lCXetSnAQ1pRGOaEEhTmtGcFrSkFa1pQ1va0Z4OBNGRTnSmC13p
Rnd60JNe9KYPfelHfwYwkEEMZghDGcZwRgT8f7fqUJta1KQG1alGVapQmUpU
pALlKUdZylCaUpSkBMUpRlGKUJhCFKQA+clHXvKQm1zkJAfZyUZWspCZTGQk
A+lJR1rSkJpUpCQFyUlGUpKQmEQkJAHxiUdc4hCbWMQkBtGJRlSiEJlIRCQC
4QlHWMIQmlD8SkhCEEBwfvnZw5999Ch+8J1vfOULn/nERz7wnne85Q2vecVL
XvCcZzzlCY95xEMecJ973OUOt/mHv7nFTW5wnWtc5QqXucRFLnCec5zlDKc5
xUlOcJxjHOUIhznEQQ6wn33sZQ+72cVOdrCdbfzFn2xlC5vZxEY2sJ51rGUN
q1nFSlawnGUsZQmLWcRCFjCfecxlDrOZxUxmMJ1pTGUKk5nERCYwnnGMZQyj
+YPfGcVIfmMEwxnGUIYwmEEMZAD96Udf+tCbXvSkB93pRle60JlOdCSIDrSn
HW1pQ2ta0ZIWNKcZTQmkCY1pREMaUJ961KUOtalFTWpQnWpUpQqVqURFKlCe
cpSlDKUpRUlKUJxiFKUIhSlEQQqQn3zkJQ+5yUVOcpCdbGQlC5nJREb+A402
JVw=
             "]]}]}, {}, {}}, {{}, {}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwl1FO4EAYYBuBzsm2dTtYyl81l17Jt27Zbts0t2225LZurtrDF9zxdvN9/
+918f3CTjlU7BAYEBPwgQm4oQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jE
Iz4JSEgiEpOEpCQjiOQEk4KUpCI1aUhLOtKTgYxkCulMZrKQlWxkJwc5yUVu
8pCXfPxIfgpQkEIUpghFKUZxSlCSUpSmDGUpR3kq8BMVqURlqlCValSnBjWp
RW3qUJd61OdnGtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCT
XvSmD33pR38GMJBBDGYIQxnGcEYwklGMZgxjGcd4JjCRSUxmClOZxnRmMJNZ
zGYOc/mFecxnAQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZ
xW5+5Tf2sJd97OcABznEYY5wlGMc5wQnOcVpznCWc5znd/7gAhe5xGWucJVr
XOdP/uIGN7nFbe5wl3vc5wEPecRjnvCUZzznBS/5m1e85g3/8C9vecd7PvAf
//ORT3zmC18JGX8goQhNGMISjvBEICKRiEwUohKN6MQgJrGITRziEo/4JCAh
iUhMEpKSjCCSE0wKUpKK1KQhLelITwYykinw+8/6BlnShZs=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwV0FVjFgQAQNGPkFK6lBBG90Z3j1zANrpDkBIkJUQpgw4FBZTu7u5GUkpC
UrqlQer4cO4PuEGtukR3jhUIBPJLAYIJoSCFKEwRilKM4pSgJKUoTRnKUo7y
VKAilahMKFWoSjWqU4OahBFOBJHUojZRRBNDHepSj/o0oCGNaEwTmtKM5rSg
Ja1ozWe0oS2f0472dKAjnfiC/0d04Uu60o3u9KAnvfiK3vShL/34mv58w7cM
YCCDGMwQvuN7fuBHhjKM4YxgJKMYzRjGMo6f+JnxTOAXfmUik5jMb/zOFKYy
jenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAlq1jNGtayjvVsYCOb2MwWtrKN
7exgJ7vYzR72so/9/MEBDnKIwxzhKH9yjOOc4CSn+IvTnOEs5/ib81zgIpe4
zBX+4SrXuM4NbnKL29zhLve4zwMe8i+PeMwTnvKM57zgJa/4j9e84S3vCMQO
BGIRmzjE5QPiEZ8EJCQRH/IRiUlCUpKRnBSkJBWpSUNaPuYT0pGeDGTkUzKR
mSCykJVsZCcHOclFbvKQl3zkpwDBhFCQQhSmCEUpRnFKUJJSlKYMZSlHeSpQ
kUpUJpQqVKUa1alBTcIIJ4JIalGbKKKJoQ51qUd9GtCQRrwHpYWO3g==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwNxFVgFQQAAMA3Qlq6ke6STkUJ6U6pwTbYYION7m5QKaU7DBqkG6RBSaVL
6VYapO7jLltoTMPooEAgUEgtYwUCrWhNMG1oSwihhNGO9oQTQQc6EkkUnehM
NDF0oSvd6E4PetKL3vShL/3ozwAGMojBDGEowxjOCEYyitGMYSzj+IZv+Y7x
TGAik5jM9/zAFKYyjenMYCazmM0c5jKP+SxgIYtYzI/8xM/8whKWsozlrGAl
q1jNGn5lLetYzwY2sonNbGEr29jODnayi938xh72so/9HOAghzjMEX7nD45y
jOOc4CSn+JO/OM0ZznKO81zgIpe4zBWu8jf/cI3r3OAmt7jNHe5yj/s84CGP
+Jf/eMwTnvKM57zgJa94zf+84S3veE8gdiAQRCxiE4e4fEQ84pOAhCQiMUn4
mKQkIzkpSEkqUpOGtKQjPRnISCY+ITNZyEo2spODnOQiN3nISz7yU4CCFKIw
n1KEohSjOCUoSSlKU4aylKM8n/E5FfiCL6lIJSpTha+oSjWqU4Oa1KI2dahL
PerTgIY0ojFNaEozvqY5LWhJK1oTTBvaEkIoYbSjPeFE0IGORBJFJzoTTQxd
6Eo3utODnvSiN33oSz/6M4CBDGIwQxjKMIYzgpGMYjQfAGsLmCE=
           
           "]]}}}], {}, {}, {{}, {}}}, {{}, 
      GraphicsComplexBox[CompressedData["
1:eJx12mlUze/XBvCEMk+VISIhhUYpRdpNlKhTGjQ6zXOdc0gZIkkKKUkhlEKp
iFIocoRIJBoldSpSmUpoEJ7ffz3f/dv/tZ719KZ1rfvsrnO/at2ftee7BFq4
CwsJCR0cKST0n9//+9Oj87+/BcxvIfhzP7ZmxrcWJo+BXZkqhZ7tmKfAtXeR
fMU6zOLAPhwg7/YE80wI7rNRzSrCPAeMRe/r8a9globqk+98C85jlgHn012r
vRIxL4SeauucbVGYZSH+qs7oyyGY5YBz+LjxZB/MS8D47dIzGbaYl4Gfq8fd
ABZmRehSWnwnxgCzMrxK3J/1RQuzClw7dJA1SxWzKoga1tn/kMW8HF4WT5+o
NgezGpg4fMnwn4J5BazM6ZwxdxRmdTDb8tY57FczkzVAkHiwpuIT5pVQ7fdj
ulMbZk043avArq3HrAVNs9/suFWBeRXY+/LX/eVjXg2Zd8Yfyy3ArA1Kz+8U
VeRgXgMlYwYDf13ArAMuNUnFHYmYAZJqLs1Nj2NyGMBX4xGnW/bjuS4Mulk+
9Q/Gc10IUVXhWfnguR4sF44pjLDFcz34pB01ZpsxnuuDHSjbiWnjuT70r4nL
kVLGcwMwb6tJO7gYzw3AUHparcN0PDeE+XHHVHTH4bkhvOzObfnx9y1zvhaa
o84PpfQzOWwtzC5bUt/Qhefr4N7En/1SzXi+DuLGfmvPq8RzI3guWipUch/P
jSB34exnfbfx3BhElJy6L+TguTF45hYVXL+I5+th4+X7QS9O4fl6WFBgE7o2
Bs9NYM6v0lC7cDw3Aamtk912bMfzDaCw0qxIwgvPN8AaAT/L3h7PN4Lg1Oum
dgs83wjz/mo7bNLHc1Mwvtcj/F0Lz03hrOeyu7qL8dwMWsrj5ivOxHMzqKwc
FJUai+cs2NQ63ninKJOBBWqr04dH/WliPs+C3opL4n9+MJnPAllJdmhBB5OF
zMFErOi8wWsmgznsiL25b2wlzpvD1JxOocoynDeH3M0vfRfdw3kLKFnsqpl9
E+ctYHn6rTeCPJy3gAfJptyf53HeAqbLFt4IPo7zm8BZZlnA3mic3wTTfi2w
VgvF+U2wWy1XXYSL85vAq/iB9QoXnLcEo0NNvZdscd4SspTntgkZ47wlzJXr
WRegjfOW8MmwrKd4Kc5bwbGvDqUukjhvBZw/Vydoj8d5K1i+4ERf1PAbZt4K
0mN3yY79ymQha2DN+sF708FksAa9qEgrl2Ymh1nD+P1BYfUNOG8N7/+K7Pz6
FOdt4Mwj07FLn+C8DYxwHGf0pxTnbcBc5/Hgq3yct4H7T49/1cjG+c2QJDQl
bP4FnN8MFc9sFG+exvnNkHGnECYm4fxmGPVIJ25WFM7bQquJVenpcJy3BaU5
8W7Du3HeFpyV3XdUB+L8P+c+F0NPu+O8HZx7tKLW0RLn7aBdQvRU83qct4NT
mspj5+jjvB3EXOl8Pk8L5+1hjkLHj18qOG8Pl+6mpJctxnl7EBp5OcZYCuft
Yb5/pciRqTjvAD/WqLZ+FcV5B7Bcesti+G8jM+8A3VM3a278xGS+AxyfZJ87
4j2ThRzB22uZfl0jk8ERLrPH/e6pxHlH+BDxpfr4M5x3hEliDy6Wl+C8E2SN
jnw4cB3nnSDM7uK4jZdx3gmuqusduHMB551g0bKpV+1P4vwWCDsYtuLjYZzf
AjYa/W6D4Ti/Bc7x9r8P2Y7zW0CxaNL2k744z4YP8vGTs9hMlmbDqSRTTSEL
/HtsuOeqpCxkxGQ2GySLT6Wor8C/z4bgdfP6nykxOZUNPibSpWELsI8N8ZI5
yTOnM1nAhiEV3pffotjvDNXaaStmCmO/M9yHDQmPf71m+p1BqLUhfvp3JrOd
wXll9vlPPUwOc4bwozJa3u+ZnOoMzxfXJm5uZjLfGVa2D/nl1TJZ4Axqc5t3
PHnOZCEXODBz2kbxR0yWdoFcd8uhND72u8AiVnndoevY7wIdF+64VVzFfhdQ
OPLm8q5M7HeBg14H1245hf0u4HA/fvnuk9jvAsFjSlb9PYH9rtB05qqtcDT2
u0Jv40jbt+HY7woZ31S1I7jY7wprPHayKpyw3xUuvJH6vswa+11heGhO0qSN
2O8K515kPh8L2O8Kid+uCm9egf1uMKvsSZLPSux3A9PzBSaHVLDfDQw7c48r
LcV+N6j2tS66JYv9bqBfacyNmof9bv/8v22zlJyG/W6g2OJ96tYo7HeDR971
78IHGph+d1D/mWhX2clkaXfov/nzuFsbk8EdWD0pwccbmcx2B5UVJ7V3VjI5
zB2COm1bxpQxOdUdFO2swkaXMJnvDt0n3j9KL2KywB0UfhQ8U7mJ/R4wvNAq
uvE69nvAMo7Slr9Xsd8DRko+WZqXgv0esC7dbFV9IvZ7wAS/NO3QQ9jvAYeP
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
rHjOTSTPejzzYd/Io+RZoY9em7wPJc8yV5ss/4pHnsX1UOJddCbPirUvMPrM
Is+KeGydG6dHnjU+N6o7WA3nrWDJC7MDfYtx3hocjsQEmUrjvDXYxr3dEDAT
561hbcUODycxnLeGn94LH04UwXkbENo1WmHmSJy3gdkZBibaf8izzq0fGzz8
lTzrqo6grvoDedY8zWPO81rJs+QFE2+IN5Bn7XG/eVujhjzrYKqrf88j8qz1
Pl4uWXzyLMv6SRc8ismz5H21rr+6Sp7Vn+tbv+Qiedb7vrOqfQnkWZafUpIf
HibP0vu0NNkrgjxrvOmEwopd5Flx67/c+buVPIur6LRS3Yc8a2ThsI4Cmzwr
3EgqPM2SPEv+5kzv/SbkWUrcvXYTDHDeAXoNVdgDyjjvAEENii7BS3DeEazq
soT7pXHeERrVfbV1JXDeEYKT9Zboi+G8IySe9c6cJILzTjDC53tf1yB5llbb
yHV7e8mzzi79fsXuM3lWe39Vr2kreZbw1sdPVtWSZ7X+rShpe0aeFbzXfvAu
nzzr89grYuqF5FnbE4xYv7PJs1g9Mr1fz5JnDbCTFmckkGfd/Fy7NjacPOtZ
yTM9zVDyLK+sfLYTlzxLpeatcp0beVZcS5i0ms1/eVbKx/k+5uRZ7snvZnma
YL8z1IyovrHIAPudweJGa4C9LvY7Q0iMQ+0adex3BrkvV05Fo6/xneHQVr8v
cYux3xnY6dml5fOw3wWiMk0DdWZgvwuMDMvjGolhvwucXbUu5sMo7HeBiG2j
Q23Q38JcQPF1UJbZMHmW5LD2uJefybM8a/Kdtnwmz1Ixv7+/tps8a/5NMRHl
ZvIsK9bZuuAG8qyjLn4vKx6TZ23o2ekRWECetXHh2+yhHPKsaIlvWz+mk2cN
rx9rYJJEniXRrHh7TAx51sNBXQOFOPIsr93aAdeiybMikkUnfNpPntXdbm93
ay95VpXR3XvPQ8izgguk8vm+5FlSRb8f9jqRZ71LiVyiugn73aHz6cDIJQbY
7w7HTW5M/6WN/e6wIbrNU18d+90hSeJhmmAJ9rvD6gfliQIZ7HeHZ3G9CxbP
xn53iCh/x6+egf3u8DuH1RMsjv0ekBUtnmw3Gfs9oOmHcFXeBOz3AB7rkWnV
b/Ks3MtbNzv9IM/ymRMY79lFnvVNP/PA2nryrAklDeW7G8mzjLQU5A+9Is86
3HNM/VoZedZRTXcvhwLyLO2B7RJq2eRZ56qyZWIyybPGJ+YL2Z0jz1KrK1aR
Pk6e9Tjvk0RBNHnWA7F06StR5FmmSj4b7+wjz0qKD2tR2kuedVDNZLZ6EHmW
zUjtCAcv8iwv+/jRix2x3wvMlU4njmBh/z+f36dxJtIQ+70gsKGos2019ntD
Y+e7V5/UsN8b3n7sMpRAjwNv+PCbffGlPPZ7g9OnsbKv0NvCvEHES65BbRL2
e4ObRuOT0+htfG94Vja3o3yIPEvwYKHpi+/kWSLJYx1FB8izcpWuiHR+J89S
X/JjuvBH8izNRdlm59+TZ9XKF+wf/ECeFanatOfqa/Is9fH+P60aybOM4bnv
1hfkWWsmJ3SNeU6epamUZBJYQZ4Vp5j6J/EOeVbR/PuaHbfIs1TUzxyVukWe
9Q5iGnqvk2expG5mJGSQZ/3gVyl0p5BnZaX0nog8T56156js0ryT5FlFU+Y4
Xo0jzxo6LhFUFEGeJd5hNCZyD3lWV3beoHw4eZazK+e09m7yrJcJm15vCSLP
2pH7bOtZb+z3h/QsL9MMJ+z3B3XRvLaKzdjvD9kjZKqaLbDfH8o7NFcKLLHf
H7pmv6hZvw77/WHzlvYJ4jrY7w9/dljmvFyJ/QHAztL9nbkc+wNA3FslU0oe
+wOgamZaj2A+9gfAqhHir8NnYX8AzHs5Lf/BNOwPAN0/X7o/ou/xA2BL9LcR
cWOwPwBabx4pShmF/YHw28C+s3yAPMs/4cA8/W/kWS8/evz40kWedS7EJLCv
iTxLf15k7mAtedZMVvfYgqfkWVdkWE3Wd8mzRpRP33L5BnnWt1G61vevk2ed
+On2SiyXPOunzotxNy6TZw2XnNvUmEaeJXyyadu4c+RZ9zXFDh1PIc9aPHTk
mMVp8qxNxQrP0w6TZ8mp6XMaI8izVOI7xstEkmedPVfv1L+bPEtm6H2Cwza8
HwcUIwbqWzlMruLArnseR8LR+wQcsJx09o0uel8PB46G1wZesMP7c2FoZIKz
0Ga8PxcO184OTl+P9+dCR4aulZsZ3p8LcnHbFYzX4v254Jwrekp1A96fC9//
3BQ/o4f358KHiO0NuuiDHC4c0AqsTlXE+3PB78Ol9kL0vjgu8B5FKrdhTv3n
79uaf4mVwvtzwVHKSW7LNLw/F/bsLBYKRw+s4sIXST+NvFF4fy5IXVdMKv5F
nmXFLl8+ZoA867PpVLdL38iz5EO7l278TJ7VEyj89lQLeRbLM8f672vyLPZf
05bp9eRZi8Nt7a69Is+aH/UpWPCMPGvG9eYJjU/Is47MdB/76OF/edbRgzLR
z8iz5m7/kNhQSp718Ziw8qwS8qyJyytdX9wgz9IY0Xg9Jfv/96yhwfoq9V7y
LOc7EzsjWsmzzrQvd9xWTZ61KvTimtcPybO+8Qs65ArJs3xnfroak0me5Wp7
ct+vZPKsmMLuvl+x5FneR3SvLd9HnjUntSc+gEOeZT5d5EwjmzxLl6/3PdOM
PEtl7ozURkPyLIVux3pVTfKsvFcjowWK5FmOz43aHReRZx3I65PJn0WeZZcW
YqwxiTxLsvhlduYI8qxrEypMTn5HT1GHP9PDnoR9pP2sS8n2r+c1kWf1bnso
/62KPEvPrPDk3kfkWfltNcPBt8iz/NUsNMSvkGe5H+xhdaWSZ/1Vvhnql0Se
NfVT5RfjWPKsrOucZK0w8izLxjxNxx3kWaJ509LqfMmzUh1f/Mx2Is/qlPvo
l80iz2KnzFpxYg15Voqo1QInBfKsqY9tvz+SJs9ia9lM0RcjzzLO33dTdhx5
ltvEjP2aA+glhuDwovOW/Uf0FUNIUFaZvVJA+1kxAeYzd9bTftaDy3JZw09o
P0ub01WYfIc8K0Pk/tm8HPKsEfM7JEakkGdV34kO600kz8oZaDvaH0WepfV0
oUvDPvKspazV+iFB5Fka8vu/f/Mkz2rLCrqc5ECepTPRJHc7izxLf7X/zk9A
nlUqYfy9Zzl51nSte/YvlpBnLbs16ytHkjxr6PHR1cVTybNCXeP9d/1G7zCD
C5PnnLn9GX3EDO7lW5UNvsVzFqiFOXI3NKGHsEBf/iLLH/0ojAVOfL+pLeW0
nzW8J8xsWRHtZ93X4SdOyaH9rG++j6ompZJnLb1VUKJwkjxrdbWs6Og48izn
WbIckyjyrB0nchz09pNnOdso+OdxybPqVYSrJVzIs4I559eftyHPip6s7e29
njwrV+JbIUebPCt3wFwwoECeVf7r+1fjReRZ9ckuIXPEybM+zn7pMW4MeZbn
IsfAVz/QI6zg+P5Rqxva0TOswGGFqE9XNXqGFdgnnR8+9ZD2s+awMh7PLaT9
LINLDhyvK7SftTRMycka96XCrKFKi3uadY72s2pOdCm9jKX9rJVTTr7XjqH9
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
GvPd
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[1, 0.5, 0], 
           Opacity[0.1]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl1UO0GAYQBdA0P2ls27Zt2/aP+WObTdrYtu02tm23sW22N6eLe86sZvXe
TJLAoKodggcLFuwX6hrqUZ8GNKQRjWlCIE1pRnNa0JJWtKYNbWlHe34uDqIj
nehMF7rSje70oCe96E0f+tKP/gxgIIMYzBCGMozhjOA3RjKK3/mD0YxhLOMY
zwQmMonJTGEq05jODGYyi9nMYS7zmM8CFrKIxSxhKctYzgpWsorVrGEt61jP
Bjayic1sYSt/8hfb2M4OdrKL3exhL/vYzwEOcojDHOEoxzjOCU5yitOc4Szn
OM8FLnKJy1zhKte4zg1ucou/+Yfb3OEu97jPAx7yiMc84SnPeM4LXvKK17zh
Le94zwc+8onPfOEr3/jOD/4lWIB8EpwAQhCSXwlFaMIQlnCEJwIRiURkohCV
aEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVs
ZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpU
pwY1qUVt6lCXetSnAQ1pRGOaEEhTmtGcFrSkFa1pQ1va0Z4OBNGRTnSmC13p
Rnd60JNe9KYPfelHfwYwkEEMZghDGcZwRgT8f7fqUJta1KQG1alGVapQmUpU
pALlKUdZylCaUpSkBMUpRlGKUJhCFKQA+clHXvKQm1zkJAfZyUZWspCZTGQk
A+lJR1rSkJpUpCQFyUlGUpKQmEQkJAHxiUdc4hCbWMQkBtGJRlSiEJlIRCQC
4QlHWMIQmlD8SkhCEEBwfvnZw5999Ch+8J1vfOULn/nERz7wnne85Q2vecVL
XvCcZzzlCY95xEMecJ973OUOt/mHv7nFTW5wnWtc5QqXucRFLnCec5zlDKc5
xUlOcJxjHOUIhznEQQ6wn33sZQ+72cVOdrCdbfzFn2xlC5vZxEY2sJ51rGUN
q1nFSlawnGUsZQmLWcRCFjCfecxlDrOZxUxmMJ1pTGUKk5nERCYwnnGMZQyj
+YPfGcVIfmMEwxnGUIYwmEEMZAD96Udf+tCbXvSkB93pRle60JlOdCSIDrSn
HW1pQ2ta0ZIWNKcZTQmkCY1pREMaUJ961KUOtalFTWpQnWpUpQqVqURFKlCe
cpSlDKUpRUlKUJxiFKUIhSlEQQqQn3zkJQ+5yUVOcpCdbGQlC5nJREb+A402
JVw=
             "]]}]}, {}, {}}, {{}, {}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0.5, 0], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwl1FO4EAYYBuBzsm2dTtYyl81l17Jt27Zbts0t2225LZurtrDF9zxdvN9/
+918f3CTjlU7BAYEBPwgQm4oQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jE
Iz4JSEgiEpOEpCQjiOQEk4KUpCI1aUhLOtKTgYxkCulMZrKQlWxkJwc5yUVu
8pCXfPxIfgpQkEIUpghFKUZxSlCSUpSmDGUpR3kq8BMVqURlqlCValSnBjWp
RW3qUJd61OdnGtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCT
XvSmD33pR38GMJBBDGYIQxnGcEYwklGMZgxjGcd4JjCRSUxmClOZxnRmMJNZ
zGYOc/mFecxnAQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZ
xW5+5Tf2sJd97OcABznEYY5wlGMc5wQnOcVpznCWc5znd/7gAhe5xGWucJVr
XOdP/uIGN7nFbe5wl3vc5wEPecRjnvCUZzznBS/5m1e85g3/8C9vecd7PvAf
//ORT3zmC18JGX8goQhNGMISjvBEICKRiEwUohKN6MQgJrGITRziEo/4JCAh
iUhMEpKSjCCSE0wKUpKK1KQhLelITwYykinw+8/6BlnShZs=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0.5, 0], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwV0FVjFgQAQNGPkFK6lBBG90Z3j1zANrpDkBIkJUQpgw4FBZTu7u5GUkpC
UrqlQer4cO4PuEGtukR3jhUIBPJLAYIJoSCFKEwRilKM4pSgJKUoTRnKUo7y
VKAilahMKFWoSjWqU4OahBFOBJHUojZRRBNDHepSj/o0oCGNaEwTmtKM5rSg
Ja1ozWe0oS2f0472dKAjnfiC/0d04Uu60o3u9KAnvfiK3vShL/34mv58w7cM
YCCDGMwQvuN7fuBHhjKM4YxgJKMYzRjGMo6f+JnxTOAXfmUik5jMb/zOFKYy
jenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAlq1jNGtayjvVsYCOb2MwWtrKN
7exgJ7vYzR72so/9/MEBDnKIwxzhKH9yjOOc4CSn+IvTnOEs5/ib81zgIpe4
zBX+4SrXuM4NbnKL29zhLve4zwMe8i+PeMwTnvKM57zgJa/4j9e84S3vCMQO
BGIRmzjE5QPiEZ8EJCQRH/IRiUlCUpKRnBSkJBWpSUNaPuYT0pGeDGTkUzKR
mSCykJVsZCcHOclFbvKQl3zkpwDBhFCQQhSmCEUpRnFKUJJSlKYMZSlHeSpQ
kUpUJpQqVKUa1alBTcIIJ4JIalGbKKKJoQ51qUd9GtCQRrwHpYWO3g==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0.5, 0], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwNxFVgFQQAAMA3Qlq6ke6STkUJ6U6pwTbYYION7m5QKaU7DBqkG6RBSaVL
6VYapO7jLltoTMPooEAgUEgtYwUCrWhNMG1oSwihhNGO9oQTQQc6EkkUnehM
NDF0oSvd6E4PetKL3vShL/3ozwAGMojBDGEowxjOCEYyitGMYSzj+IZv+Y7x
TGAik5jM9/zAFKYyjenMYCazmM0c5jKP+SxgIYtYzI/8xM/8whKWsozlrGAl
q1jNGn5lLetYzwY2sonNbGEr29jODnayi938xh72so/9HOAghzjMEX7nD45y
jOOc4CSn+JO/OM0ZznKO81zgIpe4zBWu8jf/cI3r3OAmt7jNHe5yj/s84CGP
+Jf/eMwTnvKM57zgJa94zf+84S3veE8gdiAQRCxiE4e4fEQ84pOAhCQiMUn4
mKQkIzkpSEkqUpOGtKQjPRnISCY+ITNZyEo2spODnOQiN3nISz7yU4CCFKIw
n1KEohSjOCUoSSlKU4aylKM8n/E5FfiCL6lIJSpTha+oSjWqU4Oa1KI2dahL
PerTgIY0ojFNaEozvqY5LWhJK1oTTBvaEkIoYbSjPeFE0IGORBJFJzoTTQxd
6Eo3utODnvSiN33oSz/6M4CBDGIwQxjKMIYzgpGMYjQfAGsLmCE=
           
           "]]}}}], {}, {}, {{}, {}}}, {{}, 
      GraphicsComplexBox[CompressedData["
1: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
gbPRyK9nlzNPi0G1dcCLIFNqdQyWdTlzxW0F+ZomBtleXdaO+cg8TYaM+a5D
twiodWWIz5tlX9eB+ZoM/eaIP+05TZ5mJoNlhKJu+BDmbTK0zr31wv4ceZqL
DFJv/Xb1K6gFMux7O8XCsxO1TAYn3Qu24gLyNaUMjnHrnn5Jps6U4VVajvr1
MGqVDKcyZqVurSVvK5RBM9TG92s+tVr29/fb9fJhwdSVMvzZJTI53ZlaIwPf
Qz1/3CnyuEYZRhlnTbu0kJonR9bZ9Y/fdaHWlaNqWsOVHszn+HJcnCBcVG9L
bSbHuQGdliU9JW+DHDMDlLymJGoXOSqWHfukP4haIIe2wrfp4hbyNZkcxp8c
u46bSq2UQ2hc32jSnzpTjk7i2uLzP8jXVHLk9R7V0uk0daEcdpVxK//kUqvl
6Nvr0Jv3s6kr5Sh3nLl6Uz9qjRy3BVr7r74hf2uUY9Lpc9L4ddQ8Bdooyoqf
mVHrKnD8YdlhYy3meQqcKjz39JqSvM5MAekAReLYI+RzUKD7tF1bVIbULgps
LY+yivlJPidQYO+Nm1Y3tlD/r2fZFTT16sI8T4F6xaUjx9zI5zIVuD/4/YcJ
x8njVAoUy/ZYFs2iLlTgfULn7aZPyOPUCrQ//1MjX05dqUChNGfL7BryuP/H
sxrun+074SnnWXGu89s2XeI8q9a4/ppyD+dZnunlW7uu5TzLcNVx7fgkzrOe
WiS+zVvIeVZmp8drGudynjXUSHF48zzOs+QXfqb+E8l51scs214Bvpxn3byg
n2huy3mWgeeVr1pDOM8qO9tmezctzrM8J0kU0+u5/azIOw/nj1JznpXsOWKY
3nbOsza+O/e+9xLOsypjzm11F3Oe5Wtu2WOjI+dZY8YeNJkKzrPm5Cz6NnI4
51m2DimwMeI8qzSkS1d+W86zjoevKr31hXmRJX6UjCvs8YK1Fe5W/ZxRc4vb
z5JN9/hzSs3tZ015Pl7ltofzLJ12h94uX855Vk3/D+PqwjnPcg0f/+TYZM6z
PPTtw7V6c54VEOjZWfcj8yJbHDtX+6nvPeZJdvDix7pfPcztZxn2Ld63M5Xz
rL2a4KRRYs6zdh84usxsJudZokGLV53mc571Jv78rBc8zrNGhr9c7vSceZM9
xvRMOKEpYt7kAHuD1/qC9dx+1pCPQy1+CTnP0tN+fmKkGedZRVuPX0z4zbxp
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
       
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[1, 0, 0], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl1UO0GAYQBdA0P2ls27Zt2/aP+WObTdrYtu02tm23sW22N6eLe86sZvXe
TJLAoKodggcLFuwX6hrqUZ8GNKQRjWlCIE1pRnNa0JJWtKYNbWlHe34uDqIj
nehMF7rSje70oCe96E0f+tKP/gxgIIMYzBCGMozhjOA3RjKK3/mD0YxhLOMY
zwQmMonJTGEq05jODGYyi9nMYS7zmM8CFrKIxSxhKctYzgpWsorVrGEt61jP
Bjayic1sYSt/8hfb2M4OdrKL3exhL/vYzwEOcojDHOEoxzjOCU5yitOc4Szn
OM8FLnKJy1zhKte4zg1ucou/+Yfb3OEu97jPAx7yiMc84SnPeM4LXvKK17zh
Le94zwc+8onPfOEr3/jOD/4lWIB8EpwAQhCSXwlFaMIQlnCEJwIRiURkohCV
aEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVs
ZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpU
pwY1qUVt6lCXetSnAQ1pRGOaEEhTmtGcFrSkFa1pQ1va0Z4OBNGRTnSmC13p
Rnd60JNe9KYPfelHfwYwkEEMZghDGcZwRgT8f7fqUJta1KQG1alGVapQmUpU
pALlKUdZylCaUpSkBMUpRlGKUJhCFKQA+clHXvKQm1zkJAfZyUZWspCZTGQk
A+lJR1rSkJpUpCQFyUlGUpKQmEQkJAHxiUdc4hCbWMQkBtGJRlSiEJlIRCQC
4QlHWMIQmlD8SkhCEEBwfvnZw5999Ch+8J1vfOULn/nERz7wnne85Q2vecVL
XvCcZzzlCY95xEMecJ973OUOt/mHv7nFTW5wnWtc5QqXucRFLnCec5zlDKc5
xUlOcJxjHOUIhznEQQ6wn33sZQ+72cVOdrCdbfzFn2xlC5vZxEY2sJ51rGUN
q1nFSlawnGUsZQmLWcRCFjCfecxlDrOZxUxmMJ1pTGUKk5nERCYwnnGMZQyj
+YPfGcVIfmMEwxnGUIYwmEEMZAD96Udf+tCbXvSkB93pRle60JlOdCSIDrSn
HW1pQ2ta0ZIWNKcZTQmkCY1pREMaUJ961KUOtalFTWpQnWpUpQqVqURFKlCe
cpSlDKUpRUlKUJxiFKUIhSlEQQqQn3zkJQ+5yUVOcpCdbGQlC5nJREb+A402
JVw=
             "]]}]}, {}, {}}, {{}, {}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJwl1FO4EAYYBuBzsm2dTtYyl81l17Jt27Zbts0t2225LZurtrDF9zxdvN9/
+918f3CTjlU7BAYEBPwgQm4oQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jE
Iz4JSEgiEpOEpCQjiOQEk4KUpCI1aUhLOtKTgYxkCulMZrKQlWxkJwc5yUVu
8pCXfPxIfgpQkEIUpghFKUZxSlCSUpSmDGUpR3kq8BMVqURlqlCValSnBjWp
RW3qUJd61OdnGtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCT
XvSmD33pR38GMJBBDGYIQxnGcEYwklGMZgxjGcd4JjCRSUxmClOZxnRmMJNZ
zGYOc/mFecxnAQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZ
xW5+5Tf2sJd97OcABznEYY5wlGMc5wQnOcVpznCWc5znd/7gAhe5xGWucJVr
XOdP/uIGN7nFbe5wl3vc5wEPecRjnvCUZzznBS/5m1e85g3/8C9vecd7PvAf
//ORT3zmC18JGX8goQhNGMISjvBEICKRiEwUohKN6MQgJrGITRziEo/4JCAh
iUhMEpKSjCCSE0wKUpKK1KQhLelITwYykinw+8/6BlnShZs=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJwV0FVjFgQAQNGPkFK6lBBG90Z3j1zANrpDkBIkJUQpgw4FBZTu7u5GUkpC
UrqlQer4cO4PuEGtukR3jhUIBPJLAYIJoSCFKEwRilKM4pSgJKUoTRnKUo7y
VKAilahMKFWoSjWqU4OahBFOBJHUojZRRBNDHepSj/o0oCGNaEwTmtKM5rSg
Ja1ozWe0oS2f0472dKAjnfiC/0d04Uu60o3u9KAnvfiK3vShL/34mv58w7cM
YCCDGMwQvuN7fuBHhjKM4YxgJKMYzRjGMo6f+JnxTOAXfmUik5jMb/zOFKYy
jenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAlq1jNGtayjvVsYCOb2MwWtrKN
7exgJ7vYzR72so/9/MEBDnKIwxzhKH9yjOOc4CSn+IvTnOEs5/ib81zgIpe4
zBX+4SrXuM4NbnKL29zhLve4zwMe8i+PeMwTnvKM57zgJa/4j9e84S3vCMQO
BGIRmzjE5QPiEZ8EJCQRH/IRiUlCUpKRnBSkJBWpSUNaPuYT0pGeDGTkUzKR
mSCykJVsZCcHOclFbvKQl3zkpwDBhFCQQhSmCEUpRnFKUJJSlKYMZSlHeSpQ
kUpUJpQqVKUa1alBTcIIJ4JIalGbKKKJoQ51qUd9GtCQRrwHpYWO3g==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJwNxFVgFQQAAMA3Qlq6ke6STkUJ6U6pwTbYYION7m5QKaU7DBqkG6RBSaVL
6VYapO7jLltoTMPooEAgUEgtYwUCrWhNMG1oSwihhNGO9oQTQQc6EkkUnehM
NDF0oSvd6E4PetKL3vShL/3ozwAGMojBDGEowxjOCEYyitGMYSzj+IZv+Y7x
TGAik5jM9/zAFKYyjenMYCazmM0c5jKP+SxgIYtYzI/8xM/8whKWsozlrGAl
q1jNGn5lLetYzwY2sonNbGEr29jODnayi938xh72so/9HOAghzjMEX7nD45y
jOOc4CSn+JO/OM0ZznKO81zgIpe4zBWu8jf/cI3r3OAmt7jNHe5yj/s84CGP
+Jf/eMwTnvKM57zgJa94zf+84S3veE8gdiAQRCxiE4e4fEQ84pOAhCQiMUn4
mKQkIzkpSEkqUpOGtKQjPRnISCY+ITNZyEo2spODnOQiN3nISz7yU4CCFKIw
n1KEohSjOCUoSSlKU4aylKM8n/E5FfiCL6lIJSpTha+oSjWqU4Oa1KI2dahL
PerTgIY0ojFNaEozvqY5LWhJK1oTTBvaEkIoYbSjPeFE0IGORBJFJzoTTQxd
6Eo3utODnvSiN33oSz/6M4CBDGIwQxjKMIYzgpGMYjQfAGsLmCE=
           
           "]]}}}], {}, {}, {{}, {}}}, {{}, 
      GraphicsComplexBox[CompressedData["
1:eJxt2mlYjH/49/GxJXtCZB1LlrIUiWx9tEgR7dqbmmaqaZsZZCumkhZbEmXL
ZCtlSckeI9otKRSKSUTWRFny4+++O6//9eC+PXG8j+9855yrZ9frOEd7h9gK
OnM4nJguHM7/+b/jX7NRx/9K+p+DzVH7M9+/ekGtipUnXHe2lTCthpzMm/e2
nmZ6IHrqfi56mMz0EHi0byksiGZ6OBryRuY4bmCaC/XRA8O9Q5keA6OvZy7E
Spkeh/inWWY9hUyPx5jhEm8PZ6Ynoni/f81Oc6a1cTnw7NTUaUxPxuPSfYur
ezM9FW9S7K4KPjyn1sXJSapT7hUyrYfBfoJzk9OYno5aq7aaj6uZngH+1YRB
/rZM66NiT/2H1OlMz4RDtYpH8GCmDXDsZLvunB5Mz8LLhn59hBymZyNm/Inm
Wa111IZ45d/+xfId03MwNnC1+sS3TM+FcJfFtbM1TM/DtMW1jWtuMz0fUtvo
lXfSmV6ArxN3N+puYdoIr+ZkC945MA0cWhOplz6NWga8mHDjBHow5wsRlTOi
0aqhls4XYkHE0DHLS6g5xgixVnhJTzDnxljSdqk4Mpw5N8GsFleft57MuQnW
DzQxmaXHnJsiZemzB+OHMeemeJDTrtnU8ozOzbDr08ek1EpqmRlmjd5e2/UE
c74I+w4VZy+SMOeLYKn67ZGLNnNujm0q0+7ZtT6lc3NErx2gXH6MmrMY+dyI
lTY2zPliPM9Yo2umwpxb4OdOlyGGF5/QuQXSNlnfeCum5ljCac/+XPEE5twS
p5SPqh89qqHzJdjqKV1+M5patgSG1WufHJrPnC/Fp6s1vnqfq+l8KeruCrhz
T1NzrJDgNkPjmQ9zboW9klk5X4Yy58uwqyWvwfzuYzpfhuikIUNehFJzlqP7
5es3zScx5/86Z0tvzfJHdG6NcbdSX2lKqWGNmM7Ngpl9qWXWELh+1G0+/rCj
FdbY/Xv8itF21Bwb7Dp/s9KnvYru26B0bJxpQwq1zAaeO9dtUp1LrbDBwwcj
B9XUVNJ9W2xUvJhTtZoattB1/9A5XYVaZotjva4Jp2Y8oPu2WHvap+mzOTXH
Ds0nDLupN1XQfTu8DZ3ksWwvtcwOuX21jHjzqBV2+BTVcvzG7ft03x7L0has
PDaQGvaY2ntN4sg19+i+PTQue/8or7tL9+1hqZ7NGTKRmuOAaYe/X10quUP3
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

       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[0, 0, 1], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl1UO0GAYQBdA0P2ls27Zt2/aP+WObTdrYtu02tm23sW22N6eLe86sZvXe
TJLAoKodggcLFuwX6hrqUZ8GNKQRjWlCIE1pRnNa0JJWtKYNbWlHe34uDqIj
nehMF7rSje70oCe96E0f+tKP/gxgIIMYzBCGMozhjOA3RjKK3/mD0YxhLOMY
zwQmMonJTGEq05jODGYyi9nMYS7zmM8CFrKIxSxhKctYzgpWsorVrGEt61jP
Bjayic1sYSt/8hfb2M4OdrKL3exhL/vYzwEOcojDHOEoxzjOCU5yitOc4Szn
OM8FLnKJy1zhKte4zg1ucou/+Yfb3OEu97jPAx7yiMc84SnPeM4LXvKK17zh
Le94zwc+8onPfOEr3/jOD/4lWIB8EpwAQhCSXwlFaMIQlnCEJwIRiURkohCV
aEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVs
ZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpU
pwY1qUVt6lCXetSnAQ1pRGOaEEhTmtGcFrSkFa1pQ1va0Z4OBNGRTnSmC13p
Rnd60JNe9KYPfelHfwYwkEEMZghDGcZwRgT8f7fqUJta1KQG1alGVapQmUpU
pALlKUdZylCaUpSkBMUpRlGKUJhCFKQA+clHXvKQm1zkJAfZyUZWspCZTGQk
A+lJR1rSkJpUpCQFyUlGUpKQmEQkJAHxiUdc4hCbWMQkBtGJRlSiEJlIRCQC
4QlHWMIQmlD8SkhCEEBwfvnZw5999Ch+8J1vfOULn/nERz7wnne85Q2vecVL
XvCcZzzlCY95xEMecJ973OUOt/mHv7nFTW5wnWtc5QqXucRFLnCec5zlDKc5
xUlOcJxjHOUIhznEQQ6wn33sZQ+72cVOdrCdbfzFn2xlC5vZxEY2sJ51rGUN
q1nFSlawnGUsZQmLWcRCFjCfecxlDrOZxUxmMJ1pTGUKk5nERCYwnnGMZQyj
+YPfGcVIfmMEwxnGUIYwmEEMZAD96Udf+tCbXvSkB93pRle60JlOdCSIDrSn
HW1pQ2ta0ZIWNKcZTQmkCY1pREMaUJ961KUOtalFTWpQnWpUpQqVqURFKlCe
cpSlDKUpRUlKUJxiFKUIhSlEQQqQn3zkJQ+5yUVOcpCdbGQlC5nJREb+A402
JVw=
             "]]}]}, {}, {}}, {{}, {}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1:eJwl1FO4EAYYBuBzsm2dTtYyl81l17Jt27Zbts0t2225LZurtrDF9zxdvN9/
+918f3CTjlU7BAYEBPwgQm4oQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jE
Iz4JSEgiEpOEpCQjiOQEk4KUpCI1aUhLOtKTgYxkCulMZrKQlWxkJwc5yUVu
8pCXfPxIfgpQkEIUpghFKUZxSlCSUpSmDGUpR3kq8BMVqURlqlCValSnBjWp
RW3qUJd61OdnGtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCT
XvSmD33pR38GMJBBDGYIQxnGcEYwklGMZgxjGcd4JjCRSUxmClOZxnRmMJNZ
zGYOc/mFecxnAQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZ
xW5+5Tf2sJd97OcABznEYY5wlGMc5wQnOcVpznCWc5znd/7gAhe5xGWucJVr
XOdP/uIGN7nFbe5wl3vc5wEPecRjnvCUZzznBS/5m1e85g3/8C9vecd7PvAf
//ORT3zmC18JGX8goQhNGMISjvBEICKRiEwUohKN6MQgJrGITRziEo/4JCAh
iUhMEpKSjCCSE0wKUpKK1KQhLelITwYykinw+8/6BlnShZs=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1:eJwV0FVjFgQAQNGPkFK6lBBG90Z3j1zANrpDkBIkJUQpgw4FBZTu7u5GUkpC
UrqlQer4cO4PuEGtukR3jhUIBPJLAYIJoSCFKEwRilKM4pSgJKUoTRnKUo7y
VKAilahMKFWoSjWqU4OahBFOBJHUojZRRBNDHepSj/o0oCGNaEwTmtKM5rSg
Ja1ozWe0oS2f0472dKAjnfiC/0d04Uu60o3u9KAnvfiK3vShL/34mv58w7cM
YCCDGMwQvuN7fuBHhjKM4YxgJKMYzRjGMo6f+JnxTOAXfmUik5jMb/zOFKYy
jenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAlq1jNGtayjvVsYCOb2MwWtrKN
7exgJ7vYzR72so/9/MEBDnKIwxzhKH9yjOOc4CSn+IvTnOEs5/ib81zgIpe4
zBX+4SrXuM4NbnKL29zhLve4zwMe8i+PeMwTnvKM57zgJa/4j9e84S3vCMQO
BGIRmzjE5QPiEZ8EJCQRH/IRiUlCUpKRnBSkJBWpSUNaPuYT0pGeDGTkUzKR
mSCykJVsZCcHOclFbvKQl3zkpwDBhFCQQhSmCEUpRnFKUJJSlKYMZSlHeSpQ
kUpUJpQqVKUa1alBTcIIJ4JIalGbKKKJoQ51qUd9GtCQRrwHpYWO3g==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1:eJwNxFVgFQQAAMA3Qlq6ke6STkUJ6U6pwTbYYION7m5QKaU7DBqkG6RBSaVL
6VYapO7jLltoTMPooEAgUEgtYwUCrWhNMG1oSwihhNGO9oQTQQc6EkkUnehM
NDF0oSvd6E4PetKL3vShL/3ozwAGMojBDGEowxjOCEYyitGMYSzj+IZv+Y7x
TGAik5jM9/zAFKYyjenMYCazmM0c5jKP+SxgIYtYzI/8xM/8whKWsozlrGAl
q1jNGn5lLetYzwY2sonNbGEr29jODnayi938xh72so/9HOAghzjMEX7nD45y
jOOc4CSn+JO/OM0ZznKO81zgIpe4zBWu8jf/cI3r3OAmt7jNHe5yj/s84CGP
+Jf/eMwTnvKM57zgJa94zf+84S3veE8gdiAQRCxiE4e4fEQ84pOAhCQiMUn4
mKQkIzkpSEkqUpOGtKQjPRnISCY+ITNZyEo2spODnOQiN3nISz7yU4CCFKIw
n1KEohSjOCUoSSlKU4aylKM8n/E5FfiCL6lIJSpTha+oSjWqU4Oa1KI2dahL
PerTgIY0ojFNaEozvqY5LWhJK1oTTBvaEkIoYbSjPeFE0IGORBJFJzoTTQxd
6Eo3utODnvSiN33oSz/6M4CBDGIwQxjKMIYzgpGMYjQfAGsLmCE=
           
           "]]}}}], {}, {}, {{}, {}}}, {{}, 
      GraphicsComplexBox[CompressedData["
1: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
       
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[1, 0.5, 0], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl1UO0GAYQBdA0P2ls27Zt2/aP+WObTdrYtu02tm23sW22N6eLe86sZvXe
TJLAoKodggcLFuwX6hrqUZ8GNKQRjWlCIE1pRnNa0JJWtKYNbWlHe34uDqIj
nehMF7rSje70oCe96E0f+tKP/gxgIIMYzBCGMozhjOA3RjKK3/mD0YxhLOMY
zwQmMonJTGEq05jODGYyi9nMYS7zmM8CFrKIxSxhKctYzgpWsorVrGEt61jP
Bjayic1sYSt/8hfb2M4OdrKL3exhL/vYzwEOcojDHOEoxzjOCU5yitOc4Szn
OM8FLnKJy1zhKte4zg1ucou/+Yfb3OEu97jPAx7yiMc84SnPeM4LXvKK17zh
Le94zwc+8onPfOEr3/jOD/4lWIB8EpwAQhCSXwlFaMIQlnCEJwIRiURkohCV
aEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVs
ZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpU
pwY1qUVt6lCXetSnAQ1pRGOaEEhTmtGcFrSkFa1pQ1va0Z4OBNGRTnSmC13p
Rnd60JNe9KYPfelHfwYwkEEMZghDGcZwRgT8f7fqUJta1KQG1alGVapQmUpU
pALlKUdZylCaUpSkBMUpRlGKUJhCFKQA+clHXvKQm1zkJAfZyUZWspCZTGQk
A+lJR1rSkJpUpCQFyUlGUpKQmEQkJAHxiUdc4hCbWMQkBtGJRlSiEJlIRCQC
4QlHWMIQmlD8SkhCEEBwfvnZw5999Ch+8J1vfOULn/nERz7wnne85Q2vecVL
XvCcZzzlCY95xEMecJ973OUOt/mHv7nFTW5wnWtc5QqXucRFLnCec5zlDKc5
xUlOcJxjHOUIhznEQQ6wn33sZQ+72cVOdrCdbfzFn2xlC5vZxEY2sJ51rGUN
q1nFSlawnGUsZQmLWcRCFjCfecxlDrOZxUxmMJ1pTGUKk5nERCYwnnGMZQyj
+YPfGcVIfmMEwxnGUIYwmEEMZAD96Udf+tCbXvSkB93pRle60JlOdCSIDrSn
HW1pQ2ta0ZIWNKcZTQmkCY1pREMaUJ961KUOtalFTWpQnWpUpQqVqURFKlCe
cpSlDKUpRUlKUJxiFKUIhSlEQQqQn3zkJQ+5yUVOcpCdbGQlC5nJREb+A402
JVw=
             "]]}]}, {}, {}}, {{}, {}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0.5, 0]], 
          LineBox[CompressedData["
1:eJwl1FO4EAYYBuBzsm2dTtYyl81l17Jt27Zbts0t2225LZurtrDF9zxdvN9/
+918f3CTjlU7BAYEBPwgQm4oQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jE
Iz4JSEgiEpOEpCQjiOQEk4KUpCI1aUhLOtKTgYxkCulMZrKQlWxkJwc5yUVu
8pCXfPxIfgpQkEIUpghFKUZxSlCSUpSmDGUpR3kq8BMVqURlqlCValSnBjWp
RW3qUJd61OdnGtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCT
XvSmD33pR38GMJBBDGYIQxnGcEYwklGMZgxjGcd4JjCRSUxmClOZxnRmMJNZ
zGYOc/mFecxnAQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZ
xW5+5Tf2sJd97OcABznEYY5wlGMc5wQnOcVpznCWc5znd/7gAhe5xGWucJVr
XOdP/uIGN7nFbe5wl3vc5wEPecRjnvCUZzznBS/5m1e85g3/8C9vecd7PvAf
//ORT3zmC18JGX8goQhNGMISjvBEICKRiEwUohKN6MQgJrGITRziEo/4JCAh
iUhMEpKSjCCSE0wKUpKK1KQhLelITwYykinw+8/6BlnShZs=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0.5, 0]], 
          LineBox[CompressedData["
1:eJwV0FVjFgQAQNGPkFK6lBBG90Z3j1zANrpDkBIkJUQpgw4FBZTu7u5GUkpC
UrqlQer4cO4PuEGtukR3jhUIBPJLAYIJoSCFKEwRilKM4pSgJKUoTRnKUo7y
VKAilahMKFWoSjWqU4OahBFOBJHUojZRRBNDHepSj/o0oCGNaEwTmtKM5rSg
Ja1ozWe0oS2f0472dKAjnfiC/0d04Uu60o3u9KAnvfiK3vShL/34mv58w7cM
YCCDGMwQvuN7fuBHhjKM4YxgJKMYzRjGMo6f+JnxTOAXfmUik5jMb/zOFKYy
jenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAlq1jNGtayjvVsYCOb2MwWtrKN
7exgJ7vYzR72so/9/MEBDnKIwxzhKH9yjOOc4CSn+IvTnOEs5/ib81zgIpe4
zBX+4SrXuM4NbnKL29zhLve4zwMe8i+PeMwTnvKM57zgJa/4j9e84S3vCMQO
BGIRmzjE5QPiEZ8EJCQRH/IRiUlCUpKRnBSkJBWpSUNaPuYT0pGeDGTkUzKR
mSCykJVsZCcHOclFbvKQl3zkpwDBhFCQQhSmCEUpRnFKUJJSlKYMZSlHeSpQ
kUpUJpQqVKUa1alBTcIIJ4JIalGbKKKJoQ51qUd9GtCQRrwHpYWO3g==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0.5, 0]], 
          LineBox[CompressedData["
1:eJwNxFVgFQQAAMA3Qlq6ke6STkUJ6U6pwTbYYION7m5QKaU7DBqkG6RBSaVL
6VYapO7jLltoTMPooEAgUEgtYwUCrWhNMG1oSwihhNGO9oQTQQc6EkkUnehM
NDF0oSvd6E4PetKL3vShL/3ozwAGMojBDGEowxjOCEYyitGMYSzj+IZv+Y7x
TGAik5jM9/zAFKYyjenMYCazmM0c5jKP+SxgIYtYzI/8xM/8whKWsozlrGAl
q1jNGn5lLetYzwY2sonNbGEr29jODnayi938xh72so/9HOAghzjMEX7nD45y
jOOc4CSn+JO/OM0ZznKO81zgIpe4zBWu8jf/cI3r3OAmt7jNHe5yj/s84CGP
+Jf/eMwTnvKM57zgJa94zf+84S3veE8gdiAQRCxiE4e4fEQ84pOAhCQiMUn4
mKQkIzkpSEkqUpOGtKQjPRnISCY+ITNZyEo2spODnOQiN3nISz7yU4CCFKIw
n1KEohSjOCUoSSlKU4aylKM8n/E5FfiCL6lIJSpTha+oSjWqU4Oa1KI2dahL
PerTgIY0ojFNaEozvqY5LWhJK1oTTBvaEkIoYbSjPeFE0IGORBJFJzoTTQxd
6Eo3utODnvSiN33oSz/6M4CBDGIwQxjKMIYzgpGMYjQfAGsLmCE=
           
           "]]}}}], {}, {}, {{}, {}}}}, {
    PlotRange -> {0, 0.5}, Frame -> True, FrameLabel -> {
       FormBox["\"Host generations\"", TraditionalForm], 
       FormBox["\"Host heterozygosity\"", TraditionalForm]}, Axes -> False, 
     DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
     PlotRange -> {{0., 301.}, {0, 0.5}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0., 301.}, {0, 0.5}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Neutral, \\!\\(\\*SubscriptBox[\\(m\\), \\(i\\)]\\)=0.001\"", 
       "\"Neutral, \\!\\(\\*SubscriptBox[\\(m\\), \\(i\\)]\\)=0.01\"", 
       "\"Neutral, \\!\\(\\*SubscriptBox[\\(m\\), \\(i\\)]\\)=0.05\"", 
       "\"Coevolutionary, \\!\\(\\*SubscriptBox[\\(m\\), \\(i\\)]\\)=0.001\"",
        "\"Coevolutionary, \\!\\(\\*SubscriptBox[\\(m\\), \\(i\\)]\\)=0.01\"",
        "\"Coevolutionary, \\!\\(\\*SubscriptBox[\\(m\\), \
\\(i\\)]\\)=0.05\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Opacity[0.3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Opacity[0.3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Opacity[0.3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Opacity[0.3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Opacity[0.3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Opacity[0.3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                  False], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
             "}"}]}], "]"}]& ), Editable -> True], TraditionalForm], 
    TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.861877117719838*^9, 3.86187712585849*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/madeline/Desktop/Mideo.lab2/Coevolution/Data \
sets/FIgures/TwoPatch_Discrete_Migration.png\>\"", ",", "gLegend", ",", 
   "\"\<PNG\>\"", ",", 
   RowBox[{"ImageResolution", "\[Rule]", " ", "300"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.86187311355894*^9, 3.861873115365602*^9}, 
   3.861875253816853*^9, {3.861877139115219*^9, 3.861877143161948*^9}}],

Cell[BoxData["\<\"/Users/madeline/Desktop/Mideo.lab2/Coevolution/Data \
sets/FIgures/TwoPatch_Discrete_Migration.png\"\>"], "Output",
 CellChangeTimes->{3.8618771481891108`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"leg2", "=", 
  RowBox[{"LineLegend", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{"Blue", ",", 
        RowBox[{"Opacity", "[", "0.2", "]"}], ",", "Dashed"}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{"Blue", ",", 
        RowBox[{"Opacity", "[", "0.4", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", "Blue", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Neutral, \!\(\*SubscriptBox[\(m\), \(i\)]\)=0.05\>\"", ",", 
      "\"\<Coevolutionary, \!\(\*SubscriptBox[\(m\), \(i\)]\)=0.05, \
S=0.65\>\"", ",", 
      "\"\<Coevolutionary, \!\(\*SubscriptBox[\(m\), \(i\)]\)=0.05, \
S=0.8\>\""}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.857557659235034*^9, 3.857557706354966*^9}, {
   3.8575578672099323`*^9, 3.857557870916712*^9}, {3.858348355414452*^9, 
   3.858348370636924*^9}, {3.858348402869893*^9, 3.858348410190549*^9}, {
   3.858422980802874*^9, 3.858423056476487*^9}, {3.8592883937080708`*^9, 
   3.859288560670891*^9}, {3.859378732631886*^9, 3.8593787574893227`*^9}, {
   3.859378811435246*^9, 3.859378845154427*^9}, {3.859379014695904*^9, 
   3.859379017948369*^9}, 3.859388852810038*^9, {3.8593890774673243`*^9, 
   3.859389079536745*^9}, {3.861873035965827*^9, 3.8618730550608788`*^9}, {
   3.8618787039821672`*^9, 3.861878737103382*^9}},
 ExpressionUUID -> "86983290-4148-4dc9-b4a3-ca238cada277"],

Cell[BoxData[
 TemplateBox[{
  "\"Neutral, \\!\\(\\*SubscriptBox[\\(m\\), \\(i\\)]\\)=0.05\"",
   "\"Coevolutionary, \\!\\(\\*SubscriptBox[\\(m\\), \\(i\\)]\\)=0.05, S=0.65\
\"","\"Coevolutionary, \\!\\(\\*SubscriptBox[\\(m\\), \\(i\\)]\\)=0.05, S=0.8\
\""},
  "LineLegend",
  DisplayFunction->(StyleBox[
    StyleBox[
     PaneBox[
      TagBox[
       GridBox[{{
          TagBox[
           GridBox[{{
              GraphicsBox[{{
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1], 
                  Opacity[0.2], 
                  Dashing[{Small, Small}]], {
                  LineBox[{{0, 10}, {40, 10}}]}}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1], 
                  Opacity[0.2], 
                  Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
               ImageSize -> {40, 10}, PlotRangePadding -> None, ImagePadding -> 
               Automatic, BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
              GraphicsBox[{{
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1], 
                  Opacity[0.4]], {
                  LineBox[{{0, 10}, {40, 10}}]}}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1], 
                  Opacity[0.4]], {}}}, AspectRatio -> Full, 
               ImageSize -> {40, 10}, PlotRangePadding -> None, ImagePadding -> 
               Automatic, 
               BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
              GraphicsBox[{{
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1]], {
                  LineBox[{{0, 10}, {40, 10}}]}}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
               ImageSize -> {40, 10}, PlotRangePadding -> None, ImagePadding -> 
               Automatic, 
               BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
            GridBoxAlignment -> {
             "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "Columns" -> {{False}}, "Rows" -> {{False}}}, 
            GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
           "Grid"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
      Alignment -> Left, AppearanceElements -> None, 
      ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
     LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
    Background -> Automatic, StripOnInput -> False]& ),
  Editable->True,
  InterpretationFunction:>(RowBox[{"LineLegend", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
           RowBox[{"Directive", "[", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
               ",", 
               RowBox[{"Opacity", "[", "0.2`", "]"}], ",", 
               RowBox[{"Dashing", "[", 
                 RowBox[{"{", 
                   RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
           ",", 
           RowBox[{"Directive", "[", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
               ",", 
               RowBox[{"Opacity", "[", "0.4`", "]"}]}], "]"}], ",", 
           RowBox[{"Directive", "[", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[0, 0, 1], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
               ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 0, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
             "]"}]}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{#, ",", #2, ",", #3}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.861878723041635*^9, 3.8618787375932693`*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g1", "=", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"mean", "[", "parsN2", "]"}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "parsN2", "]"}], "+", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "parsN2", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "parsN2", "]"}], "-", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "parsN2", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Blue", ",", 
          RowBox[{"Opacity", "[", "0.2", "]"}], ",", "Dashed"}], "]"}]}], ",", 
       RowBox[{"Filling", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "3", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Directive", "[", 
              RowBox[{"Blue", ",", 
               RowBox[{"Opacity", "[", "0.1", "]"}]}], "]"}], "}"}]}], 
           "}"}]}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"mean", "[", "pars5", "]"}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "pars5", "]"}], "+", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "pars5", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "pars5", "]"}], "-", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "pars5", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Blue", ",", 
          RowBox[{"Opacity", "[", "0.4", "]"}]}], "]"}]}], ",", 
       RowBox[{"Filling", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "3", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Directive", "[", 
              RowBox[{"Blue", ",", 
               RowBox[{"Opacity", "[", "0.2", "]"}]}], "]"}], "}"}]}], 
           "}"}]}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"mean", "[", "pars2", "]"}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "pars2", "]"}], "+", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "pars2", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}], ",", 
         RowBox[{
          RowBox[{"mean", "[", "pars2", "]"}], "-", 
          FractionBox[
           RowBox[{"2", 
            RowBox[{"SD", "[", "pars2", "]"}]}], 
           RowBox[{"Sqrt", "[", "2000", "]"}]]}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"Directive", "[", "Blue", "]"}]}], ",", 
       RowBox[{"Filling", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "3", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"Directive", "[", 
              RowBox[{"Blue", ",", 
               RowBox[{"Opacity", "[", "0.2", "]"}]}], "]"}], "}"}]}], 
           "}"}]}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.5"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Host generations\>\"", ",", "\"\<Host heterozygosity\>\""}], 
       "}"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", " ", "False"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g1Legend", "=", 
   RowBox[{"Legended", "[", 
    RowBox[{"g1", ",", "leg2"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.861872943454239*^9, 3.861872988412517*^9}, {
   3.8618730190911407`*^9, 3.861873031765658*^9}, 3.861875135152529*^9, 
   3.861875246387599*^9, 3.861877480034683*^9, {3.8618777000767937`*^9, 
   3.861877712931704*^9}, {3.861878693688336*^9, 3.86187869410282*^9}, 
   3.861881859336824*^9}],

Cell[CellGroupData[{

Cell[BoxData["g1Legend"], "Input",
 CellChangeTimes->{{3.8618786871126204`*^9, 3.861878688796863*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, 
      GraphicsComplexBox[CompressedData["
1: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
onunijvJ2lwovriusGE5ycCFOK6Ufe0Mkh248P6tkkzs0D3y+blw851ntX0v
yRwu6Gav1z7cQjKfCwUKfXtXlZKcyoUWyeBt7ftJzuJCsH+6hyub5GIuWD1r
NrrnQHIVF9Ibl/hP1ya5iQuvlYW/haqR3MmFM1N0Gn7KkzzABe1NeZWvZ5DM
4MEF0a0wf+Au+fw8mOXivVmjiWRFHpQ6q6uFFZOszQMhFZuJzFSSgQf7RWJ+
5sSS7MCDgd8N5mciSWbyoGvTyljjIJI5PNi0SuDvfztI5vOgMkDMwdOV5FQe
2AY8ZF82ITmLBxsDjhzQw1zMA2dT4eZlyiRX8eBisNmlg7NIbuLB/E+qZcoT
Sf7/eJaAc9ZAykfqWXWWS9fMfkg9q3n01C7VUupZFWNhdwePUc86ISscu4BP
PSteKHCvSjj1LEef6BKWE/Us0y9OsZ8NqWd5qPSZjSlSz9rnZ5lVKYR5PlyR
lh4W6KOexZz4bnDWc+pZR2smhtrdop4ltYVz9s556lkb/TdmHkqnnrV89HPs
xU3Usw4LRIaa+VHPMl40p9nNgnrWjwmLwuboUs9qsVApSP3Pt/TA5U3Jli8/
qWfV9QqXTe2gnvVCbo1SdzX1LPvOHSODOdSzHrYeuVKTRj3L2tz/T/Im6lni
MSbPnntTzxq/b2Q2YkQ9ixex0aRtHmZj2GS+yNhrOmaApOjGoxF/qGf1fUms
U++inlU3d+jb0FPqWZuzbaIm1FPPWjUz2ZNfSj0r+aRxVEc29Sy5uh+C5Tup
Z7W9npGhwqWedaN6ybVRT+pZpxXMcrdaUM9iGpQo//jPu9aAp9GeA4+m47sZ
XHBssH3TTz3LbUX7Bb9W6lmtTieb1K9Tz7Iue2taf4F6VozqwdawE9Szjs/9
ITSdTz1LOyXgvUEo9SzD+kmB2i7Us9qON/2W0MV3K0iX2Sh0cDa+W4ObrKaE
1FR8t4YvxosVzvyhnjUlTmlJ3DvqWXvMOg+MPqSe5ZurbPLkBvWs49867sqe
p571O0fVRTONeha/XfrmzC3Us6pOHmg3DaSe9UFcN+WwJb47QNWUXwv9V5AM
DrD8yLd1OnPx+x1g5qxrzS4zSK5yAEOfiS7ThqlnFR/1ueXaTz1L9+vWXrEu
6lkKORJTu15Rz5LY1iPl30Q965D765a8cupZ69RGAuPyqWctXL/jUt8h6lkh
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
IUO3YcGfbeh5XLg2WJh4iYmexwWhoWOVuwzQ87ggvkhakSePnscFq8a6HM0Z
6HlcuHezdSB1hPgXnwuRrMRhvTaSU7lwuGL4xbHLJGdx4YyUb8mfDPQ8Llxk
nBGXiUHP40L1+k4hTVf0PC6UftSbaGKLnseFl6Me/RWm6HlcCFb9KLBIHz2P
B+Ijd/vsZ6Ln8WBeS4/n00HiXYo8KM+sa3/WSrI2Dz7meL8euUwy8CBzkWpN
wymSHXjAMSiMOnkQPY8Hm7o7fTz2oufxIE9h4qKmJPQ8HgiXubFmb0XP44Hv
ysDKb2HoeTx4GmbulI25mAd65tIlKZboeTyojfjQ4AvoeTx4oXlWXUYdve7/
9ay+TaNv7buoZ+VnBqkH1FHPqthltf3HOepZi5tj2vgp1LNc0z+pRLCpZ3FC
FhwVcqOe9UjVt+XNSupZ0B09+FSFelZJccyrlAnUs3p3Gp8ceU/3WXuERuXj
71HPUlkkMlmulHrWpPgzg9MOU8963y48+DyOetbvKk2z8iDqWQ2ue/Z9XUM9
y1QyO2WGOvWstrhMyT4x6lmuB8S+vR1CH1oKToeCGS1P6T5Lbcnp12/KqGdd
fS2wSewo9awu+/mqz2OoZxms4JYYu1PPCgm+0dllSj0rzlVibrAa9azUi3kd
vH+oZzkkq2ut7kbvMQIZ/a3L+xvoPksm+fajaVfoPsvPI1u3Kpt6lm/SsYeP
dlLPMpouzsmKpp51t4fhnxBAPWvOc+2BU7bUs96s2XdgjgH1rM+dwz1GctSz
1H2Opx2cRD3L3iT8t3Ufeo8pVAuaV+17jh60BnqHd055WEL3WS9evkgUPUH3
WTlnLmRIRVPPSnOJXf3OnXrW2Nz9W1mG1LN2zQrx6lWnnlUiXebUIUM9a4Vh
7TW7YfQeS/BsvzE8qwN9xxISltSZGt7HdytQuL/Jctc5us8SmzVB2SWF7rO2
rx53q42j+yy7K/2VXRzqWRcPxrxLdKSelT/7aaiFPvWsVWH9S6bOp561ok/t
le106lkD1+vXCqMv8e0gf9/6cX4Heos9jItoPxipw3d7sKoYH3YooPssCT25
xC2ZdJ/162Tuscp4us8qSC6YcYlN91nncgaO3XSintWr8yxcyZJ61gtxsVE5
Q+pZL+2da2R1qWcdO5gmyFWlnvXzgbqRkwj1rOCqp+ZPR9FTHCH/9u3YEfSh
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
       
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[0, 0, 1], 
           Opacity[0.1]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl1UO0GAYQBdA0P2ls27Zt2/aP+WObTdrYtu02tm23sW22N6eLe86sZvXe
TJLAoKodggcLFuwX6hrqUZ8GNKQRjWlCIE1pRnNa0JJWtKYNbWlHe34uDqIj
nehMF7rSje70oCe96E0f+tKP/gxgIIMYzBCGMozhjOA3RjKK3/mD0YxhLOMY
zwQmMonJTGEq05jODGYyi9nMYS7zmM8CFrKIxSxhKctYzgpWsorVrGEt61jP
Bjayic1sYSt/8hfb2M4OdrKL3exhL/vYzwEOcojDHOEoxzjOCU5yitOc4Szn
OM8FLnKJy1zhKte4zg1ucou/+Yfb3OEu97jPAx7yiMc84SnPeM4LXvKK17zh
Le94zwc+8onPfOEr3/jOD/4lWIB8EpwAQhCSXwlFaMIQlnCEJwIRiURkohCV
aEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVs
ZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpU
pwY1qUVt6lCXetSnAQ1pRGOaEEhTmtGcFrSkFa1pQ1va0Z4OBNGRTnSmC13p
Rnd60JNe9KYPfelHfwYwkEEMZghDGcZwRgT8f7fqUJta1KQG1alGVapQmUpU
pALlKUdZylCaUpSkBMUpRlGKUJhCFKQA+clHXvKQm1zkJAfZyUZWspCZTGQk
A+lJR1rSkJpUpCQFyUlGUpKQmEQkJAHxiUdc4hCbWMQkBtGJRlSiEJlIRCQC
4QlHWMIQmlD8SkhCEEBwfvnZw5999Ch+8J1vfOULn/nERz7wnne85Q2vecVL
XvCcZzzlCY95xEMecJ973OUOt/mHv7nFTW5wnWtc5QqXucRFLnCec5zlDKc5
xUlOcJxjHOUIhznEQQ6wn33sZQ+72cVOdrCdbfzFn2xlC5vZxEY2sJ51rGUN
q1nFSlawnGUsZQmLWcRCFjCfecxlDrOZxUxmMJ1pTGUKk5nERCYwnnGMZQyj
+YPfGcVIfmMEwxnGUIYwmEEMZAD96Udf+tCbXvSkB93pRle60JlOdCSIDrSn
HW1pQ2ta0ZIWNKcZTQmkCY1pREMaUJ961KUOtalFTWpQnWpUpQqVqURFKlCe
cpSlDKUpRUlKUJxiFKUIhSlEQQqQn3zkJQ+5yUVOcpCdbGQlC5nJREb+A402
JVw=
             "]]}]}, {}, {}}, {{}, {}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwl1FO4EAYYBuBzsm2dTtYyl81l17Jt27Zbts0t2225LZurtrDF9zxdvN9/
+918f3CTjlU7BAYEBPwgQm4oQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jE
Iz4JSEgiEpOEpCQjiOQEk4KUpCI1aUhLOtKTgYxkCulMZrKQlWxkJwc5yUVu
8pCXfPxIfgpQkEIUpghFKUZxSlCSUpSmDGUpR3kq8BMVqURlqlCValSnBjWp
RW3qUJd61OdnGtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCT
XvSmD33pR38GMJBBDGYIQxnGcEYwklGMZgxjGcd4JjCRSUxmClOZxnRmMJNZ
zGYOc/mFecxnAQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZ
xW5+5Tf2sJd97OcABznEYY5wlGMc5wQnOcVpznCWc5znd/7gAhe5xGWucJVr
XOdP/uIGN7nFbe5wl3vc5wEPecRjnvCUZzznBS/5m1e85g3/8C9vecd7PvAf
//ORT3zmC18JGX8goQhNGMISjvBEICKRiEwUohKN6MQgJrGITRziEo/4JCAh
iUhMEpKSjCCSE0wKUpKK1KQhLelITwYykinw+8/6BlnShZs=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwV0FVjFgQAQNGPkFK6lBBG90Z3j1zANrpDkBIkJUQpgw4FBZTu7u5GUkpC
UrqlQer4cO4PuEGtukR3jhUIBPJLAYIJoSCFKEwRilKM4pSgJKUoTRnKUo7y
VKAilahMKFWoSjWqU4OahBFOBJHUojZRRBNDHepSj/o0oCGNaEwTmtKM5rSg
Ja1ozWe0oS2f0472dKAjnfiC/0d04Uu60o3u9KAnvfiK3vShL/34mv58w7cM
YCCDGMwQvuN7fuBHhjKM4YxgJKMYzRjGMo6f+JnxTOAXfmUik5jMb/zOFKYy
jenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAlq1jNGtayjvVsYCOb2MwWtrKN
7exgJ7vYzR72so/9/MEBDnKIwxzhKH9yjOOc4CSn+IvTnOEs5/ib81zgIpe4
zBX+4SrXuM4NbnKL29zhLve4zwMe8i+PeMwTnvKM57zgJa/4j9e84S3vCMQO
BGIRmzjE5QPiEZ8EJCQRH/IRiUlCUpKRnBSkJBWpSUNaPuYT0pGeDGTkUzKR
mSCykJVsZCcHOclFbvKQl3zkpwDBhFCQQhSmCEUpRnFKUJJSlKYMZSlHeSpQ
kUpUJpQqVKUa1alBTcIIJ4JIalGbKKKJoQ51qUd9GtCQRrwHpYWO3g==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwNxFVgFQQAAMA3Qlq6ke6STkUJ6U6pwTbYYION7m5QKaU7DBqkG6RBSaVL
6VYapO7jLltoTMPooEAgUEgtYwUCrWhNMG1oSwihhNGO9oQTQQc6EkkUnehM
NDF0oSvd6E4PetKL3vShL/3ozwAGMojBDGEowxjOCEYyitGMYSzj+IZv+Y7x
TGAik5jM9/zAFKYyjenMYCazmM0c5jKP+SxgIYtYzI/8xM/8whKWsozlrGAl
q1jNGn5lLetYzwY2sonNbGEr29jODnayi938xh72so/9HOAghzjMEX7nD45y
jOOc4CSn+JO/OM0ZznKO81zgIpe4zBWu8jf/cI3r3OAmt7jNHe5yj/s84CGP
+Jf/eMwTnvKM57zgJa94zf+84S3veE8gdiAQRCxiE4e4fEQ84pOAhCQiMUn4
mKQkIzkpSEkqUpOGtKQjPRnISCY+ITNZyEo2spODnOQiN3nISz7yU4CCFKIw
n1KEohSjOCUoSSlKU4aylKM8n/E5FfiCL6lIJSpTha+oSjWqU4Oa1KI2dahL
PerTgIY0ojFNaEozvqY5LWhJK1oTTBvaEkIoYbSjPeFE0IGORBJFJzoTTQxd
6Eo3utODnvSiN33oSz/6M4CBDGIwQxjKMIYzgpGMYjQfAGsLmCE=
           
           "]]}}}], {}, {}, {{}, {}}}, {{}, 
      GraphicsComplexBox[CompressedData["
1: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
94kx/Xdy/vss6koxxN+F22fMoVb++74jgqW6VYn/9Scxlp0r/3Uli5onAV/3
xRb309TaEuwrcDnzzYeaL4Gq/8dayUJqQwk2PK9X/8ucGhLIznmWrZxN7SBB
9tLqof1vr6b3S/A6u8x5qxe1WIJCt6rVHzpRyyRYOu+AkfFjGb1fgtVNU31j
4qnlEpxOqm2ADnWeBK/iUypcTyTQ+yWYHFXxe3N36koJxLe6+xqprKL3S/Do
zltJl7Z4er8EXoY9BkmbV9D7pRhhPDErZSG1thTTVQZEaFbG0fulmHBHd9fY
V8vp/VLkaK2T6ptTQwqbkuG7d7jG0vulmPvtnmZzL2qBFLpVnep4Ccvo/VKI
VTuVnLellknhl/nXk/Jx1OlSzPglmnH7xVJ6vxR5hmobvZXUeVI89fqhn7yR
WiGFqWrZSXM76kop3ln7HPoppf4/PGvCME+Tx685z/p7tde1hArOs4wF9mM2
FXCetdV2G39FNudZ9RuT639s4Dzr/JbM3YYrOc/KvPlx5MJozrMq+nlbXhRz
nnUm3iFkSgTnWfcK0trEgZxn/ez0sO8EIedZF4alOxxbxHnW0NNXqy1tOc8y
UW8Zf3QK51ltPR03XdLjPOtskVehfhfWk7Cm5/q3899wnuVv3nvI6XLOs56L
/tE1OcJ51vD9iZ+K13Oe5esyaWmWmPOsBf7tWy87cJ5let+5PgGcZ/2ZZ7vq
mj7nWf7JJ5aX9GI9HT9jhX0dVVmbo3Zy6Yrr3zjP2vzOYpntG86zDtblLKpR
cp7F98qYureK86x1D98PmVjOedaFDWqbIws5z/rSVp8ScojzrLjosqXmWznP
mr/A++C9eM6z8sp0jlpHcJ6V1xo3QcOZ8yzvEcm6BlM5z9Lla01yGcHOrdCg
Iru1/Q/nWfz4n6OfNHGetUN5KDn6OudZD+uujhySz3nWI72c296bOc/Ks0rJ
zQjmPEtYeN3vnD3nWc/FtY07R7JzW9y8e+HJu9+cZ+07FzxX8z7nWTf32/e2
zOM8y8jt4KgnKZxn3XzWMM1fyHlWRWasmtpUdj4fW8JSglN+c56VM3ytduwj
zrMyvmfOGiTnPOvn6n4xPaI5z2pctax4oSU7t0d1TvP+B4PZuT32dVNctmri
PKv018fGhPOcZy111jv0MInzrHlfZ9gZWlPDAQ07TDZPGsi+74BfmWnC3GbO
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
S9FlR//6K1OoK6XY1zFDZZR7mMX/AyIlNiI=
       
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[0, 0, 1], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl1UO0GAYQBdA0P2ls27Zt2/aP+WObTdrYtu02tm23sW22N6eLe86sZvXe
TJLAoKodggcLFuwX6hrqUZ8GNKQRjWlCIE1pRnNa0JJWtKYNbWlHe34uDqIj
nehMF7rSje70oCe96E0f+tKP/gxgIIMYzBCGMozhjOA3RjKK3/mD0YxhLOMY
zwQmMonJTGEq05jODGYyi9nMYS7zmM8CFrKIxSxhKctYzgpWsorVrGEt61jP
Bjayic1sYSt/8hfb2M4OdrKL3exhL/vYzwEOcojDHOEoxzjOCU5yitOc4Szn
OM8FLnKJy1zhKte4zg1ucou/+Yfb3OEu97jPAx7yiMc84SnPeM4LXvKK17zh
Le94zwc+8onPfOEr3/jOD/4lWIB8EpwAQhCSXwlFaMIQlnCEJwIRiURkohCV
aEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVs
ZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpU
pwY1qUVt6lCXetSnAQ1pRGOaEEhTmtGcFrSkFa1pQ1va0Z4OBNGRTnSmC13p
Rnd60JNe9KYPfelHfwYwkEEMZghDGcZwRgT8f7fqUJta1KQG1alGVapQmUpU
pALlKUdZylCaUpSkBMUpRlGKUJhCFKQA+clHXvKQm1zkJAfZyUZWspCZTGQk
A+lJR1rSkJpUpCQFyUlGUpKQmEQkJAHxiUdc4hCbWMQkBtGJRlSiEJlIRCQC
4QlHWMIQmlD8SkhCEEBwfvnZw5999Ch+8J1vfOULn/nERz7wnne85Q2vecVL
XvCcZzzlCY95xEMecJ973OUOt/mHv7nFTW5wnWtc5QqXucRFLnCec5zlDKc5
xUlOcJxjHOUIhznEQQ6wn33sZQ+72cVOdrCdbfzFn2xlC5vZxEY2sJ51rGUN
q1nFSlawnGUsZQmLWcRCFjCfecxlDrOZxUxmMJ1pTGUKk5nERCYwnnGMZQyj
+YPfGcVIfmMEwxnGUIYwmEEMZAD96Udf+tCbXvSkB93pRle60JlOdCSIDrSn
HW1pQ2ta0ZIWNKcZTQmkCY1pREMaUJ961KUOtalFTWpQnWpUpQqVqURFKlCe
cpSlDKUpRUlKUJxiFKUIhSlEQQqQn3zkJQ+5yUVOcpCdbGQlC5nJREb+A402
JVw=
             "]]}]}, {}, {}}, {{}, {}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.4]], 
          LineBox[CompressedData["
1:eJwl1FO4EAYYBuBzsm2dTtYyl81l17Jt27Zbts0t2225LZurtrDF9zxdvN9/
+918f3CTjlU7BAYEBPwgQm4oQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jE
Iz4JSEgiEpOEpCQjiOQEk4KUpCI1aUhLOtKTgYxkCulMZrKQlWxkJwc5yUVu
8pCXfPxIfgpQkEIUpghFKUZxSlCSUpSmDGUpR3kq8BMVqURlqlCValSnBjWp
RW3qUJd61OdnGtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCT
XvSmD33pR38GMJBBDGYIQxnGcEYwklGMZgxjGcd4JjCRSUxmClOZxnRmMJNZ
zGYOc/mFecxnAQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZ
xW5+5Tf2sJd97OcABznEYY5wlGMc5wQnOcVpznCWc5znd/7gAhe5xGWucJVr
XOdP/uIGN7nFbe5wl3vc5wEPecRjnvCUZzznBS/5m1e85g3/8C9vecd7PvAf
//ORT3zmC18JGX8goQhNGMISjvBEICKRiEwUohKN6MQgJrGITRziEo/4JCAh
iUhMEpKSjCCSE0wKUpKK1KQhLelITwYykinw+8/6BlnShZs=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.4]], 
          LineBox[CompressedData["
1:eJwV0FVjFgQAQNGPkFK6lBBG90Z3j1zANrpDkBIkJUQpgw4FBZTu7u5GUkpC
UrqlQer4cO4PuEGtukR3jhUIBPJLAYIJoSCFKEwRilKM4pSgJKUoTRnKUo7y
VKAilahMKFWoSjWqU4OahBFOBJHUojZRRBNDHepSj/o0oCGNaEwTmtKM5rSg
Ja1ozWe0oS2f0472dKAjnfiC/0d04Uu60o3u9KAnvfiK3vShL/34mv58w7cM
YCCDGMwQvuN7fuBHhjKM4YxgJKMYzRjGMo6f+JnxTOAXfmUik5jMb/zOFKYy
jenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAlq1jNGtayjvVsYCOb2MwWtrKN
7exgJ7vYzR72so/9/MEBDnKIwxzhKH9yjOOc4CSn+IvTnOEs5/ib81zgIpe4
zBX+4SrXuM4NbnKL29zhLve4zwMe8i+PeMwTnvKM57zgJa/4j9e84S3vCMQO
BGIRmzjE5QPiEZ8EJCQRH/IRiUlCUpKRnBSkJBWpSUNaPuYT0pGeDGTkUzKR
mSCykJVsZCcHOclFbvKQl3zkpwDBhFCQQhSmCEUpRnFKUJJSlKYMZSlHeSpQ
kUpUJpQqVKUa1alBTcIIJ4JIalGbKKKJoQ51qUd9GtCQRrwHpYWO3g==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.4]], 
          LineBox[CompressedData["
1:eJwNxFVgFQQAAMA3Qlq6ke6STkUJ6U6pwTbYYION7m5QKaU7DBqkG6RBSaVL
6VYapO7jLltoTMPooEAgUEgtYwUCrWhNMG1oSwihhNGO9oQTQQc6EkkUnehM
NDF0oSvd6E4PetKL3vShL/3ozwAGMojBDGEowxjOCEYyitGMYSzj+IZv+Y7x
TGAik5jM9/zAFKYyjenMYCazmM0c5jKP+SxgIYtYzI/8xM/8whKWsozlrGAl
q1jNGn5lLetYzwY2sonNbGEr29jODnayi938xh72so/9HOAghzjMEX7nD45y
jOOc4CSn+JO/OM0ZznKO81zgIpe4zBWu8jf/cI3r3OAmt7jNHe5yj/s84CGP
+Jf/eMwTnvKM57zgJa94zf+84S3veE8gdiAQRCxiE4e4fEQ84pOAhCQiMUn4
mKQkIzkpSEkqUpOGtKQjPRnISCY+ITNZyEo2spODnOQiN3nISz7yU4CCFKIw
n1KEohSjOCUoSSlKU4aylKM8n/E5FfiCL6lIJSpTha+oSjWqU4Oa1KI2dahL
PerTgIY0ojFNaEozvqY5LWhJK1oTTBvaEkIoYbSjPeFE0IGORBJFJzoTTQxd
6Eo3utODnvSiN33oSz/6M4CBDGIwQxjKMIYzgpGMYjQfAGsLmCE=
           
           "]]}}}], {}, {}, {{}, {}}}, {{}, 
      GraphicsComplexBox[CompressedData["
1:eJxt2mlYjH/49/GxJXtCZB1LlrIUiWx9tEgR7dqbmmaqaZsZZCumkhZbEmXL
ZCtlSckeI9otKRSKSUTWRFny4+++O6//9eC+PXG8j+9855yrZ9frOEd7h9gK
OnM4nJguHM7/+b/jX7NRx/9K+p+DzVH7M9+/ekGtipUnXHe2lTCthpzMm/e2
nmZ6IHrqfi56mMz0EHi0byksiGZ6OBryRuY4bmCaC/XRA8O9Q5keA6OvZy7E
Spkeh/inWWY9hUyPx5jhEm8PZ6Ynoni/f81Oc6a1cTnw7NTUaUxPxuPSfYur
ezM9FW9S7K4KPjyn1sXJSapT7hUyrYfBfoJzk9OYno5aq7aaj6uZngH+1YRB
/rZM66NiT/2H1OlMz4RDtYpH8GCmDXDsZLvunB5Mz8LLhn59hBymZyNm/Inm
Wa111IZ45d/+xfId03MwNnC1+sS3TM+FcJfFtbM1TM/DtMW1jWtuMz0fUtvo
lXfSmV6ArxN3N+puYdoIr+ZkC945MA0cWhOplz6NWga8mHDjBHow5wsRlTOi
0aqhls4XYkHE0DHLS6g5xgixVnhJTzDnxljSdqk4Mpw5N8GsFleft57MuQnW
DzQxmaXHnJsiZemzB+OHMeemeJDTrtnU8ozOzbDr08ek1EpqmRlmjd5e2/UE
c74I+w4VZy+SMOeLYKn67ZGLNnNujm0q0+7ZtT6lc3NErx2gXH6MmrMY+dyI
lTY2zPliPM9Yo2umwpxb4OdOlyGGF5/QuQXSNlnfeCum5ljCac/+XPEE5twS
p5SPqh89qqHzJdjqKV1+M5patgSG1WufHJrPnC/Fp6s1vnqfq+l8KeruCrhz
T1NzrJDgNkPjmQ9zboW9klk5X4Yy58uwqyWvwfzuYzpfhuikIUNehFJzlqP7
5es3zScx5/86Z0tvzfJHdG6NcbdSX2lKqWGNmM7Ngpl9qWXWELh+1G0+/rCj
FdbY/Xv8itF21Bwb7Dp/s9KnvYru26B0bJxpQwq1zAaeO9dtUp1LrbDBwwcj
B9XUVNJ9W2xUvJhTtZoattB1/9A5XYVaZotjva4Jp2Y8oPu2WHvap+mzOTXH
Ds0nDLupN1XQfTu8DZ3ksWwvtcwOuX21jHjzqBV2+BTVcvzG7ft03x7L0has
PDaQGvaY2ntN4sg19+i+PTQue/8or7tL9+1hqZ7NGTKRmuOAaYe/X10quUP3
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

       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[0, 0, 1], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl1UO0GAYQBdA0P2ls27Zt2/aP+WObTdrYtu02tm23sW22N6eLe86sZvXe
TJLAoKodggcLFuwX6hrqUZ8GNKQRjWlCIE1pRnNa0JJWtKYNbWlHe34uDqIj
nehMF7rSje70oCe96E0f+tKP/gxgIIMYzBCGMozhjOA3RjKK3/mD0YxhLOMY
zwQmMonJTGEq05jODGYyi9nMYS7zmM8CFrKIxSxhKctYzgpWsorVrGEt61jP
Bjayic1sYSt/8hfb2M4OdrKL3exhL/vYzwEOcojDHOEoxzjOCU5yitOc4Szn
OM8FLnKJy1zhKte4zg1ucou/+Yfb3OEu97jPAx7yiMc84SnPeM4LXvKK17zh
Le94zwc+8onPfOEr3/jOD/4lWIB8EpwAQhCSXwlFaMIQlnCEJwIRiURkohCV
aEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVs
ZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpU
pwY1qUVt6lCXetSnAQ1pRGOaEEhTmtGcFrSkFa1pQ1va0Z4OBNGRTnSmC13p
Rnd60JNe9KYPfelHfwYwkEEMZghDGcZwRgT8f7fqUJta1KQG1alGVapQmUpU
pALlKUdZylCaUpSkBMUpRlGKUJhCFKQA+clHXvKQm1zkJAfZyUZWspCZTGQk
A+lJR1rSkJpUpCQFyUlGUpKQmEQkJAHxiUdc4hCbWMQkBtGJRlSiEJlIRCQC
4QlHWMIQmlD8SkhCEEBwfvnZw5999Ch+8J1vfOULn/nERz7wnne85Q2vecVL
XvCcZzzlCY95xEMecJ973OUOt/mHv7nFTW5wnWtc5QqXucRFLnCec5zlDKc5
xUlOcJxjHOUIhznEQQ6wn33sZQ+72cVOdrCdbfzFn2xlC5vZxEY2sJ51rGUN
q1nFSlawnGUsZQmLWcRCFjCfecxlDrOZxUxmMJ1pTGUKk5nERCYwnnGMZQyj
+YPfGcVIfmMEwxnGUIYwmEEMZAD96Udf+tCbXvSkB93pRle60JlOdCSIDrSn
HW1pQ2ta0ZIWNKcZTQmkCY1pREMaUJ961KUOtalFTWpQnWpUpQqVqURFKlCe
cpSlDKUpRUlKUJxiFKUIhSlEQQqQn3zkJQ+5yUVOcpCdbGQlC5nJREb+A402
JVw=
             "]]}]}, {}, {}}, {{}, {}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1:eJwl1FO4EAYYBuBzsm2dTtYyl81l17Jt27Zbts0t2225LZurtrDF9zxdvN9/
+918f3CTjlU7BAYEBPwgQm4oQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jE
Iz4JSEgiEpOEpCQjiOQEk4KUpCI1aUhLOtKTgYxkCulMZrKQlWxkJwc5yUVu
8pCXfPxIfgpQkEIUpghFKUZxSlCSUpSmDGUpR3kq8BMVqURlqlCValSnBjWp
RW3qUJd61OdnGtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCT
XvSmD33pR38GMJBBDGYIQxnGcEYwklGMZgxjGcd4JjCRSUxmClOZxnRmMJNZ
zGYOc/mFecxnAQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZ
xW5+5Tf2sJd97OcABznEYY5wlGMc5wQnOcVpznCWc5znd/7gAhe5xGWucJVr
XOdP/uIGN7nFbe5wl3vc5wEPecRjnvCUZzznBS/5m1e85g3/8C9vecd7PvAf
//ORT3zmC18JGX8goQhNGMISjvBEICKRiEwUohKN6MQgJrGITRziEo/4JCAh
iUhMEpKSjCCSE0wKUpKK1KQhLelITwYykinw+8/6BlnShZs=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1:eJwV0FVjFgQAQNGPkFK6lBBG90Z3j1zANrpDkBIkJUQpgw4FBZTu7u5GUkpC
UrqlQer4cO4PuEGtukR3jhUIBPJLAYIJoSCFKEwRilKM4pSgJKUoTRnKUo7y
VKAilahMKFWoSjWqU4OahBFOBJHUojZRRBNDHepSj/o0oCGNaEwTmtKM5rSg
Ja1ozWe0oS2f0472dKAjnfiC/0d04Uu60o3u9KAnvfiK3vShL/34mv58w7cM
YCCDGMwQvuN7fuBHhjKM4YxgJKMYzRjGMo6f+JnxTOAXfmUik5jMb/zOFKYy
jenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAlq1jNGtayjvVsYCOb2MwWtrKN
7exgJ7vYzR72so/9/MEBDnKIwxzhKH9yjOOc4CSn+IvTnOEs5/ib81zgIpe4
zBX+4SrXuM4NbnKL29zhLve4zwMe8i+PeMwTnvKM57zgJa/4j9e84S3vCMQO
BGIRmzjE5QPiEZ8EJCQRH/IRiUlCUpKRnBSkJBWpSUNaPuYT0pGeDGTkUzKR
mSCykJVsZCcHOclFbvKQl3zkpwDBhFCQQhSmCEUpRnFKUJJSlKYMZSlHeSpQ
kUpUJpQqVKUa1alBTcIIJ4JIalGbKKKJoQ51qUd9GtCQRrwHpYWO3g==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1:eJwNxFVgFQQAAMA3Qlq6ke6STkUJ6U6pwTbYYION7m5QKaU7DBqkG6RBSaVL
6VYapO7jLltoTMPooEAgUEgtYwUCrWhNMG1oSwihhNGO9oQTQQc6EkkUnehM
NDF0oSvd6E4PetKL3vShL/3ozwAGMojBDGEowxjOCEYyitGMYSzj+IZv+Y7x
TGAik5jM9/zAFKYyjenMYCazmM0c5jKP+SxgIYtYzI/8xM/8whKWsozlrGAl
q1jNGn5lLetYzwY2sonNbGEr29jODnayi938xh72so/9HOAghzjMEX7nD45y
jOOc4CSn+JO/OM0ZznKO81zgIpe4zBWu8jf/cI3r3OAmt7jNHe5yj/s84CGP
+Jf/eMwTnvKM57zgJa94zf+84S3veE8gdiAQRCxiE4e4fEQ84pOAhCQiMUn4
mKQkIzkpSEkqUpOGtKQjPRnISCY+ITNZyEo2spODnOQiN3nISz7yU4CCFKIw
n1KEohSjOCUoSSlKU4aylKM8n/E5FfiCL6lIJSpTha+oSjWqU4Oa1KI2dahL
PerTgIY0ojFNaEozvqY5LWhJK1oTTBvaEkIoYbSjPeFE0IGORBJFJzoTTQxd
6Eo3utODnvSiN33oSz/6M4CBDGIwQxjKMIYzgpGMYjQfAGsLmCE=
           
           "]]}}}], {}, {}, {{}, {}}}}, {
    PlotRange -> {0, 0.5}, Frame -> True, FrameLabel -> {
       FormBox["\"Host generations\"", TraditionalForm], 
       FormBox["\"Host heterozygosity\"", TraditionalForm]}, Axes -> False, 
     DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
     PlotRange -> {{0., 301.}, {0, 0.5}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0., 301.}, {0, 0.5}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Neutral, \\!\\(\\*SubscriptBox[\\(m\\), \\(i\\)]\\)=0.05\"", 
       "\"Coevolutionary, \\!\\(\\*SubscriptBox[\\(m\\), \\(i\\)]\\)=0.05, \
S=0.65\"", 
       "\"Coevolutionary, \\!\\(\\*SubscriptBox[\\(m\\), \\(i\\)]\\)=0.05, \
S=0.8\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Opacity[0.2], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Opacity[0.2], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Opacity[0.4]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Opacity[0.4]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.2`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.4`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.861878689574581*^9, 3.861878695774126*^9}, {
  3.861878731645267*^9, 3.861878739708246*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"leg3", "=", 
  RowBox[{"LineLegend", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{"Blue", ",", 
        RowBox[{"Opacity", "[", "0.2", "]"}], ",", "Dashed"}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{"Red", ",", 
        RowBox[{"Opacity", "[", "0.2", "]"}], ",", "Dashed"}], "]"}], ",", 
      RowBox[{"Directive", "[", "Blue", "]"}], ",", 
      RowBox[{"Directive", "[", "Red", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Neutral, \!\(\*SubscriptBox[\(m\), \(i\)]\)=0.05, V=0.2\>\"", ",", 
      "\"\<Neutral, \!\(\*SubscriptBox[\(m\), \(i\)]\)=0.05, V=0.5\>\"", ",", 
      "\"\<Coevolutionary, \!\(\*SubscriptBox[\(m\), \(i\)]\)=0.05, \
V=0.2\>\"", ",", 
      "\"\<Coevolutionary, \!\(\*SubscriptBox[\(m\), \(i\)]\)=0.05, \
V=0.5\>\""}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"g2", "=", 
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"mean", "[", "parsN", "]"}], ",", 
        RowBox[{
         RowBox[{"mean", "[", "parsN", "]"}], "+", 
         FractionBox[
          RowBox[{"2", 
           RowBox[{"SD", "[", "parsN", "]"}]}], 
          RowBox[{"Sqrt", "[", "2000", "]"}]]}], ",", 
        RowBox[{
         RowBox[{"mean", "[", "parsN", "]"}], "-", 
         FractionBox[
          RowBox[{"2", 
           RowBox[{"SD", "[", "parsN", "]"}]}], 
          RowBox[{"Sqrt", "[", "2000", "]"}]]}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Blue", ",", 
         RowBox[{"Opacity", "[", "0.2", "]"}], ",", "Dashed"}], "]"}]}], ",", 
      
      RowBox[{"Filling", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"2", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "3", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Directive", "[", 
             RowBox[{"Blue", ",", 
              RowBox[{"Opacity", "[", "0.1", "]"}]}], "]"}], "}"}]}], "}"}]}],
         "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"mean", "[", "parsN4", "]"}], ",", 
        RowBox[{
         RowBox[{"mean", "[", "parsN4", "]"}], "+", 
         FractionBox[
          RowBox[{"2", 
           RowBox[{"SD", "[", "parsN4", "]"}]}], 
          RowBox[{"Sqrt", "[", "2000", "]"}]]}], ",", 
        RowBox[{
         RowBox[{"mean", "[", "parsN4", "]"}], "-", 
         FractionBox[
          RowBox[{"2", 
           RowBox[{"SD", "[", "parsN4", "]"}]}], 
          RowBox[{"Sqrt", "[", "2000", "]"}]]}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Red", ",", 
         RowBox[{"Opacity", "[", "0.2", "]"}], ",", "Dashed"}], "]"}]}], ",", 
      
      RowBox[{"Filling", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"2", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "3", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Directive", "[", 
             RowBox[{"Red", ",", 
              RowBox[{"Opacity", "[", "0.1", "]"}]}], "]"}], "}"}]}], "}"}]}],
         "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"mean", "[", "pars1", "]"}], ",", 
        RowBox[{
         RowBox[{"mean", "[", "pars1", "]"}], "+", 
         FractionBox[
          RowBox[{"2", 
           RowBox[{"SD", "[", "pars1", "]"}]}], 
          RowBox[{"Sqrt", "[", "2000", "]"}]]}], ",", 
        RowBox[{
         RowBox[{"mean", "[", "pars1", "]"}], "-", 
         FractionBox[
          RowBox[{"2", 
           RowBox[{"SD", "[", "pars1", "]"}]}], 
          RowBox[{"Sqrt", "[", "2000", "]"}]]}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Blue", ",", 
         RowBox[{"Opacity", "[", "0.4", "]"}]}], "]"}]}], ",", 
      RowBox[{"Filling", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"2", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "3", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Directive", "[", 
             RowBox[{"Blue", ",", 
              RowBox[{"Opacity", "[", "0.2", "]"}]}], "]"}], "}"}]}], "}"}]}],
         "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"mean", "[", "pars4", "]"}], ",", 
        RowBox[{
         RowBox[{"mean", "[", "pars4", "]"}], "+", 
         FractionBox[
          RowBox[{"2", 
           RowBox[{"SD", "[", "pars4", "]"}]}], 
          RowBox[{"Sqrt", "[", "2000", "]"}]]}], ",", 
        RowBox[{
         RowBox[{"mean", "[", "pars4", "]"}], "-", 
         FractionBox[
          RowBox[{"2", 
           RowBox[{"SD", "[", "pars4", "]"}]}], 
          RowBox[{"Sqrt", "[", "2000", "]"}]]}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", "Red", "]"}]}], ",", 
      RowBox[{"Filling", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"2", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "3", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Directive", "[", 
             RowBox[{"Red", ",", 
              RowBox[{"Opacity", "[", "0.2", "]"}]}], "]"}], "}"}]}], "}"}]}],
         "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", " ", "All"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Host generations\>\"", ",", "\"\<Host heterozygosity\>\""}], 
      "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", " ", "False"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.861872943454239*^9, 3.861872988412517*^9}, {
   3.8618730190911407`*^9, 3.861873031765658*^9}, 3.861875135152529*^9, 
   3.861875246387599*^9, {3.861877485849504*^9, 3.861877621516144*^9}, {
   3.8618786068557673`*^9, 3.861878607624323*^9}, {3.861878746786591*^9, 
   3.8618788605557737`*^9}, 3.861880148666931*^9, {3.861880204661125*^9, 
   3.8618802237643557`*^9}, {3.8618802543724213`*^9, 3.861880257364853*^9}, {
   3.8618802933268957`*^9, 3.8618802934447117`*^9}, {3.861881477301523*^9, 
   3.861881515711733*^9}, {3.861881988487731*^9, 3.8618819893120213`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "\"Neutral, \\!\\(\\*SubscriptBox[\\(m\\), \\(i\\)]\\)=0.05, V=0.2\"",
   "\"Neutral, \\!\\(\\*SubscriptBox[\\(m\\), \\(i\\)]\\)=0.05, V=0.5\"",
   "\"Coevolutionary, \\!\\(\\*SubscriptBox[\\(m\\), \\(i\\)]\\)=0.05, \
V=0.2\"","\"Coevolutionary, \\!\\(\\*SubscriptBox[\\(m\\), \\(i\\)]\\)=0.05, \
V=0.5\""},
  "LineLegend",
  DisplayFunction->(StyleBox[
    StyleBox[
     PaneBox[
      TagBox[
       GridBox[{{
          TagBox[
           GridBox[{{
              GraphicsBox[{{
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1], 
                  Opacity[0.2], 
                  Dashing[{Small, Small}]], {
                  LineBox[{{0, 10}, {40, 10}}]}}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1], 
                  Opacity[0.2], 
                  Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
               ImageSize -> {40, 10}, PlotRangePadding -> None, ImagePadding -> 
               Automatic, BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
              GraphicsBox[{{
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0, 0], 
                  Opacity[0.2], 
                  Dashing[{Small, Small}]], {
                  LineBox[{{0, 10}, {40, 10}}]}}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0, 0], 
                  Opacity[0.2], 
                  Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
               ImageSize -> {40, 10}, PlotRangePadding -> None, ImagePadding -> 
               Automatic, 
               BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
              GraphicsBox[{{
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1]], {
                  LineBox[{{0, 10}, {40, 10}}]}}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
               ImageSize -> {40, 10}, PlotRangePadding -> None, ImagePadding -> 
               Automatic, 
               BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
              GraphicsBox[{{
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0, 0]], {
                  LineBox[{{0, 10}, {40, 10}}]}}, {
                 Directive[
                  EdgeForm[
                   Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                  PointSize[0.5], 
                  AbsoluteThickness[1.6], 
                  RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
               ImageSize -> {40, 10}, PlotRangePadding -> None, ImagePadding -> 
               Automatic, 
               BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
            GridBoxAlignment -> {
             "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxDividers -> {
             "Columns" -> {{False}}, "Rows" -> {{False}}}, 
            GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
           "Grid"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
      Alignment -> Left, AppearanceElements -> None, 
      ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
     LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
    Background -> Automatic, StripOnInput -> False]& ),
  Editable->True,
  InterpretationFunction:>(RowBox[{"LineLegend", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
           RowBox[{"Directive", "[", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
               ",", 
               RowBox[{"Opacity", "[", "0.2`", "]"}], ",", 
               RowBox[{"Dashing", "[", 
                 RowBox[{"{", 
                   RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
           ",", 
           RowBox[{"Directive", "[", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                 None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                 DefaultBaseStyle -> {}, ButtonFunction :> 
                 With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
               ",", 
               RowBox[{"Opacity", "[", "0.2`", "]"}], ",", 
               RowBox[{"Dashing", "[", 
                 RowBox[{"{", 
                   RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
           ",", 
           RowBox[{"Directive", "[", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[0, 0, 1], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
               None, BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 0, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
             "]"}], ",", 
           RowBox[{"Directive", "[", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[1, 0, 0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                 FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
               None, BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
             "]"}]}], "}"}], ",", 
       RowBox[{"{", 
         RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]], "Output",\

 CellChangeTimes->{
  3.86187840657825*^9, 3.861878861157926*^9, 3.861880149245852*^9, {
   3.86188020517761*^9, 3.861880224072468*^9}, 3.8618802576949463`*^9, 
   3.861880293983554*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, GraphicsComplexBox[CompressedData["
1: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
eZNWkKwrhOYJl9+KLUkGIUzI7V7PnUeykxByiwX2R5RJZgrhrXOv9Jo/d8n3
F0Kh350Hi9+RLBZCfKDPsq6XJB8QAjdlUMUQc4YQDKWqEtwbSS4SwoKzsUrT
bpBcLYQ1gTNWsFNIbhKCeqr2+c+HSe4UwvMXmhfaIkkeEMK567aa5wJJZohg
hMG6C4+WkiwrgvUl3Hly2iSriqBw81GdCE2SdUUQyLQa06xOMohAeN1RnjmR
ZCcR1PdcWFz77Q75/iKYlDjG9P07kgUiMLNYZipxi2SxCH7428rOLSL5gAja
eGC0Lo3kDBHMKFiQYp9AcpEIev1ZewwEJFeLQGu8SWapB8lNIigP+3NMC/P/
41kjKrMtxvZSz1Iv0vleVk89a8djfvHii9SzxN4TZM4dp57lqZpz+tg26lnd
5j41PyOoZ0mVXVU95kY9Kyxmy5c7ptSzLq7oNjFXp57Fsd3+SVIa8xzYofZ0
xozP1LPqTX+tPf+YelbfD50dxyupZzF3SxpYnaSe9eNGwoBJHPUsf+vbcxW4
1LOiJi9YvtmDetZHjfu+UyyoZ70Lbm/00qCepSFq6fCUw2wIm1XFh+1+U89q
HrwjPb2XelZ9Useuhc3Us7p0OwpeVVDPSq9tEE/OpZ71++GEtou7qWd17kmb
NUVIPetaR5E5y4V6liIj9273EupZWZtO3EycjRlgf/nr+WmyJIsBqn6zOHG/
qGeNv69V0v+Meta+Hauygm5Qz0oM3xXYk0s962PhjVtp6dSzlBLd9h2Kpp61
QW/U191rqGdVnBl3M9yeelbCn3sm102oZ5WtOv6sYC6+W0MmxyvHfTK+28DY
wUc23UPUs5qSG+VV3lPPss7y2KnZQj3rS8PZ+IZL1LNOjYpmhGZSz7r1nul6
5gD1rPUPb0r5xlDPklNQl7rAp571fLmgNsudetbecI9KNyt8t4P3R8J0x+vi
ux08nDWxc8wMfF8F0YnVWyT/62GrYOr6mPvJY/DdHm7P2Nqx7Bv1rMRYZ876
TupZR9KnZnreoZ7F8dqZLllMPeug0etRuunUs7bNzCxdLaaedSxVRV+NTT3r
3Pq3XC9v6lkyE/gF5U7Us9ydT/t8A7x3BpD4k1imhvfOUHO4aqyNHN47g0QR
3+w6A++dgXXGq+tsN/WsMQqfbz1uoZ4lb9LY8ek29SzpmCgNp8vUszTLzxqP
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
2Pqk11xi0W2L/wFCe7oL
     
     "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
       {RGBColor[0, 0, 1], Opacity[0.1], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1UO0GAYQBdA0P2ls27Zt2/aP+WObTdrYtu02tm23sW22N6eLe86sZvXe
TJLAoKodggcLFuwX6hrqUZ8GNKQRjWlCIE1pRnNa0JJWtKYNbWlHe34uDqIj
nehMF7rSje70oCe96E0f+tKP/gxgIIMYzBCGMozhjOA3RjKK3/mD0YxhLOMY
zwQmMonJTGEq05jODGYyi9nMYS7zmM8CFrKIxSxhKctYzgpWsorVrGEt61jP
Bjayic1sYSt/8hfb2M4OdrKL3exhL/vYzwEOcojDHOEoxzjOCU5yitOc4Szn
OM8FLnKJy1zhKte4zg1ucou/+Yfb3OEu97jPAx7yiMc84SnPeM4LXvKK17zh
Le94zwc+8onPfOEr3/jOD/4lWIB8EpwAQhCSXwlFaMIQlnCEJwIRiURkohCV
aEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVs
ZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpU
pwY1qUVt6lCXetSnAQ1pRGOaEEhTmtGcFrSkFa1pQ1va0Z4OBNGRTnSmC13p
Rnd60JNe9KYPfelHfwYwkEEMZghDGcZwRgT8f7fqUJta1KQG1alGVapQmUpU
pALlKUdZylCaUpSkBMUpRlGKUJhCFKQA+clHXvKQm1zkJAfZyUZWspCZTGQk
A+lJR1rSkJpUpCQFyUlGUpKQmEQkJAHxiUdc4hCbWMQkBtGJRlSiEJlIRCQC
4QlHWMIQmlD8SkhCEEBwfvnZw5999Ch+8J1vfOULn/nERz7wnne85Q2vecVL
XvCcZzzlCY95xEMecJ973OUOt/mHv7nFTW5wnWtc5QqXucRFLnCec5zlDKc5
xUlOcJxjHOUIhznEQQ6wn33sZQ+72cVOdrCdbfzFn2xlC5vZxEY2sJ51rGUN
q1nFSlawnGUsZQmLWcRCFjCfecxlDrOZxUxmMJ1pTGUKk5nERCYwnnGMZQyj
+YPfGcVIfmMEwxnGUIYwmEEMZAD96Udf+tCbXvSkB93pRle60JlOdCSIDrSn
HW1pQ2ta0ZIWNKcZTQmkCY1pREMaUJ961KUOtalFTWpQnWpUpQqVqURFKlCe
cpSlDKUpRUlKUJxiFKUIhSlEQQqQn3zkJQ+5yUVOcpCdbGQlC5nJREb+A402
JVw=
          "]]]}, {}, {}}, {{}, {}, {}, 
       {RGBColor[0, 0, 1], PointSize[0.011111111111111112`], 
        AbsoluteThickness[1.6], Opacity[0.2], Dashing[{Small, Small}], 
        LineBox[CompressedData["
1:eJwl1FO4EAYYBuBzsm2dTtYyl81l17Jt27Zbts0t2225LZurtrDF9zxdvN9/
+918f3CTjlU7BAYEBPwgQm4oQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jE
Iz4JSEgiEpOEpCQjiOQEk4KUpCI1aUhLOtKTgYxkCulMZrKQlWxkJwc5yUVu
8pCXfPxIfgpQkEIUpghFKUZxSlCSUpSmDGUpR3kq8BMVqURlqlCValSnBjWp
RW3qUJd61OdnGtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCT
XvSmD33pR38GMJBBDGYIQxnGcEYwklGMZgxjGcd4JjCRSUxmClOZxnRmMJNZ
zGYOc/mFecxnAQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZ
xW5+5Tf2sJd97OcABznEYY5wlGMc5wQnOcVpznCWc5znd/7gAhe5xGWucJVr
XOdP/uIGN7nFbe5wl3vc5wEPecRjnvCUZzznBS/5m1e85g3/8C9vecd7PvAf
//ORT3zmC18JGX8goQhNGMISjvBEICKRiEwUohKN6MQgJrGITRziEo/4JCAh
iUhMEpKSjCCSE0wKUpKK1KQhLelITwYykinw+8/6BlnShZs=
         "]]}, 
       {RGBColor[0, 0, 1], PointSize[0.011111111111111112`], 
        AbsoluteThickness[1.6], Opacity[0.2], Dashing[{Small, Small}], 
        LineBox[CompressedData["
1:eJwV0FVjFgQAQNGPkFK6lBBG90Z3j1zANrpDkBIkJUQpgw4FBZTu7u5GUkpC
UrqlQer4cO4PuEGtukR3jhUIBPJLAYIJoSCFKEwRilKM4pSgJKUoTRnKUo7y
VKAilahMKFWoSjWqU4OahBFOBJHUojZRRBNDHepSj/o0oCGNaEwTmtKM5rSg
Ja1ozWe0oS2f0472dKAjnfiC/0d04Uu60o3u9KAnvfiK3vShL/34mv58w7cM
YCCDGMwQvuN7fuBHhjKM4YxgJKMYzRjGMo6f+JnxTOAXfmUik5jMb/zOFKYy
jenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAlq1jNGtayjvVsYCOb2MwWtrKN
7exgJ7vYzR72so/9/MEBDnKIwxzhKH9yjOOc4CSn+IvTnOEs5/ib81zgIpe4
zBX+4SrXuM4NbnKL29zhLve4zwMe8i+PeMwTnvKM57zgJa/4j9e84S3vCMQO
BGIRmzjE5QPiEZ8EJCQRH/IRiUlCUpKRnBSkJBWpSUNaPuYT0pGeDGTkUzKR
mSCykJVsZCcHOclFbvKQl3zkpwDBhFCQQhSmCEUpRnFKUJJSlKYMZSlHeSpQ
kUpUJpQqVKUa1alBTcIIJ4JIalGbKKKJoQ51qUd9GtCQRrwHpYWO3g==
         "]]}, 
       {RGBColor[0, 0, 1], PointSize[0.011111111111111112`], 
        AbsoluteThickness[1.6], Opacity[0.2], Dashing[{Small, Small}], 
        LineBox[CompressedData["
1:eJwNxFVgFQQAAMA3Qlq6ke6STkUJ6U6pwTbYYION7m5QKaU7DBqkG6RBSaVL
6VYapO7jLltoTMPooEAgUEgtYwUCrWhNMG1oSwihhNGO9oQTQQc6EkkUnehM
NDF0oSvd6E4PetKL3vShL/3ozwAGMojBDGEowxjOCEYyitGMYSzj+IZv+Y7x
TGAik5jM9/zAFKYyjenMYCazmM0c5jKP+SxgIYtYzI/8xM/8whKWsozlrGAl
q1jNGn5lLetYzwY2sonNbGEr29jODnayi938xh72so/9HOAghzjMEX7nD45y
jOOc4CSn+JO/OM0ZznKO81zgIpe4zBWu8jf/cI3r3OAmt7jNHe5yj/s84CGP
+Jf/eMwTnvKM57zgJa94zf+84S3veE8gdiAQRCxiE4e4fEQ84pOAhCQiMUn4
mKQkIzkpSEkqUpOGtKQjPRnISCY+ITNZyEo2spODnOQiN3nISz7yU4CCFKIw
n1KEohSjOCUoSSlKU4aylKM8n/E5FfiCL6lIJSpTha+oSjWqU4Oa1KI2dahL
PerTgIY0ojFNaEozvqY5LWhJK1oTTBvaEkIoYbSjPeFE0IGORBJFJzoTTQxd
6Eo3utODnvSiN33oSz/6M4CBDGIwQxjKMIYzgpGMYjQfAGsLmCE=
         
         "]]}}}], {}, {}, {{}, {}}}, {{}, GraphicsComplexBox[CompressedData["
1:eJxt2mlYDOzbBvCRraSNsiTJTlKJNipXKm207+vUtM9Ms0QpSrK3SUi2JFRo
lywPGWkltIiU1CNrSXZlyet/vPf1v98P7/Ol4zzurjkNX57jd5yz/XkOgWIM
BmP3aAbjPz//978Pq//3Zw/5yYA1jT+r5V92kywOBeJ65RfrMcvCQZ5NaVcB
ZnlYPaLkt3A/5mlQm3buQlYUZiX4qXfola87ZhUwXabVttQY8xw4/o4fdWYx
5nkg5TbpSccUzAvgDXC6t/94RvIi4H/J+tTTjVkVeL3F65bXYVaDgN0zjMcW
YFaHjFkNezr2YdaEDf4+3p6RmJfBtJDxnqM9MWsBN0Kw7bY+5uXw+sg2G081
zCugw3tDaIgsZm1wO6meWDnURbIOmL24tm52J2Zd+KRcfPtUNWY9uDxi3P/0
DGZ9UJx6xjojGfNK2Dex/LQjD/MqWFD0oCvACbMBiJ+V9b6ui9kQVumu1m1Q
wmwENY/W60WNPCV5NdhWKxyWfIMZICxuVlpBE8nxAG/Dih+YF+K7MQTkTw60
SMV3Yziit+2hYSi+r4EmQWSujAO+r4H6+4qbGavw3QSSb6jOclPCdxP4HCTT
aj4O300hXK55RdjrTvJuCka6D2dOayeZYQb1I9NMterx3QxWOZr/6q3A97Xw
VKloWPIAvq8F4x9JpZE78N0cCkaLH04OwXdz6NFR+nTUE98t4EWM5LxUfXy3
gOo94G+jiu+WkBMoH39JEd8tgfcuQem6BL5bwaZKz6XaQx3k3QqcwhWNlz0j
mWENOdZaNtvr8d0aJMy3ik++ju/rIPTSkqWCAnxfB8z4laY7D+H7elBNiio8
swvf10NY4rlqh1B8twGpF69/etrguw0oDWw546uF77aw5MjniecX4LstVNxP
iGmRxHc7eBZ1TMrj85P/zWAHtzx31O6+R3K8HUS9GmhxKSVZZAc2m7K+d+WR
zLCHBXNbtdoP4b09vCjo2n8kBu/tQezAqOzjTLy3h2NdP0c8zfHeASoctp4J
U8V7B/h270h9hyzeO0BQx5oOPSm8dwAuz/G00ii8d4Txi4vn/37XTu4d4XGZ
bXViG8nxjtA8xi7A6x7JIkfoNDFq8bpOMsMJarNdXXadxXsn2P14sr5nMt47
gUZslsB/M947ge3gqC3jQ/DeGXQnd++fZ4f3zmChfs5qyxq8dwbfsraDdqp4
7wwJhrcC46fhvQuEFClNWCWB9y5wf3KSyvrBx+TeBVp8UqokH5MscoFs7nAb
o5lkhivceHOt8ew/JIMr7FHriEjIx3tXKDOZeN04A+9dYcVD6+utQrx3g/Lq
gV2e/njvBkOOo9el2OK9G1zr+c74xxDv3cBLsnrdUzW8d4eAS5ZF12Tw3h0y
+qQb0n49IvfuEK2bLHf3Hckid9APa6+JfkwywwPWRVcNB94gGTxgeuyuDaUX
8N4DLLPPdm7MwnsPOBr5ISo+A+894VhsbqlPLN57wsPY2MU+QXjvCd9eeQ18
csZ7T9jfnjB6lR7ee8EiJXmbgwvw3guUCrd5xU7Fey/4/cjj7uRJeO8F6q+u
9O7/1kbuvWH779athi9JBm9IWHHnre5jkuO9wUZ1iaVOPckib/i5S2R78Are
+8BCnk1n8wW894ElK3ga5sfx3gdqPvalnU3Cex/Y6JVmNDcB733hXPh8fmYQ
3vvCdObprAu2eO8L733yvx3Uw3tfuHX6TYihMt4zoVl+d+hTGZJVmLDioGf9
4M+H5POYsKgdTOs+kcxkgodhWjyrl+R4JjR+C7sYd4/kbCbc03IraqkgWcSE
zLmtY6TySO5hQu6Icd25IyQz/ED26Og9v1NIVvEDXrzhslebsd8PbhsriY0P
xn4/WH7v9T55U+z3g/UXWCU7dLHfD8S3WQ7Xz8V+P9Cd5e7cL4X9flDRulN/
ixj2+4OLrLVxx8dW0u8Pv9ZJb4h7QjL4Q5BKs3J+DclMf6ib2aRrU0VyvD8s
UTB8vO8Gydn+sK9kvcelEpJF/qDqkucXcJLkHn/Q1Fhp9zOJZAYLbowbnrYm
FvtZYNu62scqFPtZEPOz3GwrE/tZ4Ka6yURsPfazoP59uV3+cuxnwbMKncph
Zexnwfi7A51nxmE/C/7MfB+S/qeF9AeAkt0x/u1BklUCYBMUq+Z0kQwB4NHT
1Xy7jWRmAHAdr473qic5PgBcH9UbXLlMcnYAnDL0lhY/Q7IoAJrrZu5UzyS5
JwDWfs6UckzC/kDQCluRcFCI/YEweG/6QRNP7A8Ed1E8t9wG+wNBVs94d4MB
9gfCB5uEgLZl2B8ILzMLL7+aif2BcM1G3+ztGOwPBPGpY9Iffm0m/UHgv729
6nYPySpB8HhN8tI5bSRDECw2/XVgqJZkZhCc5SgkRlWSHB8EP3Y6vW68SHJ2
EOzcrRK+JJdkURDsGtzRkpROck8QND2I4OsmYH8wLJhUPXwoAvuDId5lT9KX
EOz/+z6qVTEGMzMYoudvvvPRA/uDwcbBOPeGI/YHQ3GBvxzLDPuDoWmsWEOB
LvYHQ37gpoFMVewPgbk17YezZmB/CLzxn39WYgr2h8Cz7os2G6WxPwS+7XH1
+crA/hBYV36d7fGzifSHwKRDgjMh3SSLQsBGRfI++z7JPSGgLXUs2K+aZEYo
GHUoRGhdJlklFGR0ch86FZAMoTA9+P3WCSdIZobCkqG2jScySI4PhdBxj97l
7cL+UAhTvqs3Oxb7Q2EBZ3y8QST2h8LClAtzZAKxPwxu7nBb984R+8PgQX7T
mXI97A+DFFdOTrQa9odBpbracZlZ2B8GqSJra2lp7A+DtbIZOfK/HpD+MCh6
rtOh0EdyTxhEmvAEg5UkM9gwJLO4RvUkySpsSFtuKeG4kWRgw49Ttr+jA0hm
ssEmMedaiynJ8WzIbbnyu2chydlseNm9Q0tZDvvZMD/Dek/1BOxnQ7lV46GD
v+6Tfg6EBzYnq3WRrPI3V3edK7hBMnBAN3jMMv9dJDM5YJzQLBYYQnI8B1Lm
rFjTZUlyNgdyZojSjNVIFnFgTPRHoeLIPdLPgVk3ORv7ukhmcEGvVtl4XzPJ
KlxYm/Oh4X4FycCFCXIqjYXnSWZywUrFaodxIsnxXDi1qF1lTAzJ2VxYoqQz
znYLySIuFJw8Eartgf1ciEyUTNHSxv5w2HLrq3PsAuwPhzlzrQaVpbE/HFTC
lx7dOdBI+sNBLif11uUekuPDIfyJ/5tL10jODofqvR49ohKSReFwS7zZwC6V
5J5w+LfNu7lMQDKDB5zFo5epBpGswgNpmYvxXBOSgQf/HChyejsN+3kweNZs
8M547OfB027W4LOBu6SfB99qAiUymkkW8eBNUHqnoJzkHh7EMd2ezT5EMoMP
3Fiu9dTDJMvyIW2N+oaNO0hW4UPfnqqfLUEka/JhyHLLxkRnkoEP42b6iLqW
kWzHhxUnXyUnqJDM5MPc+Nw9pnIk8/mQ/OHerGMf7pA/Px9czG+MMm0lOY0P
CwI3iswrSM7mg4+hk/rnEpJL+DBn9yLLDZkki/jweWGRq+YJkpv44CzzY96o
LJJ7+LCX3VuquInkD3zwOL/ytJ83yQwBBB95pNdnT7KsACQVJ12s1yVZRQDr
h1RWzZ5PsqYADt/K2vtTimQQgMQuQUDV7wby/QXwS0w+7fgXkpkCcDktIct8
QTJfAJWLKtMWPiQ5XgDKDXl3rctIThOAx40g/rnjJGcLIDlW/9iaRJJLBDDT
pcx7eSTJIgFc7A2SLfQguUkAFuXqiUa6JPcIwKGusnfJbJI//H1fMDwpSoVk
hhBWR5bUXh+sJ99fCN8t/HQm3yFZRQh9MePP784nWVMIpeHTNAV7SQYhRHXN
3vdgA8l2QjAUv1kz241kphD2lpZE7F9GMl8IFysPTLacTHL8376Jeg+sGCSn
Cf/+/2GZyHa4jnx/IXS1zxDIfye5RAhi1UG1CzCLhPBlEycm7jPJTULYqKC/
fP4jkv8fz5okzmBfe0U9y961VVulkXqWSFdLcVwZ9awjVUG8R4epZ7Gnh16p
2Uo9a8/d3U/ms6hnbTbcVLZ7HfUsqYHIFG8d6lkLXAa9sudRz6r67n7jngTm
RbCcn8sr/UA9y2X44cPQJ9SzsjdZNSuKqGdxmYFex89SzxLbVu9/IoV61uW2
sF+5EdSzCtMzWTecqGdlZ5QpNFtQz3JeeefITnXqWfffCQZjpmHWAfbUuynM
X9Szno4/O/brK+pZZztys77VU8/S98nNnV9GPetlW073h0PUsxatTLB5t5l6
VhCnVULRj3pW0fuBH9Hm1LOkVMdovFfFvBp6Yh8r31TADDAwt9ut9g/1rE8a
NWo1XdSzBtTbb2WIqGdpeRis33KCetbXYlb6s13Us9Kqzw2IC6hnPbhu9LXR
kXrWxfbNrh+NqGeJtSjtmT4b301Bx8f6kfMkfDcDhX/XbZ84Gt/N4Eu3dtzI
J+pZOlscwxubqGdNLmYtWHqbelZEXrra83zqWffr/azeH6eexXnafdFkC/Us
w2Lx7Se51LMyx7EEh3yoZ007tMnYzIZ6lpjNZs90Q3y3gosn+ldw5uG7Nfgw
WYuvy+C7NYg8iy+9GI3v68A8W/UF+yv1LO2I863jeqhnfdYyHqPZQj1r/76C
4L5L1LNmRbS9X3qcetbEp9YvF22jnuVpsXW+diT1rHMLA5Yf9KKeNWl3mG6x
KclgBwp+tSrjVfD37WDKxmA/9hiSRXZw0ND4ScJP6lnM4Repq/uoZ63jnTw7
uol6Vln/g19vK6hnzVP/fnRXFvWsH7vi+88mUM/qrGzuyQ+lnnU7omDwfND/
8azEkAefPKhnqQdNiYxGHwNH+K7/dnGNJt47QhhTlBW0GO8d4bBgher7aXjv
BHmzzDs7xPDeCfQsR9I39VHPUtirOVO8g3pW4qit383qqGcdcf+8cUsJ9awF
DU/nxpymnlUp/zFWMpl6VsVzj9ENMdSz4q4lnOtlU8+a8HxRnYIj3rsAe+SC
445VeO8CH/XYSj+18d4VFOa6lu6fjfeukHBD64WBDN67wqhdRz7u/U0964ma
VdPHDupZcqojVqPuUs9SUZef8vAK9ax/+kNfH8+jntUsn3wg+DD1rJkXxPO2
bKaepWG7+/XRELx3h2vHE7bFuOO9OywKPlA8YIr3HtAQtayofgnee4C4GDfS
SRHvPSDuY8Abfym89wDDyr1GeWPx3hPWGAhWSgxQzxq20ub3PKKe9Xl41q5b
tdSzKm2MnK+do55VEaL49Xkm9SzVW0+TUxKpZ8Vqmu7cu5N6FqOxULgnDO+9
oTK2OOWHO957w8PE/ot16/DeGzImzF7paYT33nBgmMV5oY73PhDx2V8vew7e
+0BqXo6r22S894HnXg6Kz8Tw3gd2v52luPAH9ayCQ6d//HlGPevV6QZzp3rq
Waw2m18updSzOJsX/rl0mHrWBDvRjS17qWc13Y1OWB6Jn8eEl1VOdRZckplM
cFS4L3fVBz+fCUPJctcmW5KczQROm4fbdS3sY0L52U5pp7kk9zChYsh1nfMU
7PeDjwtSWr9OwH4/uN/0hM8cpp4lez9t4e8X1LNWMVdW7aiinqUZNRK3tIJ6
VkzgKDNeDvUsSdUHT6RSqGdNrfN+PLiNetblKIkvuQL0NH9YW5Orne2O/f4w
bVnMpj4z7PcH51YLlZtrsN8fbIxeyHsZYb8/RHv+vMTQwn5/GMnu5RvOxn5/
sLiuX28hjf0ssEsctBdjYD8Lio5fCdv4jnqWathi9aFe6lm+Gw1ORzRRz1qx
wmF75mXqWd5ucWHmp6lnJX623zSSSD0reeyYwqgd6GkBsMVGZ8bUjehpAcBv
c58lycL+ADAVlkUf98T+AFA14bVE2mB/AFyZLndhohH2B8DhlRrHMlWxPwD6
LkkPjJ+F/QHgfXWWssYk7A+ESPds9vlh6lkrlpwK2fKcelaNXV2N/CPqWUnL
V7V7VFPPOpUqnvTsKvUs1TgNk8Rc6lkwPze9KIV6ltGo9Om34tDTgiBPvCbn
Zij2B4H2wkyHUB/sD4Lc6TryuXbYHwT3xnJ6AyywPwiUko5JzjHC/iCQsAlj
ZmlifxB8mKButwB9rScIxIXBp55OxP5g2Kk8j/9xhHrWdb2bsV5fqGelvQ90
zvxCPctt+pIWi9fUs+b39Zqa9VDPMlPMcFBooZ4lrWa263Q19ayzEslR2y9T
zyoxswgpyqeetfmRrYTdaepZ8/Jruv89Rj1r/kLNoX2p1LNmzGyfKr8X+0PA
bXW65lQu9odAfuiJ9/O9sD8EYj3Xxrg6YH8ofKifnbED/e0/njWrKHXLSuwP
hdE8vsTSJdgfCpFTfGR15mN/KPyYrf/RUAH7Q+FRVb/HkCT2h4KLtJas+ljs
DwXRsOF5hS/UsyqeNurr91LParma4bm2nnqW1Yj4Ionr1LOMrv3re7WIepYU
z6h85wnqWSO/yjnZKehpYZAll1k8sgM9LQyKH3cmZvGwnw1zNHQvV/liPxvs
K42/S1pjPxue9bMvnV2D/WzQLIrVkFuO/Wwol6q1r5iH/WxY3lR9afd07GfD
FHt/uDoF+9lQN+9PymYZ7OfA57c/fjr+QU/jQKeM3r8GPehpHFA+N6L2OB89
jQPSmlp7tiahp3Hgscfrm+Jc9DQOrFE44Shnh57GgXvyk0zbZqOnceD8eB+N
tFHoeVz4FevQFP0VPY0LQntWgGInehoXtvzm1Bk9QE/jgufmnNDEIvQ0LtQZ
hB8yz0JP48K4RQkrj2Wjp3GhyvKIx9c4knu48GbOj4syHuh54RAhUVmubI39
4XCKpS7I1cL+cPj2O9O+Tw77w+HEvbulrWOwPxxK+488j3iGnhYOohuMI5Jt
6GnhcPvfWMs7Zehp4bDsdpnBwgz0NB7cePYueG4SehoPQvg+Y7uC0dN4sH5s
g7DbAD2PBwYtzgck1NDzeHBOVTyrVw77eSDqrPSN+YqexoN5x50ub32MnsaD
um/3bh+9jJ7Ghzout2ohepwsH3oSjp3cn4e+xgdZ/6i9yokka/LBeMddE/No
9DY+xBlc3NDmTLIdHzY9LFOyMkV/40N9wTaWqzbJfD7UjliWqyqgx/Ghmt3I
if1OvCuND5lMpbiJnehzfPB8dbEls43kEj6sl316MvYGeh0fRKvmvq+oIrmJ
D6Vz21vVq9Hv+NCRWTe98ATJH/hQ5lu8vywBPU8AuyKPOvVEoucJIN1l51QV
b/Q8Aag25GRmWaHnCeCflISFIcvR8wTwwKJ85da56HkCMOhoKHw9HT1PAHkB
m0fXSKDnCUDu2U7JvcPoeX9/P3XpqYOP0fMEoHhW1XltFXqeADaXRsZdKEbP
EwC/XTNw4jH0PAFYD3kPTNiKnieACsnIuFRP9DwBaEyzs9hmhp4nABkvyygn
zAwhzHEqHtKXR88TgsTdvGOT3xPvUhFC9mnDFKNGkjWFcPWqa8yOApJBCLnv
kqeKDqPnCcGhf//1xhj0vL+fd912cbojep4QWO77DLNWoOcJYTR34EIqelua
EOoLV3yUnoGeJwRedcQlhenoeUIodU/Jn4pZ9Pe9qjRmQAE9Twi+mbotT4aI
j/0/niVM+67M66WeNf7acS3zGupZIXlhFpfyqGe91G912JRIPWu2eF9WFI96
VnhuzucjttSzpOa/+96qTT1rybswv34l6llf3LWdFSSoZ0knxo1a2U/3WYWb
Dm+UfUA9a8+9xOpf5dSzFmW8Kxk8TD3r5jO1S9NiqGe9MvniOt2Xelb0j9NX
fddQz1rqZHWyQZl6lvoJu90vZahn+W5T1rf+hD6kDc/t++eJPaH7rFml5yWf
X6WeJa5zdZtNDvWshjldurfjqWf9fHDqw7hg6ln6JjXBFRbUs+bNmcntUqOe
db5rfYmPNPWs+q1pEdM+oQcZQez2w8aMFrrPqpzgJON2je6zXrf71qWfop7V
c/aI8M4W6lmds23Ff3hSz2JMrfX8s4J61oXle6/BTOpZjCdJ4kNjqGdZVk6x
7H2BnmMCy7/m2GTdQ88xhQ67nf9eK6T7rLWy3oEdJ+g+a7PSyzFuKXSflVDr
FtMQQz0r4Yb4Tmtn6lk8s3IDkRn1rJe+saN0F1HP+nTm0RFzRepZXtN1D7Z/
Q7+xAGv/Tca/X6H3WEJBdU1q2yN8t4Rak5TvWjX4bgXv1Q3+PC6j+6yvRpbr
vx2m+6xXOqMirLbRfZaDlq2n8Qa6z0q6oxYZyaKelZRyp3y0NfUsv95Cl+mr
qGeZ7Myd/Y8S9ayfTj/EExnUs9RGClkZveg1tvDzbfAX5cfoO7Zwe+OpW7L/
4LsdnA9p7B2TQ/dZXJc1HPHNdJ/V7rrBdI0P3WeJX/ypoO9EPevduluP+MbU
s7b0zYjTmE89y2HlchPbCdSzJqUwWMs+oMc4gFA5zlujBT3GAeS6/EomXkGP
cQAJ4yfVtRfRcxyA62QUtTYP7x2hp9+8LT6d7rMuL6nwsYuh+yy9c92LHQR0
nzVrikXMXV+6z3o5O6R5mQXdZz0KXNxtqE49y1Iwsfa6EvUs+a4djAZx6llt
jXcKG3FPBc4QdmCjIO5f9BhnYNhdu3CoHj3GGWwyF9brVqDHuIBDTkVYei7e
u0C62UD0jiS6z9K/Gb7sgJDus2xzdu8bx6H7rMAi5TdXnek+K/XYttH1xnSf
xRq1ddewOvWsfZvX51+aQD3L1ber6tIweoobNEV/2rb2FXqKG1xt26n4pBU9
xQ1ej/o11r4KPcYdLtxMvDR0Gu/d4ffOjPO70ug+S6/l0KkZ8XSfZcWd+XTs
fz3IAx7EOJqNtqX7LNWhk0JpQ7rPkrd9dX+PBt1nfVd3LXVfSPdZXyo7F5VL
Uc8qLql53vkVvcUThluPOM3D/ZTIEwL860r/qUVP8YKjD6TyzMrRb7xA+sgC
Ne4ZvPeC2FiBXFYW3nuBF6Pa6dh/91HeYBE7JIjn032W5rP8Wfl+dJ81zkrb
Tc6B7rNY8jOXm66h+6zOPv240dp0n1UvWjVeZz7dZ+Xv2j6eK0/3WawHDNas
CdSzcs3zXmq+R3/xhXVKsV/FHqO3+EL0m1EfW26ir/jClMZzLdVn0FOYkPlk
vYJBBnrK3+xlKF2A3gNMYA+o3TLbRPdZfoEOg1IhdJ+VzawueGtP91nqac5j
3q6k+6wtp+78qFGl+6yMMWprRpToPktDKsZgrBzdZ8lqnvrIHkFP8YPIS3lP
Zd+ip/jBkpWHvM/gXireD8K66//tvIKe4gcZx/cXzjmLnuL39++7t6k+FT3F
D5x7Co+Jb0dP8Yev+cmpUkK6zyp7uLHMy53us8plFtUEmtF9ln6Iq22XMd1n
ib87dOS2Ad1nnR2bPRKqQfdZLpJsh6SZdJ81LWdle6EE3Wepbhfr2fYDPYUF
HyTq7Ge9Qk9hwZ1k8B6HeykmC+y7L/amNaCnsMDr3FTlK8XoKSzwVRiUKziK
nsKCHTl7V1snoKewQKjTPq8whu6zrtszanlhdJ8Vf2GMjr4b3WfxbSRU+23p
PquENdrQeA3dZ31Lj7/P+u8+KgAuQNK2qP/uowLgyhO1mc5ydJ+lsXTS70jc
SzEC4X1MfWZcP3pGIJznp9+c8BA9IxAGNFYqONWhZwTCIQNzHb1L6BmBsFrm
l2HjOfSMQMi+uETN5BB6RiCs2NT4fe4W9IxAaFGLnPCGQ/dZM0f6n9e50n1W
tE+8eKc13WcVhFdNtjak+6zY1krNxBV0n9UeL3U7ajHdZ4269WjzFdw7iYJA
6WGn08fxdJ+VuTR+dfp39IRgqBsbsH3lG/SMYDDdYH8kuQs9IxiuT4Yez6fo
GcFwdNndqqO4d4oPhqhrWeN16tAzgmH6ao2mkivoGcGQ3l0pWXEePSMYLtwK
YBWhvzBCIMM0tC41FftDwHnwB9zeg/0hkDk154b4NuwPgbq+uGqPCOwPgVjr
UzezuXSf1dhnN+2aPd1nfXm0qbAU6D5roHLQia1D91nJ/RJ2PYv+zz5rfZbi
UmW6z9Lw5Xx7jfsnZij0PFnfOUac7rNK2l42zf2AnhIKvz87LT34FD0lFN4d
uNp96D56SigoGWvpyBWgp4TBPvf6G0Z70XPC4LCGwlMzB/ScMDjld1L/oT56
ThhsXjtQclcZPScMlOeVVS/9jZ4SBmkLqthvnqKnhMHsHENn9TvoKWGQ8njB
vVPoLwz233+P3hlN6C0qbIjrk56X6oSewgY9Tt2+fBP0FDYYXLGcsn0uegob
Xu596eo8DvvZEDArflhtED2FDcqJLfumvEFPYUOH9VEZrQ70FA687cmbOfYf
9BQOjIreLlQ6hp7CAbv5E7QHWOgpHNjwkB9rZYaewgGTvvjqUtw3ZXNAbE7v
PYE49nNgVVfTKd8O9BQOHIzc/I8p+gmDCxuk+0vPFKKfcEHxc6zG9nT0Ei5k
zmttUtqFPsIF/ZqPWUOB6CFc2Cy/pkCEnpLNBTvZvmYxN/QcLmR8PbVpI3pK
DxfGfFIKcpbF/nDYGb30e+co7A+H088DuYffoleEg9WzW89VGtAn/v5+pH3z
seskx4fDkrol779noL+EQ71z+cLIZPSWcLipMU/zUSj6SjjsfyMeZLQePYUH
MzZM/6FpjH7Cg/LC8b9+K2M/DxbPOajz+QvxBiYPcqK1rZN70UN4IHPoJnQ0
oH/wQK1k4sXSQvQOHhQsa/rD2o++wQPtO8+H8oXoGXyYnMJ9OG4DegYfQOyW
hbsf7pP4UF0sFb7bBPdJfCiWWZp3bxnuk/iQ+lt84ivcK9nx4UOo4u9rv9Az
+BDneLdw2QB6Bh8cntsnSaKPxPPhzZyijAnF6Bl8KA+9L7Z9P3oGH/wOftm7
Phk9gw/ff2/4FBaBnsGHBfL6t85FoWfwYfjHjMhWzD180DP6Y7nHAfdJfBD7
WlMuq4f7JAFYXJ8084saybIC2NGVZSOYhJ4jAP7Ck12n/+A+SQARX6/1p77B
fZIATG6rp45tx32SAK4v8RHaP8B9kgDGPj+s9LMS90kCYEd8U6gtwn2SABhj
5nwTS8F9kgCOtuUkTYwiOVsAJyx/XX4SQHKJAO60LnfxsCdZJIAZD3jLbXVI
bhJAh9frQ+8nkdwjgI2RS7c++kX2Sh8EsO1DftGRn7hfEoJXZunB1XdJlhXC
y1rF5km5JKsIYYVDc23TDpI1hXBu7pOX3kEkgxAs7leM67Yn2U4Ii+a/ux+p
TfJ/PCtPrjJNhmS+EEbPy3z7+WMt+f5C6C9I+DSum+Q0IeywXZaW9pjkbCFY
D9xWm9xGcokQHNXhhTZmkRCiNRbGyDST3CSEpPSVB/kXa1f/D+6VltQ=
     
     "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
       {RGBColor[1, 0, 0], Opacity[0.1], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1UO0GAYQBdA0P2ls27Zt2/aP+WObTdrYtu02tm23sW22N6eLe86sZvXe
TJLAoKodggcLFuwX6hrqUZ8GNKQRjWlCIE1pRnNa0JJWtKYNbWlHe34uDqIj
nehMF7rSje70oCe96E0f+tKP/gxgIIMYzBCGMozhjOA3RjKK3/mD0YxhLOMY
zwQmMonJTGEq05jODGYyi9nMYS7zmM8CFrKIxSxhKctYzgpWsorVrGEt61jP
Bjayic1sYSt/8hfb2M4OdrKL3exhL/vYzwEOcojDHOEoxzjOCU5yitOc4Szn
OM8FLnKJy1zhKte4zg1ucou/+Yfb3OEu97jPAx7yiMc84SnPeM4LXvKK17zh
Le94zwc+8onPfOEr3/jOD/4lWIB8EpwAQhCSXwlFaMIQlnCEJwIRiURkohCV
aEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVs
ZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpU
pwY1qUVt6lCXetSnAQ1pRGOaEEhTmtGcFrSkFa1pQ1va0Z4OBNGRTnSmC13p
Rnd60JNe9KYPfelHfwYwkEEMZghDGcZwRgT8f7fqUJta1KQG1alGVapQmUpU
pALlKUdZylCaUpSkBMUpRlGKUJhCFKQA+clHXvKQm1zkJAfZyUZWspCZTGQk
A+lJR1rSkJpUpCQFyUlGUpKQmEQkJAHxiUdc4hCbWMQkBtGJRlSiEJlIRCQC
4QlHWMIQmlD8SkhCEEBwfvnZw5999Ch+8J1vfOULn/nERz7wnne85Q2vecVL
XvCcZzzlCY95xEMecJ973OUOt/mHv7nFTW5wnWtc5QqXucRFLnCec5zlDKc5
xUlOcJxjHOUIhznEQQ6wn33sZQ+72cVOdrCdbfzFn2xlC5vZxEY2sJ51rGUN
q1nFSlawnGUsZQmLWcRCFjCfecxlDrOZxUxmMJ1pTGUKk5nERCYwnnGMZQyj
+YPfGcVIfmMEwxnGUIYwmEEMZAD96Udf+tCbXvSkB93pRle60JlOdCSIDrSn
HW1pQ2ta0ZIWNKcZTQmkCY1pREMaUJ961KUOtalFTWpQnWpUpQqVqURFKlCe
cpSlDKUpRUlKUJxiFKUIhSlEQQqQn3zkJQ+5yUVOcpCdbGQlC5nJREb+A402
JVw=
          "]]]}, {}, {}}, {{}, {}, {}, 
       {RGBColor[1, 0, 0], PointSize[0.011111111111111112`], 
        AbsoluteThickness[1.6], Opacity[0.2], Dashing[{Small, Small}], 
        LineBox[CompressedData["
1:eJwl1FO4EAYYBuBzsm2dTtYyl81l17Jt27Zbts0t2225LZurtrDF9zxdvN9/
+918f3CTjlU7BAYEBPwgQm4oQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jE
Iz4JSEgiEpOEpCQjiOQEk4KUpCI1aUhLOtKTgYxkCulMZrKQlWxkJwc5yUVu
8pCXfPxIfgpQkEIUpghFKUZxSlCSUpSmDGUpR3kq8BMVqURlqlCValSnBjWp
RW3qUJd61OdnGtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCT
XvSmD33pR38GMJBBDGYIQxnGcEYwklGMZgxjGcd4JjCRSUxmClOZxnRmMJNZ
zGYOc/mFecxnAQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZ
xW5+5Tf2sJd97OcABznEYY5wlGMc5wQnOcVpznCWc5znd/7gAhe5xGWucJVr
XOdP/uIGN7nFbe5wl3vc5wEPecRjnvCUZzznBS/5m1e85g3/8C9vecd7PvAf
//ORT3zmC18JGX8goQhNGMISjvBEICKRiEwUohKN6MQgJrGITRziEo/4JCAh
iUhMEpKSjCCSE0wKUpKK1KQhLelITwYykinw+8/6BlnShZs=
         "]]}, 
       {RGBColor[1, 0, 0], PointSize[0.011111111111111112`], 
        AbsoluteThickness[1.6], Opacity[0.2], Dashing[{Small, Small}], 
        LineBox[CompressedData["
1:eJwV0FVjFgQAQNGPkFK6lBBG90Z3j1zANrpDkBIkJUQpgw4FBZTu7u5GUkpC
UrqlQer4cO4PuEGtukR3jhUIBPJLAYIJoSCFKEwRilKM4pSgJKUoTRnKUo7y
VKAilahMKFWoSjWqU4OahBFOBJHUojZRRBNDHepSj/o0oCGNaEwTmtKM5rSg
Ja1ozWe0oS2f0472dKAjnfiC/0d04Uu60o3u9KAnvfiK3vShL/34mv58w7cM
YCCDGMwQvuN7fuBHhjKM4YxgJKMYzRjGMo6f+JnxTOAXfmUik5jMb/zOFKYy
jenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAlq1jNGtayjvVsYCOb2MwWtrKN
7exgJ7vYzR72so/9/MEBDnKIwxzhKH9yjOOc4CSn+IvTnOEs5/ib81zgIpe4
zBX+4SrXuM4NbnKL29zhLve4zwMe8i+PeMwTnvKM57zgJa/4j9e84S3vCMQO
BGIRmzjE5QPiEZ8EJCQRH/IRiUlCUpKRnBSkJBWpSUNaPuYT0pGeDGTkUzKR
mSCykJVsZCcHOclFbvKQl3zkpwDBhFCQQhSmCEUpRnFKUJJSlKYMZSlHeSpQ
kUpUJpQqVKUa1alBTcIIJ4JIalGbKKKJoQ51qUd9GtCQRrwHpYWO3g==
         "]]}, 
       {RGBColor[1, 0, 0], PointSize[0.011111111111111112`], 
        AbsoluteThickness[1.6], Opacity[0.2], Dashing[{Small, Small}], 
        LineBox[CompressedData["
1:eJwNxFVgFQQAAMA3Qlq6ke6STkUJ6U6pwTbYYION7m5QKaU7DBqkG6RBSaVL
6VYapO7jLltoTMPooEAgUEgtYwUCrWhNMG1oSwihhNGO9oQTQQc6EkkUnehM
NDF0oSvd6E4PetKL3vShL/3ozwAGMojBDGEowxjOCEYyitGMYSzj+IZv+Y7x
TGAik5jM9/zAFKYyjenMYCazmM0c5jKP+SxgIYtYzI/8xM/8whKWsozlrGAl
q1jNGn5lLetYzwY2sonNbGEr29jODnayi938xh72so/9HOAghzjMEX7nD45y
jOOc4CSn+JO/OM0ZznKO81zgIpe4zBWu8jf/cI3r3OAmt7jNHe5yj/s84CGP
+Jf/eMwTnvKM57zgJa94zf+84S3veE8gdiAQRCxiE4e4fEQ84pOAhCQiMUn4
mKQkIzkpSEkqUpOGtKQjPRnISCY+ITNZyEo2spODnOQiN3nISz7yU4CCFKIw
n1KEohSjOCUoSSlKU4aylKM8n/E5FfiCL6lIJSpTha+oSjWqU4Oa1KI2dahL
PerTgIY0ojFNaEozvqY5LWhJK1oTTBvaEkIoYbSjPeFE0IGORBJFJzoTTQxd
6Eo3utODnvSiN33oSz/6M4CBDGIwQxjKMIYzgpGMYjQfAGsLmCE=
         
         "]]}}}], {}, {}, {{}, {}}}, {{}, GraphicsComplexBox[CompressedData["
1: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
gbPRyK9nlzNPi0G1dcCLIFNqdQyWdTlzxW0F+ZomBtleXdaO+cg8TYaM+a5D
twiodWWIz5tlX9eB+ZoM/eaIP+05TZ5mJoNlhKJu+BDmbTK0zr31wv4ceZqL
DFJv/Xb1K6gFMux7O8XCsxO1TAYn3Qu24gLyNaUMjnHrnn5Jps6U4VVajvr1
MGqVDKcyZqVurSVvK5RBM9TG92s+tVr29/fb9fJhwdSVMvzZJTI53ZlaIwPf
Qz1/3CnyuEYZRhlnTbu0kJonR9bZ9Y/fdaHWlaNqWsOVHszn+HJcnCBcVG9L
bSbHuQGdliU9JW+DHDMDlLymJGoXOSqWHfukP4haIIe2wrfp4hbyNZkcxp8c
u46bSq2UQ2hc32jSnzpTjk7i2uLzP8jXVHLk9R7V0uk0daEcdpVxK//kUqvl
6Nvr0Jv3s6kr5Sh3nLl6Uz9qjRy3BVr7r74hf2uUY9Lpc9L4ddQ8Bdooyoqf
mVHrKnD8YdlhYy3meQqcKjz39JqSvM5MAekAReLYI+RzUKD7tF1bVIbULgps
LY+yivlJPidQYO+Nm1Y3tlD/r2fZFTT16sI8T4F6xaUjx9zI5zIVuD/4/YcJ
x8njVAoUy/ZYFs2iLlTgfULn7aZPyOPUCrQ//1MjX05dqUChNGfL7BryuP/H
sxrun+074SnnWXGu89s2XeI8q9a4/ppyD+dZnunlW7uu5TzLcNVx7fgkzrOe
WiS+zVvIeVZmp8drGudynjXUSHF48zzOs+QXfqb+E8l51scs214Bvpxn3byg
n2huy3mWgeeVr1pDOM8qO9tmezctzrM8J0kU0+u5/azIOw/nj1JznpXsOWKY
3nbOsza+O/e+9xLOsypjzm11F3Oe5Wtu2WOjI+dZY8YeNJkKzrPm5Cz6NnI4
51m2DimwMeI8qzSkS1d+W86zjoevKr31hXmRJX6UjCvs8YK1Fe5W/ZxRc4vb
z5JN9/hzSs3tZ015Pl7ltofzLJ12h94uX855Vk3/D+PqwjnPcg0f/+TYZM6z
PPTtw7V6c54VEOjZWfcj8yJbHDtX+6nvPeZJdvDix7pfPcztZxn2Ld63M5Xz
rL2a4KRRYs6zdh84usxsJudZokGLV53mc571Jv78rBc8zrNGhr9c7vSceZM9
xvRMOKEpYt7kAHuD1/qC9dx+1pCPQy1+CTnP0tN+fmKkGedZRVuPX0z4zbxp
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
     
     "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
       {RGBColor[0, 0, 1], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1UO0GAYQBdA0P2ls27Zt2/aP+WObTdrYtu02tm23sW22N6eLe86sZvXe
TJLAoKodggcLFuwX6hrqUZ8GNKQRjWlCIE1pRnNa0JJWtKYNbWlHe34uDqIj
nehMF7rSje70oCe96E0f+tKP/gxgIIMYzBCGMozhjOA3RjKK3/mD0YxhLOMY
zwQmMonJTGEq05jODGYyi9nMYS7zmM8CFrKIxSxhKctYzgpWsorVrGEt61jP
Bjayic1sYSt/8hfb2M4OdrKL3exhL/vYzwEOcojDHOEoxzjOCU5yitOc4Szn
OM8FLnKJy1zhKte4zg1ucou/+Yfb3OEu97jPAx7yiMc84SnPeM4LXvKK17zh
Le94zwc+8onPfOEr3/jOD/4lWIB8EpwAQhCSXwlFaMIQlnCEJwIRiURkohCV
aEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVs
ZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpU
pwY1qUVt6lCXetSnAQ1pRGOaEEhTmtGcFrSkFa1pQ1va0Z4OBNGRTnSmC13p
Rnd60JNe9KYPfelHfwYwkEEMZghDGcZwRgT8f7fqUJta1KQG1alGVapQmUpU
pALlKUdZylCaUpSkBMUpRlGKUJhCFKQA+clHXvKQm1zkJAfZyUZWspCZTGQk
A+lJR1rSkJpUpCQFyUlGUpKQmEQkJAHxiUdc4hCbWMQkBtGJRlSiEJlIRCQC
4QlHWMIQmlD8SkhCEEBwfvnZw5999Ch+8J1vfOULn/nERz7wnne85Q2vecVL
XvCcZzzlCY95xEMecJ973OUOt/mHv7nFTW5wnWtc5QqXucRFLnCec5zlDKc5
xUlOcJxjHOUIhznEQQ6wn33sZQ+72cVOdrCdbfzFn2xlC5vZxEY2sJ51rGUN
q1nFSlawnGUsZQmLWcRCFjCfecxlDrOZxUxmMJ1pTGUKk5nERCYwnnGMZQyj
+YPfGcVIfmMEwxnGUIYwmEEMZAD96Udf+tCbXvSkB93pRle60JlOdCSIDrSn
HW1pQ2ta0ZIWNKcZTQmkCY1pREMaUJ961KUOtalFTWpQnWpUpQqVqURFKlCe
cpSlDKUpRUlKUJxiFKUIhSlEQQqQn3zkJQ+5yUVOcpCdbGQlC5nJREb+A402
JVw=
          "]]]}, {}, {}}, {{}, {}, {}, 
       {RGBColor[0, 0, 1], PointSize[0.008333333333333333], AbsoluteThickness[
        1.6], Opacity[0.4], LineBox[CompressedData["
1:eJwl1FO4EAYYBuBzsm2dTtYyl81l17Jt27Zbts0t2225LZurtrDF9zxdvN9/
+918f3CTjlU7BAYEBPwgQm4oQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jE
Iz4JSEgiEpOEpCQjiOQEk4KUpCI1aUhLOtKTgYxkCulMZrKQlWxkJwc5yUVu
8pCXfPxIfgpQkEIUpghFKUZxSlCSUpSmDGUpR3kq8BMVqURlqlCValSnBjWp
RW3qUJd61OdnGtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCT
XvSmD33pR38GMJBBDGYIQxnGcEYwklGMZgxjGcd4JjCRSUxmClOZxnRmMJNZ
zGYOc/mFecxnAQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZ
xW5+5Tf2sJd97OcABznEYY5wlGMc5wQnOcVpznCWc5znd/7gAhe5xGWucJVr
XOdP/uIGN7nFbe5wl3vc5wEPecRjnvCUZzznBS/5m1e85g3/8C9vecd7PvAf
//ORT3zmC18JGX8goQhNGMISjvBEICKRiEwUohKN6MQgJrGITRziEo/4JCAh
iUhMEpKSjCCSE0wKUpKK1KQhLelITwYykinw+8/6BlnShZs=
         "]]}, 
       {RGBColor[0, 0, 1], PointSize[0.008333333333333333], AbsoluteThickness[
        1.6], Opacity[0.4], LineBox[CompressedData["
1:eJwV0FVjFgQAQNGPkFK6lBBG90Z3j1zANrpDkBIkJUQpgw4FBZTu7u5GUkpC
UrqlQer4cO4PuEGtukR3jhUIBPJLAYIJoSCFKEwRilKM4pSgJKUoTRnKUo7y
VKAilahMKFWoSjWqU4OahBFOBJHUojZRRBNDHepSj/o0oCGNaEwTmtKM5rSg
Ja1ozWe0oS2f0472dKAjnfiC/0d04Uu60o3u9KAnvfiK3vShL/34mv58w7cM
YCCDGMwQvuN7fuBHhjKM4YxgJKMYzRjGMo6f+JnxTOAXfmUik5jMb/zOFKYy
jenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAlq1jNGtayjvVsYCOb2MwWtrKN
7exgJ7vYzR72so/9/MEBDnKIwxzhKH9yjOOc4CSn+IvTnOEs5/ib81zgIpe4
zBX+4SrXuM4NbnKL29zhLve4zwMe8i+PeMwTnvKM57zgJa/4j9e84S3vCMQO
BGIRmzjE5QPiEZ8EJCQRH/IRiUlCUpKRnBSkJBWpSUNaPuYT0pGeDGTkUzKR
mSCykJVsZCcHOclFbvKQl3zkpwDBhFCQQhSmCEUpRnFKUJJSlKYMZSlHeSpQ
kUpUJpQqVKUa1alBTcIIJ4JIalGbKKKJoQ51qUd9GtCQRrwHpYWO3g==
         "]]}, 
       {RGBColor[0, 0, 1], PointSize[0.008333333333333333], AbsoluteThickness[
        1.6], Opacity[0.4], LineBox[CompressedData["
1:eJwNxFVgFQQAAMA3Qlq6ke6STkUJ6U6pwTbYYION7m5QKaU7DBqkG6RBSaVL
6VYapO7jLltoTMPooEAgUEgtYwUCrWhNMG1oSwihhNGO9oQTQQc6EkkUnehM
NDF0oSvd6E4PetKL3vShL/3ozwAGMojBDGEowxjOCEYyitGMYSzj+IZv+Y7x
TGAik5jM9/zAFKYyjenMYCazmM0c5jKP+SxgIYtYzI/8xM/8whKWsozlrGAl
q1jNGn5lLetYzwY2sonNbGEr29jODnayi938xh72so/9HOAghzjMEX7nD45y
jOOc4CSn+JO/OM0ZznKO81zgIpe4zBWu8jf/cI3r3OAmt7jNHe5yj/s84CGP
+Jf/eMwTnvKM57zgJa94zf+84S3veE8gdiAQRCxiE4e4fEQ84pOAhCQiMUn4
mKQkIzkpSEkqUpOGtKQjPRnISCY+ITNZyEo2spODnOQiN3nISz7yU4CCFKIw
n1KEohSjOCUoSSlKU4aylKM8n/E5FfiCL6lIJSpTha+oSjWqU4Oa1KI2dahL
PerTgIY0ojFNaEozvqY5LWhJK1oTTBvaEkIoYbSjPeFE0IGORBJFJzoTTQxd
6Eo3utODnvSiN33oSz/6M4CBDGIwQxjKMIYzgpGMYjQfAGsLmCE=
         
         "]]}}}], {}, {}, {{}, {}}}, {{}, GraphicsComplexBox[CompressedData["
1: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
5VmTesqzJveUZ03uf3nWfwGmjlRd
     
     "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
       {RGBColor[1, 0, 0], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1UO0GAYQBdA0P2ls27Zt2/aP+WObTdrYtu02tm23sW22N6eLe86sZvXe
TJLAoKodggcLFuwX6hrqUZ8GNKQRjWlCIE1pRnNa0JJWtKYNbWlHe34uDqIj
nehMF7rSje70oCe96E0f+tKP/gxgIIMYzBCGMozhjOA3RjKK3/mD0YxhLOMY
zwQmMonJTGEq05jODGYyi9nMYS7zmM8CFrKIxSxhKctYzgpWsorVrGEt61jP
Bjayic1sYSt/8hfb2M4OdrKL3exhL/vYzwEOcojDHOEoxzjOCU5yitOc4Szn
OM8FLnKJy1zhKte4zg1ucou/+Yfb3OEu97jPAx7yiMc84SnPeM4LXvKK17zh
Le94zwc+8onPfOEr3/jOD/4lWIB8EpwAQhCSXwlFaMIQlnCEJwIRiURkohCV
aEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVs
ZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpU
pwY1qUVt6lCXetSnAQ1pRGOaEEhTmtGcFrSkFa1pQ1va0Z4OBNGRTnSmC13p
Rnd60JNe9KYPfelHfwYwkEEMZghDGcZwRgT8f7fqUJta1KQG1alGVapQmUpU
pALlKUdZylCaUpSkBMUpRlGKUJhCFKQA+clHXvKQm1zkJAfZyUZWspCZTGQk
A+lJR1rSkJpUpCQFyUlGUpKQmEQkJAHxiUdc4hCbWMQkBtGJRlSiEJlIRCQC
4QlHWMIQmlD8SkhCEEBwfvnZw5999Ch+8J1vfOULn/nERz7wnne85Q2vecVL
XvCcZzzlCY95xEMecJ973OUOt/mHv7nFTW5wnWtc5QqXucRFLnCec5zlDKc5
xUlOcJxjHOUIhznEQQ6wn33sZQ+72cVOdrCdbfzFn2xlC5vZxEY2sJ51rGUN
q1nFSlawnGUsZQmLWcRCFjCfecxlDrOZxUxmMJ1pTGUKk5nERCYwnnGMZQyj
+YPfGcVIfmMEwxnGUIYwmEEMZAD96Udf+tCbXvSkB93pRle60JlOdCSIDrSn
HW1pQ2ta0ZIWNKcZTQmkCY1pREMaUJ961KUOtalFTWpQnWpUpQqVqURFKlCe
cpSlDKUpRUlKUJxiFKUIhSlEQQqQn3zkJQ+5yUVOcpCdbGQlC5nJREb+A402
JVw=
          "]]]}, {}, {}}, {{}, {}, {}, 
       {RGBColor[1, 0, 0], PointSize[0.011111111111111112`], 
        AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwl1FO4EAYYBuBzsm2dTtYyl81l17Jt27Zbts0t2225LZurtrDF9zxdvN9/
+918f3CTjlU7BAYEBPwgQm4oQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jE
Iz4JSEgiEpOEpCQjiOQEk4KUpCI1aUhLOtKTgYxkCulMZrKQlWxkJwc5yUVu
8pCXfPxIfgpQkEIUpghFKUZxSlCSUpSmDGUpR3kq8BMVqURlqlCValSnBjWp
RW3qUJd61OdnGtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCT
XvSmD33pR38GMJBBDGYIQxnGcEYwklGMZgxjGcd4JjCRSUxmClOZxnRmMJNZ
zGYOc/mFecxnAQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZ
xW5+5Tf2sJd97OcABznEYY5wlGMc5wQnOcVpznCWc5znd/7gAhe5xGWucJVr
XOdP/uIGN7nFbe5wl3vc5wEPecRjnvCUZzznBS/5m1e85g3/8C9vecd7PvAf
//ORT3zmC18JGX8goQhNGMISjvBEICKRiEwUohKN6MQgJrGITRziEo/4JCAh
iUhMEpKSjCCSE0wKUpKK1KQhLelITwYykinw+8/6BlnShZs=
         "]]}, 
       {RGBColor[1, 0, 0], PointSize[0.011111111111111112`], 
        AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwV0FVjFgQAQNGPkFK6lBBG90Z3j1zANrpDkBIkJUQpgw4FBZTu7u5GUkpC
UrqlQer4cO4PuEGtukR3jhUIBPJLAYIJoSCFKEwRilKM4pSgJKUoTRnKUo7y
VKAilahMKFWoSjWqU4OahBFOBJHUojZRRBNDHepSj/o0oCGNaEwTmtKM5rSg
Ja1ozWe0oS2f0472dKAjnfiC/0d04Uu60o3u9KAnvfiK3vShL/34mv58w7cM
YCCDGMwQvuN7fuBHhjKM4YxgJKMYzRjGMo6f+JnxTOAXfmUik5jMb/zOFKYy
jenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAlq1jNGtayjvVsYCOb2MwWtrKN
7exgJ7vYzR72so/9/MEBDnKIwxzhKH9yjOOc4CSn+IvTnOEs5/ib81zgIpe4
zBX+4SrXuM4NbnKL29zhLve4zwMe8i+PeMwTnvKM57zgJa/4j9e84S3vCMQO
BGIRmzjE5QPiEZ8EJCQRH/IRiUlCUpKRnBSkJBWpSUNaPuYT0pGeDGTkUzKR
mSCykJVsZCcHOclFbvKQl3zkpwDBhFCQQhSmCEUpRnFKUJJSlKYMZSlHeSpQ
kUpUJpQqVKUa1alBTcIIJ4JIalGbKKKJoQ51qUd9GtCQRrwHpYWO3g==
         "]]}, 
       {RGBColor[1, 0, 0], PointSize[0.011111111111111112`], 
        AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwNxFVgFQQAAMA3Qlq6ke6STkUJ6U6pwTbYYION7m5QKaU7DBqkG6RBSaVL
6VYapO7jLltoTMPooEAgUEgtYwUCrWhNMG1oSwihhNGO9oQTQQc6EkkUnehM
NDF0oSvd6E4PetKL3vShL/3ozwAGMojBDGEowxjOCEYyitGMYSzj+IZv+Y7x
TGAik5jM9/zAFKYyjenMYCazmM0c5jKP+SxgIYtYzI/8xM/8whKWsozlrGAl
q1jNGn5lLetYzwY2sonNbGEr29jODnayi938xh72so/9HOAghzjMEX7nD45y
jOOc4CSn+JO/OM0ZznKO81zgIpe4zBWu8jf/cI3r3OAmt7jNHe5yj/s84CGP
+Jf/eMwTnvKM57zgJa94zf+84S3veE8gdiAQRCxiE4e4fEQ84pOAhCQiMUn4
mKQkIzkpSEkqUpOGtKQjPRnISCY+ITNZyEo2spODnOQiN3nISz7yU4CCFKIw
n1KEohSjOCUoSSlKU4aylKM8n/E5FfiCL6lIJSpTha+oSjWqU4Oa1KI2dahL
PerTgIY0ojFNaEozvqY5LWhJK1oTTBvaEkIoYbSjPeFE0IGORBJFJzoTTQxd
6Eo3utODnvSiN33oSz/6M4CBDGIwQxjKMIYzgpGMYjQfAGsLmCE=
         
         "]]}}}], {}, {}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->False,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{
    FormBox["\"Host generations\"", TraditionalForm], 
    FormBox["\"Host heterozygosity\"", TraditionalForm]},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.86187840657825*^9, 3.861878861157926*^9, 3.861880149245852*^9, {
   3.86188020517761*^9, 3.861880224072468*^9}, 3.8618802576949463`*^9, 
   3.861880294091227*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g2Legend", "=", 
  RowBox[{"Legended", "[", 
   RowBox[{"g2", ",", "leg3"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.861877678004058*^9, 3.8618776837710667`*^9}, {
   3.861877718058209*^9, 3.861877725555779*^9}, 3.861880275057868*^9, {
   3.8618803626600657`*^9, 3.8618803638360567`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, 
      GraphicsComplexBox[CompressedData["
1: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
eZNWkKwrhOYJl9+KLUkGIUzI7V7PnUeykxByiwX2R5RJZgrhrXOv9Jo/d8n3
F0Kh350Hi9+RLBZCfKDPsq6XJB8QAjdlUMUQc4YQDKWqEtwbSS4SwoKzsUrT
bpBcLYQ1gTNWsFNIbhKCeqr2+c+HSe4UwvMXmhfaIkkeEMK567aa5wJJZohg
hMG6C4+WkiwrgvUl3Hly2iSriqBw81GdCE2SdUUQyLQa06xOMohAeN1RnjmR
ZCcR1PdcWFz77Q75/iKYlDjG9P07kgUiMLNYZipxi2SxCH7428rOLSL5gAja
eGC0Lo3kDBHMKFiQYp9AcpEIev1ZewwEJFeLQGu8SWapB8lNIigP+3NMC/P/
41kjKrMtxvZSz1Iv0vleVk89a8djfvHii9SzxN4TZM4dp57lqZpz+tg26lnd
5j41PyOoZ0mVXVU95kY9Kyxmy5c7ptSzLq7oNjFXp57Fsd3+SVIa8xzYofZ0
xozP1LPqTX+tPf+YelbfD50dxyupZzF3SxpYnaSe9eNGwoBJHPUsf+vbcxW4
1LOiJi9YvtmDetZHjfu+UyyoZ70Lbm/00qCepSFq6fCUw2wIm1XFh+1+U89q
HrwjPb2XelZ9Useuhc3Us7p0OwpeVVDPSq9tEE/OpZ71++GEtou7qWd17kmb
NUVIPetaR5E5y4V6liIj9273EupZWZtO3EycjRlgf/nr+WmyJIsBqn6zOHG/
qGeNv69V0v+Meta+Hauygm5Qz0oM3xXYk0s962PhjVtp6dSzlBLd9h2Kpp61
QW/U191rqGdVnBl3M9yeelbCn3sm102oZ5WtOv6sYC6+W0MmxyvHfTK+28DY
wUc23UPUs5qSG+VV3lPPss7y2KnZQj3rS8PZ+IZL1LNOjYpmhGZSz7r1nul6
5gD1rPUPb0r5xlDPklNQl7rAp571fLmgNsudetbecI9KNyt8t4P3R8J0x+vi
ux08nDWxc8wMfF8F0YnVWyT/62GrYOr6mPvJY/DdHm7P2Nqx7Bv1rMRYZ876
TupZR9KnZnreoZ7F8dqZLllMPeug0etRuunUs7bNzCxdLaaedSxVRV+NTT3r
3Pq3XC9v6lkyE/gF5U7Us9ydT/t8A7x3BpD4k1imhvfOUHO4aqyNHN47g0QR
3+w6A++dgXXGq+tsN/WsMQqfbz1uoZ4lb9LY8ek29SzpmCgNp8vUszTLzxqP
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
2Pqk11xi0W2L/wFCe7oL
       
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[0, 0, 1], 
           Opacity[0.1]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl1UO0GAYQBdA0P2ls27Zt2/aP+WObTdrYtu02tm23sW22N6eLe86sZvXe
TJLAoKodggcLFuwX6hrqUZ8GNKQRjWlCIE1pRnNa0JJWtKYNbWlHe34uDqIj
nehMF7rSje70oCe96E0f+tKP/gxgIIMYzBCGMozhjOA3RjKK3/mD0YxhLOMY
zwQmMonJTGEq05jODGYyi9nMYS7zmM8CFrKIxSxhKctYzgpWsorVrGEt61jP
Bjayic1sYSt/8hfb2M4OdrKL3exhL/vYzwEOcojDHOEoxzjOCU5yitOc4Szn
OM8FLnKJy1zhKte4zg1ucou/+Yfb3OEu97jPAx7yiMc84SnPeM4LXvKK17zh
Le94zwc+8onPfOEr3/jOD/4lWIB8EpwAQhCSXwlFaMIQlnCEJwIRiURkohCV
aEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVs
ZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpU
pwY1qUVt6lCXetSnAQ1pRGOaEEhTmtGcFrSkFa1pQ1va0Z4OBNGRTnSmC13p
Rnd60JNe9KYPfelHfwYwkEEMZghDGcZwRgT8f7fqUJta1KQG1alGVapQmUpU
pALlKUdZylCaUpSkBMUpRlGKUJhCFKQA+clHXvKQm1zkJAfZyUZWspCZTGQk
A+lJR1rSkJpUpCQFyUlGUpKQmEQkJAHxiUdc4hCbWMQkBtGJRlSiEJlIRCQC
4QlHWMIQmlD8SkhCEEBwfvnZw5999Ch+8J1vfOULn/nERz7wnne85Q2vecVL
XvCcZzzlCY95xEMecJ973OUOt/mHv7nFTW5wnWtc5QqXucRFLnCec5zlDKc5
xUlOcJxjHOUIhznEQQ6wn33sZQ+72cVOdrCdbfzFn2xlC5vZxEY2sJ51rGUN
q1nFSlawnGUsZQmLWcRCFjCfecxlDrOZxUxmMJ1pTGUKk5nERCYwnnGMZQyj
+YPfGcVIfmMEwxnGUIYwmEEMZAD96Udf+tCbXvSkB93pRle60JlOdCSIDrSn
HW1pQ2ta0ZIWNKcZTQmkCY1pREMaUJ961KUOtalFTWpQnWpUpQqVqURFKlCe
cpSlDKUpRUlKUJxiFKUIhSlEQQqQn3zkJQ+5yUVOcpCdbGQlC5nJREb+A402
JVw=
             "]]}]}, {}, {}}, {{}, {}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwl1FO4EAYYBuBzsm2dTtYyl81l17Jt27Zbts0t2225LZurtrDF9zxdvN9/
+918f3CTjlU7BAYEBPwgQm4oQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jE
Iz4JSEgiEpOEpCQjiOQEk4KUpCI1aUhLOtKTgYxkCulMZrKQlWxkJwc5yUVu
8pCXfPxIfgpQkEIUpghFKUZxSlCSUpSmDGUpR3kq8BMVqURlqlCValSnBjWp
RW3qUJd61OdnGtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCT
XvSmD33pR38GMJBBDGYIQxnGcEYwklGMZgxjGcd4JjCRSUxmClOZxnRmMJNZ
zGYOc/mFecxnAQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZ
xW5+5Tf2sJd97OcABznEYY5wlGMc5wQnOcVpznCWc5znd/7gAhe5xGWucJVr
XOdP/uIGN7nFbe5wl3vc5wEPecRjnvCUZzznBS/5m1e85g3/8C9vecd7PvAf
//ORT3zmC18JGX8goQhNGMISjvBEICKRiEwUohKN6MQgJrGITRziEo/4JCAh
iUhMEpKSjCCSE0wKUpKK1KQhLelITwYykinw+8/6BlnShZs=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwV0FVjFgQAQNGPkFK6lBBG90Z3j1zANrpDkBIkJUQpgw4FBZTu7u5GUkpC
UrqlQer4cO4PuEGtukR3jhUIBPJLAYIJoSCFKEwRilKM4pSgJKUoTRnKUo7y
VKAilahMKFWoSjWqU4OahBFOBJHUojZRRBNDHepSj/o0oCGNaEwTmtKM5rSg
Ja1ozWe0oS2f0472dKAjnfiC/0d04Uu60o3u9KAnvfiK3vShL/34mv58w7cM
YCCDGMwQvuN7fuBHhjKM4YxgJKMYzRjGMo6f+JnxTOAXfmUik5jMb/zOFKYy
jenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAlq1jNGtayjvVsYCOb2MwWtrKN
7exgJ7vYzR72so/9/MEBDnKIwxzhKH9yjOOc4CSn+IvTnOEs5/ib81zgIpe4
zBX+4SrXuM4NbnKL29zhLve4zwMe8i+PeMwTnvKM57zgJa/4j9e84S3vCMQO
BGIRmzjE5QPiEZ8EJCQRH/IRiUlCUpKRnBSkJBWpSUNaPuYT0pGeDGTkUzKR
mSCykJVsZCcHOclFbvKQl3zkpwDBhFCQQhSmCEUpRnFKUJJSlKYMZSlHeSpQ
kUpUJpQqVKUa1alBTcIIJ4JIalGbKKKJoQ51qUd9GtCQRrwHpYWO3g==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwNxFVgFQQAAMA3Qlq6ke6STkUJ6U6pwTbYYION7m5QKaU7DBqkG6RBSaVL
6VYapO7jLltoTMPooEAgUEgtYwUCrWhNMG1oSwihhNGO9oQTQQc6EkkUnehM
NDF0oSvd6E4PetKL3vShL/3ozwAGMojBDGEowxjOCEYyitGMYSzj+IZv+Y7x
TGAik5jM9/zAFKYyjenMYCazmM0c5jKP+SxgIYtYzI/8xM/8whKWsozlrGAl
q1jNGn5lLetYzwY2sonNbGEr29jODnayi938xh72so/9HOAghzjMEX7nD45y
jOOc4CSn+JO/OM0ZznKO81zgIpe4zBWu8jf/cI3r3OAmt7jNHe5yj/s84CGP
+Jf/eMwTnvKM57zgJa94zf+84S3veE8gdiAQRCxiE4e4fEQ84pOAhCQiMUn4
mKQkIzkpSEkqUpOGtKQjPRnISCY+ITNZyEo2spODnOQiN3nISz7yU4CCFKIw
n1KEohSjOCUoSSlKU4aylKM8n/E5FfiCL6lIJSpTha+oSjWqU4Oa1KI2dahL
PerTgIY0ojFNaEozvqY5LWhJK1oTTBvaEkIoYbSjPeFE0IGORBJFJzoTTQxd
6Eo3utODnvSiN33oSz/6M4CBDGIwQxjKMIYzgpGMYjQfAGsLmCE=
           
           "]]}}}], {}, {}, {{}, {}}}, {{}, 
      GraphicsComplexBox[CompressedData["
1:eJxt2mlYDOzbBvCRraSNsiTJTlKJNipXKm207+vUtM9Ms0QpSrK3SUi2JFRo
lywPGWkltIiU1CNrSXZlyet/vPf1v98P7/Ol4zzurjkNX57jd5yz/XkOgWIM
BmP3aAbjPz//978Pq//3Zw/5yYA1jT+r5V92kywOBeJ65RfrMcvCQZ5NaVcB
ZnlYPaLkt3A/5mlQm3buQlYUZiX4qXfola87ZhUwXabVttQY8xw4/o4fdWYx
5nkg5TbpSccUzAvgDXC6t/94RvIi4H/J+tTTjVkVeL3F65bXYVaDgN0zjMcW
YFaHjFkNezr2YdaEDf4+3p6RmJfBtJDxnqM9MWsBN0Kw7bY+5uXw+sg2G081
zCugw3tDaIgsZm1wO6meWDnURbIOmL24tm52J2Zd+KRcfPtUNWY9uDxi3P/0
DGZ9UJx6xjojGfNK2Dex/LQjD/MqWFD0oCvACbMBiJ+V9b6ui9kQVumu1m1Q
wmwENY/W60WNPCV5NdhWKxyWfIMZICxuVlpBE8nxAG/Dih+YF+K7MQTkTw60
SMV3Yziit+2hYSi+r4EmQWSujAO+r4H6+4qbGavw3QSSb6jOclPCdxP4HCTT
aj4O300hXK55RdjrTvJuCka6D2dOayeZYQb1I9NMterx3QxWOZr/6q3A97Xw
VKloWPIAvq8F4x9JpZE78N0cCkaLH04OwXdz6NFR+nTUE98t4EWM5LxUfXy3
gOo94G+jiu+WkBMoH39JEd8tgfcuQem6BL5bwaZKz6XaQx3k3QqcwhWNlz0j
mWENOdZaNtvr8d0aJMy3ik++ju/rIPTSkqWCAnxfB8z4laY7D+H7elBNiio8
swvf10NY4rlqh1B8twGpF69/etrguw0oDWw546uF77aw5MjniecX4LstVNxP
iGmRxHc7eBZ1TMrj85P/zWAHtzx31O6+R3K8HUS9GmhxKSVZZAc2m7K+d+WR
zLCHBXNbtdoP4b09vCjo2n8kBu/tQezAqOzjTLy3h2NdP0c8zfHeASoctp4J
U8V7B/h270h9hyzeO0BQx5oOPSm8dwAuz/G00ii8d4Txi4vn/37XTu4d4XGZ
bXViG8nxjtA8xi7A6x7JIkfoNDFq8bpOMsMJarNdXXadxXsn2P14sr5nMt47
gUZslsB/M947ge3gqC3jQ/DeGXQnd++fZ4f3zmChfs5qyxq8dwbfsraDdqp4
7wwJhrcC46fhvQuEFClNWCWB9y5wf3KSyvrBx+TeBVp8UqokH5MscoFs7nAb
o5lkhivceHOt8ew/JIMr7FHriEjIx3tXKDOZeN04A+9dYcVD6+utQrx3g/Lq
gV2e/njvBkOOo9el2OK9G1zr+c74xxDv3cBLsnrdUzW8d4eAS5ZF12Tw3h0y
+qQb0n49IvfuEK2bLHf3Hckid9APa6+JfkwywwPWRVcNB94gGTxgeuyuDaUX
8N4DLLPPdm7MwnsPOBr5ISo+A+894VhsbqlPLN57wsPY2MU+QXjvCd9eeQ18
csZ7T9jfnjB6lR7ee8EiJXmbgwvw3guUCrd5xU7Fey/4/cjj7uRJeO8F6q+u
9O7/1kbuvWH779athi9JBm9IWHHnre5jkuO9wUZ1iaVOPckib/i5S2R78Are
+8BCnk1n8wW894ElK3ga5sfx3gdqPvalnU3Cex/Y6JVmNDcB733hXPh8fmYQ
3vvCdObprAu2eO8L733yvx3Uw3tfuHX6TYihMt4zoVl+d+hTGZJVmLDioGf9
4M+H5POYsKgdTOs+kcxkgodhWjyrl+R4JjR+C7sYd4/kbCbc03IraqkgWcSE
zLmtY6TySO5hQu6Icd25IyQz/ED26Og9v1NIVvEDXrzhslebsd8PbhsriY0P
xn4/WH7v9T55U+z3g/UXWCU7dLHfD8S3WQ7Xz8V+P9Cd5e7cL4X9flDRulN/
ixj2+4OLrLVxx8dW0u8Pv9ZJb4h7QjL4Q5BKs3J+DclMf6ib2aRrU0VyvD8s
UTB8vO8Gydn+sK9kvcelEpJF/qDqkucXcJLkHn/Q1Fhp9zOJZAYLbowbnrYm
FvtZYNu62scqFPtZEPOz3GwrE/tZ4Ka6yURsPfazoP59uV3+cuxnwbMKncph
Zexnwfi7A51nxmE/C/7MfB+S/qeF9AeAkt0x/u1BklUCYBMUq+Z0kQwB4NHT
1Xy7jWRmAHAdr473qic5PgBcH9UbXLlMcnYAnDL0lhY/Q7IoAJrrZu5UzyS5
JwDWfs6UckzC/kDQCluRcFCI/YEweG/6QRNP7A8Ed1E8t9wG+wNBVs94d4MB
9gfCB5uEgLZl2B8ILzMLL7+aif2BcM1G3+ztGOwPBPGpY9Iffm0m/UHgv729
6nYPySpB8HhN8tI5bSRDECw2/XVgqJZkZhCc5SgkRlWSHB8EP3Y6vW68SHJ2
EOzcrRK+JJdkURDsGtzRkpROck8QND2I4OsmYH8wLJhUPXwoAvuDId5lT9KX
EOz/+z6qVTEGMzMYoudvvvPRA/uDwcbBOPeGI/YHQ3GBvxzLDPuDoWmsWEOB
LvYHQ37gpoFMVewPgbk17YezZmB/CLzxn39WYgr2h8Cz7os2G6WxPwS+7XH1
+crA/hBYV36d7fGzifSHwKRDgjMh3SSLQsBGRfI++z7JPSGgLXUs2K+aZEYo
GHUoRGhdJlklFGR0ch86FZAMoTA9+P3WCSdIZobCkqG2jScySI4PhdBxj97l
7cL+UAhTvqs3Oxb7Q2EBZ3y8QST2h8LClAtzZAKxPwxu7nBb984R+8PgQX7T
mXI97A+DFFdOTrQa9odBpbracZlZ2B8GqSJra2lp7A+DtbIZOfK/HpD+MCh6
rtOh0EdyTxhEmvAEg5UkM9gwJLO4RvUkySpsSFtuKeG4kWRgw49Ttr+jA0hm
ssEmMedaiynJ8WzIbbnyu2chydlseNm9Q0tZDvvZMD/Dek/1BOxnQ7lV46GD
v+6Tfg6EBzYnq3WRrPI3V3edK7hBMnBAN3jMMv9dJDM5YJzQLBYYQnI8B1Lm
rFjTZUlyNgdyZojSjNVIFnFgTPRHoeLIPdLPgVk3ORv7ukhmcEGvVtl4XzPJ
KlxYm/Oh4X4FycCFCXIqjYXnSWZywUrFaodxIsnxXDi1qF1lTAzJ2VxYoqQz
znYLySIuFJw8Eartgf1ciEyUTNHSxv5w2HLrq3PsAuwPhzlzrQaVpbE/HFTC
lx7dOdBI+sNBLif11uUekuPDIfyJ/5tL10jODofqvR49ohKSReFwS7zZwC6V
5J5w+LfNu7lMQDKDB5zFo5epBpGswgNpmYvxXBOSgQf/HChyejsN+3kweNZs
8M547OfB027W4LOBu6SfB99qAiUymkkW8eBNUHqnoJzkHh7EMd2ezT5EMoMP
3Fiu9dTDJMvyIW2N+oaNO0hW4UPfnqqfLUEka/JhyHLLxkRnkoEP42b6iLqW
kWzHhxUnXyUnqJDM5MPc+Nw9pnIk8/mQ/OHerGMf7pA/Px9czG+MMm0lOY0P
CwI3iswrSM7mg4+hk/rnEpJL+DBn9yLLDZkki/jweWGRq+YJkpv44CzzY96o
LJJ7+LCX3VuquInkD3zwOL/ytJ83yQwBBB95pNdnT7KsACQVJ12s1yVZRQDr
h1RWzZ5PsqYADt/K2vtTimQQgMQuQUDV7wby/QXwS0w+7fgXkpkCcDktIct8
QTJfAJWLKtMWPiQ5XgDKDXl3rctIThOAx40g/rnjJGcLIDlW/9iaRJJLBDDT
pcx7eSTJIgFc7A2SLfQguUkAFuXqiUa6JPcIwKGusnfJbJI//H1fMDwpSoVk
hhBWR5bUXh+sJ99fCN8t/HQm3yFZRQh9MePP784nWVMIpeHTNAV7SQYhRHXN
3vdgA8l2QjAUv1kz241kphD2lpZE7F9GMl8IFysPTLacTHL8376Jeg+sGCSn
Cf/+/2GZyHa4jnx/IXS1zxDIfye5RAhi1UG1CzCLhPBlEycm7jPJTULYqKC/
fP4jkv8fz5okzmBfe0U9y961VVulkXqWSFdLcVwZ9awjVUG8R4epZ7Gnh16p
2Uo9a8/d3U/ms6hnbTbcVLZ7HfUsqYHIFG8d6lkLXAa9sudRz6r67n7jngTm
RbCcn8sr/UA9y2X44cPQJ9SzsjdZNSuKqGdxmYFex89SzxLbVu9/IoV61uW2
sF+5EdSzCtMzWTecqGdlZ5QpNFtQz3JeeefITnXqWfffCQZjpmHWAfbUuynM
X9Szno4/O/brK+pZZztys77VU8/S98nNnV9GPetlW073h0PUsxatTLB5t5l6
VhCnVULRj3pW0fuBH9Hm1LOkVMdovFfFvBp6Yh8r31TADDAwt9ut9g/1rE8a
NWo1XdSzBtTbb2WIqGdpeRis33KCetbXYlb6s13Us9Kqzw2IC6hnPbhu9LXR
kXrWxfbNrh+NqGeJtSjtmT4b301Bx8f6kfMkfDcDhX/XbZ84Gt/N4Eu3dtzI
J+pZOlscwxubqGdNLmYtWHqbelZEXrra83zqWffr/azeH6eexXnafdFkC/Us
w2Lx7Se51LMyx7EEh3yoZ007tMnYzIZ6lpjNZs90Q3y3gosn+ldw5uG7Nfgw
WYuvy+C7NYg8iy+9GI3v68A8W/UF+yv1LO2I863jeqhnfdYyHqPZQj1r/76C
4L5L1LNmRbS9X3qcetbEp9YvF22jnuVpsXW+diT1rHMLA5Yf9KKeNWl3mG6x
KclgBwp+tSrjVfD37WDKxmA/9hiSRXZw0ND4ScJP6lnM4Repq/uoZ63jnTw7
uol6Vln/g19vK6hnzVP/fnRXFvWsH7vi+88mUM/qrGzuyQ+lnnU7omDwfND/
8azEkAefPKhnqQdNiYxGHwNH+K7/dnGNJt47QhhTlBW0GO8d4bBgher7aXjv
BHmzzDs7xPDeCfQsR9I39VHPUtirOVO8g3pW4qit383qqGcdcf+8cUsJ9awF
DU/nxpymnlUp/zFWMpl6VsVzj9ENMdSz4q4lnOtlU8+a8HxRnYIj3rsAe+SC
445VeO8CH/XYSj+18d4VFOa6lu6fjfeukHBD64WBDN67wqhdRz7u/U0964ma
VdPHDupZcqojVqPuUs9SUZef8vAK9ax/+kNfH8+jntUsn3wg+DD1rJkXxPO2
bKaepWG7+/XRELx3h2vHE7bFuOO9OywKPlA8YIr3HtAQtayofgnee4C4GDfS
SRHvPSDuY8Abfym89wDDyr1GeWPx3hPWGAhWSgxQzxq20ub3PKKe9Xl41q5b
tdSzKm2MnK+do55VEaL49Xkm9SzVW0+TUxKpZ8Vqmu7cu5N6FqOxULgnDO+9
oTK2OOWHO957w8PE/ot16/DeGzImzF7paYT33nBgmMV5oY73PhDx2V8vew7e
+0BqXo6r22S894HnXg6Kz8Tw3gd2v52luPAH9ayCQ6d//HlGPevV6QZzp3rq
Waw2m18updSzOJsX/rl0mHrWBDvRjS17qWc13Y1OWB6Jn8eEl1VOdRZckplM
cFS4L3fVBz+fCUPJctcmW5KczQROm4fbdS3sY0L52U5pp7kk9zChYsh1nfMU
7PeDjwtSWr9OwH4/uN/0hM8cpp4lez9t4e8X1LNWMVdW7aiinqUZNRK3tIJ6
VkzgKDNeDvUsSdUHT6RSqGdNrfN+PLiNetblKIkvuQL0NH9YW5Orne2O/f4w
bVnMpj4z7PcH51YLlZtrsN8fbIxeyHsZYb8/RHv+vMTQwn5/GMnu5RvOxn5/
sLiuX28hjf0ssEsctBdjYD8Lio5fCdv4jnqWathi9aFe6lm+Gw1ORzRRz1qx
wmF75mXqWd5ucWHmp6lnJX623zSSSD0reeyYwqgd6GkBsMVGZ8bUjehpAcBv
c58lycL+ADAVlkUf98T+AFA14bVE2mB/AFyZLndhohH2B8DhlRrHMlWxPwD6
LkkPjJ+F/QHgfXWWssYk7A+ESPds9vlh6lkrlpwK2fKcelaNXV2N/CPqWUnL
V7V7VFPPOpUqnvTsKvUs1TgNk8Rc6lkwPze9KIV6ltGo9Om34tDTgiBPvCbn
Zij2B4H2wkyHUB/sD4Lc6TryuXbYHwT3xnJ6AyywPwiUko5JzjHC/iCQsAlj
ZmlifxB8mKButwB9rScIxIXBp55OxP5g2Kk8j/9xhHrWdb2bsV5fqGelvQ90
zvxCPctt+pIWi9fUs+b39Zqa9VDPMlPMcFBooZ4lrWa263Q19ayzEslR2y9T
zyoxswgpyqeetfmRrYTdaepZ8/Jruv89Rj1r/kLNoX2p1LNmzGyfKr8X+0PA
bXW65lQu9odAfuiJ9/O9sD8EYj3Xxrg6YH8ofKifnbED/e0/njWrKHXLSuwP
hdE8vsTSJdgfCpFTfGR15mN/KPyYrf/RUAH7Q+FRVb/HkCT2h4KLtJas+ljs
DwXRsOF5hS/UsyqeNurr91LParma4bm2nnqW1Yj4Ionr1LOMrv3re7WIepYU
z6h85wnqWSO/yjnZKehpYZAll1k8sgM9LQyKH3cmZvGwnw1zNHQvV/liPxvs
K42/S1pjPxue9bMvnV2D/WzQLIrVkFuO/Wwol6q1r5iH/WxY3lR9afd07GfD
FHt/uDoF+9lQN+9PymYZ7OfA57c/fjr+QU/jQKeM3r8GPehpHFA+N6L2OB89
jQPSmlp7tiahp3Hgscfrm+Jc9DQOrFE44Shnh57GgXvyk0zbZqOnceD8eB+N
tFHoeVz4FevQFP0VPY0LQntWgGInehoXtvzm1Bk9QE/jgufmnNDEIvQ0LtQZ
hB8yz0JP48K4RQkrj2Wjp3GhyvKIx9c4knu48GbOj4syHuh54RAhUVmubI39
4XCKpS7I1cL+cPj2O9O+Tw77w+HEvbulrWOwPxxK+488j3iGnhYOohuMI5Jt
6GnhcPvfWMs7Zehp4bDsdpnBwgz0NB7cePYueG4SehoPQvg+Y7uC0dN4sH5s
g7DbAD2PBwYtzgck1NDzeHBOVTyrVw77eSDqrPSN+YqexoN5x50ub32MnsaD
um/3bh+9jJ7Ghzout2ohepwsH3oSjp3cn4e+xgdZ/6i9yokka/LBeMddE/No
9DY+xBlc3NDmTLIdHzY9LFOyMkV/40N9wTaWqzbJfD7UjliWqyqgx/Ghmt3I
if1OvCuND5lMpbiJnehzfPB8dbEls43kEj6sl316MvYGeh0fRKvmvq+oIrmJ
D6Vz21vVq9Hv+NCRWTe98ATJH/hQ5lu8vywBPU8AuyKPOvVEoucJIN1l51QV
b/Q8Aag25GRmWaHnCeCflISFIcvR8wTwwKJ85da56HkCMOhoKHw9HT1PAHkB
m0fXSKDnCUDu2U7JvcPoeX9/P3XpqYOP0fMEoHhW1XltFXqeADaXRsZdKEbP
EwC/XTNw4jH0PAFYD3kPTNiKnieACsnIuFRP9DwBaEyzs9hmhp4nABkvyygn
zAwhzHEqHtKXR88TgsTdvGOT3xPvUhFC9mnDFKNGkjWFcPWqa8yOApJBCLnv
kqeKDqPnCcGhf//1xhj0vL+fd912cbojep4QWO77DLNWoOcJYTR34EIqelua
EOoLV3yUnoGeJwRedcQlhenoeUIodU/Jn4pZ9Pe9qjRmQAE9Twi+mbotT4aI
j/0/niVM+67M66WeNf7acS3zGupZIXlhFpfyqGe91G912JRIPWu2eF9WFI96
VnhuzucjttSzpOa/+96qTT1rybswv34l6llf3LWdFSSoZ0knxo1a2U/3WYWb
Dm+UfUA9a8+9xOpf5dSzFmW8Kxk8TD3r5jO1S9NiqGe9MvniOt2Xelb0j9NX
fddQz1rqZHWyQZl6lvoJu90vZahn+W5T1rf+hD6kDc/t++eJPaH7rFml5yWf
X6WeJa5zdZtNDvWshjldurfjqWf9fHDqw7hg6ln6JjXBFRbUs+bNmcntUqOe
db5rfYmPNPWs+q1pEdM+oQcZQez2w8aMFrrPqpzgJON2je6zXrf71qWfop7V
c/aI8M4W6lmds23Ff3hSz2JMrfX8s4J61oXle6/BTOpZjCdJ4kNjqGdZVk6x
7H2BnmMCy7/m2GTdQ88xhQ67nf9eK6T7rLWy3oEdJ+g+a7PSyzFuKXSflVDr
FtMQQz0r4Yb4Tmtn6lk8s3IDkRn1rJe+saN0F1HP+nTm0RFzRepZXtN1D7Z/
Q7+xAGv/Tca/X6H3WEJBdU1q2yN8t4Rak5TvWjX4bgXv1Q3+PC6j+6yvRpbr
vx2m+6xXOqMirLbRfZaDlq2n8Qa6z0q6oxYZyaKelZRyp3y0NfUsv95Cl+mr
qGeZ7Myd/Y8S9ayfTj/EExnUs9RGClkZveg1tvDzbfAX5cfoO7Zwe+OpW7L/
4LsdnA9p7B2TQ/dZXJc1HPHNdJ/V7rrBdI0P3WeJX/ypoO9EPevduluP+MbU
s7b0zYjTmE89y2HlchPbCdSzJqUwWMs+oMc4gFA5zlujBT3GAeS6/EomXkGP
cQAJ4yfVtRfRcxyA62QUtTYP7x2hp9+8LT6d7rMuL6nwsYuh+yy9c92LHQR0
nzVrikXMXV+6z3o5O6R5mQXdZz0KXNxtqE49y1Iwsfa6EvUs+a4djAZx6llt
jXcKG3FPBc4QdmCjIO5f9BhnYNhdu3CoHj3GGWwyF9brVqDHuIBDTkVYei7e
u0C62UD0jiS6z9K/Gb7sgJDus2xzdu8bx6H7rMAi5TdXnek+K/XYttH1xnSf
xRq1ddewOvWsfZvX51+aQD3L1ber6tIweoobNEV/2rb2FXqKG1xt26n4pBU9
xQ1ej/o11r4KPcYdLtxMvDR0Gu/d4ffOjPO70ug+S6/l0KkZ8XSfZcWd+XTs
fz3IAx7EOJqNtqX7LNWhk0JpQ7rPkrd9dX+PBt1nfVd3LXVfSPdZXyo7F5VL
Uc8qLql53vkVvcUThluPOM3D/ZTIEwL860r/qUVP8YKjD6TyzMrRb7xA+sgC
Ne4ZvPeC2FiBXFYW3nuBF6Pa6dh/91HeYBE7JIjn032W5rP8Wfl+dJ81zkrb
Tc6B7rNY8jOXm66h+6zOPv240dp0n1UvWjVeZz7dZ+Xv2j6eK0/3WawHDNas
CdSzcs3zXmq+R3/xhXVKsV/FHqO3+EL0m1EfW26ir/jClMZzLdVn0FOYkPlk
vYJBBnrK3+xlKF2A3gNMYA+o3TLbRPdZfoEOg1IhdJ+VzawueGtP91nqac5j
3q6k+6wtp+78qFGl+6yMMWprRpToPktDKsZgrBzdZ8lqnvrIHkFP8YPIS3lP
Zd+ip/jBkpWHvM/gXireD8K66//tvIKe4gcZx/cXzjmLnuL39++7t6k+FT3F
D5x7Co+Jb0dP8Yev+cmpUkK6zyp7uLHMy53us8plFtUEmtF9ln6Iq22XMd1n
ib87dOS2Ad1nnR2bPRKqQfdZLpJsh6SZdJ81LWdle6EE3Wepbhfr2fYDPYUF
HyTq7Ge9Qk9hwZ1k8B6HeykmC+y7L/amNaCnsMDr3FTlK8XoKSzwVRiUKziK
nsKCHTl7V1snoKewQKjTPq8whu6zrtszanlhdJ8Vf2GMjr4b3WfxbSRU+23p
PquENdrQeA3dZ31Lj7/P+u8+KgAuQNK2qP/uowLgyhO1mc5ydJ+lsXTS70jc
SzEC4X1MfWZcP3pGIJznp9+c8BA9IxAGNFYqONWhZwTCIQNzHb1L6BmBsFrm
l2HjOfSMQMi+uETN5BB6RiCs2NT4fe4W9IxAaFGLnPCGQ/dZM0f6n9e50n1W
tE+8eKc13WcVhFdNtjak+6zY1krNxBV0n9UeL3U7ajHdZ4269WjzFdw7iYJA
6WGn08fxdJ+VuTR+dfp39IRgqBsbsH3lG/SMYDDdYH8kuQs9IxiuT4Yez6fo
GcFwdNndqqO4d4oPhqhrWeN16tAzgmH6ao2mkivoGcGQ3l0pWXEePSMYLtwK
YBWhvzBCIMM0tC41FftDwHnwB9zeg/0hkDk154b4NuwPgbq+uGqPCOwPgVjr
UzezuXSf1dhnN+2aPd1nfXm0qbAU6D5roHLQia1D91nJ/RJ2PYv+zz5rfZbi
UmW6z9Lw5Xx7jfsnZij0PFnfOUac7rNK2l42zf2AnhIKvz87LT34FD0lFN4d
uNp96D56SigoGWvpyBWgp4TBPvf6G0Z70XPC4LCGwlMzB/ScMDjld1L/oT56
ThhsXjtQclcZPScMlOeVVS/9jZ4SBmkLqthvnqKnhMHsHENn9TvoKWGQ8njB
vVPoLwz233+P3hlN6C0qbIjrk56X6oSewgY9Tt2+fBP0FDYYXLGcsn0uegob
Xu596eo8DvvZEDArflhtED2FDcqJLfumvEFPYUOH9VEZrQ70FA687cmbOfYf
9BQOjIreLlQ6hp7CAbv5E7QHWOgpHNjwkB9rZYaewgGTvvjqUtw3ZXNAbE7v
PYE49nNgVVfTKd8O9BQOHIzc/I8p+gmDCxuk+0vPFKKfcEHxc6zG9nT0Ei5k
zmttUtqFPsIF/ZqPWUOB6CFc2Cy/pkCEnpLNBTvZvmYxN/QcLmR8PbVpI3pK
DxfGfFIKcpbF/nDYGb30e+co7A+H088DuYffoleEg9WzW89VGtAn/v5+pH3z
seskx4fDkrol779noL+EQ71z+cLIZPSWcLipMU/zUSj6SjjsfyMeZLQePYUH
MzZM/6FpjH7Cg/LC8b9+K2M/DxbPOajz+QvxBiYPcqK1rZN70UN4IHPoJnQ0
oH/wQK1k4sXSQvQOHhQsa/rD2o++wQPtO8+H8oXoGXyYnMJ9OG4DegYfQOyW
hbsf7pP4UF0sFb7bBPdJfCiWWZp3bxnuk/iQ+lt84ivcK9nx4UOo4u9rv9Az
+BDneLdw2QB6Bh8cntsnSaKPxPPhzZyijAnF6Bl8KA+9L7Z9P3oGH/wOftm7
Phk9gw/ff2/4FBaBnsGHBfL6t85FoWfwYfjHjMhWzD180DP6Y7nHAfdJfBD7
WlMuq4f7JAFYXJ8084saybIC2NGVZSOYhJ4jAP7Ck12n/+A+SQARX6/1p77B
fZIATG6rp45tx32SAK4v8RHaP8B9kgDGPj+s9LMS90kCYEd8U6gtwn2SABhj
5nwTS8F9kgCOtuUkTYwiOVsAJyx/XX4SQHKJAO60LnfxsCdZJIAZD3jLbXVI
bhJAh9frQ+8nkdwjgI2RS7c++kX2Sh8EsO1DftGRn7hfEoJXZunB1XdJlhXC
y1rF5km5JKsIYYVDc23TDpI1hXBu7pOX3kEkgxAs7leM67Yn2U4Ii+a/ux+p
TfJ/PCtPrjJNhmS+EEbPy3z7+WMt+f5C6C9I+DSum+Q0IeywXZaW9pjkbCFY
D9xWm9xGcokQHNXhhTZmkRCiNRbGyDST3CSEpPSVB/kXa1f/D+6VltQ=
       
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[1, 0, 0], 
           Opacity[0.1]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl1UO0GAYQBdA0P2ls27Zt2/aP+WObTdrYtu02tm23sW22N6eLe86sZvXe
TJLAoKodggcLFuwX6hrqUZ8GNKQRjWlCIE1pRnNa0JJWtKYNbWlHe34uDqIj
nehMF7rSje70oCe96E0f+tKP/gxgIIMYzBCGMozhjOA3RjKK3/mD0YxhLOMY
zwQmMonJTGEq05jODGYyi9nMYS7zmM8CFrKIxSxhKctYzgpWsorVrGEt61jP
Bjayic1sYSt/8hfb2M4OdrKL3exhL/vYzwEOcojDHOEoxzjOCU5yitOc4Szn
OM8FLnKJy1zhKte4zg1ucou/+Yfb3OEu97jPAx7yiMc84SnPeM4LXvKK17zh
Le94zwc+8onPfOEr3/jOD/4lWIB8EpwAQhCSXwlFaMIQlnCEJwIRiURkohCV
aEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVs
ZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpU
pwY1qUVt6lCXetSnAQ1pRGOaEEhTmtGcFrSkFa1pQ1va0Z4OBNGRTnSmC13p
Rnd60JNe9KYPfelHfwYwkEEMZghDGcZwRgT8f7fqUJta1KQG1alGVapQmUpU
pALlKUdZylCaUpSkBMUpRlGKUJhCFKQA+clHXvKQm1zkJAfZyUZWspCZTGQk
A+lJR1rSkJpUpCQFyUlGUpKQmEQkJAHxiUdc4hCbWMQkBtGJRlSiEJlIRCQC
4QlHWMIQmlD8SkhCEEBwfvnZw5999Ch+8J1vfOULn/nERz7wnne85Q2vecVL
XvCcZzzlCY95xEMecJ973OUOt/mHv7nFTW5wnWtc5QqXucRFLnCec5zlDKc5
xUlOcJxjHOUIhznEQQ6wn33sZQ+72cVOdrCdbfzFn2xlC5vZxEY2sJ51rGUN
q1nFSlawnGUsZQmLWcRCFjCfecxlDrOZxUxmMJ1pTGUKk5nERCYwnnGMZQyj
+YPfGcVIfmMEwxnGUIYwmEEMZAD96Udf+tCbXvSkB93pRle60JlOdCSIDrSn
HW1pQ2ta0ZIWNKcZTQmkCY1pREMaUJ961KUOtalFTWpQnWpUpQqVqURFKlCe
cpSlDKUpRUlKUJxiFKUIhSlEQQqQn3zkJQ+5yUVOcpCdbGQlC5nJREb+A402
JVw=
             "]]}]}, {}, {}}, {{}, {}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwl1FO4EAYYBuBzsm2dTtYyl81l17Jt27Zbts0t2225LZurtrDF9zxdvN9/
+918f3CTjlU7BAYEBPwgQm4oQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jE
Iz4JSEgiEpOEpCQjiOQEk4KUpCI1aUhLOtKTgYxkCulMZrKQlWxkJwc5yUVu
8pCXfPxIfgpQkEIUpghFKUZxSlCSUpSmDGUpR3kq8BMVqURlqlCValSnBjWp
RW3qUJd61OdnGtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCT
XvSmD33pR38GMJBBDGYIQxnGcEYwklGMZgxjGcd4JjCRSUxmClOZxnRmMJNZ
zGYOc/mFecxnAQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZ
xW5+5Tf2sJd97OcABznEYY5wlGMc5wQnOcVpznCWc5znd/7gAhe5xGWucJVr
XOdP/uIGN7nFbe5wl3vc5wEPecRjnvCUZzznBS/5m1e85g3/8C9vecd7PvAf
//ORT3zmC18JGX8goQhNGMISjvBEICKRiEwUohKN6MQgJrGITRziEo/4JCAh
iUhMEpKSjCCSE0wKUpKK1KQhLelITwYykinw+8/6BlnShZs=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwV0FVjFgQAQNGPkFK6lBBG90Z3j1zANrpDkBIkJUQpgw4FBZTu7u5GUkpC
UrqlQer4cO4PuEGtukR3jhUIBPJLAYIJoSCFKEwRilKM4pSgJKUoTRnKUo7y
VKAilahMKFWoSjWqU4OahBFOBJHUojZRRBNDHepSj/o0oCGNaEwTmtKM5rSg
Ja1ozWe0oS2f0472dKAjnfiC/0d04Uu60o3u9KAnvfiK3vShL/34mv58w7cM
YCCDGMwQvuN7fuBHhjKM4YxgJKMYzRjGMo6f+JnxTOAXfmUik5jMb/zOFKYy
jenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAlq1jNGtayjvVsYCOb2MwWtrKN
7exgJ7vYzR72so/9/MEBDnKIwxzhKH9yjOOc4CSn+IvTnOEs5/ib81zgIpe4
zBX+4SrXuM4NbnKL29zhLve4zwMe8i+PeMwTnvKM57zgJa/4j9e84S3vCMQO
BGIRmzjE5QPiEZ8EJCQRH/IRiUlCUpKRnBSkJBWpSUNaPuYT0pGeDGTkUzKR
mSCykJVsZCcHOclFbvKQl3zkpwDBhFCQQhSmCEUpRnFKUJJSlKYMZSlHeSpQ
kUpUJpQqVKUa1alBTcIIJ4JIalGbKKKJoQ51qUd9GtCQRrwHpYWO3g==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           Opacity[0.2], 
           Dashing[{Small, Small}]], 
          LineBox[CompressedData["
1:eJwNxFVgFQQAAMA3Qlq6ke6STkUJ6U6pwTbYYION7m5QKaU7DBqkG6RBSaVL
6VYapO7jLltoTMPooEAgUEgtYwUCrWhNMG1oSwihhNGO9oQTQQc6EkkUnehM
NDF0oSvd6E4PetKL3vShL/3ozwAGMojBDGEowxjOCEYyitGMYSzj+IZv+Y7x
TGAik5jM9/zAFKYyjenMYCazmM0c5jKP+SxgIYtYzI/8xM/8whKWsozlrGAl
q1jNGn5lLetYzwY2sonNbGEr29jODnayi938xh72so/9HOAghzjMEX7nD45y
jOOc4CSn+JO/OM0ZznKO81zgIpe4zBWu8jf/cI3r3OAmt7jNHe5yj/s84CGP
+Jf/eMwTnvKM57zgJa94zf+84S3veE8gdiAQRCxiE4e4fEQ84pOAhCQiMUn4
mKQkIzkpSEkqUpOGtKQjPRnISCY+ITNZyEo2spODnOQiN3nISz7yU4CCFKIw
n1KEohSjOCUoSSlKU4aylKM8n/E5FfiCL6lIJSpTha+oSjWqU4Oa1KI2dahL
PerTgIY0ojFNaEozvqY5LWhJK1oTTBvaEkIoYbSjPeFE0IGORBJFJzoTTQxd
6Eo3utODnvSiN33oSz/6M4CBDGIwQxjKMIYzgpGMYjQfAGsLmCE=
           
           "]]}}}], {}, {}, {{}, {}}}, {{}, 
      GraphicsComplexBox[CompressedData["
1:eJxt2mlYzG3Yx/HJErKF3FrEWG9ZUpZQ0a8oS7SX9qaZmpqWaWYspcSIVCjZ
pTBERMi+Z0KFQnYqGsqaJWvWejzHfV7P/83jTcf3uLo6u96UPsfZTxjjFtqK
x+OltObx/vfjf/8abf77qKGPPFTPrDvAq6ulbo8Y00XLo8pY62Lznfd3jxaw
1sOSuOPdFmxmrY+3Y3QH3Utj3Ru6I7roGy5jzYfMR7vxx0LW/dHttfkc/0TW
AzFSsvbawzmsB6NotYz/WcR6CKyv77qvN5P1ULgYnj8xcwzr4SjuqDsmoytr
U/Sd6FS79ssTajN4JD1MK7rN2hwpSYX3Xh1hPQrymlfnXTayHo3f4UNbjUhk
PQZL9XzunhOxHos1e/7Ra+PD2gJ7HI68mOfAehwCE1KyLC1Yj8eelA8m5XzW
E1DSPlF5shtrS8TGS07rtWFtBWmzRWnHj4+prSFZa7YoSsN6IoKD7SZOvcJ6
EtyXWK/xy2dtA63TGe890lkDlc66NxdGUCuB7w+mlXnbs3NbWMc0qCb0Zue2
GLvfQazVip3b4ZzO4a7rNTV0boeIwsDzvDPUvMm4qHATd9vCzicjunbGkFFJ
7HwKHML8lBU+7HwKJhfv37DDmp3bo1+owunkAHZuj/Pv/nm9g8fOHfDw7ZUQ
0aNqOneAk8jX2Xw/NW8qxs552TY0gZ1PRZLd8D0uM9j5NCSHWmYV6rHzaahv
1p9jU11F59MhETxcsz6bWjkdLrbR1qvD2fkMuOj5PHc3Z+czENpfM+LNp0d0
7ggXB68RF89QKx1RUVncb2MKO58J0chdy+HGzmeix7s5rmsM2fksfDQubT3+
6UM6n4Vuy5tH1BZS85wwIOFBybdYdu6ECer77ftZsHNnlBZ8vnvi6wM6d8Y/
9+JnbN5FzXOB5WWDawMDqeECbY+dP2sN2Oe74LtkWfbZsvv/tdoFj2wvxBpG
UfNcUbmpu/vlPtRwxWEduUxy4x7dd8X8sryK2nhqtSvutLW7FDyemueGmqtX
Yla/vUv33bC191Rjzz3USjfErVEOr/akVruhr13FgLKu1Dx3DA80v73y8R26
745+H7MuzsymVrojR6gp0nhTq93RKTYz7Gpvap4HtLtZ60c8vk33PTBwqKt2
wBZqpQem8ifetgqkVnsg5NGhgnI9ap4n+l/xMLxYeYvue2Lc402XBq2jVnrC
ZcMcxRwXarUnZlxz37z5H2qeF4wNq3W611bSfS/U1Y/k795ErfRCTeqgXjFu
1GovNO+UphzvRs2bjXkr0ppaCm7S/dnIvb1qn78ptXI2fiwS6ivO3qD7szFp
6hWLQidqnjeeVPY9Xlh1ne57Y7HRvIS4CGqlN05Xq+6Orqug+95QrF71YlAU
Nc8HY0/dijVuKaf7PojWSjBpSaVW+mDcUecPhsbUah80Trlb1a74Gt33xYzQ
a9oXAqnhiwGlcdq1baiVvrC9+qUmduNVuu+Lg+e2D/9jTc3zg9R16HmLuit0
3w/yJd/rpm6gVvpBYqEzItGNWu2Hip61L4pbUfP8ITjfaPqzuIzu+6Nr4dP6
grnUSn+cuHQ9sc0warU/tHhFkkelpXQ/ALa7zIYdDKNGANyerDRUGVIrA7Cx
2+20NldK6H4Ats57vqvXQmpeILZ8WT35iR41AvHovn9Xs7OX6X4gmoyakw8H
UKsDMWN9RrtvetS8IJywfOmXX36J7gdhintyXVo8tTIInyrWdUr5l1odhPlt
ijz21Vyk+wK4j+9k8mY7NV+AHIPklKoAaghguTmlcu9AaoEAT0ctzPCsLaav
L0DiSSNfMxW16u/576zjjoHUagH6DspQ2BtSawSo2b32eUClmuYHo592pPHx
pdT8YBgbRGiSrKkRjDvXn+UNenOB5gdjYdSJDP04amUwHtttfNanHbUqGNYb
Fv46LSui+X+//oBIr7t/ztP8YPCq312Vr6bmCbFu4sgzbcyo+ULc+TN70KrL
52i+EDvrHmY4SakFQhSdrW0e0IpaKcTqBlvdO7vO0nwh4se/fHzUmVothP/7
NcYff56h+UL0L7r1Ieg4NU+Es1sftHwNpuaLUG30KaHi22maL8KBsSEli1dT
C0SIW9ZKe+sEaqUIveauE3y/c4rmixDk55Q+N5VaLcJSgyfZIj61RgSNZrn5
h/yTND8EN2OHXhvnTs0PQemLsoFD2lIjBBXZb/NbCk7Q/BD0Ng3sUOJMrQxB
nKJHQt6P4zQ/BK0mGa1IV1GrQ/DtadA2vhO1JgTpMyz3/dYco/mh0F4i6Vqe
RM0PhVlmw8hWltQIRXnVjq8Ft47S/FA0FVzIKlpFrQyF+7hu6oox1KpQdNYk
8J88OULzQ/G4+cW/P3ZTa0LRZ7SVuimUmidGx0z9KwNNqflilGg92h9ZdZjm
i7E0ZNSwzWuoBWKMbx1608yRWinG2lUnDbx7UqvEaI6bPlpzv5DmizFS6ndZ
tZ5aI8Yltw7iSQJqXhiKvXJ0Yv6h5ofhcUXvEVcfHaL5Yej6evywRxJqQRji
u649trcftTIMKUOiR+buO0jzw9Dh1+W4LD9qdRg62duLwn4doPlh+Bhwu0fr
FdS8cHzX8apKtabmh0Pg45WkXV5A88PxqfPrAU1CakE4imISb4jbUivDMSvD
zXh+5X6aH47jv632TjGlVoejlX5sVOPZfTQ/HE/a/8j7ZUfNk2CVaeHg/o/y
ab4EqhL/b8+XUEOCbyc35erYUQskGGJiUljetJfmS9CpcnPXbweoVRJcaT36
2LjF1GoJrmsP7VfoR62RwPTkoa2N7al5EXi9f3Fsq4o9ND8CX/yPfm1SUiMC
z3rZHL7BpxZEoLd00VjnG3k0PwJGK6VLxs6hVkXgerdbK7p3pFZH4M3jnnZF
Z3bT/Ahobt69t3wJNS8SNxqchysmUfMj0XW/vW5x/S6aHwkL/d1lwiJqQSQG
NPSap9pArYzEyeSd56y8qFWRqFn+/kdqN2p1JK4+qDPYVJJL8yOR8kN88uci
al4UQu8/iTnrQM2Pgnhxm5suWtSIwkHno7G5N3bS/Cio/Kz3aSmplVEYnbR3
eGEfalUUAlbYTDxTtoPmR+Gc2e92LjHUmigYeAwzP2hMzYvGjlvLnOIuq2h+
NE7zq3LGb6RGNJITi/+1m0UtiIZ4ynq/W92pldGYlfDo+1fVdpofjWFVj2rn
tadWR2O99bZ5RpHbaH40Wo0q6XOtEzVPivlHU/uuqthK86WwLb594r6CGlI0
7/bIe/k+h+ZL4RXt9Xueilopxemcr+9X96dWSWGfa5hhlJlN86UQXRvco13d
FpovxfuYHMvV+6l5MUhvv2h2UF9qfgzsPmQETd+YRfNjcFH/pn1vA2pBDBz3
lG9syNhM82OQBrNXffSoVTF4J1lUEHJpE82PwT9m9TN2jaDWxKDrd7uCbNVG
mi9Dibp7RLYBta4Ms4WqD72vbqDvR4Ypn3KH2ydSm8mwR/Gm0+tv6+n7k2GX
rXFjwVpqFxmcqk+MlouoBTI8Ssw2OfFh3X8tk6HJzPPCp83UShku6x0wypxD
nSnDsKSYeG0+tUoG4/Sl1QHVa//rQhk+eJgb3tpPrZZhiWFK+5hw6koZKp6u
WrXWgFojw75tSx7xr6/5rxtl8Lr7qclgMzVPDmWbvkvjLah15fhTmTi3bWkm
vV+OtK1jfvdcSG0mh/Xlr6HrB1NDjqk6nS6/yl1N75fjcceC6uqWDHq/HMeK
teslutQyOWYNvJPyKSGd3i+HYaZVSoIFdaYce5y/JWU0rKL3y5EdV5fjO5+6
UI6jl+YO83akVstR4/vxzeOLK+n9ciQt0GreEkitkWNfxjHbvF8r6P1yDG6Z
sPpHADVPgQN9VDd1C9Po/QpMjx35wTqAmq9AS49P2XPepNL7FTB8ULZ431hq
KBB4/pbo4cEUer8Cgyf882XFamqBAv1cz8zVGU8tU8C7+O0kk6Ll9H4FVF0u
lmT0pc5UwKz54IeGzcn0fgU+zbv0aI8ddaECRa07fznwdBm9X4F7fc/1Fq6j
rlTA3YD3J6Q19f/jWeUXdayv1HOeJe64vN2za5xnuab9ePLiMOdZB0Tbk59t
4zyr6HHEZLM1nGfZDNg+OX0l51kueSOdWidznvX9xMcx/GTOs951H9opeyHn
WSuTt5ukRXOelV9lZvbdi/OslNrDsZvAedZZP6OrOn04z3ptNXpmTRvWZpho
/jBnxnPOs9IOjVaeL+U8a2a5Xvqy/ZxnDRFuFmuv5zyroCl2Q10C51nvDRY3
q+WcZ1U3Pr9/VsB5VkJhyqexrpxnpe6rnDLfmvOse3ujLbeacp711TT7Ys/+
nGe17z/H1kqXtTWE1Z1a+vJYT8Six45VVq85z8r5dXWsWQXnWYOdTXeXHuY8
y3ncqwtT1nCelbNp5uBCKedZRsolY0RTOc86kXXg0TNTzrP6f31THtiVndvh
jO3vm4ENnGfVtJk8o/E651ljuz0rH32K8yyT/HFza9dynpXTbstj/zjOs3oI
//TkCznPcig9YiSy4zwrUr23UNyHnTtg7r208LDPnGd5aV57bCnlPMvh5c6V
gzZznlW7aNG27yGcZ6nMn5jtN2Xn03Fw2dYc/0+cZ+10XvD6ZzHnWfscB7dr
XsV51u+dy4wuuLJzRygCxedeGrFzR+w659G5soHzrPzcO1ZupznPcjRr1E5d
xnnWj5JVd2tnsfNZWJSZYvGpLzt3Qq7+wlEFrznP6p06+GmrfZxnXfMzbacT
xc6dYW/q5AJjdu6Ciy+69xv/iPOsudd0eg3fxHmWfGVIU/BUarULMpYtrNV6
z3lW24ITrffv5DzLPFO9w9yDWumKCx0OrprWinmYK6wjS34/K+Y8q7PI0a88
lhpucHs0r1Y5hnmYGzoOP/dNXc95VlHJtfsmKs6zyq6EtJ0VwzzMHY+3J04L
MmUe5o4HtcHhce84z8pPH+9YcYTzrM+XJ9p8n8s8zAOuFpnrHo5iHuaBh1vm
TPBu4jwrfb9r2vKDnGd16zzLxCySeZgn5iaZHhxlyjzME6IOnyLkbznPWres
4u6Yo5xnbRp7NFG0kHmYF8xrdLbbjGUe5oUJ6SXjwxo5z/I+sbGl5BDnWf92
3vLSYB7zsNlw+ffrtqqxzMNmo0h37VmbH+Rb6tlIbH61Y+kqap433B7u/51g
wDzMG5PrvtgY55N3Kb2R8sC37aR+zMO8kT54QWLmPvIung+Ohnxwnz6ReZgP
YlfPkD0vJe9S+qAm+qNrOz/mYT7Y0X1Tm/Rm8i2eLzqsjOvzM5t5mC+GuJ77
k2HHPMwXJXnPf5TcId9S+8JQs3JIWTzzMD88fNh15Nh+zMP8/v78znGKu0Pe
pfTD5Rchp49lMg/zgzJgfeUCMA/zx+YrezdGtDAP84f258JeToeZh/mjoKrb
5FZhzMP80e+kZc1XLeZhAei93vjbhh3MwwLwVF+274A787AAFBUKI815zMMC
MGBmlVHIUeZhgTih32BdM515WCBEI1ZcN/xAvqUMxL2Q4vadMpmHBWLwXmPr
jQ7Mw4KgKVfEvv5FvoUg5Meej1bmMw8LwsDBxdn2nszDgvBj3NGD/h2Yhwkw
fY3ULoN5GF+AJfajGzNSmY8J0OBQv3WtE7VAgB1WhVJpe+ZlAngo7rsPvELe
pRKgKm3UsoRkarUAix3edEsAtUaAYy717wq+kG/xgnHuc3KUcR41Pxj3N56d
Zh5AjWCs13ZqaO5BLQiGw8yTqsePyLuUwXDvP12vg4paFQz/o9sslrhRq4Mx
pqoya00vak0wDq3s6Rt4gfyLJ0T9gsLpZYHUfCEupC4Y7fyRPAxCXPPcNCMu
i1oghLTrsdpXJtRKIVo3TMmbXU4ephJizaW5F3zmUquFWM3vpvllzDxNiJzs
bb/4D8jDeCLkzUh5vmkJNV8Eh5CSH1e6M08TYeozvZ3Fe8jHBCKU+Ae+/sO8
TClCo0/+iWsvycNUIni6Hg2WZFGrRViRVDPS2JR5mgi5l3KdBx0jD+OFYN9W
o5V2ftT8EJj/2tNi3JF5WghC1+i/iyskDxOEIP7qggsXnamVIZgw3HrV0W/k
X6oQWK39pnN/C7U6BEMS+5Q62lNrQuDTfCbr1x3yMF4orpxsP+61nJofij3p
2gOSB1MjFA6CZ6f9TpOHCUKR0ZCyKEVOrQzF5+lXIo/+wzwtFLnOy061O08e
pg5F3FWloYp5mSYUJwaXpS4A8zQxmtoeX+WkzTxNjGlLB/W8e5B8DGJ0ezLu
bIKIeZoYw084+H4wYJ4m/vv/y2/mZs/Iw1RiOOls2NVzB/M0Mcpr2nWa5c88
TYz7rex6fRjEPC0MfVWpEw8/JA/jh2Fo+i2dugLmaWEQpaaGGSuYp4WhQ/SH
Ll9nMk8LQ9csr6zdXZinhaHXv9bzB79gnhYGL7vxXvOOMU8LQ/6o+k6z45in
hePbEU3dSmfmaeHI75967FwPaoTDOG7w8slnmKeFw23emJj2s5mnhWNf5dx/
QvtQq8IRtD3hbYGceVo4TAbOLrzUxDwtHIeVvYJ/LWCeJoHJrcOzijswT5Og
zGJUTP0B5mkSdFz8/Ob5SOZpEpidOHI8vw/zNAmen7arvHqLeZoEAxcozKt3
ME+TYIKXtOX2QmqNBJMMFip1B1HzIqBIyP2d8Zx8jR8Bv51PrmZtoEbE35+X
c2wujaQWROBD5Of2oczflBEIu19s+SmWWhUBn1cp7lvbU6sjEG/+wN7xKPO0
CBTZTHiUN595WiTisxoGRZtS8yOhlnSfF8t8DZHQeRL/4l0u87RI2G+tTQuO
o1ZGYnKeT2L3MdSqSBxc/rlhfgPztEgsXuC3YeMWak0kFj0MHZfsQs2LQp7Q
aIG1HjU/CrsK/TKWXyNfQxTeXrt01GQDtSAKzSKvw4U21MoorL2/JtfkHvO0
KAS0eydPmc88LQpfL/XMetKTWhOF+vjPsUvPM0+LhjD/cBdxIPO0aGB+xGT5
COZp0TCxbM7Y/YR5WjQmWDqfO6xinhaNvWkdh3b0ZZ4WjdqOvQy+tqdWR8M/
Rr7r+THmadHo/uPRAZMk5mlSFMoMciYGU/OleOt9qtNJM2pIoSNZ2b/6NfM0
KVoWO+dsvsA8TYq5lx9s9EugVkkhHmiScHgYtVqKpqkBPbpkka9ppAi6G9z/
dgA1Lwan9k7qfOYS+Ro/BuNH7l9cMZQaMeiTmr52yi7yNUEMNh966ynvRK2M
gbPRyK9nlzNPi0G1dcCLIFNqdQyWdTlzxW0F+ZomBtleXdaO+cg8TYaM+a5D
twiodWWIz5tlX9eB+ZoM/eaIP+05TZ5mJoNlhKJu+BDmbTK0zr31wv4ceZqL
DFJv/Xb1K6gFMux7O8XCsxO1TAYn3Qu24gLyNaUMjnHrnn5Jps6U4VVajvr1
MGqVDKcyZqVurSVvK5RBM9TG92s+tVr29/fb9fJhwdSVMvzZJTI53ZlaIwPf
Qz1/3CnyuEYZRhlnTbu0kJonR9bZ9Y/fdaHWlaNqWsOVHszn+HJcnCBcVG9L
bSbHuQGdliU9JW+DHDMDlLymJGoXOSqWHfukP4haIIe2wrfp4hbyNZkcxp8c
u46bSq2UQ2hc32jSnzpTjk7i2uLzP8jXVHLk9R7V0uk0daEcdpVxK//kUqvl
6Nvr0Jv3s6kr5Sh3nLl6Uz9qjRy3BVr7r74hf2uUY9Lpc9L4ddQ8Bdooyoqf
mVHrKnD8YdlhYy3meQqcKjz39JqSvM5MAekAReLYI+RzUKD7tF1bVIbULgps
LY+yivlJPidQYO+Nm1Y3tlD/r2fZFTT16sI8T4F6xaUjx9zI5zIVuD/4/YcJ
x8njVAoUy/ZYFs2iLlTgfULn7aZPyOPUCrQ//1MjX05dqUChNGfL7BryuP/H
sxrun+074SnnWXGu89s2XeI8q9a4/ppyD+dZnunlW7uu5TzLcNVx7fgkzrOe
WiS+zVvIeVZmp8drGudynjXUSHF48zzOs+QXfqb+E8l51scs214Bvpxn3byg
n2huy3mWgeeVr1pDOM8qO9tmezctzrM8J0kU0+u5/azIOw/nj1JznpXsOWKY
3nbOsza+O/e+9xLOsypjzm11F3Oe5Wtu2WOjI+dZY8YeNJkKzrPm5Cz6NnI4
51m2DimwMeI8qzSkS1d+W86zjoevKr31hXmRJX6UjCvs8YK1Fe5W/ZxRc4vb
z5JN9/hzSs3tZ015Pl7ltofzLJ12h94uX855Vk3/D+PqwjnPcg0f/+TYZM6z
PPTtw7V6c54VEOjZWfcj8yJbHDtX+6nvPeZJdvDix7pfPcztZxn2Ld63M5Xz
rL2a4KRRYs6zdh84usxsJudZokGLV53mc571Jv78rBc8zrNGhr9c7vSceZM9
xvRMOKEpYt7kAHuD1/qC9dx+1pCPQy1+CTnP0tN+fmKkGedZRVuPX0z4zbxp
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
       
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[0, 0, 1], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl1UO0GAYQBdA0P2ls27Zt2/aP+WObTdrYtu02tm23sW22N6eLe86sZvXe
TJLAoKodggcLFuwX6hrqUZ8GNKQRjWlCIE1pRnNa0JJWtKYNbWlHe34uDqIj
nehMF7rSje70oCe96E0f+tKP/gxgIIMYzBCGMozhjOA3RjKK3/mD0YxhLOMY
zwQmMonJTGEq05jODGYyi9nMYS7zmM8CFrKIxSxhKctYzgpWsorVrGEt61jP
Bjayic1sYSt/8hfb2M4OdrKL3exhL/vYzwEOcojDHOEoxzjOCU5yitOc4Szn
OM8FLnKJy1zhKte4zg1ucou/+Yfb3OEu97jPAx7yiMc84SnPeM4LXvKK17zh
Le94zwc+8onPfOEr3/jOD/4lWIB8EpwAQhCSXwlFaMIQlnCEJwIRiURkohCV
aEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVs
ZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpU
pwY1qUVt6lCXetSnAQ1pRGOaEEhTmtGcFrSkFa1pQ1va0Z4OBNGRTnSmC13p
Rnd60JNe9KYPfelHfwYwkEEMZghDGcZwRgT8f7fqUJta1KQG1alGVapQmUpU
pALlKUdZylCaUpSkBMUpRlGKUJhCFKQA+clHXvKQm1zkJAfZyUZWspCZTGQk
A+lJR1rSkJpUpCQFyUlGUpKQmEQkJAHxiUdc4hCbWMQkBtGJRlSiEJlIRCQC
4QlHWMIQmlD8SkhCEEBwfvnZw5999Ch+8J1vfOULn/nERz7wnne85Q2vecVL
XvCcZzzlCY95xEMecJ973OUOt/mHv7nFTW5wnWtc5QqXucRFLnCec5zlDKc5
xUlOcJxjHOUIhznEQQ6wn33sZQ+72cVOdrCdbfzFn2xlC5vZxEY2sJ51rGUN
q1nFSlawnGUsZQmLWcRCFjCfecxlDrOZxUxmMJ1pTGUKk5nERCYwnnGMZQyj
+YPfGcVIfmMEwxnGUIYwmEEMZAD96Udf+tCbXvSkB93pRle60JlOdCSIDrSn
HW1pQ2ta0ZIWNKcZTQmkCY1pREMaUJ961KUOtalFTWpQnWpUpQqVqURFKlCe
cpSlDKUpRUlKUJxiFKUIhSlEQQqQn3zkJQ+5yUVOcpCdbGQlC5nJREb+A402
JVw=
             "]]}]}, {}, {}}, {{}, {}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.4]], 
          LineBox[CompressedData["
1:eJwl1FO4EAYYBuBzsm2dTtYyl81l17Jt27Zbts0t2225LZurtrDF9zxdvN9/
+918f3CTjlU7BAYEBPwgQm4oQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jE
Iz4JSEgiEpOEpCQjiOQEk4KUpCI1aUhLOtKTgYxkCulMZrKQlWxkJwc5yUVu
8pCXfPxIfgpQkEIUpghFKUZxSlCSUpSmDGUpR3kq8BMVqURlqlCValSnBjWp
RW3qUJd61OdnGtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCT
XvSmD33pR38GMJBBDGYIQxnGcEYwklGMZgxjGcd4JjCRSUxmClOZxnRmMJNZ
zGYOc/mFecxnAQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZ
xW5+5Tf2sJd97OcABznEYY5wlGMc5wQnOcVpznCWc5znd/7gAhe5xGWucJVr
XOdP/uIGN7nFbe5wl3vc5wEPecRjnvCUZzznBS/5m1e85g3/8C9vecd7PvAf
//ORT3zmC18JGX8goQhNGMISjvBEICKRiEwUohKN6MQgJrGITRziEo/4JCAh
iUhMEpKSjCCSE0wKUpKK1KQhLelITwYykinw+8/6BlnShZs=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.4]], 
          LineBox[CompressedData["
1:eJwV0FVjFgQAQNGPkFK6lBBG90Z3j1zANrpDkBIkJUQpgw4FBZTu7u5GUkpC
UrqlQer4cO4PuEGtukR3jhUIBPJLAYIJoSCFKEwRilKM4pSgJKUoTRnKUo7y
VKAilahMKFWoSjWqU4OahBFOBJHUojZRRBNDHepSj/o0oCGNaEwTmtKM5rSg
Ja1ozWe0oS2f0472dKAjnfiC/0d04Uu60o3u9KAnvfiK3vShL/34mv58w7cM
YCCDGMwQvuN7fuBHhjKM4YxgJKMYzRjGMo6f+JnxTOAXfmUik5jMb/zOFKYy
jenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAlq1jNGtayjvVsYCOb2MwWtrKN
7exgJ7vYzR72so/9/MEBDnKIwxzhKH9yjOOc4CSn+IvTnOEs5/ib81zgIpe4
zBX+4SrXuM4NbnKL29zhLve4zwMe8i+PeMwTnvKM57zgJa/4j9e84S3vCMQO
BGIRmzjE5QPiEZ8EJCQRH/IRiUlCUpKRnBSkJBWpSUNaPuYT0pGeDGTkUzKR
mSCykJVsZCcHOclFbvKQl3zkpwDBhFCQQhSmCEUpRnFKUJJSlKYMZSlHeSpQ
kUpUJpQqVKUa1alBTcIIJ4JIalGbKKKJoQ51qUd9GtCQRrwHpYWO3g==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           Opacity[0.4]], 
          LineBox[CompressedData["
1:eJwNxFVgFQQAAMA3Qlq6ke6STkUJ6U6pwTbYYION7m5QKaU7DBqkG6RBSaVL
6VYapO7jLltoTMPooEAgUEgtYwUCrWhNMG1oSwihhNGO9oQTQQc6EkkUnehM
NDF0oSvd6E4PetKL3vShL/3ozwAGMojBDGEowxjOCEYyitGMYSzj+IZv+Y7x
TGAik5jM9/zAFKYyjenMYCazmM0c5jKP+SxgIYtYzI/8xM/8whKWsozlrGAl
q1jNGn5lLetYzwY2sonNbGEr29jODnayi938xh72so/9HOAghzjMEX7nD45y
jOOc4CSn+JO/OM0ZznKO81zgIpe4zBWu8jf/cI3r3OAmt7jNHe5yj/s84CGP
+Jf/eMwTnvKM57zgJa94zf+84S3veE8gdiAQRCxiE4e4fEQ84pOAhCQiMUn4
mKQkIzkpSEkqUpOGtKQjPRnISCY+ITNZyEo2spODnOQiN3nISz7yU4CCFKIw
n1KEohSjOCUoSSlKU4aylKM8n/E5FfiCL6lIJSpTha+oSjWqU4Oa1KI2dahL
PerTgIY0ojFNaEozvqY5LWhJK1oTTBvaEkIoYbSjPeFE0IGORBJFJzoTTQxd
6Eo3utODnvSiN33oSz/6M4CBDGIwQxjKMIYzgpGMYjQfAGsLmCE=
           
           "]]}}}], {}, {}, {{}, {}}}, {{}, 
      GraphicsComplexBox[CompressedData["
1:eJzt2nk41en/x/FTmbYZpQaRFiRNkrKWsrzt+062g4MotFiiojgpoZIlbVSO
pdQRSSopnGKEslVEpGNGkRFqTFrk+1vcn/sz7uv31+9v/nE9r3ev667+fFwf
Ka/dtj7TGQxG7AwG439+T/wMa0/85qPfDFhuGxJX+O4N6tnwYf4K77u1VAvB
+1WndaJvUS0M0trb30ZeoFoM+iWiubaHqF4CZ34xjnzBpFoStgWVenOVqJaG
Sytb/9k02oVaBpS/+nsr3qJaFroZRivDt1H9G2Tzxr82ilAtB78mRaUXNr1G
LQ9+gwFzp8dQrQAzJYr05gLV6+HOgmX3Xfo7UStCbujGg1pRVCtBz4ySV/8R
pFoZ8hMHhQbTO1CrQILg0gOpv1KtChfeR8xwOvUKtRq4vT0qd0uY6g3gO2qh
W1bcjnoj+Jsm+spYUa0O3mLlPwUOtKHeBBdE1L9MC6V6M2TN9Lfw63mJWgMc
Ape0VptQrQmOhiN+yhWtqLXg3eqQS9z1VGtDZ9Yl1SUlLagBKjWsXgg6oWYD
rAsQr0wdeYHuOhD0R1aBSTZqtg78ndwkqitP3XXh2myVsZV5z9FdF45lHnu+
TQg1Qw/Gvrcune36DN31oGTFtQe+V5rRXR/4jp/K4kaa0F0fjBRVFiiYoWYY
gHBNdPMsqUZ0N4DImCaJtP56dDcE/bqr0YzGp+huCMERpzcWdT1BdyNIDX+c
faehDt2NoKGYZ5l/sRbdjeHX+wudcjRq0N0YaqQGhRIHqtHdBIYe3683PPo7
upuAmkyyMFepCt1NIftNmV+/bCW6m8Jh+es/RPQfobsZ1O+0vbPK9yG6m8FX
87enxwN46G4OWgbyrsyMcnQ3B3GLxmKryAfobgG7dUwY/WtL0d0CQtzXzQtd
VYLulmB2p+Bs8Oo76G4Jzc2DBi0HitHdCj6oBlln/ihCdytINE9LV9hzE92t
4YvjTJFqkcKJBmuwePskvuJKPvrz1iBcYWClfCxvonnW0HNBvCT8yDW0t4Ga
gFm6g+dy0d4GOphRWhrvL6O9DWRatd+ssMhBextQnjNnx3BDFtrbgo+i4HnQ
zER7W+h+16j4sikD7W0hNeLJqOboBbS3haFgFbEcZhra24Fkv4vf8uBzaG8H
WXNrrizmnEF7O+DmChwY/JKK9nbw9+e6U7qKp9DeHsL3G+z+MZyE9vZw8Ihy
QpzqSbS3B+7R+yy9GcfR3h4KE1/5y9fEor0DfA+9Bo6/xKC9A+wUK9tnMhaN
9g6wQmzVQBP3ENo7wG91e5OFz7PRfguwRX9u0P4UifZbIHRdyYKmkwfQfgt4
ei+bfuPHfrTfAo+PcXRMM8PQ3hESIU9HrjcE7R1h8JFMss7JILR3hIzlI2vn
Ne5Ce0ewNuqohhY/tHeC+Y/SjFSW+aK9E/gJSJ0ceuCN9k6Q/yezIvcVC+2d
4M7gjJGVaz3Q3hkiAtntP8sw0d4ZNBv+qZgl6oT2zlD5KrO39DcHtHcGsb/j
O9Mf2qO9C+Qc6p3xQxY1uED2Mf39f2qgZrvAxYpasUWydmjvAi0nIk52idqi
vSu4CAktzfK2QntXuCab4HUg0gztXeG1uSq/bqsh2rvCw5lSTFihi/ZMWJbe
upQdthntmfD7nk0uSs0b0Z4JJ9ZqJkV5qKI9EwbEToW7NyuhvRsYC86KvH0W
3cEN7Aq5l84OUHs3iFhQCYuVNNHeDVhfwvtnK2ijvTvU5wnXRStpob07FI3o
P5YWRX8ftjuwkhqCF0qqoL07MKP8x6IuyaO9B0jc3lO+7GcZtPeASoE8P535
i9DeA5IjxtU2j/6E9h6QcpNb4cP5ojWxZ0GO3pxTr9hPJlqSBbELnn78sbJz
ooEFjH//sIhmE80hmkc0n2iG5+SWJBqIZhHNJppDNI9oPtEML+J9ooFoFtFs
ojlE84jmE83wJt4nGohmEc0mmkM0j2g+0YytxPtEA9EsotlEc4jmEc0nmuFD
vE80EM0imk00h2ge0XyiGb7E+0QD0Syi2URziOYRzSeasY14n2ggmkU0m2gO
0Tyi+UQzthPvEw1Es4hmE80hmkc0n2iGH/E+0UA0i2g20RyieUTziWb4E+8T
DUSziGYTzSGaRzSfaEYA8T7RQDSLaDbRHKJ5RPOJZuwg3icaiGYRzSaaQzSP
aD7RjJ3E+0QD0Syi2URziOYRzSeasYt4n2ggmkU0m2gO0Tyi+UQzdhPvEw1E
s4hmE80hmkc0n2hG4OQWIlqS6PVEA9HWRLOIDiSaTXQS0RyiC4nmEd1ENJ/o
YaIZQZNbiGhJotcTDURbE80iOpBoNtFJRHOILiSaR3QT0Xyih4lmBE9uIaIl
iV5PNBBtTTSL6ECi2UQnEc0hupBoHtFNRP8fnnUxgTW4pY/2rNu3tQfk62nP
0tvToutTQnvWmao9xWVZtGdZ7bLoV4inPcv/vZM515f2rOLhRNWrWrRniXAT
eHkzqZYBXbvc6GfVtGf9xyNYVDmK9qzdq1fMFlCkPWtnar1R9yDtWc1e5mZ+
ubRnbdWKWfXWh/askXPLFF7/SrUiVDg6Ko9fpz2r0Kj/zD6gPavM+F3EsWe0
Z41FZ4n1WNKexVDz3lj9nPas7QHB9dXOtGctTZ9+6sYY7VmzQw6r3kmjPUv1
pITO9c1UbwLNHM2WJTW0Z7Evz017uYlqDTiwc42FaDbtWUndEsd+l6BaC/Qf
fY0eS/qXZ+0e72yToBqgLb68e2057VmnZ2i4L3SjvEsHAt/sEcibR9114EZf
S192Gu1ZRa7TU12WUN6lC+GqXLuGw7Rn3dzxnmnYTHuW5Pvr11dIPsOexdF4
mRET2Iw9SyTFyOxFDe1Zmn3+vtvmU95lABf2NS2v7W/AnnXDwzmx6Hk99qzQ
1z3nHvQ9xZ6lHvfXyriOJ9izpgepi0rl1WHPGngZtrbZqBZ7Vm/V64uskcfY
swJeD34oia/GntWprHC3VOl37FlOsh5m7bJV2LOCks+LvzeoxJ4VOHDS98D2
R9izLkfvvLox4CH2LOGmnNGDxjzsWV0jo7d+8yzHnvUq941KAuMB9qzZ05ab
tw3cw57lm5zhH9x9F3vW9D77MBO5O9izhPVL3odkFmPPiso8+6xvzi3sWa3J
er68CzexZ70x+ufTDYtC7FlCb358dtlWgD0rSImrWGpxHXuW20nZo71GXOxZ
7K2pDSWHr2LPeiJy70j7iyvYs7IElVZ76l/GnsXVXuAVkJaNPWuwX34pa10W
9iytW8fTc7I52LP6Vrww3x1yCXuW7rMTl1QDLmDP+mlM+0PsgTTsWSnHJI08
y85hz/K4UL64sv4M9qyxPdFLEmxSsWfVfhw/pGaYgj3r2+q2xKjIJOxZxp3h
4x99ErBnnYkRF+0wO4Y9yyvjkPHBj7HYswoHDwq8jT6KPasmJW1aMSsGe5ZG
1r6SBzJHsGd1/FiU6V1PedgWUNCWrJQypjxsCwx/timNSY3EnqWudzfWzSUC
e1bYvgXFxrH7sGc9DTh8XLYnFHvWSOdfDlmFwdizfvs5pLBXLxB7lsbpiMab
NTuxZ405T1MbDfbHnmUdYdWdpEB5mDOosKyc7g1SHuYMww8ky2NyKA9zBl2F
rn17d3hizzrI5ErHp3tizzKQWDndnOOJPUtdbejdqVle2LPc24+zx52pvQsc
ffBcep0PC3uWtMN4q+kGN+xZfG0ByzmpLtizriz5YD0vbgv2LLk3avbLUygP
Y0Luo4Gwn3zNsWdx7zLmim43wZ51xllUQOm7AfYs87m64d+G9bBnecY/CysO
M8aeFVx2I+W6jQX2LOUCyek27jbYs+aZnvi6Nph63x0yAnPPdH63wZ51KWja
jkMO1tiz2uarz8h7Yow96+mW4T2LjlAe5wENVx935Ptuwp7lEHGcayayHnvW
H45qA0c2L8eedcrQe4Op+ny0ZwFXcuu5Rxk92LPmike0npX4Z8qz/vd9oqc8
i3h/yrMmvz/lWZPfn/Ksye9Pedbk96c8a/L7U541qac8a3JPedbk/n94Vqbo
Uem5b2nPWuk/85VONe1ZiR32kFFAe1bBPVdROEN7VkztHf+w/bRnPVq3oXDc
lvasxZ96kq/L0p61KnPZmrpe+vssmQwF/aQM2rMqMyVUHlrRnvXS8dVf6d8o
j5KDe8cVh6KKaM+aFn68Ns2L9qyro10e6xbTnrXv2FLjNh79fVbiKfHHkTa0
Z4nxYpbFdlBepQwXWz9ftvGhPWvZubNv9Nsor1KFjRdTG97b0p5l65Eem9FI
+dQGuGF3/mPdDtqznkqln02ZQXtWcharTvki/X3W96MqEr1StGdVbatlfE+g
v89SCBH02DtM+ZQmLMt7apLpRX+fFZc8cM+pifIpbehs0TrpYU9/n1Uw9Kb6
w0fKowBqn31etegE/X1W8Nsmp74N9PdZGzY/0eeXUV6lC5zbPls/qtPfZ6UJ
BthNu0h5lR4YHa/qqu2hvEoPrN0vP70mT3+fJRki2Hl8H/191ieOTsH89Ebs
WQUV61phRQP2LFZK06KAfsqrDKFd5UuoZR3lVYawW9ywLfcF5VVGMLQjW+rt
Q8qrjCDti1GselIN9qxNlwqi9yo+xp51LXL8cFkP5VUmEFIUl/8imvIqE0gS
Hgk6r0R5lSkMnlsS912W8ipTOP24vFtXl/IqM5AbEpn53JvyKjNIUyidGd9O
eZU52PfPe/wgn/Kq/+7LV26HpZdizxLoKHpi6FqCPavrvnbTAi/KqyxhfUdZ
VXAQ5VWWwLkfJ+LZWIQ9q3qV3N0G55vYszSH1Gv7HtzAnqWikRJ7dmk+9qzX
m/LXLi/iYs8Sy0jI/Tn/KvYsx1nxWpvvX8GepWzS92PkfQ72LDUH/4IKy2zs
WXvjv3Zdrs7EnlUlwC+IcuZgz9IxXMhZw7uIPevdqMHqQd107Fn5SVElSrmU
R9nC54epf7YZUB5lB+PTVqvM2U95lB1oi1uz8ispj7KDR1V9hREqydiz5mcX
iB9ZnYg9a+i70JEOyePYs7av9BPN6aI8yh5Y96ozY+fEYM8S09v00lcuGnsW
72lw65XzUdizhqU/2qyZR31f5QDyhzm5+y9T31c5wPwZXN3+rL3Ys2L7ZNbM
TA/FnqXiDd1t0SHYs7YZjx1cHBCEPUtDsyt5KXMn9qy6CK3RD73bsWc9XRzY
uUfOB3vWlW3d+o0tlAc5wq5rZZX7U5jYs9I6LjGV/ByxZ63tPXHexcsOe1b4
7W5pzzkW2LPO1Deb2n8zwp61WKdKwLRFH3uWqoH9rNnVOtizftm6NEziD+r7
JGdoLR5rOL1eHXvWN6Vf58WpqmDPss7mphzgKmLPGvHuOhz/UB571heBg6Wf
F6/BnsVrT1hf6iWFPUuofUmyl6Ug9izo6XUtyewun9i7guTisJ/K736faAYT
JD9WSecN/5hoYAKHWfMltPPTRLOZYH1oZYRl2N9oz4TZokPfKr5Oq5jYu0EN
37V6dFR0osENIlWEm+xSpSaa7QbcNV8Fl8vJTjTPDUZ2hUmbt6NmuMOjlr4T
7cKr0N4dZEpHddl26M52h64f13S8CqTR3h3CmAOv3J5Lor0H1DWYhWrsEkd7
D2j882VrntpCtPeAzJLd/qfipqO9BwjY/9GV7N2P/v0scP9+cLPDwScTLckC
CR37MG/pTvT/MeVZk98nesqziPenPGvy+1OeNfn9Kc+a/P6UZ01+f8qzJr8/
5VmTesqzJveUZ03uf3nWfwGmjlRd
       
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[1, 0, 0], 
           Opacity[0.2]], 
          GraphicsGroupBox[{
            PolygonBox[CompressedData["
1:eJwl1UO0GAYQBdA0P2ls27Zt2/aP+WObTdrYtu02tm23sW22N6eLe86sZvXe
TJLAoKodggcLFuwX6hrqUZ8GNKQRjWlCIE1pRnNa0JJWtKYNbWlHe34uDqIj
nehMF7rSje70oCe96E0f+tKP/gxgIIMYzBCGMozhjOA3RjKK3/mD0YxhLOMY
zwQmMonJTGEq05jODGYyi9nMYS7zmM8CFrKIxSxhKctYzgpWsorVrGEt61jP
Bjayic1sYSt/8hfb2M4OdrKL3exhL/vYzwEOcojDHOEoxzjOCU5yitOc4Szn
OM8FLnKJy1zhKte4zg1ucou/+Yfb3OEu97jPAx7yiMc84SnPeM4LXvKK17zh
Le94zwc+8onPfOEr3/jOD/4lWIB8EpwAQhCSXwlFaMIQlnCEJwIRiURkohCV
aEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVs
ZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpU
pwY1qUVt6lCXetSnAQ1pRGOaEEhTmtGcFrSkFa1pQ1va0Z4OBNGRTnSmC13p
Rnd60JNe9KYPfelHfwYwkEEMZghDGcZwRgT8f7fqUJta1KQG1alGVapQmUpU
pALlKUdZylCaUpSkBMUpRlGKUJhCFKQA+clHXvKQm1zkJAfZyUZWspCZTGQk
A+lJR1rSkJpUpCQFyUlGUpKQmEQkJAHxiUdc4hCbWMQkBtGJRlSiEJlIRCQC
4QlHWMIQmlD8SkhCEEBwfvnZw5999Ch+8J1vfOULn/nERz7wnne85Q2vecVL
XvCcZzzlCY95xEMecJ973OUOt/mHv7nFTW5wnWtc5QqXucRFLnCec5zlDKc5
xUlOcJxjHOUIhznEQQ6wn33sZQ+72cVOdrCdbfzFn2xlC5vZxEY2sJ51rGUN
q1nFSlawnGUsZQmLWcRCFjCfecxlDrOZxUxmMJ1pTGUKk5nERCYwnnGMZQyj
+YPfGcVIfmMEwxnGUIYwmEEMZAD96Udf+tCbXvSkB93pRle60JlOdCSIDrSn
HW1pQ2ta0ZIWNKcZTQmkCY1pREMaUJ961KUOtalFTWpQnWpUpQqVqURFKlCe
cpSlDKUpRUlKUJxiFKUIhSlEQQqQn3zkJQ+5yUVOcpCdbGQlC5nJREb+A402
JVw=
             "]]}]}, {}, {}}, {{}, {}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJwl1FO4EAYYBuBzsm2dTtYyl81l17Jt27Zbts0t2225LZurtrDF9zxdvN9/
+918f3CTjlU7BAYEBPwgQm4oQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jE
Iz4JSEgiEpOEpCQjiOQEk4KUpCI1aUhLOtKTgYxkCulMZrKQlWxkJwc5yUVu
8pCXfPxIfgpQkEIUpghFKUZxSlCSUpSmDGUpR3kq8BMVqURlqlCValSnBjWp
RW3qUJd61OdnGtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCT
XvSmD33pR38GMJBBDGYIQxnGcEYwklGMZgxjGcd4JjCRSUxmClOZxnRmMJNZ
zGYOc/mFecxnAQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZ
xW5+5Tf2sJd97OcABznEYY5wlGMc5wQnOcVpznCWc5znd/7gAhe5xGWucJVr
XOdP/uIGN7nFbe5wl3vc5wEPecRjnvCUZzznBS/5m1e85g3/8C9vecd7PvAf
//ORT3zmC18JGX8goQhNGMISjvBEICKRiEwUohKN6MQgJrGITRziEo/4JCAh
iUhMEpKSjCCSE0wKUpKK1KQhLelITwYykinw+8/6BlnShZs=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJwV0FVjFgQAQNGPkFK6lBBG90Z3j1zANrpDkBIkJUQpgw4FBZTu7u5GUkpC
UrqlQer4cO4PuEGtukR3jhUIBPJLAYIJoSCFKEwRilKM4pSgJKUoTRnKUo7y
VKAilahMKFWoSjWqU4OahBFOBJHUojZRRBNDHepSj/o0oCGNaEwTmtKM5rSg
Ja1ozWe0oS2f0472dKAjnfiC/0d04Uu60o3u9KAnvfiK3vShL/34mv58w7cM
YCCDGMwQvuN7fuBHhjKM4YxgJKMYzRjGMo6f+JnxTOAXfmUik5jMb/zOFKYy
jenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAlq1jNGtayjvVsYCOb2MwWtrKN
7exgJ7vYzR72so/9/MEBDnKIwxzhKH9yjOOc4CSn+IvTnOEs5/ib81zgIpe4
zBX+4SrXuM4NbnKL29zhLve4zwMe8i+PeMwTnvKM57zgJa/4j9e84S3vCMQO
BGIRmzjE5QPiEZ8EJCQRH/IRiUlCUpKRnBSkJBWpSUNaPuYT0pGeDGTkUzKR
mSCykJVsZCcHOclFbvKQl3zkpwDBhFCQQhSmCEUpRnFKUJJSlKYMZSlHeSpQ
kUpUJpQqVKUa1alBTcIIJ4JIalGbKKKJoQ51qUd9GtCQRrwHpYWO3g==
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.011111111111111112`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJwNxFVgFQQAAMA3Qlq6ke6STkUJ6U6pwTbYYION7m5QKaU7DBqkG6RBSaVL
6VYapO7jLltoTMPooEAgUEgtYwUCrWhNMG1oSwihhNGO9oQTQQc6EkkUnehM
NDF0oSvd6E4PetKL3vShL/3ozwAGMojBDGEowxjOCEYyitGMYSzj+IZv+Y7x
TGAik5jM9/zAFKYyjenMYCazmM0c5jKP+SxgIYtYzI/8xM/8whKWsozlrGAl
q1jNGn5lLetYzwY2sonNbGEr29jODnayi938xh72so/9HOAghzjMEX7nD45y
jOOc4CSn+JO/OM0ZznKO81zgIpe4zBWu8jf/cI3r3OAmt7jNHe5yj/s84CGP
+Jf/eMwTnvKM57zgJa94zf+84S3veE8gdiAQRCxiE4e4fEQ84pOAhCQiMUn4
mKQkIzkpSEkqUpOGtKQjPRnISCY+ITNZyEo2spODnOQiN3nISz7yU4CCFKIw
n1KEohSjOCUoSSlKU4aylKM8n/E5FfiCL6lIJSpTha+oSjWqU4Oa1KI2dahL
PerTgIY0ojFNaEozvqY5LWhJK1oTTBvaEkIoYbSjPeFE0IGORBJFJzoTTQxd
6Eo3utODnvSiN33oSz/6M4CBDGIwQxjKMIYzgpGMYjQfAGsLmCE=
           
           "]]}}}], {}, {}, {{}, {}}}}, {
    PlotRange -> All, Frame -> True, FrameLabel -> {
       FormBox["\"Host generations\"", TraditionalForm], 
       FormBox["\"Host heterozygosity\"", TraditionalForm]}, Axes -> False, 
     DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
     PlotRange -> {{0., 301.}, {0, 0.5}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0., 301.}, {0, 0.5}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Neutral, \\!\\(\\*SubscriptBox[\\(m\\), \\(i\\)]\\)=0.05, V=0.2\"", 
       "\"Neutral, \\!\\(\\*SubscriptBox[\\(m\\), \\(i\\)]\\)=0.05, V=0.5\"", 
       "\"Coevolutionary, \\!\\(\\*SubscriptBox[\\(m\\), \\(i\\)]\\)=0.05, \
V=0.2\"", 
       "\"Coevolutionary, \\!\\(\\*SubscriptBox[\\(m\\), \\(i\\)]\\)=0.05, \
V=0.5\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Opacity[0.2], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Opacity[0.2], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Opacity[0.2], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Opacity[0.2], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.2`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.2`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
                 "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.861880365674733*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g12Legend", "=", 
  RowBox[{"GraphicsColumn", "[", 
   RowBox[{"{", 
    RowBox[{"g1Legend", ",", "g2Legend"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8618777288498497`*^9, 3.861877743802642*^9}, {
  3.86187783584581*^9, 3.8618778405645523`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     TemplateBox[{GraphicsBox[{{{}, 
          GraphicsComplexBox[CompressedData["
1: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
onunijvJ2lwovriusGE5ycCFOK6Ufe0Mkh248P6tkkzs0D3y+blw851ntX0v
yRwu6Gav1z7cQjKfCwUKfXtXlZKcyoUWyeBt7ftJzuJCsH+6hyub5GIuWD1r
NrrnQHIVF9Ibl/hP1ya5iQuvlYW/haqR3MmFM1N0Gn7KkzzABe1NeZWvZ5DM
4MEF0a0wf+Au+fw8mOXivVmjiWRFHpQ6q6uFFZOszQMhFZuJzFSSgQf7RWJ+
5sSS7MCDgd8N5mciSWbyoGvTyljjIJI5PNi0SuDvfztI5vOgMkDMwdOV5FQe
2AY8ZF82ITmLBxsDjhzQw1zMA2dT4eZlyiRX8eBisNmlg7NIbuLB/E+qZcoT
Sf7/eJaAc9ZAykfqWXWWS9fMfkg9q3n01C7VUupZFWNhdwePUc86ISscu4BP
PSteKHCvSjj1LEef6BKWE/Us0y9OsZ8NqWd5qPSZjSlSz9rnZ5lVKYR5PlyR
lh4W6KOexZz4bnDWc+pZR2smhtrdop4ltYVz9s556lkb/TdmHkqnnrV89HPs
xU3Usw4LRIaa+VHPMl40p9nNgnrWjwmLwuboUs9qsVApSP3Pt/TA5U3Jli8/
qWfV9QqXTe2gnvVCbo1SdzX1LPvOHSODOdSzHrYeuVKTRj3L2tz/T/Im6lni
MSbPnntTzxq/b2Q2YkQ9ixex0aRtHmZj2GS+yNhrOmaApOjGoxF/qGf1fUms
U++inlU3d+jb0FPqWZuzbaIm1FPPWjUz2ZNfSj0r+aRxVEc29Sy5uh+C5Tup
Z7W9npGhwqWedaN6ybVRT+pZpxXMcrdaUM9iGpQo//jPu9aAp9GeA4+m47sZ
XHBssH3TTz3LbUX7Bb9W6lmtTieb1K9Tz7Iue2taf4F6VozqwdawE9Szjs/9
ITSdTz1LOyXgvUEo9SzD+kmB2i7Us9qON/2W0MV3K0iX2Sh0cDa+W4ObrKaE
1FR8t4YvxosVzvyhnjUlTmlJ3DvqWXvMOg+MPqSe5ZurbPLkBvWs49867sqe
p571O0fVRTONeha/XfrmzC3Us6pOHmg3DaSe9UFcN+WwJb47QNWUXwv9V5AM
DrD8yLd1OnPx+x1g5qxrzS4zSK5yAEOfiS7ThqlnFR/1ueXaTz1L9+vWXrEu
6lkKORJTu15Rz5LY1iPl30Q965D765a8cupZ69RGAuPyqWctXL/jUt8h6lkh
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
IUO3YcGfbeh5XLg2WJh4iYmexwWhoWOVuwzQ87ggvkhakSePnscFq8a6HM0Z
6HlcuHezdSB1hPgXnwuRrMRhvTaSU7lwuGL4xbHLJGdx4YyUb8mfDPQ8Llxk
nBGXiUHP40L1+k4hTVf0PC6UftSbaGKLnseFl6Me/RWm6HlcCFb9KLBIHz2P
B+Ijd/vsZ6Ln8WBeS4/n00HiXYo8KM+sa3/WSrI2Dz7meL8euUwy8CBzkWpN
wymSHXjAMSiMOnkQPY8Hm7o7fTz2oufxIE9h4qKmJPQ8HgiXubFmb0XP44Hv
ysDKb2HoeTx4GmbulI25mAd65tIlKZboeTyojfjQ4AvoeTx4oXlWXUYdve7/
9ay+TaNv7buoZ+VnBqkH1FHPqthltf3HOepZi5tj2vgp1LNc0z+pRLCpZ3FC
FhwVcqOe9UjVt+XNSupZ0B09+FSFelZJccyrlAnUs3p3Gp8ceU/3WXuERuXj
71HPUlkkMlmulHrWpPgzg9MOU8963y48+DyOetbvKk2z8iDqWQ2ue/Z9XUM9
y1QyO2WGOvWstrhMyT4x6lmuB8S+vR1CH1oKToeCGS1P6T5Lbcnp12/KqGdd
fS2wSewo9awu+/mqz2OoZxms4JYYu1PPCgm+0dllSj0rzlVibrAa9azUi3kd
vH+oZzkkq2ut7kbvMQIZ/a3L+xvoPksm+fajaVfoPsvPI1u3Kpt6lm/SsYeP
dlLPMpouzsmKpp51t4fhnxBAPWvOc+2BU7bUs96s2XdgjgH1rM+dwz1GctSz
1H2Opx2cRD3L3iT8t3Ufeo8pVAuaV+17jh60BnqHd055WEL3WS9evkgUPUH3
WTlnLmRIRVPPSnOJXf3OnXrW2Nz9W1mG1LN2zQrx6lWnnlUiXebUIUM9a4Vh
7TW7YfQeS/BsvzE8qwN9xxISltSZGt7HdytQuL/Jctc5us8SmzVB2SWF7rO2
rx53q42j+yy7K/2VXRzqWRcPxrxLdKSelT/7aaiFPvWsVWH9S6bOp561ok/t
le106lkD1+vXCqMv8e0gf9/6cX4Heos9jItoPxipw3d7sKoYH3YooPssCT25
xC2ZdJ/162Tuscp4us8qSC6YcYlN91nncgaO3XSintWr8yxcyZJ61gtxsVE5
Q+pZL+2da2R1qWcdO5gmyFWlnvXzgbqRkwj1rOCqp+ZPR9FTHCH/9u3YEfSh
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
           
           "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
             
              EdgeForm[], 
              Directive[
               RGBColor[0, 0, 1], 
               Opacity[0.1]], 
              GraphicsGroupBox[{
                PolygonBox[CompressedData["
1:eJwl1UO0GAYQBdA0P2ls27Zt2/aP+WObTdrYtu02tm23sW22N6eLe86sZvXe
TJLAoKodggcLFuwX6hrqUZ8GNKQRjWlCIE1pRnNa0JJWtKYNbWlHe34uDqIj
nehMF7rSje70oCe96E0f+tKP/gxgIIMYzBCGMozhjOA3RjKK3/mD0YxhLOMY
zwQmMonJTGEq05jODGYyi9nMYS7zmM8CFrKIxSxhKctYzgpWsorVrGEt61jP
Bjayic1sYSt/8hfb2M4OdrKL3exhL/vYzwEOcojDHOEoxzjOCU5yitOc4Szn
OM8FLnKJy1zhKte4zg1ucou/+Yfb3OEu97jPAx7yiMc84SnPeM4LXvKK17zh
Le94zwc+8onPfOEr3/jOD/4lWIB8EpwAQhCSXwlFaMIQlnCEJwIRiURkohCV
aEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVs
ZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpU
pwY1qUVt6lCXetSnAQ1pRGOaEEhTmtGcFrSkFa1pQ1va0Z4OBNGRTnSmC13p
Rnd60JNe9KYPfelHfwYwkEEMZghDGcZwRgT8f7fqUJta1KQG1alGVapQmUpU
pALlKUdZylCaUpSkBMUpRlGKUJhCFKQA+clHXvKQm1zkJAfZyUZWspCZTGQk
A+lJR1rSkJpUpCQFyUlGUpKQmEQkJAHxiUdc4hCbWMQkBtGJRlSiEJlIRCQC
4QlHWMIQmlD8SkhCEEBwfvnZw5999Ch+8J1vfOULn/nERz7wnne85Q2vecVL
XvCcZzzlCY95xEMecJ973OUOt/mHv7nFTW5wnWtc5QqXucRFLnCec5zlDKc5
xUlOcJxjHOUIhznEQQ6wn33sZQ+72cVOdrCdbfzFn2xlC5vZxEY2sJ51rGUN
q1nFSlawnGUsZQmLWcRCFjCfecxlDrOZxUxmMJ1pTGUKk5nERCYwnnGMZQyj
+YPfGcVIfmMEwxnGUIYwmEEMZAD96Udf+tCbXvSkB93pRle60JlOdCSIDrSn
HW1pQ2ta0ZIWNKcZTQmkCY1pREMaUJ961KUOtalFTWpQnWpUpQqVqURFKlCe
cpSlDKUpRUlKUJxiFKUIhSlEQQqQn3zkJQ+5yUVOcpCdbGQlC5nJREb+A402
JVw=
                 "]]}]}, {}, {}}, {{}, {}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Opacity[0.2], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJwl1FO4EAYYBuBzsm2dTtYyl81l17Jt27Zbts0t2225LZurtrDF9zxdvN9/
+918f3CTjlU7BAYEBPwgQm4oQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jE
Iz4JSEgiEpOEpCQjiOQEk4KUpCI1aUhLOtKTgYxkCulMZrKQlWxkJwc5yUVu
8pCXfPxIfgpQkEIUpghFKUZxSlCSUpSmDGUpR3kq8BMVqURlqlCValSnBjWp
RW3qUJd61OdnGtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCT
XvSmD33pR38GMJBBDGYIQxnGcEYwklGMZgxjGcd4JjCRSUxmClOZxnRmMJNZ
zGYOc/mFecxnAQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZ
xW5+5Tf2sJd97OcABznEYY5wlGMc5wQnOcVpznCWc5znd/7gAhe5xGWucJVr
XOdP/uIGN7nFbe5wl3vc5wEPecRjnvCUZzznBS/5m1e85g3/8C9vecd7PvAf
//ORT3zmC18JGX8goQhNGMISjvBEICKRiEwUohKN6MQgJrGITRziEo/4JCAh
iUhMEpKSjCCSE0wKUpKK1KQhLelITwYykinw+8/6BlnShZs=
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Opacity[0.2], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJwV0FVjFgQAQNGPkFK6lBBG90Z3j1zANrpDkBIkJUQpgw4FBZTu7u5GUkpC
UrqlQer4cO4PuEGtukR3jhUIBPJLAYIJoSCFKEwRilKM4pSgJKUoTRnKUo7y
VKAilahMKFWoSjWqU4OahBFOBJHUojZRRBNDHepSj/o0oCGNaEwTmtKM5rSg
Ja1ozWe0oS2f0472dKAjnfiC/0d04Uu60o3u9KAnvfiK3vShL/34mv58w7cM
YCCDGMwQvuN7fuBHhjKM4YxgJKMYzRjGMo6f+JnxTOAXfmUik5jMb/zOFKYy
jenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAlq1jNGtayjvVsYCOb2MwWtrKN
7exgJ7vYzR72so/9/MEBDnKIwxzhKH9yjOOc4CSn+IvTnOEs5/ib81zgIpe4
zBX+4SrXuM4NbnKL29zhLve4zwMe8i+PeMwTnvKM57zgJa/4j9e84S3vCMQO
BGIRmzjE5QPiEZ8EJCQRH/IRiUlCUpKRnBSkJBWpSUNaPuYT0pGeDGTkUzKR
mSCykJVsZCcHOclFbvKQl3zkpwDBhFCQQhSmCEUpRnFKUJJSlKYMZSlHeSpQ
kUpUJpQqVKUa1alBTcIIJ4JIalGbKKKJoQ51qUd9GtCQRrwHpYWO3g==
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Opacity[0.2], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJwNxFVgFQQAAMA3Qlq6ke6STkUJ6U6pwTbYYION7m5QKaU7DBqkG6RBSaVL
6VYapO7jLltoTMPooEAgUEgtYwUCrWhNMG1oSwihhNGO9oQTQQc6EkkUnehM
NDF0oSvd6E4PetKL3vShL/3ozwAGMojBDGEowxjOCEYyitGMYSzj+IZv+Y7x
TGAik5jM9/zAFKYyjenMYCazmM0c5jKP+SxgIYtYzI/8xM/8whKWsozlrGAl
q1jNGn5lLetYzwY2sonNbGEr29jODnayi938xh72so/9HOAghzjMEX7nD45y
jOOc4CSn+JO/OM0ZznKO81zgIpe4zBWu8jf/cI3r3OAmt7jNHe5yj/s84CGP
+Jf/eMwTnvKM57zgJa94zf+84S3veE8gdiAQRCxiE4e4fEQ84pOAhCQiMUn4
mKQkIzkpSEkqUpOGtKQjPRnISCY+ITNZyEo2spODnOQiN3nISz7yU4CCFKIw
n1KEohSjOCUoSSlKU4aylKM8n/E5FfiCL6lIJSpTha+oSjWqU4Oa1KI2dahL
PerTgIY0ojFNaEozvqY5LWhJK1oTTBvaEkIoYbSjPeFE0IGORBJFJzoTTQxd
6Eo3utODnvSiN33oSz/6M4CBDGIwQxjKMIYzgpGMYjQfAGsLmCE=
               
               "]]}}}], {}, {}, {{}, {}}}, {{}, 
          GraphicsComplexBox[CompressedData["
1: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
94kx/Xdy/vss6koxxN+F22fMoVb++74jgqW6VYn/9Scxlp0r/3Uli5onAV/3
xRb309TaEuwrcDnzzYeaL4Gq/8dayUJqQwk2PK9X/8ucGhLIznmWrZxN7SBB
9tLqof1vr6b3S/A6u8x5qxe1WIJCt6rVHzpRyyRYOu+AkfFjGb1fgtVNU31j
4qnlEpxOqm2ADnWeBK/iUypcTyTQ+yWYHFXxe3N36koJxLe6+xqprKL3S/Do
zltJl7Z4er8EXoY9BkmbV9D7pRhhPDErZSG1thTTVQZEaFbG0fulmHBHd9fY
V8vp/VLkaK2T6ptTQwqbkuG7d7jG0vulmPvtnmZzL2qBFLpVnep4Ccvo/VKI
VTuVnLellknhl/nXk/Jx1OlSzPglmnH7xVJ6vxR5hmobvZXUeVI89fqhn7yR
WiGFqWrZSXM76kop3ln7HPoppf4/PGvCME+Tx685z/p7tde1hArOs4wF9mM2
FXCetdV2G39FNudZ9RuT639s4Dzr/JbM3YYrOc/KvPlx5MJozrMq+nlbXhRz
nnUm3iFkSgTnWfcK0trEgZxn/ez0sO8EIedZF4alOxxbxHnW0NNXqy1tOc8y
UW8Zf3QK51ltPR03XdLjPOtskVehfhfWk7Cm5/q3899wnuVv3nvI6XLOs56L
/tE1OcJ51vD9iZ+K13Oe5esyaWmWmPOsBf7tWy87cJ5let+5PgGcZ/2ZZ7vq
mj7nWf7JJ5aX9GI9HT9jhX0dVVmbo3Zy6Yrr3zjP2vzOYpntG86zDtblLKpR
cp7F98qYureK86x1D98PmVjOedaFDWqbIws5z/rSVp8ScojzrLjosqXmWznP
mr/A++C9eM6z8sp0jlpHcJ6V1xo3QcOZ8yzvEcm6BlM5z9Lla01yGcHOrdCg
Iru1/Q/nWfz4n6OfNHGetUN5KDn6OudZD+uujhySz3nWI72c296bOc/Ks0rJ
zQjmPEtYeN3vnD3nWc/FtY07R7JzW9y8e+HJu9+cZ+07FzxX8z7nWTf32/e2
zOM8y8jt4KgnKZxn3XzWMM1fyHlWRWasmtpUdj4fW8JSglN+c56VM3ytduwj
zrMyvmfOGiTnPOvn6n4xPaI5z2pctax4oSU7t0d1TvP+B4PZuT32dVNctmri
PKv018fGhPOcZy111jv0MInzrHlfZ9gZWlPDAQ07TDZPGsi+74BfmWnC3GbO
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
S9FlR//6K1OoK6XY1zFDZZR7mMX/AyIlNiI=
           
           "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
             
              EdgeForm[], 
              Directive[
               RGBColor[0, 0, 1], 
               Opacity[0.2]], 
              GraphicsGroupBox[{
                PolygonBox[CompressedData["
1:eJwl1UO0GAYQBdA0P2ls27Zt2/aP+WObTdrYtu02tm23sW22N6eLe86sZvXe
TJLAoKodggcLFuwX6hrqUZ8GNKQRjWlCIE1pRnNa0JJWtKYNbWlHe34uDqIj
nehMF7rSje70oCe96E0f+tKP/gxgIIMYzBCGMozhjOA3RjKK3/mD0YxhLOMY
zwQmMonJTGEq05jODGYyi9nMYS7zmM8CFrKIxSxhKctYzgpWsorVrGEt61jP
Bjayic1sYSt/8hfb2M4OdrKL3exhL/vYzwEOcojDHOEoxzjOCU5yitOc4Szn
OM8FLnKJy1zhKte4zg1ucou/+Yfb3OEu97jPAx7yiMc84SnPeM4LXvKK17zh
Le94zwc+8onPfOEr3/jOD/4lWIB8EpwAQhCSXwlFaMIQlnCEJwIRiURkohCV
aEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVs
ZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpU
pwY1qUVt6lCXetSnAQ1pRGOaEEhTmtGcFrSkFa1pQ1va0Z4OBNGRTnSmC13p
Rnd60JNe9KYPfelHfwYwkEEMZghDGcZwRgT8f7fqUJta1KQG1alGVapQmUpU
pALlKUdZylCaUpSkBMUpRlGKUJhCFKQA+clHXvKQm1zkJAfZyUZWspCZTGQk
A+lJR1rSkJpUpCQFyUlGUpKQmEQkJAHxiUdc4hCbWMQkBtGJRlSiEJlIRCQC
4QlHWMIQmlD8SkhCEEBwfvnZw5999Ch+8J1vfOULn/nERz7wnne85Q2vecVL
XvCcZzzlCY95xEMecJ973OUOt/mHv7nFTW5wnWtc5QqXucRFLnCec5zlDKc5
xUlOcJxjHOUIhznEQQ6wn33sZQ+72cVOdrCdbfzFn2xlC5vZxEY2sJ51rGUN
q1nFSlawnGUsZQmLWcRCFjCfecxlDrOZxUxmMJ1pTGUKk5nERCYwnnGMZQyj
+YPfGcVIfmMEwxnGUIYwmEEMZAD96Udf+tCbXvSkB93pRle60JlOdCSIDrSn
HW1pQ2ta0ZIWNKcZTQmkCY1pREMaUJ961KUOtalFTWpQnWpUpQqVqURFKlCe
cpSlDKUpRUlKUJxiFKUIhSlEQQqQn3zkJQ+5yUVOcpCdbGQlC5nJREb+A402
JVw=
                 "]]}]}, {}, {}}, {{}, {}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.008333333333333333], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Opacity[0.4]], 
              LineBox[CompressedData["
1:eJwl1FO4EAYYBuBzsm2dTtYyl81l17Jt27Zbts0t2225LZurtrDF9zxdvN9/
+918f3CTjlU7BAYEBPwgQm4oQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jE
Iz4JSEgiEpOEpCQjiOQEk4KUpCI1aUhLOtKTgYxkCulMZrKQlWxkJwc5yUVu
8pCXfPxIfgpQkEIUpghFKUZxSlCSUpSmDGUpR3kq8BMVqURlqlCValSnBjWp
RW3qUJd61OdnGtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCT
XvSmD33pR38GMJBBDGYIQxnGcEYwklGMZgxjGcd4JjCRSUxmClOZxnRmMJNZ
zGYOc/mFecxnAQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZ
xW5+5Tf2sJd97OcABznEYY5wlGMc5wQnOcVpznCWc5znd/7gAhe5xGWucJVr
XOdP/uIGN7nFbe5wl3vc5wEPecRjnvCUZzznBS/5m1e85g3/8C9vecd7PvAf
//ORT3zmC18JGX8goQhNGMISjvBEICKRiEwUohKN6MQgJrGITRziEo/4JCAh
iUhMEpKSjCCSE0wKUpKK1KQhLelITwYykinw+8/6BlnShZs=
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.008333333333333333], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Opacity[0.4]], 
              LineBox[CompressedData["
1:eJwV0FVjFgQAQNGPkFK6lBBG90Z3j1zANrpDkBIkJUQpgw4FBZTu7u5GUkpC
UrqlQer4cO4PuEGtukR3jhUIBPJLAYIJoSCFKEwRilKM4pSgJKUoTRnKUo7y
VKAilahMKFWoSjWqU4OahBFOBJHUojZRRBNDHepSj/o0oCGNaEwTmtKM5rSg
Ja1ozWe0oS2f0472dKAjnfiC/0d04Uu60o3u9KAnvfiK3vShL/34mv58w7cM
YCCDGMwQvuN7fuBHhjKM4YxgJKMYzRjGMo6f+JnxTOAXfmUik5jMb/zOFKYy
jenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAlq1jNGtayjvVsYCOb2MwWtrKN
7exgJ7vYzR72so/9/MEBDnKIwxzhKH9yjOOc4CSn+IvTnOEs5/ib81zgIpe4
zBX+4SrXuM4NbnKL29zhLve4zwMe8i+PeMwTnvKM57zgJa/4j9e84S3vCMQO
BGIRmzjE5QPiEZ8EJCQRH/IRiUlCUpKRnBSkJBWpSUNaPuYT0pGeDGTkUzKR
mSCykJVsZCcHOclFbvKQl3zkpwDBhFCQQhSmCEUpRnFKUJJSlKYMZSlHeSpQ
kUpUJpQqVKUa1alBTcIIJ4JIalGbKKKJoQ51qUd9GtCQRrwHpYWO3g==
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[0.008333333333333333], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Opacity[0.4]], 
              LineBox[CompressedData["
1:eJwNxFVgFQQAAMA3Qlq6ke6STkUJ6U6pwTbYYION7m5QKaU7DBqkG6RBSaVL
6VYapO7jLltoTMPooEAgUEgtYwUCrWhNMG1oSwihhNGO9oQTQQc6EkkUnehM
NDF0oSvd6E4PetKL3vShL/3ozwAGMojBDGEowxjOCEYyitGMYSzj+IZv+Y7x
TGAik5jM9/zAFKYyjenMYCazmM0c5jKP+SxgIYtYzI/8xM/8whKWsozlrGAl
q1jNGn5lLetYzwY2sonNbGEr29jODnayi938xh72so/9HOAghzjMEX7nD45y
jOOc4CSn+JO/OM0ZznKO81zgIpe4zBWu8jf/cI3r3OAmt7jNHe5yj/s84CGP
+Jf/eMwTnvKM57zgJa94zf+84S3veE8gdiAQRCxiE4e4fEQ84pOAhCQiMUn4
mKQkIzkpSEkqUpOGtKQjPRnISCY+ITNZyEo2spODnOQiN3nISz7yU4CCFKIw
n1KEohSjOCUoSSlKU4aylKM8n/E5FfiCL6lIJSpTha+oSjWqU4Oa1KI2dahL
PerTgIY0ojFNaEozvqY5LWhJK1oTTBvaEkIoYbSjPeFE0IGORBJFJzoTTQxd
6Eo3utODnvSiN33oSz/6M4CBDGIwQxjKMIYzgpGMYjQfAGsLmCE=
               
               "]]}}}], {}, {}, {{}, {}}}, {{}, 
          GraphicsComplexBox[CompressedData["
1:eJxt2mlYjH/49/GxJXtCZB1LlrIUiWx9tEgR7dqbmmaqaZsZZCumkhZbEmXL
ZCtlSckeI9otKRSKSUTWRFny4+++O6//9eC+PXG8j+9855yrZ9frOEd7h9gK
OnM4nJguHM7/+b/jX7NRx/9K+p+DzVH7M9+/ekGtipUnXHe2lTCthpzMm/e2
nmZ6IHrqfi56mMz0EHi0byksiGZ6OBryRuY4bmCaC/XRA8O9Q5keA6OvZy7E
Spkeh/inWWY9hUyPx5jhEm8PZ6Ynoni/f81Oc6a1cTnw7NTUaUxPxuPSfYur
ezM9FW9S7K4KPjyn1sXJSapT7hUyrYfBfoJzk9OYno5aq7aaj6uZngH+1YRB
/rZM66NiT/2H1OlMz4RDtYpH8GCmDXDsZLvunB5Mz8LLhn59hBymZyNm/Inm
Wa111IZ45d/+xfId03MwNnC1+sS3TM+FcJfFtbM1TM/DtMW1jWtuMz0fUtvo
lXfSmV6ArxN3N+puYdoIr+ZkC945MA0cWhOplz6NWga8mHDjBHow5wsRlTOi
0aqhls4XYkHE0DHLS6g5xgixVnhJTzDnxljSdqk4Mpw5N8GsFleft57MuQnW
DzQxmaXHnJsiZemzB+OHMeemeJDTrtnU8ozOzbDr08ek1EpqmRlmjd5e2/UE
c74I+w4VZy+SMOeLYKn67ZGLNnNujm0q0+7ZtT6lc3NErx2gXH6MmrMY+dyI
lTY2zPliPM9Yo2umwpxb4OdOlyGGF5/QuQXSNlnfeCum5ljCac/+XPEE5twS
p5SPqh89qqHzJdjqKV1+M5patgSG1WufHJrPnC/Fp6s1vnqfq+l8KeruCrhz
T1NzrJDgNkPjmQ9zboW9klk5X4Yy58uwqyWvwfzuYzpfhuikIUNehFJzlqP7
5es3zScx5/86Z0tvzfJHdG6NcbdSX2lKqWGNmM7Ngpl9qWXWELh+1G0+/rCj
FdbY/Xv8itF21Bwb7Dp/s9KnvYru26B0bJxpQwq1zAaeO9dtUp1LrbDBwwcj
B9XUVNJ9W2xUvJhTtZoattB1/9A5XYVaZotjva4Jp2Y8oPu2WHvap+mzOTXH
Ds0nDLupN1XQfTu8DZ3ksWwvtcwOuX21jHjzqBV2+BTVcvzG7ft03x7L0has
PDaQGvaY2ntN4sg19+i+PTQue/8or7tL9+1hqZ7NGTKRmuOAaYe/X10quUP3
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

           
           "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
             
              EdgeForm[], 
              Directive[
               RGBColor[0, 0, 1], 
               Opacity[0.2]], 
              GraphicsGroupBox[{
                PolygonBox[CompressedData["
1:eJwl1UO0GAYQBdA0P2ls27Zt2/aP+WObTdrYtu02tm23sW22N6eLe86sZvXe
TJLAoKodggcLFuwX6hrqUZ8GNKQRjWlCIE1pRnNa0JJWtKYNbWlHe34uDqIj
nehMF7rSje70oCe96E0f+tKP/gxgIIMYzBCGMozhjOA3RjKK3/mD0YxhLOMY
zwQmMonJTGEq05jODGYyi9nMYS7zmM8CFrKIxSxhKctYzgpWsorVrGEt61jP
Bjayic1sYSt/8hfb2M4OdrKL3exhL/vYzwEOcojDHOEoxzjOCU5yitOc4Szn
OM8FLnKJy1zhKte4zg1ucou/+Yfb3OEu97jPAx7yiMc84SnPeM4LXvKK17zh
Le94zwc+8onPfOEr3/jOD/4lWIB8EpwAQhCSXwlFaMIQlnCEJwIRiURkohCV
aEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVs
ZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpU
pwY1qUVt6lCXetSnAQ1pRGOaEEhTmtGcFrSkFa1pQ1va0Z4OBNGRTnSmC13p
Rnd60JNe9KYPfelHfwYwkEEMZghDGcZwRgT8f7fqUJta1KQG1alGVapQmUpU
pALlKUdZylCaUpSkBMUpRlGKUJhCFKQA+clHXvKQm1zkJAfZyUZWspCZTGQk
A+lJR1rSkJpUpCQFyUlGUpKQmEQkJAHxiUdc4hCbWMQkBtGJRlSiEJlIRCQC
4QlHWMIQmlD8SkhCEEBwfvnZw5999Ch+8J1vfOULn/nERz7wnne85Q2vecVL
XvCcZzzlCY95xEMecJ973OUOt/mHv7nFTW5wnWtc5QqXucRFLnCec5zlDKc5
xUlOcJxjHOUIhznEQQ6wn33sZQ+72cVOdrCdbfzFn2xlC5vZxEY2sJ51rGUN
q1nFSlawnGUsZQmLWcRCFjCfecxlDrOZxUxmMJ1pTGUKk5nERCYwnnGMZQyj
+YPfGcVIfmMEwxnGUIYwmEEMZAD96Udf+tCbXvSkB93pRle60JlOdCSIDrSn
HW1pQ2ta0ZIWNKcZTQmkCY1pREMaUJ961KUOtalFTWpQnWpUpQqVqURFKlCe
cpSlDKUpRUlKUJxiFKUIhSlEQQqQn3zkJQ+5yUVOcpCdbGQlC5nJREb+A402
JVw=
                 "]]}]}, {}, {}}, {{}, {}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.008333333333333333], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1]], 
              LineBox[CompressedData["
1:eJwl1FO4EAYYBuBzsm2dTtYyl81l17Jt27Zbts0t2225LZurtrDF9zxdvN9/
+918f3CTjlU7BAYEBPwgQm4oQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jE
Iz4JSEgiEpOEpCQjiOQEk4KUpCI1aUhLOtKTgYxkCulMZrKQlWxkJwc5yUVu
8pCXfPxIfgpQkEIUpghFKUZxSlCSUpSmDGUpR3kq8BMVqURlqlCValSnBjWp
RW3qUJd61OdnGtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCT
XvSmD33pR38GMJBBDGYIQxnGcEYwklGMZgxjGcd4JjCRSUxmClOZxnRmMJNZ
zGYOc/mFecxnAQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZ
xW5+5Tf2sJd97OcABznEYY5wlGMc5wQnOcVpznCWc5znd/7gAhe5xGWucJVr
XOdP/uIGN7nFbe5wl3vc5wEPecRjnvCUZzznBS/5m1e85g3/8C9vecd7PvAf
//ORT3zmC18JGX8goQhNGMISjvBEICKRiEwUohKN6MQgJrGITRziEo/4JCAh
iUhMEpKSjCCSE0wKUpKK1KQhLelITwYykinw+8/6BlnShZs=
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.008333333333333333], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1]], 
              LineBox[CompressedData["
1:eJwV0FVjFgQAQNGPkFK6lBBG90Z3j1zANrpDkBIkJUQpgw4FBZTu7u5GUkpC
UrqlQer4cO4PuEGtukR3jhUIBPJLAYIJoSCFKEwRilKM4pSgJKUoTRnKUo7y
VKAilahMKFWoSjWqU4OahBFOBJHUojZRRBNDHepSj/o0oCGNaEwTmtKM5rSg
Ja1ozWe0oS2f0472dKAjnfiC/0d04Uu60o3u9KAnvfiK3vShL/34mv58w7cM
YCCDGMwQvuN7fuBHhjKM4YxgJKMYzRjGMo6f+JnxTOAXfmUik5jMb/zOFKYy
jenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAlq1jNGtayjvVsYCOb2MwWtrKN
7exgJ7vYzR72so/9/MEBDnKIwxzhKH9yjOOc4CSn+IvTnOEs5/ib81zgIpe4
zBX+4SrXuM4NbnKL29zhLve4zwMe8i+PeMwTnvKM57zgJa/4j9e84S3vCMQO
BGIRmzjE5QPiEZ8EJCQRH/IRiUlCUpKRnBSkJBWpSUNaPuYT0pGeDGTkUzKR
mSCykJVsZCcHOclFbvKQl3zkpwDBhFCQQhSmCEUpRnFKUJJSlKYMZSlHeSpQ
kUpUJpQqVKUa1alBTcIIJ4JIalGbKKKJoQ51qUd9GtCQRrwHpYWO3g==
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[0.008333333333333333], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1]], 
              LineBox[CompressedData["
1:eJwNxFVgFQQAAMA3Qlq6ke6STkUJ6U6pwTbYYION7m5QKaU7DBqkG6RBSaVL
6VYapO7jLltoTMPooEAgUEgtYwUCrWhNMG1oSwihhNGO9oQTQQc6EkkUnehM
NDF0oSvd6E4PetKL3vShL/3ozwAGMojBDGEowxjOCEYyitGMYSzj+IZv+Y7x
TGAik5jM9/zAFKYyjenMYCazmM0c5jKP+SxgIYtYzI/8xM/8whKWsozlrGAl
q1jNGn5lLetYzwY2sonNbGEr29jODnayi938xh72so/9HOAghzjMEX7nD45y
jOOc4CSn+JO/OM0ZznKO81zgIpe4zBWu8jf/cI3r3OAmt7jNHe5yj/s84CGP
+Jf/eMwTnvKM57zgJa94zf+84S3veE8gdiAQRCxiE4e4fEQ84pOAhCQiMUn4
mKQkIzkpSEkqUpOGtKQjPRnISCY+ITNZyEo2spODnOQiN3nISz7yU4CCFKIw
n1KEohSjOCUoSSlKU4aylKM8n/E5FfiCL6lIJSpTha+oSjWqU4Oa1KI2dahL
PerTgIY0ojFNaEozvqY5LWhJK1oTTBvaEkIoYbSjPeFE0IGORBJFJzoTTQxd
6Eo3utODnvSiN33oSz/6M4CBDGIwQxjKMIYzgpGMYjQfAGsLmCE=
               
               "]]}}}], {}, {}, {{}, {}}}}, {
        PlotRange -> {0, 0.5}, Frame -> True, FrameLabel -> {
           FormBox["\"Host generations\"", TraditionalForm], 
           FormBox["\"Host heterozygosity\"", TraditionalForm]}, Axes -> 
         False, DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
         PlotRange -> {{0., 301.}, {0, 0.5}}, PlotRangeClipping -> True, 
         ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, PlotRange -> {{0., 301.}, {0, 0.5}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
          "\"Neutral, \\!\\(\\*SubscriptBox[\\(m\\), \\(i\\)]\\)=0.05\"", 
           "\"Coevolutionary, \\!\\(\\*SubscriptBox[\\(m\\), \
\\(i\\)]\\)=0.05, S=0.65\"", 
           "\"Coevolutionary, \\!\\(\\*SubscriptBox[\\(m\\), \
\\(i\\)]\\)=0.05, S=0.8\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Opacity[0.2], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Opacity[0.2], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Opacity[0.4]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Opacity[0.4]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Opacity", "[", "0.2`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Opacity", "[", "0.4`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}]}], "]"}]& ), Editable -> 
          True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {189., -192.}, {Center, Center}, {360., 360.}], 
    InsetBox[
     TemplateBox[{GraphicsBox[{{{}, 
          GraphicsComplexBox[CompressedData["
1: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
eZNWkKwrhOYJl9+KLUkGIUzI7V7PnUeykxByiwX2R5RJZgrhrXOv9Jo/d8n3
F0Kh350Hi9+RLBZCfKDPsq6XJB8QAjdlUMUQc4YQDKWqEtwbSS4SwoKzsUrT
bpBcLYQ1gTNWsFNIbhKCeqr2+c+HSe4UwvMXmhfaIkkeEMK567aa5wJJZohg
hMG6C4+WkiwrgvUl3Hly2iSriqBw81GdCE2SdUUQyLQa06xOMohAeN1RnjmR
ZCcR1PdcWFz77Q75/iKYlDjG9P07kgUiMLNYZipxi2SxCH7428rOLSL5gAja
eGC0Lo3kDBHMKFiQYp9AcpEIev1ZewwEJFeLQGu8SWapB8lNIigP+3NMC/P/
41kjKrMtxvZSz1Iv0vleVk89a8djfvHii9SzxN4TZM4dp57lqZpz+tg26lnd
5j41PyOoZ0mVXVU95kY9Kyxmy5c7ptSzLq7oNjFXp57Fsd3+SVIa8xzYofZ0
xozP1LPqTX+tPf+YelbfD50dxyupZzF3SxpYnaSe9eNGwoBJHPUsf+vbcxW4
1LOiJi9YvtmDetZHjfu+UyyoZ70Lbm/00qCepSFq6fCUw2wIm1XFh+1+U89q
HrwjPb2XelZ9Useuhc3Us7p0OwpeVVDPSq9tEE/OpZ71++GEtou7qWd17kmb
NUVIPetaR5E5y4V6liIj9273EupZWZtO3EycjRlgf/nr+WmyJIsBqn6zOHG/
qGeNv69V0v+Meta+Hauygm5Qz0oM3xXYk0s962PhjVtp6dSzlBLd9h2Kpp61
QW/U191rqGdVnBl3M9yeelbCn3sm102oZ5WtOv6sYC6+W0MmxyvHfTK+28DY
wUc23UPUs5qSG+VV3lPPss7y2KnZQj3rS8PZ+IZL1LNOjYpmhGZSz7r1nul6
5gD1rPUPb0r5xlDPklNQl7rAp571fLmgNsudetbecI9KNyt8t4P3R8J0x+vi
ux08nDWxc8wMfF8F0YnVWyT/62GrYOr6mPvJY/DdHm7P2Nqx7Bv1rMRYZ876
TupZR9KnZnreoZ7F8dqZLllMPeug0etRuunUs7bNzCxdLaaedSxVRV+NTT3r
3Pq3XC9v6lkyE/gF5U7Us9ydT/t8A7x3BpD4k1imhvfOUHO4aqyNHN47g0QR
3+w6A++dgXXGq+tsN/WsMQqfbz1uoZ4lb9LY8ek29SzpmCgNp8vUszTLzxqP
yqSe1dkQfUs2hXqW0s787I9bqWe9Opjbw2VRz/qTtzLVzRPvXSFHvuXqDHO8
dwUX4aq5UVp47woeZd98RivivStMmjCh/uUovHeDb5+ra9gfqWcpJgm/tTyh
nlXIPGSQeId61ss1FcXzblPPEjRyXnkWUM/6JON4clI29azZS8dUVqVQzwq1
2llgGE0969AOH9FdFvWsq1uGJeQ98d4DnnxZO+v1Srz3gPNuaxKvWeG9J6yb
JZlohV4GnvCYv1dZRwPvPeH81q3K3yXx3hPGPq7fp/KHepaxfY7hkxfUs5I1
p9i63aWe5Wh0retvPvWskws+DuzIpp5VlNJ9sDGFepb9Kc+tjZupZ501fmve
w6ee9Tnznp2UF957Q7TOg3kznPHeG4KOSaaEAN57w8XfzUeatfDeG970HK+x
mYH3PmCvM+ghrYD3PmC169no2mHqWe38+Asj+6ln5f2OevGkkXpWl8Ua122X
qGdF+ccsm5VDPeuZubVEaSr1LJPzSs8WJVLPYl9M0uwTUc+KlAnaNCoC7/1A
p+Tn6xwvvPcDWem48ERHvPeHY1k3LPsM8N4fVvacM5Wciff/5oT5o5LH4L0/
LJpo7jAF/YzBBLUO5ZzwfupZs1u4BhEvqWe5XzY+EH2PelaKKHzDs1LqWdOP
WHzaVUg9y7cx84HtEepZ1XVn/Ho3U8/6Ibtc5XEYeloAWNek+0i4Yn8AxKvP
vllqjf0BUDZO43T1MuwPgFuaLUtiDLA/ADruN55Mnov9ASDdE5//WgH7AyC2
LyLMb5h6lkOVvOybj9Szioue32t7Qj2LabOpobuOelbu60X6+pepZy0890H+
dBb1LGVRhehPKvWstbJmcm/iqGclRnmd/8HG/kC4Fqp2aVQY9gfB4/vhSfMd
sT8IVpXdmt27CPuDYPtqdf5CdewPgoqMogXFctgfBLJ+6fkfpLA/CKrdzHt+
DFLP2t2SdDWig3rWSYZrYGId9SzYzjlYUUU9y+/NbqfdhdSzDqw+MsE0k3pW
+9YtTxL3Uc9qZefKVG9ATwuG3Efi+9HB2B8MH4Mvj9Z1x/5gqNQPjHcC7A+B
lqG4XG8d7A8BNfV3pr9nY38I/FrH3vhBBvtDIClc0+7sb+pZWRP3VDPeUs/y
dLw7+eVD6lnjWE9uvW+gnnW6iw3HrlHPip/zfNzhC9Szeq/LMccdop6VGv+k
Mk+MnhYK8jYur77wsD8UTmn5BXf7YX8onPj1bbnIEftDYf6q5RJDxtgfCn8S
+peWz8b+MDhzqpFhroD9YTBjzrUb3tLYHwZ/5Z7F7v9DPcvz9RsRDFLPUhtY
sFH8lnrWsKdMkvoL6lkysUeZEk3Us16PGtT/WEU96/DKYx3VxdSzDs/anb7k
LPWsS+WvjqgcpJ7Fud63fe927A+HDxeizrdFYn849Nof+vE7BPvD4euyFqVA
9LXOcBA0JJf/NsL+CNjlFl6WpI39EZBk2FjroYL9EZDz6XXt17HYHwEOv94+
OzFAPau/fimvsp96lssX3/iyp9SzbOdvm1fzgHqWhWUNNF6lnpU44XB2XCH1
LIlvUnoHM6hniWyv1Y5PoZ619dWvxsKd2M+CiQavREUi7GfBvm+9UspM7GdB
9/SfCY7u2M+COtaqmSsxM9ig+OZI2cmV2M+G42azF1UYYD8bVFPMjws1sJ8N
c6LivHIVsZ8NHXsbhyvlsZ8N428/y/3wFz2NDU8vybB+taKnsWHqOvNH2nXo
aRyY1D5xos4F9DQOlI79xZ11AD2NAxNaT50ZIUBP48B3gYqPIhc9jQNrJbrG
nPFCT+PApXu5Mkr62M+Bh9W+nm2LsJ8DCzTj10lJYD8Xcr5LFnFfoadxoXJI
R6OjGT2NCynJEktbT6GncQE4o5h1e9DTuLDhKbdq10b0NC5Ebvy7/2AEehoX
umdNqaszQ0/jwi3JjqQfSuh5PDB1+/f/QxOxnwfv1FXG/hpET+OB/T9C7X1v
0dN4MLDC5VzCI/Q0HiwcM8tDrRI9jQer2j/VZhSgp/HgyVBZueER9DQe9N9x
j1q4DT2PD4bj790YwUHP48OmIDHvgyP284G3dujWekPs50NG++MueW3s50Or
r2KHYDL280G5amWFkiT28yF/rEPpnEH0ND6s/vb2Xl8LepoAiqP1rGPukywr
gINB3baTr6KvCeDePd17o/NI1hWAr0n7XoMT6G0CqPj1s/ZrGslOAnh8hmfs
vBb9TQCSZ7yfXkavEwhAvHLQqdYSPU4A+Ue6GpqB5AMCSLC+HVOggT4ogI1H
feT3oecVCWCsxPNF4z6j1wnAXf/M5PR6kpsEkKXpmZhZi34nAKf9TdKH8kke
EED/k/SXn/aj5wlh5/7Yhk4xep4QhlP/MH+h16kKYUNTvV8wGz1PCH1jZf7u
C0HPE8L0ihUliU7oeUIw0D3WNN8SPU8Imvwv1w+qoOcJ4apHTO7pCeh5QlDI
Vt0g/w96nhD0ogIPFY1CzxPCnTKb85pf0POEEH/6/HuVt+h5QtjUdy5yfwV6
nhCMrtz0s6pCzxPCzBcHvp1OQ88TgodRzKldCeh5InB5sbJxaxh6ngiecltk
vzqg54lgRUrP2Ad26HkieOU49t2Gleh5IjjzMLn1miF6nggu+yS+t1RCzxPB
8Kgiv0Y5kgUigEZOMbcfPU8ERxaemlLeip4nghcTQmo3X0XPE8HHdbvSrArQ
80T//nuobr3rEHqeCKb2FM1ZvRk9TwTvvsn+dsL8/3hWemTh/vYu6lmOyp9O
NN+knvWi4fpp+XzqWa4mD1Xf7qeexRvQ1igUUc9a82t6+E836lnLK0wzFC2o
Z82PfHXkoDr1rA9Z528GSlHPclFcHVbaR/dZ+euNlNWaqGcVFQyefniBetZd
bUXj4wepZ+20dIg4GEk9a6BykulmZ+pZlhnR31VNqGc5yxdEdKpRz1p8pffG
TynqWcnz5qxd+BZ9yACWTSmMutRK91ms9CHG7krqWfMVl2/Vy6Se5eXgyZRO
pJ410t0A1kZSzxqx/o7WMSb1rI6NXMMN5tSz1rN3rmerUc/aJGE0KY5BPevS
dkVe+Gv0HwuI7f59cnoz3WdVFPeaB5XTfVZED6ek9AT1rKWLS/U7t1DPenH3
mc+pIOpZJ4uO1WVbU88yC8oLYepRz0oxyFeXl6OedTbMfwvvv960DHy7BqdO
7EDPWQarH0967FmP79ZwbUrNkYlX6D6r6ODOZwZn6D7r737/qakJ1LO++B4u
M1tHPav4/ijZPA/qWYrzXceNNaOeJT/yScdBTepZkkZGw09kqWctEfTPLfqN
PrMS9O/nfKrCvRXDFqaKx1x93oTvtnDd0e1Pz2W6zxpZc2tE1Vm6zypybf28
6iDdZ6X9LWH9SKD7LIP8Kyd2xtB9lnp5kapuOPUsbn1Gwjgn6lmvD2u/SjKg
nrVk54STs5WoZyXMHVL7NIJ6lmMge9PSXvQYJxjd0OvV3oie4wTu3yYLt1xD
z3GCm3dW978vQc9xgr1XT96Zd5rus8QyjWdmxdF9lrTOJvsRArrP+pwWr/DJ
h+6zvv3VK7psQT1LLsjIdu9c6lmza2ITpqlQz+o+O7lopSz1rO2saJV339Fj
VoPrp9DIYz3oMavhV9Y1m7wH6DGr4eGDjYK3l9BjVsMkDf6wXBbdZ82ZXDDz
5E66z/oz4suGGBHdZx0+At8e+tN91vYN+lkDdnSfdb5nW6CBPvWsJfUjPnRP
o55lJ/l9gC1NPSuIeVw8aTT1rCJXRvy49+gp7lB7aIGHBO6pxO7AT/AdjG9C
j3GH9UtY3MOl6DEeEHcnacPTM3jvAUs0quLKD9B91hjdJK26OLrP8jtcdmtJ
NN1ndV9sKm4Ko/us5UZpUhZr6D7LZ20Ox3sJ3WcV2Dktc9OhnpXWMHKINYF6
1jvpkGT+D/SUNbB8zvIP4qfoKWtAq3Xce7uH6Cle4Dm5PzqvGj3GC/wH9vjb
ZeO9F7yQc90dno73XuD098KVjVvpPuvDgwCr1A10n8U+sHHaP2F0n3V1S2a5
CvpPtTfweEYFaUvpPqssPurpIyO6z7LsNNvNnUk9q8Cx+ueZcdSzZm3+fSLx
I3qML3ztzG/b/Bj9xReGBrP22dxCb/GFve6fRbtL0Fd8wU5jQHZrLt77Ade/
Tyc6Ee/9wH/r1rYjW+k+q35iy6U9kXSftTk1ZsSzULrPWrbJ31fSnu6zIp12
Th+9mO6zLF/65Zmq0H1W6v77mYJJdJ91Kc8myRe9R5UJAYoFursH0VOYUL/5
Uvuhp+gpTLjXv9K+vRY9hQnFD0ac21iFnsKE94d66xZno+cwYcUEnbGcXeg5
TJAIOrFNFEn3WQaPTvfl+NF9luXQz+Sb6DsQAGuUvE7wHeg+qyX6r5yROd1n
zVrF1F+hR/dZXHZOoooK3WcdHWifViZJPUvfPs4q9it6SiB81XCv7HiOnhII
4bcUWe2N6CmBUHtLctGjK+gpgVC4MMpxTTZ6TiAkyW9cKJGOnhMIv8pVmxds
Q88JhKruOSbVbLrPmjzeO6A5hO6z9jRaaTEc6D5rn5bJlVhdus8y93/i0qZC
91nNi5e9jh5P91kxJz10tEbSfVbgoASn6QN6ShCkGA6U57WhpwRBACPwqPtN
9JRgOAeBG25dRE8JBtlTsW/ss9FTguEK30Uw8xh6TjC8N9NUl92BnhMMvQq5
/tJ8us96H+tSVelF91m1oq5i5VV0n8U9Emvz0oDus2A48p2iOt1nMQInHt+o
RPdZiyav+mInQfdZrR2szxEf0VNCINv0e/aD5+gpIRAdm96a8t99VAhIXFm8
p+8aekoI/OPJu7IK/YYRCnyNtDGSmegpoZBrvPBSWzx6SijUzzMpuC6g+6wG
25DhED+6z3rQOcsr0YHus6aZLzP6aE73WS+t/QYbtOg+i2PBnxc0me6ztlW7
JvVJ0n3W2fbc49Hf0DPCgP+2ZOND3D8xw0CfvcdkZAd6Rhjcabk4Y8Ej9Iww
GFe6d7v8XfSUMBjrfCXc9jJ6Shh0JjXUeOWgp4SDvOfZR9uOoqeEQ7zOF82e
/dgfDvd1viglbcb+cPC0LtvZw6X7rLcZQS9kff/PPktFd6Dzv/uocHhQ2/VS
35Tus6JNlB0L1eg+y3qBZtwlObrPkmE0iOSk6D7LI26HTV4PekoERK3j344s
Rk+JgBGZG9X3Z6OnRECTg7zxy3j0lAjILLWwjohCT4mAJIOzdm726CksmO2T
a1egg57DgnljhUcHZdFzWFCaJ5y55wd6CguYud1XP71ET2GB0YcNgZPL0FNY
kLjVxnn0AfQUFuiWh6mGb0JPYQGvaWVWcjR6Chsuz388OiQAPYUNfw7FX/cz
Qs9hg5fd/tg9uHdissGTddhq11/0DDbo6JumS35Fz2DDOxet9Ycb0DPYoM8K
ms/PRE9hQ92qTdtN09FTOAAKhYpbYtFTOPC0Y4WNnw96CgfWLZsfwjRBT+FA
UkjBg5LF2M+BztDQuZM0sJ8DJ6Dfs/437pM44Jca3rzjF3oKB9b0eq72uoue
woWHJWtDPXPRT7hwVP2my+fD6CVcaDIqq18Yhj7ChXPnN+wPdUIP4YLOd13h
dVP0Dy5MVru83nge9nMh78Dq+m8M7OfCqhqledCJnsGDaR6NL+oeoF/w4KLK
CuNJ5egVPFBh7W2txP0Skwfftjyf6puOHsEDO50F2sox6A88uCp5f5aOAL2F
B/eWTmEzfdBXeNDOitp73Qr7+fDn77TCy/Ownw9si8HwRvQO4MPb0ac3/fqK
PsCHaVNMTh99Q7KYD1X3j97PeUhyBh9iPZ5Kz6lF7+CDOG7HI6kL6Bt8aDMN
3LslCT1DAMf3RAw934ueIYBa3ge1M5vRMwRw6Uk8oygCPUMAiTGtlXHe6BkC
WLgt13uaG3qGACIkndY4LsDfVwA39r28OU8aPUMAb4/nOx8fRs8QwGX34zkO
v9EzBDAU+DTi8Qv0DAHUzOn1XtiEniGAMph30i8PPePfz7Ot0grdgZ4hAKvB
rF+7t+A+SQCsvY9GJofiPkkAI97MCj65Er1DCD5mhvx1xrhPEkK1RreCpiHu
k4QgEa0fc0MD90lCqJAPeyRSxn2SEEambzW2H437JCEo61nf++cX7pOEcF7/
qdOMNtwnCSEjRG64/g7uk4QwqJwmW1KF+yQhZBdvP1d5BfdJQsj01AvYcQ73
SUJoy3Wym3QC90lCWNyepLScj/skIcgI9g+dEpHcKYT0jitcWUeSB4QwZKeQ
d88M90siKNqTcUh7BsmyIpD7OXrFglEkq4pgSoiT818Gyf/rWYJNc7SGb5Pv
LwKLonHOjHckO4ngheBJ3LJmkpki0J4UMnXsbZIFIjAunH47NYNksQjc9w1K
n9xN8gERPGyYXsgVkZwhAvvXrfs9AkguEkFjfnHzS1uSq0VgZHhTZYoeyU0i
2Pqk11xi0W2L/wFCe7oL
           
           "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
             
              EdgeForm[], 
              Directive[
               RGBColor[0, 0, 1], 
               Opacity[0.1]], 
              GraphicsGroupBox[{
                PolygonBox[CompressedData["
1:eJwl1UO0GAYQBdA0P2ls27Zt2/aP+WObTdrYtu02tm23sW22N6eLe86sZvXe
TJLAoKodggcLFuwX6hrqUZ8GNKQRjWlCIE1pRnNa0JJWtKYNbWlHe34uDqIj
nehMF7rSje70oCe96E0f+tKP/gxgIIMYzBCGMozhjOA3RjKK3/mD0YxhLOMY
zwQmMonJTGEq05jODGYyi9nMYS7zmM8CFrKIxSxhKctYzgpWsorVrGEt61jP
Bjayic1sYSt/8hfb2M4OdrKL3exhL/vYzwEOcojDHOEoxzjOCU5yitOc4Szn
OM8FLnKJy1zhKte4zg1ucou/+Yfb3OEu97jPAx7yiMc84SnPeM4LXvKK17zh
Le94zwc+8onPfOEr3/jOD/4lWIB8EpwAQhCSXwlFaMIQlnCEJwIRiURkohCV
aEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVs
ZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpU
pwY1qUVt6lCXetSnAQ1pRGOaEEhTmtGcFrSkFa1pQ1va0Z4OBNGRTnSmC13p
Rnd60JNe9KYPfelHfwYwkEEMZghDGcZwRgT8f7fqUJta1KQG1alGVapQmUpU
pALlKUdZylCaUpSkBMUpRlGKUJhCFKQA+clHXvKQm1zkJAfZyUZWspCZTGQk
A+lJR1rSkJpUpCQFyUlGUpKQmEQkJAHxiUdc4hCbWMQkBtGJRlSiEJlIRCQC
4QlHWMIQmlD8SkhCEEBwfvnZw5999Ch+8J1vfOULn/nERz7wnne85Q2vecVL
XvCcZzzlCY95xEMecJ973OUOt/mHv7nFTW5wnWtc5QqXucRFLnCec5zlDKc5
xUlOcJxjHOUIhznEQQ6wn33sZQ+72cVOdrCdbfzFn2xlC5vZxEY2sJ51rGUN
q1nFSlawnGUsZQmLWcRCFjCfecxlDrOZxUxmMJ1pTGUKk5nERCYwnnGMZQyj
+YPfGcVIfmMEwxnGUIYwmEEMZAD96Udf+tCbXvSkB93pRle60JlOdCSIDrSn
HW1pQ2ta0ZIWNKcZTQmkCY1pREMaUJ961KUOtalFTWpQnWpUpQqVqURFKlCe
cpSlDKUpRUlKUJxiFKUIhSlEQQqQn3zkJQ+5yUVOcpCdbGQlC5nJREb+A402
JVw=
                 "]]}]}, {}, {}}, {{}, {}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Opacity[0.2], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJwl1FO4EAYYBuBzsm2dTtYyl81l17Jt27Zbts0t2225LZurtrDF9zxdvN9/
+918f3CTjlU7BAYEBPwgQm4oQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jE
Iz4JSEgiEpOEpCQjiOQEk4KUpCI1aUhLOtKTgYxkCulMZrKQlWxkJwc5yUVu
8pCXfPxIfgpQkEIUpghFKUZxSlCSUpSmDGUpR3kq8BMVqURlqlCValSnBjWp
RW3qUJd61OdnGtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCT
XvSmD33pR38GMJBBDGYIQxnGcEYwklGMZgxjGcd4JjCRSUxmClOZxnRmMJNZ
zGYOc/mFecxnAQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZ
xW5+5Tf2sJd97OcABznEYY5wlGMc5wQnOcVpznCWc5znd/7gAhe5xGWucJVr
XOdP/uIGN7nFbe5wl3vc5wEPecRjnvCUZzznBS/5m1e85g3/8C9vecd7PvAf
//ORT3zmC18JGX8goQhNGMISjvBEICKRiEwUohKN6MQgJrGITRziEo/4JCAh
iUhMEpKSjCCSE0wKUpKK1KQhLelITwYykinw+8/6BlnShZs=
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Opacity[0.2], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJwV0FVjFgQAQNGPkFK6lBBG90Z3j1zANrpDkBIkJUQpgw4FBZTu7u5GUkpC
UrqlQer4cO4PuEGtukR3jhUIBPJLAYIJoSCFKEwRilKM4pSgJKUoTRnKUo7y
VKAilahMKFWoSjWqU4OahBFOBJHUojZRRBNDHepSj/o0oCGNaEwTmtKM5rSg
Ja1ozWe0oS2f0472dKAjnfiC/0d04Uu60o3u9KAnvfiK3vShL/34mv58w7cM
YCCDGMwQvuN7fuBHhjKM4YxgJKMYzRjGMo6f+JnxTOAXfmUik5jMb/zOFKYy
jenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAlq1jNGtayjvVsYCOb2MwWtrKN
7exgJ7vYzR72so/9/MEBDnKIwxzhKH9yjOOc4CSn+IvTnOEs5/ib81zgIpe4
zBX+4SrXuM4NbnKL29zhLve4zwMe8i+PeMwTnvKM57zgJa/4j9e84S3vCMQO
BGIRmzjE5QPiEZ8EJCQRH/IRiUlCUpKRnBSkJBWpSUNaPuYT0pGeDGTkUzKR
mSCykJVsZCcHOclFbvKQl3zkpwDBhFCQQhSmCEUpRnFKUJJSlKYMZSlHeSpQ
kUpUJpQqVKUa1alBTcIIJ4JIalGbKKKJoQ51qUd9GtCQRrwHpYWO3g==
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Opacity[0.2], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJwNxFVgFQQAAMA3Qlq6ke6STkUJ6U6pwTbYYION7m5QKaU7DBqkG6RBSaVL
6VYapO7jLltoTMPooEAgUEgtYwUCrWhNMG1oSwihhNGO9oQTQQc6EkkUnehM
NDF0oSvd6E4PetKL3vShL/3ozwAGMojBDGEowxjOCEYyitGMYSzj+IZv+Y7x
TGAik5jM9/zAFKYyjenMYCazmM0c5jKP+SxgIYtYzI/8xM/8whKWsozlrGAl
q1jNGn5lLetYzwY2sonNbGEr29jODnayi938xh72so/9HOAghzjMEX7nD45y
jOOc4CSn+JO/OM0ZznKO81zgIpe4zBWu8jf/cI3r3OAmt7jNHe5yj/s84CGP
+Jf/eMwTnvKM57zgJa94zf+84S3veE8gdiAQRCxiE4e4fEQ84pOAhCQiMUn4
mKQkIzkpSEkqUpOGtKQjPRnISCY+ITNZyEo2spODnOQiN3nISz7yU4CCFKIw
n1KEohSjOCUoSSlKU4aylKM8n/E5FfiCL6lIJSpTha+oSjWqU4Oa1KI2dahL
PerTgIY0ojFNaEozvqY5LWhJK1oTTBvaEkIoYbSjPeFE0IGORBJFJzoTTQxd
6Eo3utODnvSiN33oSz/6M4CBDGIwQxjKMIYzgpGMYjQfAGsLmCE=
               
               "]]}}}], {}, {}, {{}, {}}}, {{}, 
          GraphicsComplexBox[CompressedData["
1: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
           
           "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
             
              EdgeForm[], 
              Directive[
               RGBColor[1, 0, 0], 
               Opacity[0.1]], 
              GraphicsGroupBox[{
                PolygonBox[CompressedData["
1:eJwl1UO0GAYQBdA0P2ls27Zt2/aP+WObTdrYtu02tm23sW22N6eLe86sZvXe
TJLAoKodggcLFuwX6hrqUZ8GNKQRjWlCIE1pRnNa0JJWtKYNbWlHe34uDqIj
nehMF7rSje70oCe96E0f+tKP/gxgIIMYzBCGMozhjOA3RjKK3/mD0YxhLOMY
zwQmMonJTGEq05jODGYyi9nMYS7zmM8CFrKIxSxhKctYzgpWsorVrGEt61jP
Bjayic1sYSt/8hfb2M4OdrKL3exhL/vYzwEOcojDHOEoxzjOCU5yitOc4Szn
OM8FLnKJy1zhKte4zg1ucou/+Yfb3OEu97jPAx7yiMc84SnPeM4LXvKK17zh
Le94zwc+8onPfOEr3/jOD/4lWIB8EpwAQhCSXwlFaMIQlnCEJwIRiURkohCV
aEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVs
ZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpU
pwY1qUVt6lCXetSnAQ1pRGOaEEhTmtGcFrSkFa1pQ1va0Z4OBNGRTnSmC13p
Rnd60JNe9KYPfelHfwYwkEEMZghDGcZwRgT8f7fqUJta1KQG1alGVapQmUpU
pALlKUdZylCaUpSkBMUpRlGKUJhCFKQA+clHXvKQm1zkJAfZyUZWspCZTGQk
A+lJR1rSkJpUpCQFyUlGUpKQmEQkJAHxiUdc4hCbWMQkBtGJRlSiEJlIRCQC
4QlHWMIQmlD8SkhCEEBwfvnZw5999Ch+8J1vfOULn/nERz7wnne85Q2vecVL
XvCcZzzlCY95xEMecJ973OUOt/mHv7nFTW5wnWtc5QqXucRFLnCec5zlDKc5
xUlOcJxjHOUIhznEQQ6wn33sZQ+72cVOdrCdbfzFn2xlC5vZxEY2sJ51rGUN
q1nFSlawnGUsZQmLWcRCFjCfecxlDrOZxUxmMJ1pTGUKk5nERCYwnnGMZQyj
+YPfGcVIfmMEwxnGUIYwmEEMZAD96Udf+tCbXvSkB93pRle60JlOdCSIDrSn
HW1pQ2ta0ZIWNKcZTQmkCY1pREMaUJ961KUOtalFTWpQnWpUpQqVqURFKlCe
cpSlDKUpRUlKUJxiFKUIhSlEQQqQn3zkJQ+5yUVOcpCdbGQlC5nJREb+A402
JVw=
                 "]]}]}, {}, {}}, {{}, {}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Opacity[0.2], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJwl1FO4EAYYBuBzsm2dTtYyl81l17Jt27Zbts0t2225LZurtrDF9zxdvN9/
+918f3CTjlU7BAYEBPwgQm4oQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jE
Iz4JSEgiEpOEpCQjiOQEk4KUpCI1aUhLOtKTgYxkCulMZrKQlWxkJwc5yUVu
8pCXfPxIfgpQkEIUpghFKUZxSlCSUpSmDGUpR3kq8BMVqURlqlCValSnBjWp
RW3qUJd61OdnGtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCT
XvSmD33pR38GMJBBDGYIQxnGcEYwklGMZgxjGcd4JjCRSUxmClOZxnRmMJNZ
zGYOc/mFecxnAQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZ
xW5+5Tf2sJd97OcABznEYY5wlGMc5wQnOcVpznCWc5znd/7gAhe5xGWucJVr
XOdP/uIGN7nFbe5wl3vc5wEPecRjnvCUZzznBS/5m1e85g3/8C9vecd7PvAf
//ORT3zmC18JGX8goQhNGMISjvBEICKRiEwUohKN6MQgJrGITRziEo/4JCAh
iUhMEpKSjCCSE0wKUpKK1KQhLelITwYykinw+8/6BlnShZs=
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Opacity[0.2], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJwV0FVjFgQAQNGPkFK6lBBG90Z3j1zANrpDkBIkJUQpgw4FBZTu7u5GUkpC
UrqlQer4cO4PuEGtukR3jhUIBPJLAYIJoSCFKEwRilKM4pSgJKUoTRnKUo7y
VKAilahMKFWoSjWqU4OahBFOBJHUojZRRBNDHepSj/o0oCGNaEwTmtKM5rSg
Ja1ozWe0oS2f0472dKAjnfiC/0d04Uu60o3u9KAnvfiK3vShL/34mv58w7cM
YCCDGMwQvuN7fuBHhjKM4YxgJKMYzRjGMo6f+JnxTOAXfmUik5jMb/zOFKYy
jenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAlq1jNGtayjvVsYCOb2MwWtrKN
7exgJ7vYzR72so/9/MEBDnKIwxzhKH9yjOOc4CSn+IvTnOEs5/ib81zgIpe4
zBX+4SrXuM4NbnKL29zhLve4zwMe8i+PeMwTnvKM57zgJa/4j9e84S3vCMQO
BGIRmzjE5QPiEZ8EJCQRH/IRiUlCUpKRnBSkJBWpSUNaPuYT0pGeDGTkUzKR
mSCykJVsZCcHOclFbvKQl3zkpwDBhFCQQhSmCEUpRnFKUJJSlKYMZSlHeSpQ
kUpUJpQqVKUa1alBTcIIJ4JIalGbKKKJoQ51qUd9GtCQRrwHpYWO3g==
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0], 
               Opacity[0.2], 
               Dashing[{Small, Small}]], 
              LineBox[CompressedData["
1:eJwNxFVgFQQAAMA3Qlq6ke6STkUJ6U6pwTbYYION7m5QKaU7DBqkG6RBSaVL
6VYapO7jLltoTMPooEAgUEgtYwUCrWhNMG1oSwihhNGO9oQTQQc6EkkUnehM
NDF0oSvd6E4PetKL3vShL/3ozwAGMojBDGEowxjOCEYyitGMYSzj+IZv+Y7x
TGAik5jM9/zAFKYyjenMYCazmM0c5jKP+SxgIYtYzI/8xM/8whKWsozlrGAl
q1jNGn5lLetYzwY2sonNbGEr29jODnayi938xh72so/9HOAghzjMEX7nD45y
jOOc4CSn+JO/OM0ZznKO81zgIpe4zBWu8jf/cI3r3OAmt7jNHe5yj/s84CGP
+Jf/eMwTnvKM57zgJa94zf+84S3veE8gdiAQRCxiE4e4fEQ84pOAhCQiMUn4
mKQkIzkpSEkqUpOGtKQjPRnISCY+ITNZyEo2spODnOQiN3nISz7yU4CCFKIw
n1KEohSjOCUoSSlKU4aylKM8n/E5FfiCL6lIJSpTha+oSjWqU4Oa1KI2dahL
PerTgIY0ojFNaEozvqY5LWhJK1oTTBvaEkIoYbSjPeFE0IGORBJFJzoTTQxd
6Eo3utODnvSiN33oSz/6M4CBDGIwQxjKMIYzgpGMYjQfAGsLmCE=
               
               "]]}}}], {}, {}, {{}, {}}}, {{}, 
          GraphicsComplexBox[CompressedData["
1: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
gbPRyK9nlzNPi0G1dcCLIFNqdQyWdTlzxW0F+ZomBtleXdaO+cg8TYaM+a5D
twiodWWIz5tlX9eB+ZoM/eaIP+05TZ5mJoNlhKJu+BDmbTK0zr31wv4ceZqL
DFJv/Xb1K6gFMux7O8XCsxO1TAYn3Qu24gLyNaUMjnHrnn5Jps6U4VVajvr1
MGqVDKcyZqVurSVvK5RBM9TG92s+tVr29/fb9fJhwdSVMvzZJTI53ZlaIwPf
Qz1/3CnyuEYZRhlnTbu0kJonR9bZ9Y/fdaHWlaNqWsOVHszn+HJcnCBcVG9L
bSbHuQGdliU9JW+DHDMDlLymJGoXOSqWHfukP4haIIe2wrfp4hbyNZkcxp8c
u46bSq2UQ2hc32jSnzpTjk7i2uLzP8jXVHLk9R7V0uk0daEcdpVxK//kUqvl
6Nvr0Jv3s6kr5Sh3nLl6Uz9qjRy3BVr7r74hf2uUY9Lpc9L4ddQ8Bdooyoqf
mVHrKnD8YdlhYy3meQqcKjz39JqSvM5MAekAReLYI+RzUKD7tF1bVIbULgps
LY+yivlJPidQYO+Nm1Y3tlD/r2fZFTT16sI8T4F6xaUjx9zI5zIVuD/4/YcJ
x8njVAoUy/ZYFs2iLlTgfULn7aZPyOPUCrQ//1MjX05dqUChNGfL7BryuP/H
sxrun+074SnnWXGu89s2XeI8q9a4/ppyD+dZnunlW7uu5TzLcNVx7fgkzrOe
WiS+zVvIeVZmp8drGudynjXUSHF48zzOs+QXfqb+E8l51scs214Bvpxn3byg
n2huy3mWgeeVr1pDOM8qO9tmezctzrM8J0kU0+u5/azIOw/nj1JznpXsOWKY
3nbOsza+O/e+9xLOsypjzm11F3Oe5Wtu2WOjI+dZY8YeNJkKzrPm5Cz6NnI4
51m2DimwMeI8qzSkS1d+W86zjoevKr31hXmRJX6UjCvs8YK1Fe5W/ZxRc4vb
z5JN9/hzSs3tZ015Pl7ltofzLJ12h94uX855Vk3/D+PqwjnPcg0f/+TYZM6z
PPTtw7V6c54VEOjZWfcj8yJbHDtX+6nvPeZJdvDix7pfPcztZxn2Ld63M5Xz
rL2a4KRRYs6zdh84usxsJudZokGLV53mc571Jv78rBc8zrNGhr9c7vSceZM9
xvRMOKEpYt7kAHuD1/qC9dx+1pCPQy1+CTnP0tN+fmKkGedZRVuPX0z4zbxp
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
           
           "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
             
              EdgeForm[], 
              Directive[
               RGBColor[0, 0, 1], 
               Opacity[0.2]], 
              GraphicsGroupBox[{
                PolygonBox[CompressedData["
1:eJwl1UO0GAYQBdA0P2ls27Zt2/aP+WObTdrYtu02tm23sW22N6eLe86sZvXe
TJLAoKodggcLFuwX6hrqUZ8GNKQRjWlCIE1pRnNa0JJWtKYNbWlHe34uDqIj
nehMF7rSje70oCe96E0f+tKP/gxgIIMYzBCGMozhjOA3RjKK3/mD0YxhLOMY
zwQmMonJTGEq05jODGYyi9nMYS7zmM8CFrKIxSxhKctYzgpWsorVrGEt61jP
Bjayic1sYSt/8hfb2M4OdrKL3exhL/vYzwEOcojDHOEoxzjOCU5yitOc4Szn
OM8FLnKJy1zhKte4zg1ucou/+Yfb3OEu97jPAx7yiMc84SnPeM4LXvKK17zh
Le94zwc+8onPfOEr3/jOD/4lWIB8EpwAQhCSXwlFaMIQlnCEJwIRiURkohCV
aEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVs
ZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpU
pwY1qUVt6lCXetSnAQ1pRGOaEEhTmtGcFrSkFa1pQ1va0Z4OBNGRTnSmC13p
Rnd60JNe9KYPfelHfwYwkEEMZghDGcZwRgT8f7fqUJta1KQG1alGVapQmUpU
pALlKUdZylCaUpSkBMUpRlGKUJhCFKQA+clHXvKQm1zkJAfZyUZWspCZTGQk
A+lJR1rSkJpUpCQFyUlGUpKQmEQkJAHxiUdc4hCbWMQkBtGJRlSiEJlIRCQC
4QlHWMIQmlD8SkhCEEBwfvnZw5999Ch+8J1vfOULn/nERz7wnne85Q2vecVL
XvCcZzzlCY95xEMecJ973OUOt/mHv7nFTW5wnWtc5QqXucRFLnCec5zlDKc5
xUlOcJxjHOUIhznEQQ6wn33sZQ+72cVOdrCdbfzFn2xlC5vZxEY2sJ51rGUN
q1nFSlawnGUsZQmLWcRCFjCfecxlDrOZxUxmMJ1pTGUKk5nERCYwnnGMZQyj
+YPfGcVIfmMEwxnGUIYwmEEMZAD96Udf+tCbXvSkB93pRle60JlOdCSIDrSn
HW1pQ2ta0ZIWNKcZTQmkCY1pREMaUJ961KUOtalFTWpQnWpUpQqVqURFKlCe
cpSlDKUpRUlKUJxiFKUIhSlEQQqQn3zkJQ+5yUVOcpCdbGQlC5nJREb+A402
JVw=
                 "]]}]}, {}, {}}, {{}, {}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.008333333333333333], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Opacity[0.4]], 
              LineBox[CompressedData["
1:eJwl1FO4EAYYBuBzsm2dTtYyl81l17Jt27Zbts0t2225LZurtrDF9zxdvN9/
+918f3CTjlU7BAYEBPwgQm4oQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jE
Iz4JSEgiEpOEpCQjiOQEk4KUpCI1aUhLOtKTgYxkCulMZrKQlWxkJwc5yUVu
8pCXfPxIfgpQkEIUpghFKUZxSlCSUpSmDGUpR3kq8BMVqURlqlCValSnBjWp
RW3qUJd61OdnGtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCT
XvSmD33pR38GMJBBDGYIQxnGcEYwklGMZgxjGcd4JjCRSUxmClOZxnRmMJNZ
zGYOc/mFecxnAQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZ
xW5+5Tf2sJd97OcABznEYY5wlGMc5wQnOcVpznCWc5znd/7gAhe5xGWucJVr
XOdP/uIGN7nFbe5wl3vc5wEPecRjnvCUZzznBS/5m1e85g3/8C9vecd7PvAf
//ORT3zmC18JGX8goQhNGMISjvBEICKRiEwUohKN6MQgJrGITRziEo/4JCAh
iUhMEpKSjCCSE0wKUpKK1KQhLelITwYykinw+8/6BlnShZs=
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.008333333333333333], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Opacity[0.4]], 
              LineBox[CompressedData["
1:eJwV0FVjFgQAQNGPkFK6lBBG90Z3j1zANrpDkBIkJUQpgw4FBZTu7u5GUkpC
UrqlQer4cO4PuEGtukR3jhUIBPJLAYIJoSCFKEwRilKM4pSgJKUoTRnKUo7y
VKAilahMKFWoSjWqU4OahBFOBJHUojZRRBNDHepSj/o0oCGNaEwTmtKM5rSg
Ja1ozWe0oS2f0472dKAjnfiC/0d04Uu60o3u9KAnvfiK3vShL/34mv58w7cM
YCCDGMwQvuN7fuBHhjKM4YxgJKMYzRjGMo6f+JnxTOAXfmUik5jMb/zOFKYy
jenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAlq1jNGtayjvVsYCOb2MwWtrKN
7exgJ7vYzR72so/9/MEBDnKIwxzhKH9yjOOc4CSn+IvTnOEs5/ib81zgIpe4
zBX+4SrXuM4NbnKL29zhLve4zwMe8i+PeMwTnvKM57zgJa/4j9e84S3vCMQO
BGIRmzjE5QPiEZ8EJCQRH/IRiUlCUpKRnBSkJBWpSUNaPuYT0pGeDGTkUzKR
mSCykJVsZCcHOclFbvKQl3zkpwDBhFCQQhSmCEUpRnFKUJJSlKYMZSlHeSpQ
kUpUJpQqVKUa1alBTcIIJ4JIalGbKKKJoQ51qUd9GtCQRrwHpYWO3g==
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[0.008333333333333333], 
               AbsoluteThickness[1.6], 
               RGBColor[0, 0, 1], 
               Opacity[0.4]], 
              LineBox[CompressedData["
1:eJwNxFVgFQQAAMA3Qlq6ke6STkUJ6U6pwTbYYION7m5QKaU7DBqkG6RBSaVL
6VYapO7jLltoTMPooEAgUEgtYwUCrWhNMG1oSwihhNGO9oQTQQc6EkkUnehM
NDF0oSvd6E4PetKL3vShL/3ozwAGMojBDGEowxjOCEYyitGMYSzj+IZv+Y7x
TGAik5jM9/zAFKYyjenMYCazmM0c5jKP+SxgIYtYzI/8xM/8whKWsozlrGAl
q1jNGn5lLetYzwY2sonNbGEr29jODnayi938xh72so/9HOAghzjMEX7nD45y
jOOc4CSn+JO/OM0ZznKO81zgIpe4zBWu8jf/cI3r3OAmt7jNHe5yj/s84CGP
+Jf/eMwTnvKM57zgJa94zf+84S3veE8gdiAQRCxiE4e4fEQ84pOAhCQiMUn4
mKQkIzkpSEkqUpOGtKQjPRnISCY+ITNZyEo2spODnOQiN3nISz7yU4CCFKIw
n1KEohSjOCUoSSlKU4aylKM8n/E5FfiCL6lIJSpTha+oSjWqU4Oa1KI2dahL
PerTgIY0ojFNaEozvqY5LWhJK1oTTBvaEkIoYbSjPeFE0IGORBJFJzoTTQxd
6Eo3utODnvSiN33oSz/6M4CBDGIwQxjKMIYzgpGMYjQfAGsLmCE=
               
               "]]}}}], {}, {}, {{}, {}}}, {{}, 
          GraphicsComplexBox[CompressedData["
1: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
5VmTesqzJveUZ03uf3nWfwGmjlRd
           
           "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
             
              EdgeForm[], 
              Directive[
               RGBColor[1, 0, 0], 
               Opacity[0.2]], 
              GraphicsGroupBox[{
                PolygonBox[CompressedData["
1:eJwl1UO0GAYQBdA0P2ls27Zt2/aP+WObTdrYtu02tm23sW22N6eLe86sZvXe
TJLAoKodggcLFuwX6hrqUZ8GNKQRjWlCIE1pRnNa0JJWtKYNbWlHe34uDqIj
nehMF7rSje70oCe96E0f+tKP/gxgIIMYzBCGMozhjOA3RjKK3/mD0YxhLOMY
zwQmMonJTGEq05jODGYyi9nMYS7zmM8CFrKIxSxhKctYzgpWsorVrGEt61jP
Bjayic1sYSt/8hfb2M4OdrKL3exhL/vYzwEOcojDHOEoxzjOCU5yitOc4Szn
OM8FLnKJy1zhKte4zg1ucou/+Yfb3OEu97jPAx7yiMc84SnPeM4LXvKK17zh
Le94zwc+8onPfOEr3/jOD/4lWIB8EpwAQhCSXwlFaMIQlnCEJwIRiURkohCV
aEQnBjGJRWziEJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWdKQnAxnJRGaykJVs
ZCcHOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcCFalEZapQlWpU
pwY1qUVt6lCXetSnAQ1pRGOaEEhTmtGcFrSkFa1pQ1va0Z4OBNGRTnSmC13p
Rnd60JNe9KYPfelHfwYwkEEMZghDGcZwRgT8f7fqUJta1KQG1alGVapQmUpU
pALlKUdZylCaUpSkBMUpRlGKUJhCFKQA+clHXvKQm1zkJAfZyUZWspCZTGQk
A+lJR1rSkJpUpCQFyUlGUpKQmEQkJAHxiUdc4hCbWMQkBtGJRlSiEJlIRCQC
4QlHWMIQmlD8SkhCEEBwfvnZw5999Ch+8J1vfOULn/nERz7wnne85Q2vecVL
XvCcZzzlCY95xEMecJ973OUOt/mHv7nFTW5wnWtc5QqXucRFLnCec5zlDKc5
xUlOcJxjHOUIhznEQQ6wn33sZQ+72cVOdrCdbfzFn2xlC5vZxEY2sJ51rGUN
q1nFSlawnGUsZQmLWcRCFjCfecxlDrOZxUxmMJ1pTGUKk5nERCYwnnGMZQyj
+YPfGcVIfmMEwxnGUIYwmEEMZAD96Udf+tCbXvSkB93pRle60JlOdCSIDrSn
HW1pQ2ta0ZIWNKcZTQmkCY1pREMaUJ961KUOtalFTWpQnWpUpQqVqURFKlCe
cpSlDKUpRUlKUJxiFKUIhSlEQQqQn3zkJQ+5yUVOcpCdbGQlC5nJREb+A402
JVw=
                 "]]}]}, {}, {}}, {{}, {}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0]], 
              LineBox[CompressedData["
1:eJwl1FO4EAYYBuBzsm2dTtYyl81l17Jt27Zbts0t2225LZurtrDF9zxdvN9/
+918f3CTjlU7BAYEBPwgQm4oQhOGsIQjPBGISCQiE4WoRCM6MYhJLGITh7jE
Iz4JSEgiEpOEpCQjiOQEk4KUpCI1aUhLOtKTgYxkCulMZrKQlWxkJwc5yUVu
8pCXfPxIfgpQkEIUpghFKUZxSlCSUpSmDGUpR3kq8BMVqURlqlCValSnBjWp
RW3qUJd61OdnGtCQRjSmCU1pRnNa0JJWtKYNbWlHezrQkU50pgtd6UZ3etCT
XvSmD33pR38GMJBBDGYIQxnGcEYwklGMZgxjGcd4JjCRSUxmClOZxnRmMJNZ
zGYOc/mFecxnAQtZxGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZ
xW5+5Tf2sJd97OcABznEYY5wlGMc5wQnOcVpznCWc5znd/7gAhe5xGWucJVr
XOdP/uIGN7nFbe5wl3vc5wEPecRjnvCUZzznBS/5m1e85g3/8C9vecd7PvAf
//ORT3zmC18JGX8goQhNGMISjvBEICKRiEwUohKN6MQgJrGITRziEo/4JCAh
iUhMEpKSjCCSE0wKUpKK1KQhLelITwYykinw+8/6BlnShZs=
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0]], 
              LineBox[CompressedData["
1:eJwV0FVjFgQAQNGPkFK6lBBG90Z3j1zANrpDkBIkJUQpgw4FBZTu7u5GUkpC
UrqlQer4cO4PuEGtukR3jhUIBPJLAYIJoSCFKEwRilKM4pSgJKUoTRnKUo7y
VKAilahMKFWoSjWqU4OahBFOBJHUojZRRBNDHepSj/o0oCGNaEwTmtKM5rSg
Ja1ozWe0oS2f0472dKAjnfiC/0d04Uu60o3u9KAnvfiK3vShL/34mv58w7cM
YCCDGMwQvuN7fuBHhjKM4YxgJKMYzRjGMo6f+JnxTOAXfmUik5jMb/zOFKYy
jenMYCazmM0c5jKP+SxgIYtYzBKWsozlrGAlq1jNGtayjvVsYCOb2MwWtrKN
7exgJ7vYzR72so/9/MEBDnKIwxzhKH9yjOOc4CSn+IvTnOEs5/ib81zgIpe4
zBX+4SrXuM4NbnKL29zhLve4zwMe8i+PeMwTnvKM57zgJa/4j9e84S3vCMQO
BGIRmzjE5QPiEZ8EJCQRH/IRiUlCUpKRnBSkJBWpSUNaPuYT0pGeDGTkUzKR
mSCykJVsZCcHOclFbvKQl3zkpwDBhFCQQhSmCEUpRnFKUJJSlKYMZSlHeSpQ
kUpUJpQqVKUa1alBTcIIJ4JIalGbKKKJoQ51qUd9GtCQRrwHpYWO3g==
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               AbsoluteThickness[1.6], 
               RGBColor[1, 0, 0]], 
              LineBox[CompressedData["
1:eJwNxFVgFQQAAMA3Qlq6ke6STkUJ6U6pwTbYYION7m5QKaU7DBqkG6RBSaVL
6VYapO7jLltoTMPooEAgUEgtYwUCrWhNMG1oSwihhNGO9oQTQQc6EkkUnehM
NDF0oSvd6E4PetKL3vShL/3ozwAGMojBDGEowxjOCEYyitGMYSzj+IZv+Y7x
TGAik5jM9/zAFKYyjenMYCazmM0c5jKP+SxgIYtYzI/8xM/8whKWsozlrGAl
q1jNGn5lLetYzwY2sonNbGEr29jODnayi938xh72so/9HOAghzjMEX7nD45y
jOOc4CSn+JO/OM0ZznKO81zgIpe4zBWu8jf/cI3r3OAmt7jNHe5yj/s84CGP
+Jf/eMwTnvKM57zgJa94zf+84S3veE8gdiAQRCxiE4e4fEQ84pOAhCQiMUn4
mKQkIzkpSEkqUpOGtKQjPRnISCY+ITNZyEo2spODnOQiN3nISz7yU4CCFKIw
n1KEohSjOCUoSSlKU4aylKM8n/E5FfiCL6lIJSpTha+oSjWqU4Oa1KI2dahL
PerTgIY0ojFNaEozvqY5LWhJK1oTTBvaEkIoYbSjPeFE0IGORBJFJzoTTQxd
6Eo3utODnvSiN33oSz/6M4CBDGIwQxjKMIYzgpGMYjQfAGsLmCE=
               
               "]]}}}], {}, {}, {{}, {}}}}, {
        PlotRange -> All, Frame -> True, FrameLabel -> {
           FormBox["\"Host generations\"", TraditionalForm], 
           FormBox["\"Host heterozygosity\"", TraditionalForm]}, Axes -> 
         False, DisplayFunction -> Identity, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
         PlotRange -> {{0., 301.}, {0, 0.5}}, PlotRangeClipping -> True, 
         ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
         Identity, Frame -> {{False, False}, {False, False}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
                Part[#, 1]], 
               (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
                Part[#, 2]]}& )}}, PlotRange -> {{0., 301.}, {0, 0.5}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
          "\"Neutral, \\!\\(\\*SubscriptBox[\\(m\\), \\(i\\)]\\)=0.05, \
V=0.2\"", 
           "\"Neutral, \\!\\(\\*SubscriptBox[\\(m\\), \\(i\\)]\\)=0.05, V=0.5\
\"", "\"Coevolutionary, \\!\\(\\*SubscriptBox[\\(m\\), \\(i\\)]\\)=0.05, \
V=0.2\"", 
           "\"Coevolutionary, \\!\\(\\*SubscriptBox[\\(m\\), \
\\(i\\)]\\)=0.05, V=0.5\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Opacity[0.2], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Opacity[0.2], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Opacity[0.2], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Opacity[0.2], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Opacity", "[", "0.2`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Opacity", "[", "0.2`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {189., -576.}, {
     Center, Center}, {360., 360.}]}, {}},
  ContentSelectable->True,
  ImageSize->{265.1464213709671, Automatic},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.861880276749756*^9, 3.8618802975874357`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/madeline/Desktop/Mideo.lab2/Coevolution/Data \
sets/FIgures/TwoPatch_Discrete_Specificity.png\>\"", ",", "g1Legend", ",", 
   "\"\<PNG\>\"", ",", 
   RowBox[{"ImageResolution", "\[Rule]", " ", "300"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/madeline/Desktop/Mideo.lab2/Coevolution/Data \
sets/FIgures/TwoPatch_Discrete_Virulence.png\>\"", ",", "g2Legend", ",", 
   "\"\<PNG\>\"", ",", 
   RowBox[{"ImageResolution", "\[Rule]", " ", "300"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.86187311355894*^9, 3.861873115365602*^9}, 
   3.861875253816853*^9, {3.861877843365185*^9, 3.861877849452396*^9}, {
   3.861880345926607*^9, 3.861880380334407*^9}, {3.861881572193571*^9, 
   3.861881576344583*^9}, 3.861881820704*^9, {3.861881971403941*^9, 
   3.861881975129971*^9}}],

Cell[BoxData["\<\"/Users/madeline/Desktop/Mideo.lab2/Coevolution/Data \
sets/FIgures/TwoPatch_Discrete_Specificity.png\"\>"], "Output",
 CellChangeTimes->{
  3.861880312099988*^9, {3.8618803516389837`*^9, 3.8618803812285233`*^9}}],

Cell[BoxData["\<\"/Users/madeline/Desktop/Mideo.lab2/Coevolution/Data \
sets/FIgures/TwoPatch_Discrete_Virulence.png\"\>"], "Output",
 CellChangeTimes->{
  3.861880312099988*^9, {3.8618803516389837`*^9, 3.861880381602789*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{Automatic, 13}, {Automatic, 0}},
Magnification:>1.5 Inherited,
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->"Default.nb",
ExpressionUUID -> "1084b0d4-2c3a-41f8-9074-48017db1e9b3"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 211, 3, 48, "Input"],
Cell[CellGroupData[{
Cell[794, 27, 312, 6, 220, "Title"],
Cell[1109, 35, 2753, 81, 142, "Input"],
Cell[3865, 118, 1697, 51, 173, "Input"],
Cell[5565, 171, 1332, 39, 80, "Input"],
Cell[CellGroupData[{
Cell[6922, 214, 220, 3, 65, "Subsection"],
Cell[7145, 219, 2577, 51, 142, "Input"],
Cell[9725, 272, 10013, 273, 1072, "Input"],
Cell[CellGroupData[{
Cell[19763, 549, 219, 4, 48, "Input"],
Cell[19985, 555, 99, 1, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20121, 561, 428, 11, 48, "Input"],
Cell[20552, 574, 96, 1, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20685, 580, 6218, 149, 621, "Input"],
Cell[26906, 731, 61882, 1030, 590, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88825, 1766, 350, 7, 80, "Input"],
Cell[89178, 1775, 157, 2, 48, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[89384, 1783, 261, 4, 65, "Subsection"],
Cell[89648, 1789, 668, 16, 2763, "Input"],
Cell[90319, 1807, 1128, 30, 6360, "Input"],
Cell[CellGroupData[{
Cell[91472, 1841, 895, 26, 2763, "Input"],
Cell[92370, 1869, 2524, 79, 352, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[94943, 1954, 232, 3, 51, "Subsection"],
Cell[95178, 1959, 3890, 115, 582, "Input"],
Cell[99071, 2076, 735, 20, 373, "Input"],
Cell[CellGroupData[{
Cell[99831, 2100, 248, 3, 175, "Subsubsection"],
Cell[CellGroupData[{
Cell[100104, 2107, 161, 3, 162, "Input"],
Cell[100268, 2112, 2617, 86, 474, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102922, 2203, 132, 2, 162, "Input"],
Cell[103057, 2207, 871, 32, 208, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103965, 2244, 530, 14, 162, "Input"],
Cell[104498, 2260, 870, 32, 208, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105405, 2297, 737, 19, 162, "Input"],
Cell[106145, 2318, 1557, 41, 447, "Output"]
}, Open  ]],
Cell[107717, 2362, 155, 3, 231, "Text"],
Cell[CellGroupData[{
Cell[107897, 2369, 661, 18, 243, "Input"],
Cell[108561, 2389, 1267, 35, 670, "Output"]
}, Open  ]],
Cell[109843, 2427, 2018, 59, 721, "Input"],
Cell[CellGroupData[{
Cell[111886, 2490, 1316, 39, 576, "Input"],
Cell[113205, 2531, 7430, 138, 1822, "Output"]
}, Open  ]],
Cell[120650, 2672, 187, 2, 231, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120874, 2679, 344, 7, 262, "Subsubsection"],
Cell[CellGroupData[{
Cell[121243, 2690, 146, 3, 243, "Input"],
Cell[121392, 2695, 505, 15, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121934, 2715, 211, 4, 243, "Input"],
Cell[122148, 2721, 2339, 77, 832, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124524, 2803, 183, 3, 243, "Input"],
Cell[124710, 2808, 907, 33, 337, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125654, 2846, 579, 15, 243, "Input"],
Cell[126236, 2863, 904, 33, 337, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127177, 2901, 663, 17, 243, "Input"],
Cell[127843, 2920, 1324, 36, 661, "Output"]
}, Open  ]],
Cell[129182, 2959, 155, 3, 231, "Text"],
Cell[CellGroupData[{
Cell[129362, 2966, 647, 18, 357, "Input"],
Cell[130012, 2986, 353, 8, 243, "Output"]
}, Open  ]],
Cell[130380, 2997, 340, 6, 231, "Text"],
Cell[130723, 3005, 303, 9, 649, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131063, 3019, 337, 4, 262, "Subsubsection"],
Cell[CellGroupData[{
Cell[131425, 3027, 195, 4, 243, "Input"],
Cell[131623, 3033, 644, 20, 312, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132304, 3058, 260, 5, 243, "Input"],
Cell[132567, 3065, 2549, 82, 940, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[135153, 3152, 630, 16, 243, "Input"],
Cell[135786, 3170, 6828, 225, 1648, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142651, 3400, 2872, 77, 1215, "Input"],
Cell[145526, 3479, 686, 9, 243, "Output"],
Cell[146215, 3490, 686, 9, 243, "Output"]
}, Open  ]],
Cell[146916, 3502, 144, 2, 231, "Text"],
Cell[CellGroupData[{
Cell[147085, 3508, 3096, 90, 1345, "Input"],
Cell[150184, 3600, 1585, 50, 589, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151806, 3655, 2624, 80, 1075, "Input"],
Cell[154433, 3737, 3080, 100, 576, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157550, 3842, 3795, 112, 891, "Input"],
Cell[161348, 3956, 2672, 73, 474, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164057, 4034, 2019, 56, 771, "Input"],
Cell[166079, 4092, 149, 2, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[166265, 4099, 1942, 56, 721, "Input"],
Cell[168210, 4157, 166, 4, 414, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[168425, 4167, 346, 7, 262, "Subsubsection"],
Cell[CellGroupData[{
Cell[168796, 4178, 145, 3, 2763, "Input"],
Cell[168944, 4183, 485, 15, 2763, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[169466, 4203, 211, 4, 2763, "Input"],
Cell[169680, 4209, 2315, 77, 9477, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172032, 4291, 132, 2, 2763, "Input"],
Cell[172167, 4295, 871, 32, 3552, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173075, 4332, 530, 14, 2763, "Input"],
Cell[173608, 4348, 870, 32, 3552, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174515, 4385, 737, 19, 2763, "Input"],
Cell[175255, 4406, 1557, 41, 7627, "Output"]
}, Open  ]],
Cell[176827, 4450, 155, 3, 2625, "Text"],
Cell[CellGroupData[{
Cell[177007, 4457, 661, 18, 2763, "Input"],
Cell[177671, 4477, 1267, 35, 7627, "Output"]
}, Open  ]],
Cell[178953, 4515, 2018, 59, 8203, "Input"],
Cell[CellGroupData[{
Cell[180996, 4578, 1265, 38, 6561, "Input"],
Cell[182264, 4618, 8163, 150, 20749, "Output"]
}, Open  ]],
Cell[190442, 4771, 187, 2, 2625, "Text"],
Cell[190632, 4775, 294, 6, 2763, "Input"],
Cell[190929, 4783, 3192, 91, 8160, "Input"],
Cell[194124, 4876, 1697, 51, 9936, "Input"],
Cell[195824, 4929, 1332, 39, 4605, "Input"],
Cell[CellGroupData[{
Cell[197181, 4972, 739, 22, 2763, "Input"],
Cell[197923, 4996, 172, 3, 2763, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[198156, 5006, 175, 2, 51, "Subsection"],
Cell[198334, 5010, 5731, 135, 297, "Input"],
Cell[204068, 5147, 214, 3, 46, "Text"],
Cell[204285, 5152, 3471, 104, 204, "Input"],
Cell[207759, 5258, 215, 3, 46, "Text"],
Cell[207977, 5263, 1918, 55, 138, "Input"],
Cell[209898, 5320, 12766, 278, 1663, "Input"],
Cell[222667, 5600, 1710, 45, 339, "Input"],
Cell[224380, 5647, 1856, 49, 466, "Input"],
Cell[226239, 5698, 491, 6, 120, "Input"],
Cell[226733, 5706, 2647, 72, 519, "Input"],
Cell[229383, 5780, 1720, 35, 213, "Input"],
Cell[231106, 5817, 8517, 215, 1060, "Input"],
Cell[CellGroupData[{
Cell[239648, 6036, 186, 4, 72, "Input"],
Cell[239837, 6042, 119136, 2145, 561, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[359010, 8192, 418, 8, 213, "Input"],
Cell[359431, 8202, 177, 2, 120, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[359645, 8209, 1434, 29, 306, "Input"],
Cell[361082, 8240, 10491, 224, 199, "Output"]
}, Open  ]],
Cell[371588, 8467, 4497, 118, 1375, "Input"],
Cell[CellGroupData[{
Cell[376110, 8589, 102, 1, 72, "Input"],
Cell[376215, 8592, 62337, 1130, 561, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[438589, 9727, 6613, 171, 2133, "Input"],
Cell[445205, 9900, 13781, 297, 252, "Output"],
Cell[458989, 10199, 58064, 986, 558, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[517090, 11190, 313, 6, 72, "Input"],
Cell[517406, 11198, 75074, 1373, 561, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[592517, 12576, 279, 6, 72, "Input"],
Cell[592799, 12584, 139640, 2523, 1170, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[732476, 15112, 878, 18, 399, "Input"],
Cell[733357, 15132, 230, 3, 120, "Output"],
Cell[733590, 15137, 226, 3, 120, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

